

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 14 14:01:38 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           	psect	idataCOMRAM
    71  00DA99                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _wrap
    75  00DA99  01                 	db	1
    76                           
    77                           ;initializer for _EWLT_Count
    78  00DA9A  30                 	db	48
    79  00DA9B  30                 	db	48
    80  00DA9C  00                 	db	0
    81                           
    82                           ;initializer for _EW_Count
    83  00DA9D  30                 	db	48
    84  00DA9E  30                 	db	48
    85  00DA9F  00                 	db	0
    86                           
    87                           ;initializer for _NSLT_Count
    88  00DAA0  30                 	db	48
    89  00DAA1  30                 	db	48
    90  00DAA2  00                 	db	0
    91                           
    92                           ;initializer for _NS_Count
    93  00DAA3  30                 	db	48
    94  00DAA4  30                 	db	48
    95  00DAA5  00                 	db	0
    96                           
    97                           ;initializer for _PED_EW_Count
    98  00DAA6  30                 	db	48
    99  00DAA7  30                 	db	48
   100  00DAA8  00                 	db	0
   101                           
   102                           ;initializer for _PED_NS_Count
   103  00DAA9  30                 	db	48
   104  00DAAA  30                 	db	48
   105  00DAAB  00                 	db	0
   106                           
   107                           ;initializer for _Act_Mode_Txt
   108  00DAAC  44                 	db	68
   109  00DAAD  00                 	db	0
   110                           
   111                           ;initializer for _FlashingR_Txt
   112  00DAAE  30                 	db	48
   113  00DAAF  00                 	db	0
   114                           
   115                           ;initializer for _FlashingS_Txt
   116  00DAB0  30                 	db	48
   117  00DAB1  00                 	db	0
   118                           
   119                           ;initializer for _SW_EWLT_Txt
   120  00DAB2  30                 	db	48
   121  00DAB3  00                 	db	0
   122                           
   123                           ;initializer for _SW_EWPED_Txt
   124  00DAB4  30                 	db	48
   125  00DAB5  00                 	db	0
   126                           
   127                           ;initializer for _SW_MODE_Txt
   128  00DAB6  44                 	db	68
   129  00DAB7  00                 	db	0
   130                           
   131                           ;initializer for _SW_NSLT_Txt
   132  00DAB8  30                 	db	48
   133  00DAB9  00                 	db	0
   134                           
   135                           ;initializer for _SW_NSPED_Txt
   136  00DABA  30                 	db	48
   137  00DABB  00                 	db	0
   138                           
   139                           	psect	mediumconst
   140  00FDBC                     __pmediumconst:
   141                           	opt stack 0
   142  00FDBC  00                 	db	0
   143  00FDBD                     _font:
   144                           	opt stack 0
   145  00FDBD  00                 	db	0
   146  00FDBE  00                 	db	0
   147  00FDBF  00                 	db	0
   148  00FDC0  00                 	db	0
   149  00FDC1  00                 	db	0
   150  00FDC2  00                 	db	0
   151  00FDC3  00                 	db	0
   152  00FDC4  5F                 	db	95
   153  00FDC5  00                 	db	0
   154  00FDC6  00                 	db	0
   155  00FDC7  00                 	db	0
   156  00FDC8  07                 	db	7
   157  00FDC9  00                 	db	0
   158  00FDCA  07                 	db	7
   159  00FDCB  00                 	db	0
   160  00FDCC  14                 	db	20
   161  00FDCD  7F                 	db	127
   162  00FDCE  14                 	db	20
   163  00FDCF  7F                 	db	127
   164  00FDD0  14                 	db	20
   165  00FDD1  24                 	db	36
   166  00FDD2  2A                 	db	42
   167  00FDD3  7F                 	db	127
   168  00FDD4  2A                 	db	42
   169  00FDD5  12                 	db	18
   170  00FDD6  23                 	db	35
   171  00FDD7  13                 	db	19
   172  00FDD8  08                 	db	8
   173  00FDD9  64                 	db	100
   174  00FDDA  62                 	db	98
   175  00FDDB  36                 	db	54
   176  00FDDC  49                 	db	73
   177  00FDDD  56                 	db	86
   178  00FDDE  20                 	db	32
   179  00FDDF  50                 	db	80
   180  00FDE0  00                 	db	0
   181  00FDE1  08                 	db	8
   182  00FDE2  07                 	db	7
   183  00FDE3  03                 	db	3
   184  00FDE4  00                 	db	0
   185  00FDE5  00                 	db	0
   186  00FDE6  1C                 	db	28
   187  00FDE7  22                 	db	34
   188  00FDE8  41                 	db	65
   189  00FDE9  00                 	db	0
   190  00FDEA  00                 	db	0
   191  00FDEB  41                 	db	65
   192  00FDEC  22                 	db	34
   193  00FDED  1C                 	db	28
   194  00FDEE  00                 	db	0
   195  00FDEF  2A                 	db	42
   196  00FDF0  1C                 	db	28
   197  00FDF1  7F                 	db	127
   198  00FDF2  1C                 	db	28
   199  00FDF3  2A                 	db	42
   200  00FDF4  08                 	db	8
   201  00FDF5  08                 	db	8
   202  00FDF6  3E                 	db	62
   203  00FDF7  08                 	db	8
   204  00FDF8  08                 	db	8
   205  00FDF9  00                 	db	0
   206  00FDFA  80                 	db	128
   207  00FDFB  70                 	db	112
   208  00FDFC  30                 	db	48
   209  00FDFD  00                 	db	0
   210  00FDFE  08                 	db	8
   211  00FDFF  08                 	db	8
   212  00FE00  08                 	db	8
   213  00FE01  08                 	db	8
   214  00FE02  08                 	db	8
   215  00FE03  00                 	db	0
   216  00FE04  00                 	db	0
   217  00FE05  60                 	db	96
   218  00FE06  60                 	db	96
   219  00FE07  00                 	db	0
   220  00FE08  20                 	db	32
   221  00FE09  10                 	db	16
   222  00FE0A  08                 	db	8
   223  00FE0B  04                 	db	4
   224  00FE0C  02                 	db	2
   225  00FE0D  3E                 	db	62
   226  00FE0E  51                 	db	81
   227  00FE0F  49                 	db	73
   228  00FE10  45                 	db	69
   229  00FE11  3E                 	db	62
   230  00FE12  00                 	db	0
   231  00FE13  42                 	db	66
   232  00FE14  7F                 	db	127
   233  00FE15  40                 	db	64
   234  00FE16  00                 	db	0
   235  00FE17  72                 	db	114
   236  00FE18  49                 	db	73
   237  00FE19  49                 	db	73
   238  00FE1A  49                 	db	73
   239  00FE1B  46                 	db	70
   240  00FE1C  21                 	db	33
   241  00FE1D  41                 	db	65
   242  00FE1E  49                 	db	73
   243  00FE1F  4D                 	db	77
   244  00FE20  33                 	db	51
   245  00FE21  18                 	db	24
   246  00FE22  14                 	db	20
   247  00FE23  12                 	db	18
   248  00FE24  7F                 	db	127
   249  00FE25  10                 	db	16
   250  00FE26  27                 	db	39
   251  00FE27  45                 	db	69
   252  00FE28  45                 	db	69
   253  00FE29  45                 	db	69
   254  00FE2A  39                 	db	57
   255  00FE2B  3C                 	db	60
   256  00FE2C  4A                 	db	74
   257  00FE2D  49                 	db	73
   258  00FE2E  49                 	db	73
   259  00FE2F  31                 	db	49
   260  00FE30  41                 	db	65
   261  00FE31  21                 	db	33
   262  00FE32  11                 	db	17
   263  00FE33  09                 	db	9
   264  00FE34  07                 	db	7
   265  00FE35  36                 	db	54
   266  00FE36  49                 	db	73
   267  00FE37  49                 	db	73
   268  00FE38  49                 	db	73
   269  00FE39  36                 	db	54
   270  00FE3A  46                 	db	70
   271  00FE3B  49                 	db	73
   272  00FE3C  49                 	db	73
   273  00FE3D  29                 	db	41
   274  00FE3E  1E                 	db	30
   275  00FE3F  00                 	db	0
   276  00FE40  00                 	db	0
   277  00FE41  14                 	db	20
   278  00FE42  00                 	db	0
   279  00FE43  00                 	db	0
   280  00FE44  00                 	db	0
   281  00FE45  40                 	db	64
   282  00FE46  34                 	db	52
   283  00FE47  00                 	db	0
   284  00FE48  00                 	db	0
   285  00FE49  00                 	db	0
   286  00FE4A  08                 	db	8
   287  00FE4B  14                 	db	20
   288  00FE4C  22                 	db	34
   289  00FE4D  41                 	db	65
   290  00FE4E  14                 	db	20
   291  00FE4F  14                 	db	20
   292  00FE50  14                 	db	20
   293  00FE51  14                 	db	20
   294  00FE52  14                 	db	20
   295  00FE53  00                 	db	0
   296  00FE54  41                 	db	65
   297  00FE55  22                 	db	34
   298  00FE56  14                 	db	20
   299  00FE57  08                 	db	8
   300  00FE58  02                 	db	2
   301  00FE59  01                 	db	1
   302  00FE5A  59                 	db	89
   303  00FE5B  09                 	db	9
   304  00FE5C  06                 	db	6
   305  00FE5D  3E                 	db	62
   306  00FE5E  41                 	db	65
   307  00FE5F  5D                 	db	93
   308  00FE60  59                 	db	89
   309  00FE61  4E                 	db	78
   310  00FE62  7C                 	db	124
   311  00FE63  12                 	db	18
   312  00FE64  11                 	db	17
   313  00FE65  12                 	db	18
   314  00FE66  7C                 	db	124
   315  00FE67  7F                 	db	127
   316  00FE68  49                 	db	73
   317  00FE69  49                 	db	73
   318  00FE6A  49                 	db	73
   319  00FE6B  36                 	db	54
   320  00FE6C  3E                 	db	62
   321  00FE6D  41                 	db	65
   322  00FE6E  41                 	db	65
   323  00FE6F  41                 	db	65
   324  00FE70  22                 	db	34
   325  00FE71  7F                 	db	127
   326  00FE72  41                 	db	65
   327  00FE73  41                 	db	65
   328  00FE74  41                 	db	65
   329  00FE75  3E                 	db	62
   330  00FE76  7F                 	db	127
   331  00FE77  49                 	db	73
   332  00FE78  49                 	db	73
   333  00FE79  49                 	db	73
   334  00FE7A  41                 	db	65
   335  00FE7B  7F                 	db	127
   336  00FE7C  09                 	db	9
   337  00FE7D  09                 	db	9
   338  00FE7E  09                 	db	9
   339  00FE7F  01                 	db	1
   340  00FE80  3E                 	db	62
   341  00FE81  41                 	db	65
   342  00FE82  41                 	db	65
   343  00FE83  51                 	db	81
   344  00FE84  73                 	db	115
   345  00FE85  7F                 	db	127
   346  00FE86  08                 	db	8
   347  00FE87  08                 	db	8
   348  00FE88  08                 	db	8
   349  00FE89  7F                 	db	127
   350  00FE8A  00                 	db	0
   351  00FE8B  41                 	db	65
   352  00FE8C  7F                 	db	127
   353  00FE8D  41                 	db	65
   354  00FE8E  00                 	db	0
   355  00FE8F  20                 	db	32
   356  00FE90  40                 	db	64
   357  00FE91  41                 	db	65
   358  00FE92  3F                 	db	63
   359  00FE93  01                 	db	1
   360  00FE94  7F                 	db	127
   361  00FE95  08                 	db	8
   362  00FE96  14                 	db	20
   363  00FE97  22                 	db	34
   364  00FE98  41                 	db	65
   365  00FE99  7F                 	db	127
   366  00FE9A  40                 	db	64
   367  00FE9B  40                 	db	64
   368  00FE9C  40                 	db	64
   369  00FE9D  40                 	db	64
   370  00FE9E  7F                 	db	127
   371  00FE9F  02                 	db	2
   372  00FEA0  1C                 	db	28
   373  00FEA1  02                 	db	2
   374  00FEA2  7F                 	db	127
   375  00FEA3  7F                 	db	127
   376  00FEA4  04                 	db	4
   377  00FEA5  08                 	db	8
   378  00FEA6  10                 	db	16
   379  00FEA7  7F                 	db	127
   380  00FEA8  3E                 	db	62
   381  00FEA9  41                 	db	65
   382  00FEAA  41                 	db	65
   383  00FEAB  41                 	db	65
   384  00FEAC  3E                 	db	62
   385  00FEAD  7F                 	db	127
   386  00FEAE  09                 	db	9
   387  00FEAF  09                 	db	9
   388  00FEB0  09                 	db	9
   389  00FEB1  06                 	db	6
   390  00FEB2  3E                 	db	62
   391  00FEB3  41                 	db	65
   392  00FEB4  51                 	db	81
   393  00FEB5  21                 	db	33
   394  00FEB6  5E                 	db	94
   395  00FEB7  7F                 	db	127
   396  00FEB8  09                 	db	9
   397  00FEB9  19                 	db	25
   398  00FEBA  29                 	db	41
   399  00FEBB  46                 	db	70
   400  00FEBC                     __end_of_font:
   401                           	opt stack 0
   402  00FEBC                     _font2:
   403                           	opt stack 0
   404  00FEBC  26                 	db	38
   405  00FEBD  49                 	db	73
   406  00FEBE  49                 	db	73
   407  00FEBF  49                 	db	73
   408  00FEC0  32                 	db	50
   409  00FEC1  03                 	db	3
   410  00FEC2  01                 	db	1
   411  00FEC3  7F                 	db	127
   412  00FEC4  01                 	db	1
   413  00FEC5  03                 	db	3
   414  00FEC6  3F                 	db	63
   415  00FEC7  40                 	db	64
   416  00FEC8  40                 	db	64
   417  00FEC9  40                 	db	64
   418  00FECA  3F                 	db	63
   419  00FECB  1F                 	db	31
   420  00FECC  20                 	db	32
   421  00FECD  40                 	db	64
   422  00FECE  20                 	db	32
   423  00FECF  1F                 	db	31
   424  00FED0  3F                 	db	63
   425  00FED1  40                 	db	64
   426  00FED2  38                 	db	56
   427  00FED3  40                 	db	64
   428  00FED4  3F                 	db	63
   429  00FED5  63                 	db	99
   430  00FED6  14                 	db	20
   431  00FED7  08                 	db	8
   432  00FED8  14                 	db	20
   433  00FED9  63                 	db	99
   434  00FEDA  03                 	db	3
   435  00FEDB  04                 	db	4
   436  00FEDC  78                 	db	120
   437  00FEDD  04                 	db	4
   438  00FEDE  03                 	db	3
   439  00FEDF  61                 	db	97
   440  00FEE0  59                 	db	89
   441  00FEE1  49                 	db	73
   442  00FEE2  4D                 	db	77
   443  00FEE3  43                 	db	67
   444  00FEE4  00                 	db	0
   445  00FEE5  7F                 	db	127
   446  00FEE6  41                 	db	65
   447  00FEE7  41                 	db	65
   448  00FEE8  41                 	db	65
   449  00FEE9  02                 	db	2
   450  00FEEA  04                 	db	4
   451  00FEEB  08                 	db	8
   452  00FEEC  10                 	db	16
   453  00FEED  20                 	db	32
   454  00FEEE  00                 	db	0
   455  00FEEF  41                 	db	65
   456  00FEF0  41                 	db	65
   457  00FEF1  41                 	db	65
   458  00FEF2  7F                 	db	127
   459  00FEF3  04                 	db	4
   460  00FEF4  02                 	db	2
   461  00FEF5  01                 	db	1
   462  00FEF6  02                 	db	2
   463  00FEF7  04                 	db	4
   464  00FEF8  40                 	db	64
   465  00FEF9  40                 	db	64
   466  00FEFA  40                 	db	64
   467  00FEFB  40                 	db	64
   468  00FEFC  40                 	db	64
   469  00FEFD  00                 	db	0
   470  00FEFE  03                 	db	3
   471  00FEFF  07                 	db	7
   472  00FF00  08                 	db	8
   473  00FF01  00                 	db	0
   474  00FF02  20                 	db	32
   475  00FF03  54                 	db	84
   476  00FF04  54                 	db	84
   477  00FF05  78                 	db	120
   478  00FF06  40                 	db	64
   479  00FF07  7F                 	db	127
   480  00FF08  28                 	db	40
   481  00FF09  44                 	db	68
   482  00FF0A  44                 	db	68
   483  00FF0B  38                 	db	56
   484  00FF0C  38                 	db	56
   485  00FF0D  44                 	db	68
   486  00FF0E  44                 	db	68
   487  00FF0F  44                 	db	68
   488  00FF10  28                 	db	40
   489  00FF11  38                 	db	56
   490  00FF12  44                 	db	68
   491  00FF13  44                 	db	68
   492  00FF14  28                 	db	40
   493  00FF15  7F                 	db	127
   494  00FF16  38                 	db	56
   495  00FF17  54                 	db	84
   496  00FF18  54                 	db	84
   497  00FF19  54                 	db	84
   498  00FF1A  18                 	db	24
   499  00FF1B  00                 	db	0
   500  00FF1C  08                 	db	8
   501  00FF1D  7E                 	db	126
   502  00FF1E  09                 	db	9
   503  00FF1F  02                 	db	2
   504  00FF20  18                 	db	24
   505  00FF21  A4                 	db	164
   506  00FF22  A4                 	db	164
   507  00FF23  9C                 	db	156
   508  00FF24  78                 	db	120
   509  00FF25  7F                 	db	127
   510  00FF26  08                 	db	8
   511  00FF27  04                 	db	4
   512  00FF28  04                 	db	4
   513  00FF29  78                 	db	120
   514  00FF2A  00                 	db	0
   515  00FF2B  44                 	db	68
   516  00FF2C  7D                 	db	125
   517  00FF2D  40                 	db	64
   518  00FF2E  00                 	db	0
   519  00FF2F  20                 	db	32
   520  00FF30  40                 	db	64
   521  00FF31  40                 	db	64
   522  00FF32  3D                 	db	61
   523  00FF33  00                 	db	0
   524  00FF34  7F                 	db	127
   525  00FF35  10                 	db	16
   526  00FF36  28                 	db	40
   527  00FF37  44                 	db	68
   528  00FF38  00                 	db	0
   529  00FF39  00                 	db	0
   530  00FF3A  41                 	db	65
   531  00FF3B  7F                 	db	127
   532  00FF3C  40                 	db	64
   533  00FF3D  00                 	db	0
   534  00FF3E  7C                 	db	124
   535  00FF3F  04                 	db	4
   536  00FF40  78                 	db	120
   537  00FF41  04                 	db	4
   538  00FF42  78                 	db	120
   539  00FF43  7C                 	db	124
   540  00FF44  08                 	db	8
   541  00FF45  04                 	db	4
   542  00FF46  04                 	db	4
   543  00FF47  78                 	db	120
   544  00FF48  38                 	db	56
   545  00FF49  44                 	db	68
   546  00FF4A  44                 	db	68
   547  00FF4B  44                 	db	68
   548  00FF4C  38                 	db	56
   549  00FF4D  FC                 	db	252
   550  00FF4E  18                 	db	24
   551  00FF4F  24                 	db	36
   552  00FF50  24                 	db	36
   553  00FF51  18                 	db	24
   554  00FF52  18                 	db	24
   555  00FF53  24                 	db	36
   556  00FF54  24                 	db	36
   557  00FF55  18                 	db	24
   558  00FF56  FC                 	db	252
   559  00FF57  7C                 	db	124
   560  00FF58  08                 	db	8
   561  00FF59  04                 	db	4
   562  00FF5A  04                 	db	4
   563  00FF5B  08                 	db	8
   564  00FF5C  48                 	db	72
   565  00FF5D  54                 	db	84
   566  00FF5E  54                 	db	84
   567  00FF5F  54                 	db	84
   568  00FF60  24                 	db	36
   569  00FF61  04                 	db	4
   570  00FF62  04                 	db	4
   571  00FF63  3F                 	db	63
   572  00FF64  44                 	db	68
   573  00FF65  24                 	db	36
   574  00FF66  3C                 	db	60
   575  00FF67  40                 	db	64
   576  00FF68  40                 	db	64
   577  00FF69  20                 	db	32
   578  00FF6A  7C                 	db	124
   579  00FF6B  1C                 	db	28
   580  00FF6C  20                 	db	32
   581  00FF6D  40                 	db	64
   582  00FF6E  20                 	db	32
   583  00FF6F  1C                 	db	28
   584  00FF70  3C                 	db	60
   585  00FF71  40                 	db	64
   586  00FF72  30                 	db	48
   587  00FF73  40                 	db	64
   588  00FF74  3C                 	db	60
   589  00FF75  44                 	db	68
   590  00FF76  28                 	db	40
   591  00FF77  10                 	db	16
   592  00FF78  28                 	db	40
   593  00FF79  44                 	db	68
   594  00FF7A  4C                 	db	76
   595  00FF7B  90                 	db	144
   596  00FF7C  90                 	db	144
   597  00FF7D  90                 	db	144
   598  00FF7E  7C                 	db	124
   599  00FF7F  44                 	db	68
   600  00FF80  64                 	db	100
   601  00FF81  54                 	db	84
   602  00FF82  4C                 	db	76
   603  00FF83  44                 	db	68
   604  00FF84  00                 	db	0
   605  00FF85  08                 	db	8
   606  00FF86  36                 	db	54
   607  00FF87  41                 	db	65
   608  00FF88  00                 	db	0
   609  00FF89  00                 	db	0
   610  00FF8A  00                 	db	0
   611  00FF8B  77                 	db	119
   612  00FF8C  00                 	db	0
   613  00FF8D  00                 	db	0
   614  00FF8E  00                 	db	0
   615  00FF8F  41                 	db	65
   616  00FF90  36                 	db	54
   617  00FF91  08                 	db	8
   618  00FF92  00                 	db	0
   619  00FF93  02                 	db	2
   620  00FF94  01                 	db	1
   621  00FF95  02                 	db	2
   622  00FF96  04                 	db	4
   623  00FF97  02                 	db	2
   624  00FF98                     __end_of_font2:
   625                           	opt stack 0
   626  0000                     _ADCON0	set	4034
   627  0000                     _ADCON0bits	set	4034
   628  0000                     _ADCON1	set	4033
   629  0000                     _ADCON2	set	4032
   630  0000                     _ADRESH	set	4036
   631  0000                     _ADRESL	set	4035
   632  0000                     _CCP2CON	set	4026
   633  0000                     _CCPR2L	set	4027
   634  0000                     _INTCONbits	set	4082
   635  0000                     _OSCCON	set	4051
   636  0000                     _PIE1bits	set	3997
   637  0000                     _PIR1bits	set	3998
   638  0000                     _PIR2bits	set	4001
   639  0000                     _PORTAbits	set	3968
   640  0000                     _PORTBbits	set	3969
   641  0000                     _PORTCbits	set	3970
   642  0000                     _PORTDbits	set	3971
   643  0000                     _PORTEbits	set	3972
   644  0000                     _PR2	set	4043
   645  0000                     _RCSTA	set	4011
   646  0000                     _RCSTAbits	set	4011
   647  0000                     _SPBRG	set	4015
   648  0000                     _SPBRGH	set	4016
   649  0000                     _SSPBUF	set	4041
   650  0000                     _SSPCON1	set	4038
   651  0000                     _SSPSTAT	set	4039
   652  0000                     _SSPSTATbits	set	4039
   653  0000                     _T0CON	set	4053
   654  0000                     _T0CONbits	set	4053
   655  0000                     _T2CON	set	4042
   656  0000                     _T3CON	set	4017
   657  0000                     _T3CONbits	set	4017
   658  0000                     _TMR0H	set	4055
   659  0000                     _TMR0L	set	4054
   660  0000                     _TRISA	set	3986
   661  0000                     _TRISB	set	3987
   662  0000                     _TRISC	set	3988
   663  0000                     _TRISCbits	set	3988
   664  0000                     _TRISD	set	3989
   665  0000                     _TRISE	set	3990
   666  0000                     _TXREG	set	4013
   667  0000                     _TXSTA	set	4012
   668  0000                     _TXSTAbits	set	4012
   669  0000                     _TRMT	set	32097
   670  00FF98                     STR_12:
   671  00FF98  4E                 	db	78	;'N'
   672  00FF99  53                 	db	83	;'S'
   673  00FF9A  50                 	db	80	;'P'
   674  00FF9B  20                 	db	32
   675  00FF9C  4E                 	db	78	;'N'
   676  00FF9D  53                 	db	83	;'S'
   677  00FF9E  4C                 	db	76	;'L'
   678  00FF9F  54                 	db	84	;'T'
   679  00FFA0  20                 	db	32
   680  00FFA1  45                 	db	69	;'E'
   681  00FFA2  57                 	db	87	;'W'
   682  00FFA3  50                 	db	80	;'P'
   683  00FFA4  20                 	db	32
   684  00FFA5  45                 	db	69	;'E'
   685  00FFA6  57                 	db	87	;'W'
   686  00FFA7  4C                 	db	76	;'L'
   687  00FFA8  54                 	db	84	;'T'
   688  00FFA9  20                 	db	32
   689  00FFAA  4D                 	db	77	;'M'
   690  00FFAB  52                 	db	82	;'R'
   691  00FFAC  00                 	db	0
   692  00FFAD                     STR_1:
   693  00FFAD  45                 	db	69	;'E'
   694  00FFAE  43                 	db	67	;'C'
   695  00FFAF  45                 	db	69	;'E'
   696  00FFB0  33                 	db	51	;'3'
   697  00FFB1  33                 	db	51	;'3'
   698  00FFB2  30                 	db	48	;'0'
   699  00FFB3  31                 	db	49	;'1'
   700  00FFB4  4C                 	db	76	;'L'
   701  00FFB5  20                 	db	32
   702  00FFB6  46                 	db	70	;'F'
   703  00FFB7  61                 	db	97	;'a'
   704  00FFB8  6C                 	db	108	;'l'
   705  00FFB9  6C                 	db	108	;'l'
   706  00FFBA  20                 	db	32
   707  00FFBB  32                 	db	50	;'2'
   708  00FFBC  31                 	db	49	;'1'
   709  00FFBD  2D                 	db	45
   710  00FFBE  53                 	db	83	;'S'
   711  00FFBF  33                 	db	51	;'3'
   712  00FFC0  00                 	db	0
   713  00FFC1                     STR_6:
   714  00FFC1  4E                 	db	78	;'N'
   715  00FFC2  4F                 	db	79	;'O'
   716  00FFC3  52                 	db	82	;'R'
   717  00FFC4  54                 	db	84	;'T'
   718  00FFC5  48                 	db	72	;'H'
   719  00FFC6  2F                 	db	47
   720  00FFC7  53                 	db	83	;'S'
   721  00FFC8  4F                 	db	79	;'O'
   722  00FFC9  55                 	db	85	;'U'
   723  00FFCA  54                 	db	84	;'T'
   724  00FFCB  48                 	db	72	;'H'
   725  00FFCC  00                 	db	0
   726  00FFCD                     STR_8:
   727  00FFCD  45                 	db	69	;'E'
   728  00FFCE  41                 	db	65	;'A'
   729  00FFCF  53                 	db	83	;'S'
   730  00FFD0  54                 	db	84	;'T'
   731  00FFD1  2F                 	db	47
   732  00FFD2  57                 	db	87	;'W'
   733  00FFD3  45                 	db	69	;'E'
   734  00FFD4  53                 	db	83	;'S'
   735  00FFD5  54                 	db	84	;'T'
   736  00FFD6  00                 	db	0
   737  00FFD7                     STR_7:
   738  00FFD7  4E                 	db	78	;'N'
   739  00FFD8  2F                 	db	47
   740  00FFD9  53                 	db	83	;'S'
   741  00FFDA  20                 	db	32
   742  00FFDB  4C                 	db	76	;'L'
   743  00FFDC  54                 	db	84	;'T'
   744  00FFDD  00                 	db	0
   745  00FFDE                     STR_9:
   746  00FFDE  45                 	db	69	;'E'
   747  00FFDF  2F                 	db	47
   748  00FFE0  57                 	db	87	;'W'
   749  00FFE1  20                 	db	32
   750  00FFE2  4C                 	db	76	;'L'
   751  00FFE3  54                 	db	84	;'T'
   752  00FFE4  00                 	db	0
   753  00FFE5                     STR_2:
   754  00FFE5  4D                 	db	77	;'M'
   755  00FFE6  6F                 	db	111	;'o'
   756  00FFE7  64                 	db	100	;'d'
   757  00FFE8  65                 	db	101	;'e'
   758  00FFE9  3A                 	db	58	;':'
   759  00FFEA  00                 	db	0
   760  00FFEB                     STR_3:
   761  00FFEB  46                 	db	70	;'F'
   762  00FFEC  52                 	db	82	;'R'
   763  00FFED  3A                 	db	58	;':'
   764  00FFEE  00                 	db	0
   765  00FFEF                     STR_4:
   766  00FFEF  46                 	db	70	;'F'
   767  00FFF0  53                 	db	83	;'S'
   768  00FFF1  3A                 	db	58	;':'
   769  00FFF2  00                 	db	0
   770  00FFF3                     STR_10:
   771  00FFF3  50                 	db	80	;'P'
   772  00FFF4  4E                 	db	78	;'N'
   773  00FFF5  53                 	db	83	;'S'
   774  00FFF6  00                 	db	0
   775  00FFF7                     STR_11:
   776  00FFF7  50                 	db	80	;'P'
   777  00FFF8  45                 	db	69	;'E'
   778  00FFF9  57                 	db	87	;'W'
   779  00FFFA  00                 	db	0
   780  00FFFB                     STR_14:
   781  00FFFB  20                 	db	32
   782  00FFFC  00                 	db	0
   783  00FFFD                     STR_5:
   784  00FFFD  2A                 	db	42
   785  00FFFE  00                 	db	0
   786  0000                     
   787                           ; #config settings
   788  00FFFF  00                 	db	0	; dummy byte at the end
   789  0000                     
   790                           	psect	cinit
   791  00DCAE                     __pcinit:
   792                           	opt stack 0
   793  00DCAE                     start_initialization:
   794                           	opt stack 0
   795  00DCAE                     __initialization:
   796                           	opt stack 0
   797                           
   798                           ; Clear objects allocated to BANK0 (31 bytes)
   799  00DCAE  EE00  F080         	lfsr	0,__pbssBANK0
   800  00DCB2  0E1F               	movlw	31
   801  00DCB4                     clear_0:
   802  00DCB4  6AEE               	clrf	postinc0,c
   803  00DCB6  06E8               	decf	wreg,f,c
   804  00DCB8  E1FD               	bnz	clear_0
   805                           
   806                           ; Clear objects allocated to COMRAM (23 bytes)
   807  00DCBA  EE00  F064         	lfsr	0,__pbssCOMRAM
   808  00DCBE  0E17               	movlw	23
   809  00DCC0                     clear_1:
   810  00DCC0  6AEE               	clrf	postinc0,c
   811  00DCC2  06E8               	decf	wreg,f,c
   812  00DCC4  E1FD               	bnz	clear_1
   813                           
   814                           ; Initialize objects allocated to COMRAM (35 bytes)
   815                           ; load TBLPTR registers with __pidataCOMRAM
   816  00DCC6  0E99               	movlw	low __pidataCOMRAM
   817  00DCC8  6EF6               	movwf	tblptrl,c
   818  00DCCA  0EDA               	movlw	high __pidataCOMRAM
   819  00DCCC  6EF7               	movwf	tblptrh,c
   820  00DCCE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   821  00DCD0  6EF8               	movwf	tblptru,c
   822  00DCD2  EE00  F041         	lfsr	0,__pdataCOMRAM
   823  00DCD6  EE10 F023          	lfsr	1,35
   824  00DCDA                     copy_data0:
   825  00DCDA  0009               	tblrd		*+
   826  00DCDC  CFF5 FFEE          	movff	tablat,postinc0
   827  00DCE0  50E5               	movf	postdec1,w,c
   828  00DCE2  50E1               	movf	fsr1l,w,c
   829  00DCE4  E1FA               	bnz	copy_data0
   830  00DCE6                     end_of_initialization:
   831                           	opt stack 0
   832  00DCE6                     __end_of__initialization:
   833                           	opt stack 0
   834  00DCE6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   835  00DCE8  6EF8               	movwf	tblptru,c
   836  00DCEA  0100               	movlb	0
   837  00DCEC  EFFC  F071         	goto	_main	;jump to C main() function
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           postinc0	equ	0xFEE
   843                           wreg	equ	0xFE8
   844                           postdec1	equ	0xFE5
   845                           fsr1l	equ	0xFE1
   846                           
   847                           	psect	bssCOMRAM
   848  000064                     __pbssCOMRAM:
   849                           	opt stack 0
   850  000064                     _volt:
   851                           	opt stack 0
   852  000064                     	ds	3
   853  000067                     _MODE:
   854                           	opt stack 0
   855  000067                     	ds	2
   856  000069                     _nbr:
   857                           	opt stack 0
   858  000069                     	ds	2
   859  00006B                     _txt:
   860                           	opt stack 0
   861  00006B                     	ds	2
   862  00006D                     _Count:
   863                           	opt stack 0
   864  00006D                     	ds	1
   865  00006E                     _FLASHING:
   866                           	opt stack 0
   867  00006E                     	ds	1
   868  00006F                     _FLASHING_REQUEST:
   869                           	opt stack 0
   870  00006F                     	ds	1
   871  000070                     _PED_Count:
   872                           	opt stack 0
   873  000070                     	ds	1
   874  000071                     _SW_EWLT:
   875                           	opt stack 0
   876  000071                     	ds	1
   877  000072                     _SW_EWPED:
   878                           	opt stack 0
   879  000072                     	ds	1
   880  000073                     _SW_MODE:
   881                           	opt stack 0
   882  000073                     	ds	1
   883  000074                     _SW_NSLT:
   884                           	opt stack 0
   885  000074                     	ds	1
   886  000075                     _SW_NSPED:
   887                           	opt stack 0
   888  000075                     	ds	1
   889  000076                     __tft_type:
   890                           	opt stack 0
   891  000076                     	ds	1
   892  000077                     _colstart:
   893                           	opt stack 0
   894  000077                     	ds	1
   895  000078                     _dir:
   896                           	opt stack 0
   897  000078                     	ds	1
   898  000079                     _direction:
   899                           	opt stack 0
   900  000079                     	ds	1
   901  00007A                     _rowstart:
   902                           	opt stack 0
   903  00007A                     	ds	1
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1l	equ	0xFE1
   912                           
   913                           	psect	dataCOMRAM
   914  000041                     __pdataCOMRAM:
   915                           	opt stack 0
   916  000041                     _wrap:
   917                           	opt stack 0
   918  000041                     	ds	1
   919  000042                     _EWLT_Count:
   920                           	opt stack 0
   921  000042                     	ds	3
   922  000045                     _EW_Count:
   923                           	opt stack 0
   924  000045                     	ds	3
   925  000048                     _NSLT_Count:
   926                           	opt stack 0
   927  000048                     	ds	3
   928  00004B                     _NS_Count:
   929                           	opt stack 0
   930  00004B                     	ds	3
   931  00004E                     _PED_EW_Count:
   932                           	opt stack 0
   933  00004E                     	ds	3
   934  000051                     _PED_NS_Count:
   935                           	opt stack 0
   936  000051                     	ds	3
   937  000054                     _Act_Mode_Txt:
   938                           	opt stack 0
   939  000054                     	ds	2
   940  000056                     _FlashingR_Txt:
   941                           	opt stack 0
   942  000056                     	ds	2
   943  000058                     _FlashingS_Txt:
   944                           	opt stack 0
   945  000058                     	ds	2
   946  00005A                     _SW_EWLT_Txt:
   947                           	opt stack 0
   948  00005A                     	ds	2
   949  00005C                     _SW_EWPED_Txt:
   950                           	opt stack 0
   951  00005C                     	ds	2
   952  00005E                     _SW_MODE_Txt:
   953                           	opt stack 0
   954  00005E                     	ds	2
   955  000060                     _SW_NSLT_Txt:
   956                           	opt stack 0
   957  000060                     	ds	2
   958  000062                     _SW_NSPED_Txt:
   959                           	opt stack 0
   960  000062                     	ds	2
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           postdec1	equ	0xFE5
   968                           fsr1l	equ	0xFE1
   969                           
   970                           	psect	bssBANK0
   971  000080                     __pbssBANK0:
   972                           	opt stack 0
   973  000080                     _buffer:
   974                           	opt stack 0
   975  000080                     	ds	31
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           postdec1	equ	0xFE5
   983                           fsr1l	equ	0xFE1
   984                           
   985                           	psect	cstackCOMRAM
   986  000001                     __pcstackCOMRAM:
   987                           	opt stack 0
   988  000001                     ?_strlen:
   989                           	opt stack 0
   990  000001                     ?_get_full_ADC:
   991                           	opt stack 0
   992  000001                     ?___wmul:
   993                           	opt stack 0
   994  000001                     ?___awdiv:
   995                           	opt stack 0
   996  000001                     ?___awmod:
   997                           	opt stack 0
   998  000001                     ?___ftpack:
   999                           	opt stack 0
  1000  000001                     spiwrite@x:
  1001                           	opt stack 0
  1002  000001                     OpenUSART@spbrg:
  1003                           	opt stack 0
  1004  000001                     ___wmul@multiplier:
  1005                           	opt stack 0
  1006  000001                     ___awdiv@dividend:
  1007                           	opt stack 0
  1008  000001                     ___awmod@dividend:
  1009                           	opt stack 0
  1010  000001                     strcpy@to:
  1011                           	opt stack 0
  1012  000001                     strlen@s:
  1013                           	opt stack 0
  1014  000001                     ___ftpack@arg:
  1015                           	opt stack 0
  1016  000001                     ___ftge@ff1:
  1017                           	opt stack 0
  1018                           
  1019                           ; 3 bytes @ 0x0
  1020  000001                     	ds	1
  1021  000002                     spiwrite@spidata:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x1
  1025  000002                     	ds	1
  1026  000003                     ??_strlen:
  1027  000003                     ??_get_full_ADC:
  1028  000003                     write_command@cmd_:
  1029                           	opt stack 0
  1030  000003                     write_data@data_:
  1031                           	opt stack 0
  1032  000003                     OpenUSART@config:
  1033                           	opt stack 0
  1034  000003                     ___wmul@multiplicand:
  1035                           	opt stack 0
  1036  000003                     ___awdiv@divisor:
  1037                           	opt stack 0
  1038  000003                     ___awmod@divisor:
  1039                           	opt stack 0
  1040  000003                     strcpy@from:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x2
  1044  000003                     	ds	1
  1045  000004                     setAddrWindow@y0:
  1046                           	opt stack 0
  1047  000004                     ___ftpack@exp:
  1048                           	opt stack 0
  1049  000004                     ___ftge@ff2:
  1050                           	opt stack 0
  1051                           
  1052                           ; 3 bytes @ 0x3
  1053  000004                     	ds	1
  1054  000005                     setAddrWindow@x1:
  1055                           	opt stack 0
  1056  000005                     ___awdiv@counter:
  1057                           	opt stack 0
  1058  000005                     ___awmod@counter:
  1059                           	opt stack 0
  1060  000005                     ___ftpack@sign:
  1061                           	opt stack 0
  1062  000005                     get_full_ADC@result:
  1063                           	opt stack 0
  1064  000005                     ___wmul@product:
  1065                           	opt stack 0
  1066  000005                     strcpy@cp:
  1067                           	opt stack 0
  1068  000005                     strlen@cp:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x4
  1072  000005                     	ds	1
  1073  000006                     ??___ftpack:
  1074  000006                     setAddrWindow@y1:
  1075                           	opt stack 0
  1076  000006                     ___awdiv@sign:
  1077                           	opt stack 0
  1078  000006                     ___awmod@sign:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x5
  1082  000006                     	ds	1
  1083  000007                     ??___ftge:
  1084  000007                     setAddrWindow@x0:
  1085                           	opt stack 0
  1086  000007                     delay_ms@ms:
  1087                           	opt stack 0
  1088  000007                     ___awdiv@quotient:
  1089                           	opt stack 0
  1090                           
  1091                           ; 2 bytes @ 0x6
  1092  000007                     	ds	1
  1093  000008                     drawPixel@y:
  1094                           	opt stack 0
  1095  000008                     drawFastVLine@y:
  1096                           	opt stack 0
  1097  000008                     fillRectangle@y:
  1098                           	opt stack 0
  1099  000008                     drawFastHLine@y:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x7
  1103  000008                     	ds	1
  1104  000009                     ??_delay_ms:
  1105  000009                     ?___awtoft:
  1106                           	opt stack 0
  1107  000009                     drawFastVLine@h:
  1108                           	opt stack 0
  1109  000009                     fillRectangle@w:
  1110                           	opt stack 0
  1111  000009                     drawFastHLine@w:
  1112                           	opt stack 0
  1113  000009                     drawPixel@color:
  1114                           	opt stack 0
  1115  000009                     ___awtoft@c:
  1116                           	opt stack 0
  1117                           
  1118                           ; 2 bytes @ 0x8
  1119  000009                     	ds	1
  1120  00000A                     fillRectangle@h:
  1121                           	opt stack 0
  1122  00000A                     drawFastVLine@color:
  1123                           	opt stack 0
  1124  00000A                     drawFastHLine@color:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x9
  1128  00000A                     	ds	1
  1129  00000B                     drawPixel@x:
  1130                           	opt stack 0
  1131  00000B                     delay_ms@count:
  1132                           	opt stack 0
  1133  00000B                     fillRectangle@color:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0xA
  1137  00000B                     	ds	1
  1138  00000C                     ??_drawFastVLine:
  1139  00000C                     ??_drawFastHLine:
  1140  00000C                     ___awtoft@sign:
  1141                           	opt stack 0
  1142  00000C                     drawCircle@x0:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0xB
  1146  00000C                     	ds	1
  1147  00000D                     ??_fillRectangle:
  1148  00000D                     ?___ftdiv:
  1149                           	opt stack 0
  1150  00000D                     ___ftdiv@f1:
  1151                           	opt stack 0
  1152                           
  1153                           ; 3 bytes @ 0xC
  1154  00000D                     	ds	1
  1155  00000E                     drawCircle@y0:
  1156                           	opt stack 0
  1157                           
  1158                           ; 2 bytes @ 0xD
  1159  00000E                     	ds	2
  1160  000010                     drawFastVLine@hi:
  1161                           	opt stack 0
  1162  000010                     drawFastHLine@hi:
  1163                           	opt stack 0
  1164  000010                     drawCircle@r:
  1165                           	opt stack 0
  1166  000010                     ___ftdiv@f2:
  1167                           	opt stack 0
  1168                           
  1169                           ; 3 bytes @ 0xF
  1170  000010                     	ds	1
  1171  000011                     drawFastVLine@lo:
  1172                           	opt stack 0
  1173  000011                     fillRectangle@hi:
  1174                           	opt stack 0
  1175  000011                     drawFastHLine@lo:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0x10
  1179  000011                     	ds	1
  1180  000012                     drawFastVLine@x:
  1181                           	opt stack 0
  1182  000012                     fillRectangle@lo:
  1183                           	opt stack 0
  1184  000012                     drawFastHLine@x:
  1185                           	opt stack 0
  1186  000012                     drawCircle@color:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0x11
  1190  000012                     	ds	1
  1191  000013                     ??___ftdiv:
  1192  000013                     fillRect@y:
  1193                           	opt stack 0
  1194  000013                     fillRectangle@x:
  1195                           	opt stack 0
  1196  000013                     fillCircleHelper@x0:
  1197                           	opt stack 0
  1198  000013                     drawRect@x:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0x12
  1202  000013                     	ds	1
  1203  000014                     ??_drawCircle:
  1204  000014                     fillRect@w:
  1205                           	opt stack 0
  1206  000014                     fillScreen@color:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x13
  1210  000014                     	ds	1
  1211  000015                     fillRect@h:
  1212                           	opt stack 0
  1213  000015                     fillCircleHelper@y0:
  1214                           	opt stack 0
  1215  000015                     drawRect@y:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0x14
  1219  000015                     	ds	1
  1220  000016                     ___ftdiv@cntr:
  1221                           	opt stack 0
  1222  000016                     fillRect@color:
  1223                           	opt stack 0
  1224  000016                     drawCircle@ddF_x:
  1225                           	opt stack 0
  1226                           
  1227                           ; 2 bytes @ 0x15
  1228  000016                     	ds	1
  1229  000017                     fillCircleHelper@r:
  1230                           	opt stack 0
  1231  000017                     drawRect@w:
  1232                           	opt stack 0
  1233  000017                     ___ftdiv@f3:
  1234                           	opt stack 0
  1235                           
  1236                           ; 3 bytes @ 0x16
  1237  000017                     	ds	1
  1238  000018                     ??_fillRect:
  1239  000018                     drawCircle@ddF_y:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x17
  1243  000018                     	ds	1
  1244  000019                     fillCircleHelper@cornername:
  1245                           	opt stack 0
  1246  000019                     drawRect@h:
  1247                           	opt stack 0
  1248                           
  1249                           ; 2 bytes @ 0x18
  1250  000019                     	ds	1
  1251  00001A                     ___ftdiv@exp:
  1252                           	opt stack 0
  1253  00001A                     drawCircle@f:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x19
  1257  00001A                     	ds	1
  1258  00001B                     fillRect@x:
  1259                           	opt stack 0
  1260  00001B                     ___ftdiv@sign:
  1261                           	opt stack 0
  1262  00001B                     fillCircleHelper@delta:
  1263                           	opt stack 0
  1264  00001B                     drawRect@color:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x1A
  1268  00001B                     	ds	1
  1269  00001C                     fillRect@i:
  1270                           	opt stack 0
  1271  00001C                     drawCircle@x:
  1272                           	opt stack 0
  1273                           
  1274                           ; 2 bytes @ 0x1B
  1275  00001C                     	ds	1
  1276  00001D                     ??_drawRect:
  1277  00001D                     fillCircleHelper@color:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x1C
  1281  00001D                     	ds	1
  1282  00001E                     drawChar@y:
  1283                           	opt stack 0
  1284  00001E                     drawCircle@y:
  1285                           	opt stack 0
  1286                           
  1287                           ; 2 bytes @ 0x1D
  1288  00001E                     	ds	1
  1289  00001F                     ??_fillCircleHelper:
  1290  00001F                     drawChar@c:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0x1E
  1294  00001F                     	ds	1
  1295  000020                     drawChar@color:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0x1F
  1299  000020                     	ds	1
  1300  000021                     fillCircleHelper@ddF_x:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0x20
  1304  000021                     	ds	1
  1305  000022                     drawChar@bg:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x21
  1309  000022                     	ds	1
  1310  000023                     fillCircleHelper@ddF_y:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x22
  1314  000023                     	ds	1
  1315  000024                     drawChar@size:
  1316                           	opt stack 0
  1317                           
  1318                           ; 1 bytes @ 0x23
  1319  000024                     	ds	1
  1320  000025                     drawChar@line:
  1321                           	opt stack 0
  1322  000025                     fillCircleHelper@f:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x24
  1326  000025                     	ds	1
  1327  000026                     drawChar@x:
  1328                           	opt stack 0
  1329                           
  1330                           ; 1 bytes @ 0x25
  1331  000026                     	ds	1
  1332  000027                     drawChar@j:
  1333                           	opt stack 0
  1334  000027                     fillCircleHelper@x:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x26
  1338  000027                     	ds	1
  1339  000028                     drawChar@i:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x27
  1343  000028                     	ds	1
  1344  000029                     drawtext@y:
  1345                           	opt stack 0
  1346  000029                     fillCircleHelper@y:
  1347                           	opt stack 0
  1348                           
  1349                           ; 2 bytes @ 0x28
  1350  000029                     	ds	1
  1351  00002A                     drawtext@_text:
  1352                           	opt stack 0
  1353                           
  1354                           ; 2 bytes @ 0x29
  1355  00002A                     	ds	1
  1356  00002B                     fillCircle@x0:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x2A
  1360  00002B                     	ds	1
  1361  00002C                     drawtext@color:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x2B
  1365  00002C                     	ds	1
  1366  00002D                     fillCircle@y0:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x2C
  1370  00002D                     	ds	1
  1371  00002E                     drawtext@bg:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x2D
  1375  00002E                     	ds	1
  1376  00002F                     fillCircle@r:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0x2E
  1380  00002F                     	ds	1
  1381  000030                     drawtext@size:
  1382                           	opt stack 0
  1383                           
  1384                           ; 1 bytes @ 0x2F
  1385  000030                     	ds	1
  1386  000031                     ??_drawtext:
  1387  000031                     fillCircle@color:
  1388                           	opt stack 0
  1389                           
  1390                           ; 2 bytes @ 0x30
  1391  000031                     	ds	2
  1392  000033                     update_LCD_color@color:
  1393                           	opt stack 0
  1394  000033                     drawtext@textsize:
  1395                           	opt stack 0
  1396                           
  1397                           ; 2 bytes @ 0x32
  1398  000033                     	ds	1
  1399  000034                     update_LCD_color@direction:
  1400                           	opt stack 0
  1401                           
  1402                           ; 1 bytes @ 0x33
  1403  000034                     	ds	1
  1404  000035                     drawtext@x:
  1405                           	opt stack 0
  1406  000035                     update_LCD_color@Circle_Y:
  1407                           	opt stack 0
  1408                           
  1409                           ; 1 bytes @ 0x34
  1410  000035                     	ds	1
  1411  000036                     Set_NS@color:
  1412                           	opt stack 0
  1413  000036                     Set_NS_LT@color:
  1414                           	opt stack 0
  1415  000036                     Set_EW@color:
  1416                           	opt stack 0
  1417  000036                     Set_EW_LT@color:
  1418                           	opt stack 0
  1419  000036                     drawtext@i:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0x35
  1423  000036                     	ds	2
  1424  000038                     drawtext@cursor_y:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x37
  1428  000038                     	ds	1
  1429  000039                     drawtext@cursor_x:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x38
  1433  000039                     	ds	1
  1434  00003A                     update_LCD_count@count:
  1435                           	opt stack 0
  1436  00003A                     update_LCD_PED_Count@count:
  1437                           	opt stack 0
  1438  00003A                     update_LCD_misc@nStep:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x39
  1442  00003A                     	ds	1
  1443  00003B                     update_LCD_count@direction:
  1444                           	opt stack 0
  1445  00003B                     update_LCD_PED_Count@direction:
  1446                           	opt stack 0
  1447                           
  1448                           ; 1 bytes @ 0x3A
  1449  00003B                     	ds	1
  1450  00003C                     PED_Control@Num_Sec:
  1451                           	opt stack 0
  1452  00003C                     Wait_N_Seconds@seconds:
  1453                           	opt stack 0
  1454                           
  1455                           ; 1 bytes @ 0x3B
  1456  00003C                     	ds	1
  1457  00003D                     PED_Control@direction:
  1458                           	opt stack 0
  1459  00003D                     Wait_N_Seconds@I:
  1460                           	opt stack 0
  1461                           
  1462                           ; 1 bytes @ 0x3C
  1463  00003D                     	ds	1
  1464  00003E                     PED_Control@i:
  1465                           	opt stack 0
  1466                           
  1467                           ; 1 bytes @ 0x3D
  1468  00003E                     	ds	1
  1469  00003F                     main@nStep:
  1470                           	opt stack 0
  1471                           
  1472                           ; 2 bytes @ 0x3E
  1473  00003F                     	ds	2
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1l	equ	0xFE1
  1482                           
  1483 ;;
  1484 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1485 ;;
  1486 ;; *************** function _main *****************
  1487 ;; Defined at:
  1488 ;;		line 268 in file "Lab7_sample_S3_F21.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  nStep           2   62[COMRAM] int 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;		None               void
  1495 ;; Registers used:
  1496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels required when called:   11
  1508 ;; This function calls:
  1509 ;;		_Day_Mode
  1510 ;;		_Init_ADC
  1511 ;;		_Initialize_Screen
  1512 ;;		_Night_Mode
  1513 ;;		___awtoft
  1514 ;;		___ftdiv
  1515 ;;		___ftge
  1516 ;;		___wmul
  1517 ;;		_get_full_ADC
  1518 ;;		_init_IO
  1519 ;;		_init_UART
  1520 ;; This function is called by:
  1521 ;;		Startup code after reset
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text0
  1526  00E3F8                     __ptext0:
  1527                           	opt stack 0
  1528  00E3F8                     _main:
  1529                           	opt stack 20
  1530                           
  1531                           ;Lab7_sample_S3_F21.c: 270: init_IO();
  1532                           
  1533                           ;incstack = 0
  1534  00E3F8  EC12  F06D         	call	_init_IO	;wreg free
  1535                           
  1536                           ;Lab7_sample_S3_F21.c: 271: Init_ADC();
  1537  00E3FC  ECDF  F06C         	call	_Init_ADC	;wreg free
  1538                           
  1539                           ;Lab7_sample_S3_F21.c: 272: init_UART();
  1540  00E400  EC1C  F06D         	call	_init_UART	;wreg free
  1541                           
  1542                           ;Lab7_sample_S3_F21.c: 273: OSCCON = 0x70;
  1543  00E404  0E70               	movlw	112
  1544  00E406  6ED3               	movwf	4051,c	;volatile
  1545                           
  1546                           ;Lab7_sample_S3_F21.c: 274: Initialize_Screen();
  1547  00E408  EC4F  F07B         	call	_Initialize_Screen	;wreg free
  1548  00E40C  D000               	goto	l3885
  1549  00E40E                     l3885:
  1550                           
  1551                           ;Lab7_sample_S3_F21.c: 284: {
  1552                           ;Lab7_sample_S3_F21.c: 285: int nStep = get_full_ADC();
  1553  00E40E  EC5E  F06D         	call	_get_full_ADC	;wreg free
  1554  00E412  C001  F03F         	movff	?_get_full_ADC,main@nStep
  1555  00E416  C002  F040         	movff	?_get_full_ADC+1,main@nStep+1
  1556                           
  1557                           ;Lab7_sample_S3_F21.c: 286: volt = nStep * 5 /1024.0;
  1558  00E41A  C03F  F001         	movff	main@nStep,___wmul@multiplier
  1559  00E41E  C040  F002         	movff	main@nStep+1,___wmul@multiplier+1
  1560  00E422  0E00               	movlw	0
  1561  00E424  6E04               	movwf	___wmul@multiplicand+1,c
  1562  00E426  0E05               	movlw	5
  1563  00E428  6E03               	movwf	___wmul@multiplicand,c
  1564  00E42A  EC71  F06D         	call	___wmul	;wreg free
  1565  00E42E  C001  F009         	movff	?___wmul,___awtoft@c
  1566  00E432  C002  F00A         	movff	?___wmul+1,___awtoft@c+1
  1567  00E436  ECFB  F06D         	call	___awtoft	;wreg free
  1568  00E43A  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  1569  00E43E  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  1570  00E442  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  1571  00E446  0E00               	movlw	0
  1572  00E448  6E10               	movwf	___ftdiv@f2,c
  1573  00E44A  0E80               	movlw	128
  1574  00E44C  6E11               	movwf	___ftdiv@f2+1,c
  1575  00E44E  0E44               	movlw	68
  1576  00E450  6E12               	movwf	___ftdiv@f2+2,c
  1577  00E452  EC53  F074         	call	___ftdiv	;wreg free
  1578  00E456  C00D  F064         	movff	?___ftdiv,_volt
  1579  00E45A  C00E  F065         	movff	?___ftdiv+1,_volt+1
  1580  00E45E  C00F  F066         	movff	?___ftdiv+2,_volt+2
  1581                           
  1582                           ;Lab7_sample_S3_F21.c: 287: SW_MODE = volt < 2.5 ? 1:0;
  1583  00E462  C064  F001         	movff	_volt,___ftge@ff1
  1584  00E466  C065  F002         	movff	_volt+1,___ftge@ff1+1
  1585  00E46A  C066  F003         	movff	_volt+2,___ftge@ff1+2
  1586  00E46E  0E00               	movlw	0
  1587  00E470  6E04               	movwf	___ftge@ff2,c
  1588  00E472  0E20               	movlw	32
  1589  00E474  6E05               	movwf	___ftge@ff2+1,c
  1590  00E476  0E40               	movlw	64
  1591  00E478  6E06               	movwf	___ftge@ff2+2,c
  1592  00E47A  EC5E  F071         	call	___ftge	;wreg free
  1593  00E47E  B0D8               	btfsc	status,0,c
  1594  00E480  D002               	goto	u2500
  1595  00E482  0E01               	movlw	1
  1596  00E484  D001               	goto	u2510
  1597  00E486                     u2500:
  1598  00E486  0E00               	movlw	0
  1599  00E488                     u2510:
  1600  00E488  6E73               	movwf	_SW_MODE,c
  1601                           
  1602                           ;Lab7_sample_S3_F21.c: 288: if (SW_MODE)
  1603  00E48A  5073               	movf	_SW_MODE,w,c
  1604  00E48C  B4D8               	btfsc	status,2,c
  1605  00E48E  D003               	goto	l3895
  1606                           
  1607                           ;Lab7_sample_S3_F21.c: 289: {
  1608                           ;Lab7_sample_S3_F21.c: 290: Day_Mode();
  1609  00E490  EC50  F072         	call	_Day_Mode	;wreg free
  1610                           
  1611                           ;Lab7_sample_S3_F21.c: 291: }
  1612  00E494  D7BC               	goto	l3885
  1613  00E496                     l3895:
  1614                           
  1615                           ;Lab7_sample_S3_F21.c: 292: else
  1616                           ;Lab7_sample_S3_F21.c: 293: {
  1617                           ;Lab7_sample_S3_F21.c: 294: Night_Mode();
  1618  00E496  ECA9  F071         	call	_Night_Mode	;wreg free
  1619  00E49A  D7B9               	goto	l3885
  1620  00E49C  EF00  F000         	goto	start
  1621  00E4A0                     __end_of_main:
  1622                           	opt stack 0
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           postdec1	equ	0xFE5
  1630                           fsr1l	equ	0xFE1
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _init_UART *****************
  1634 ;; Defined at:
  1635 ;;		line 254 in file "Lab7_sample_S3_F21.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;		None               void
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		_OpenUSART
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text1
  1664  00DA38                     __ptext1:
  1665                           	opt stack 0
  1666  00DA38                     _init_UART:
  1667                           	opt stack 29
  1668                           
  1669                           ;Lab7_sample_S3_F21.c: 256: OpenUSART (0b01111111 & 0b10111111 &
  1670                           ;Lab7_sample_S3_F21.c: 257: 0b11111110 & 0b11111101 & 0b11111111 &
  1671                           ;Lab7_sample_S3_F21.c: 258: 0b11111111, 25);
  1672                           
  1673                           ;incstack = 0
  1674  00DA38  0E00               	movlw	0
  1675  00DA3A  6E02               	movwf	OpenUSART@spbrg+1,c
  1676  00DA3C  0E19               	movlw	25
  1677  00DA3E  6E01               	movwf	OpenUSART@spbrg,c
  1678  00DA40  0E3C               	movlw	60
  1679  00DA42  ECD1  F06F         	call	_OpenUSART
  1680                           
  1681                           ;Lab7_sample_S3_F21.c: 259: OSCCON = 0x60;
  1682  00DA46  0E60               	movlw	96
  1683  00DA48  6ED3               	movwf	4051,c	;volatile
  1684  00DA4A  0012               	return		;funcret
  1685  00DA4C                     __end_of_init_UART:
  1686                           	opt stack 0
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           postdec1	equ	0xFE5
  1694                           fsr1l	equ	0xFE1
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _OpenUSART *****************
  1698 ;; Defined at:
  1699 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  config          1    wreg     unsigned char 
  1702 ;;  spbrg           2    0[COMRAM] unsigned int 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  config          1    2[COMRAM] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;		None               void
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;Total ram usage:        3 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_init_UART
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text2
  1728  00DFA2                     __ptext2:
  1729                           	opt stack 0
  1730  00DFA2                     _OpenUSART:
  1731                           	opt stack 29
  1732                           
  1733                           ;incstack = 0
  1734                           ;OpenUSART@config stored from wreg
  1735  00DFA2  6E03               	movwf	OpenUSART@config,c
  1736  00DFA4  0E00               	movlw	0
  1737  00DFA6  6EAC               	movwf	4012,c	;volatile
  1738  00DFA8  0E00               	movlw	0
  1739  00DFAA  6EAB               	movwf	4011,c	;volatile
  1740  00DFAC  A003               	btfss	OpenUSART@config,0,c
  1741  00DFAE  D002               	goto	l3319
  1742  00DFB0  88AC               	bsf	4012,4,c	;volatile
  1743  00DFB2  D000               	goto	l3319
  1744  00DFB4                     l3319:
  1745  00DFB4  A203               	btfss	OpenUSART@config,1,c
  1746  00DFB6  D003               	goto	l3323
  1747  00DFB8  8CAC               	bsf	4012,6,c	;volatile
  1748  00DFBA  8CAB               	bsf	4011,6,c	;volatile
  1749  00DFBC  D000               	goto	l3323
  1750  00DFBE                     l3323:
  1751  00DFBE  A403               	btfss	OpenUSART@config,2,c
  1752  00DFC0  D002               	goto	l3327
  1753  00DFC2  8EAC               	bsf	4012,7,c	;volatile
  1754  00DFC4  D000               	goto	l3327
  1755  00DFC6                     l3327:
  1756  00DFC6  A603               	btfss	OpenUSART@config,3,c
  1757  00DFC8  D002               	goto	l516
  1758  00DFCA  88AB               	bsf	4011,4,c	;volatile
  1759  00DFCC  D002               	goto	l3331
  1760  00DFCE                     l516:
  1761  00DFCE  8AAB               	bsf	4011,5,c	;volatile
  1762  00DFD0  D000               	goto	l3331
  1763  00DFD2                     l3331:
  1764  00DFD2  B803               	btfsc	OpenUSART@config,4,c
  1765  00DFD4  84AC               	bsf	4012,2,c	;volatile
  1766  00DFD6  989E               	bcf	3998,4,c	;volatile
  1767  00DFD8  AA03               	btfss	OpenUSART@config,5,c
  1768  00DFDA  D002               	goto	l3339
  1769  00DFDC  86AB               	bsf	4011,3,c	;volatile
  1770  00DFDE  D000               	goto	l3339
  1771  00DFE0                     l3339:
  1772  00DFE0  AC03               	btfss	OpenUSART@config,6,c
  1773  00DFE2  D002               	goto	l520
  1774  00DFE4  8A9D               	bsf	3997,5,c	;volatile
  1775  00DFE6  D001               	goto	l521
  1776  00DFE8                     l520:
  1777  00DFE8  9A9D               	bcf	3997,5,c	;volatile
  1778  00DFEA                     l521:
  1779  00DFEA  9A9E               	bcf	3998,5,c	;volatile
  1780  00DFEC  AE03               	btfss	OpenUSART@config,7,c
  1781  00DFEE  D002               	goto	l522
  1782  00DFF0  889D               	bsf	3997,4,c	;volatile
  1783  00DFF2  D001               	goto	l523
  1784  00DFF4                     l522:
  1785  00DFF4  989D               	bcf	3997,4,c	;volatile
  1786  00DFF6                     l523:
  1787  00DFF6  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1788  00DFFA  5002               	movf	OpenUSART@spbrg+1,w,c
  1789  00DFFC  6EB0               	movwf	4016,c	;volatile
  1790  00DFFE  8AAC               	bsf	4012,5,c	;volatile
  1791  00E000  8EAB               	bsf	4011,7,c	;volatile
  1792  00E002  9C94               	bcf	3988,6,c	;volatile
  1793  00E004  8E94               	bsf	3988,7,c	;volatile
  1794  00E006  B8AC               	btfsc	4012,4,c	;volatile
  1795  00E008  BEAC               	btfsc	4012,7,c	;volatile
  1796  00E00A  D002               	goto	l525
  1797  00E00C  8C94               	bsf	3988,6,c	;volatile
  1798  00E00E  D000               	goto	l525
  1799  00E010                     l525:
  1800  00E010  0012               	return		;funcret
  1801  00E012                     __end_of_OpenUSART:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           postdec1	equ	0xFE5
  1810                           fsr1l	equ	0xFE1
  1811                           status	equ	0xFD8
  1812                           
  1813 ;; *************** function _init_IO *****************
  1814 ;; Defined at:
  1815 ;;		line 300 in file "Lab7_sample_S3_F21.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;		None               void
  1822 ;; Registers used:
  1823 ;;		wreg, status,2
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;Total ram usage:        0 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text3
  1843  00DA24                     __ptext3:
  1844                           	opt stack 0
  1845  00DA24                     _init_IO:
  1846                           	opt stack 30
  1847                           
  1848                           ;Lab7_sample_S3_F21.c: 302: TRISA = 0xFF;
  1849                           
  1850                           ;incstack = 0
  1851  00DA24  6892               	setf	3986,c	;volatile
  1852                           
  1853                           ;Lab7_sample_S3_F21.c: 303: TRISB = 0x47;
  1854  00DA26  0E47               	movlw	71
  1855  00DA28  6E93               	movwf	3987,c	;volatile
  1856                           
  1857                           ;Lab7_sample_S3_F21.c: 304: TRISC = 0x00;
  1858  00DA2A  0E00               	movlw	0
  1859  00DA2C  6E94               	movwf	3988,c	;volatile
  1860                           
  1861                           ;Lab7_sample_S3_F21.c: 305: TRISD = 0x00;
  1862  00DA2E  0E00               	movlw	0
  1863  00DA30  6E95               	movwf	3989,c	;volatile
  1864                           
  1865                           ;Lab7_sample_S3_F21.c: 306: TRISE = 0x00;
  1866  00DA32  0E00               	movlw	0
  1867  00DA34  6E96               	movwf	3990,c	;volatile
  1868  00DA36  0012               	return		;funcret
  1869  00DA38                     __end_of_init_IO:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           postinc0	equ	0xFEE
  1876                           wreg	equ	0xFE8
  1877                           postdec1	equ	0xFE5
  1878                           fsr1l	equ	0xFE1
  1879                           status	equ	0xFD8
  1880                           
  1881 ;; *************** function _Night_Mode *****************
  1882 ;; Defined at:
  1883 ;;		line 480 in file "Lab7_sample_S3_F21.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;		None               void
  1890 ;; Registers used:
  1891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:   10
  1904 ;; This function calls:
  1905 ;;		_Set_EW
  1906 ;;		_Set_EW_LT
  1907 ;;		_Set_NS
  1908 ;;		_Set_NS_LT
  1909 ;;		_Wait_N_Seconds
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text4
  1916  00E352                     __ptext4:
  1917                           	opt stack 0
  1918  00E352                     _Night_Mode:
  1919                           	opt stack 20
  1920                           
  1921                           ;Lab7_sample_S3_F21.c: 482: MODE = 0;
  1922                           
  1923                           ;incstack = 0
  1924  00E352  0E00               	movlw	0
  1925  00E354  6E68               	movwf	_MODE+1,c
  1926  00E356  0E00               	movlw	0
  1927  00E358  6E67               	movwf	_MODE,c
  1928                           
  1929                           ;Lab7_sample_S3_F21.c: 483: PORTBbits.RB7 = 0;
  1930  00E35A  9E81               	bcf	3969,7,c	;volatile
  1931                           
  1932                           ;Lab7_sample_S3_F21.c: 484: Act_Mode_Txt[0] = 'N';
  1933  00E35C  0E4E               	movlw	78
  1934  00E35E  6E54               	movwf	_Act_Mode_Txt,c
  1935                           
  1936                           ;Lab7_sample_S3_F21.c: 486: Set_NS(2);
  1937  00E360  0E02               	movlw	2
  1938  00E362  ECBC  F06E         	call	_Set_NS
  1939                           
  1940                           ;Lab7_sample_S3_F21.c: 488: Set_EW(1);
  1941  00E366  0E01               	movlw	1
  1942  00E368  EC78  F06E         	call	_Set_EW
  1943                           
  1944                           ;Lab7_sample_S3_F21.c: 489: Set_NS_LT(1);
  1945  00E36C  0E01               	movlw	1
  1946  00E36E  ECDE  F06E         	call	_Set_NS_LT
  1947                           
  1948                           ;Lab7_sample_S3_F21.c: 490: Set_EW_LT(1);
  1949  00E372  0E01               	movlw	1
  1950  00E374  EC9A  F06E         	call	_Set_EW_LT
  1951                           
  1952                           ;Lab7_sample_S3_F21.c: 492: Wait_N_Seconds(6);
  1953  00E378  0E06               	movlw	6
  1954  00E37A  EC9A  F06D         	call	_Wait_N_Seconds
  1955                           
  1956                           ;Lab7_sample_S3_F21.c: 494: Set_NS(3);
  1957  00E37E  0E03               	movlw	3
  1958  00E380  ECBC  F06E         	call	_Set_NS
  1959                           
  1960                           ;Lab7_sample_S3_F21.c: 495: Wait_N_Seconds(3);
  1961  00E384  0E03               	movlw	3
  1962  00E386  EC9A  F06D         	call	_Wait_N_Seconds
  1963                           
  1964                           ;Lab7_sample_S3_F21.c: 497: Set_NS(1);
  1965  00E38A  0E01               	movlw	1
  1966  00E38C  ECBC  F06E         	call	_Set_NS
  1967                           
  1968                           ;Lab7_sample_S3_F21.c: 500: if (PORTAbits.RA5 == 1)
  1969  00E390  AA80               	btfss	3968,5,c	;volatile
  1970  00E392  D010               	goto	l3627
  1971                           
  1972                           ;Lab7_sample_S3_F21.c: 501: {
  1973                           ;Lab7_sample_S3_F21.c: 502: Set_EW_LT(2);
  1974  00E394  0E02               	movlw	2
  1975  00E396  EC9A  F06E         	call	_Set_EW_LT
  1976                           
  1977                           ;Lab7_sample_S3_F21.c: 503: Wait_N_Seconds(6);
  1978  00E39A  0E06               	movlw	6
  1979  00E39C  EC9A  F06D         	call	_Wait_N_Seconds
  1980                           
  1981                           ;Lab7_sample_S3_F21.c: 505: Set_EW_LT(3);
  1982  00E3A0  0E03               	movlw	3
  1983  00E3A2  EC9A  F06E         	call	_Set_EW_LT
  1984                           
  1985                           ;Lab7_sample_S3_F21.c: 506: Wait_N_Seconds(3);
  1986  00E3A6  0E03               	movlw	3
  1987  00E3A8  EC9A  F06D         	call	_Wait_N_Seconds
  1988                           
  1989                           ;Lab7_sample_S3_F21.c: 508: Set_EW_LT(1);
  1990  00E3AC  0E01               	movlw	1
  1991  00E3AE  EC9A  F06E         	call	_Set_EW_LT
  1992  00E3B2  D000               	goto	l3627
  1993  00E3B4                     l3627:
  1994                           
  1995                           ;Lab7_sample_S3_F21.c: 510: }
  1996                           ;Lab7_sample_S3_F21.c: 512: Set_EW(2);
  1997  00E3B4  0E02               	movlw	2
  1998  00E3B6  EC78  F06E         	call	_Set_EW
  1999                           
  2000                           ;Lab7_sample_S3_F21.c: 513: Wait_N_Seconds(6);
  2001  00E3BA  0E06               	movlw	6
  2002  00E3BC  EC9A  F06D         	call	_Wait_N_Seconds
  2003                           
  2004                           ;Lab7_sample_S3_F21.c: 515: Set_EW(3);
  2005  00E3C0  0E03               	movlw	3
  2006  00E3C2  EC78  F06E         	call	_Set_EW
  2007                           
  2008                           ;Lab7_sample_S3_F21.c: 516: Wait_N_Seconds(3);
  2009  00E3C6  0E03               	movlw	3
  2010  00E3C8  EC9A  F06D         	call	_Wait_N_Seconds
  2011                           
  2012                           ;Lab7_sample_S3_F21.c: 518: Set_EW(1);
  2013  00E3CC  0E01               	movlw	1
  2014  00E3CE  EC78  F06E         	call	_Set_EW
  2015                           
  2016                           ;Lab7_sample_S3_F21.c: 522: if ( PORTAbits.RA4 == 1 )
  2017  00E3D2  A880               	btfss	3968,4,c	;volatile
  2018  00E3D4  D010               	goto	l438
  2019                           
  2020                           ;Lab7_sample_S3_F21.c: 523: {
  2021                           ;Lab7_sample_S3_F21.c: 524: Set_NS_LT(2);
  2022  00E3D6  0E02               	movlw	2
  2023  00E3D8  ECDE  F06E         	call	_Set_NS_LT
  2024                           
  2025                           ;Lab7_sample_S3_F21.c: 525: Wait_N_Seconds(8);
  2026  00E3DC  0E08               	movlw	8
  2027  00E3DE  EC9A  F06D         	call	_Wait_N_Seconds
  2028                           
  2029                           ;Lab7_sample_S3_F21.c: 527: Set_NS_LT(3);
  2030  00E3E2  0E03               	movlw	3
  2031  00E3E4  ECDE  F06E         	call	_Set_NS_LT
  2032                           
  2033                           ;Lab7_sample_S3_F21.c: 528: Wait_N_Seconds(3);
  2034  00E3E8  0E03               	movlw	3
  2035  00E3EA  EC9A  F06D         	call	_Wait_N_Seconds
  2036                           
  2037                           ;Lab7_sample_S3_F21.c: 530: Set_NS_LT(1);
  2038  00E3EE  0E01               	movlw	1
  2039  00E3F0  ECDE  F06E         	call	_Set_NS_LT
  2040  00E3F4  D000               	goto	l438
  2041  00E3F6                     l438:
  2042  00E3F6  0012               	return		;funcret
  2043  00E3F8                     __end_of_Night_Mode:
  2044                           	opt stack 0
  2045                           tblptru	equ	0xFF8
  2046                           tblptrh	equ	0xFF7
  2047                           tblptrl	equ	0xFF6
  2048                           tablat	equ	0xFF5
  2049                           postinc0	equ	0xFEE
  2050                           wreg	equ	0xFE8
  2051                           postdec1	equ	0xFE5
  2052                           fsr1l	equ	0xFE1
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _Initialize_Screen *****************
  2056 ;; Defined at:
  2057 ;;		line 168 in file "Lab7_sample_S3_F21.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;		None               void
  2064 ;; Registers used:
  2065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    7
  2078 ;; This function calls:
  2079 ;;		_LCD_Reset
  2080 ;;		_TFT_GreenTab_Initialize
  2081 ;;		_drawCircle
  2082 ;;		_drawRect
  2083 ;;		_drawtext
  2084 ;;		_fillCircle
  2085 ;;		_fillScreen
  2086 ;;		_strcpy
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text5
  2093  00F69E                     __ptext5:
  2094                           	opt stack 0
  2095  00F69E                     _Initialize_Screen:
  2096                           	opt stack 23
  2097                           
  2098                           ;Lab7_sample_S3_F21.c: 170: LCD_Reset();
  2099                           
  2100                           ;incstack = 0
  2101  00F69E  ECFF  F06C         	call	_LCD_Reset	;wreg free
  2102                           
  2103                           ;Lab7_sample_S3_F21.c: 171: TFT_GreenTab_Initialize();
  2104  00F6A2  EC85  F06D         	call	_TFT_GreenTab_Initialize	;wreg free
  2105                           
  2106                           ;Lab7_sample_S3_F21.c: 172: fillScreen(0x0000);
  2107  00F6A6  0E00               	movlw	0
  2108  00F6A8  6E15               	movwf	fillScreen@color+1,c
  2109  00F6AA  0E00               	movlw	0
  2110  00F6AC  6E14               	movwf	fillScreen@color,c
  2111  00F6AE  EC3E  F06D         	call	_fillScreen	;wreg free
  2112                           
  2113                           ;Lab7_sample_S3_F21.c: 175: txt = buffer;
  2114  00F6B2  0E80               	movlw	low _buffer
  2115  00F6B4  6E6B               	movwf	_txt,c
  2116  00F6B6  0E00               	movlw	high _buffer
  2117  00F6B8  6E6C               	movwf	_txt+1,c
  2118                           
  2119                           ;Lab7_sample_S3_F21.c: 176: strcpy(txt, "ECE3301L Fall 21-S3");
  2120  00F6BA  C06B  F001         	movff	_txt,strcpy@to
  2121  00F6BE  C06C  F002         	movff	_txt+1,strcpy@to+1
  2122  00F6C2  0EAD               	movlw	low STR_1
  2123  00F6C4  6E03               	movwf	strcpy@from,c
  2124  00F6C6  0EFF               	movlw	high STR_1
  2125  00F6C8  6E04               	movwf	strcpy@from+1,c
  2126  00F6CA  ECE2  F06D         	call	_strcpy	;wreg free
  2127                           
  2128                           ;Lab7_sample_S3_F21.c: 177: drawtext(2, 2, txt, 0xFFFF, 0x0000, 1);
  2129  00F6CE  0E02               	movlw	2
  2130  00F6D0  6E29               	movwf	drawtext@y,c
  2131  00F6D2  C06B  F02A         	movff	_txt,drawtext@_text
  2132  00F6D6  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2133  00F6DA  0EFF               	movlw	255
  2134  00F6DC  6E2D               	movwf	drawtext@color+1,c
  2135  00F6DE  682C               	setf	drawtext@color,c
  2136  00F6E0  0E00               	movlw	0
  2137  00F6E2  6E2F               	movwf	drawtext@bg+1,c
  2138  00F6E4  0E00               	movlw	0
  2139  00F6E6  6E2E               	movwf	drawtext@bg,c
  2140  00F6E8  0E01               	movlw	1
  2141  00F6EA  6E30               	movwf	drawtext@size,c
  2142  00F6EC  0E02               	movlw	2
  2143  00F6EE  ECE4  F073         	call	_drawtext
  2144                           
  2145                           ;Lab7_sample_S3_F21.c: 180: strcpy(txt, "Mode:");
  2146  00F6F2  C06B  F001         	movff	_txt,strcpy@to
  2147  00F6F6  C06C  F002         	movff	_txt+1,strcpy@to+1
  2148  00F6FA  0EE5               	movlw	low STR_2
  2149  00F6FC  6E03               	movwf	strcpy@from,c
  2150  00F6FE  0EFF               	movlw	high STR_2
  2151  00F700  6E04               	movwf	strcpy@from+1,c
  2152  00F702  ECE2  F06D         	call	_strcpy	;wreg free
  2153                           
  2154                           ;Lab7_sample_S3_F21.c: 181: drawtext(2, 10, txt, 0xFFFF, 0x0000, 1);
  2155  00F706  0E0A               	movlw	10
  2156  00F708  6E29               	movwf	drawtext@y,c
  2157  00F70A  C06B  F02A         	movff	_txt,drawtext@_text
  2158  00F70E  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2159  00F712  0EFF               	movlw	255
  2160  00F714  6E2D               	movwf	drawtext@color+1,c
  2161  00F716  682C               	setf	drawtext@color,c
  2162  00F718  0E00               	movlw	0
  2163  00F71A  6E2F               	movwf	drawtext@bg+1,c
  2164  00F71C  0E00               	movlw	0
  2165  00F71E  6E2E               	movwf	drawtext@bg,c
  2166  00F720  0E01               	movlw	1
  2167  00F722  6E30               	movwf	drawtext@size,c
  2168  00F724  0E02               	movlw	2
  2169  00F726  ECE4  F073         	call	_drawtext
  2170                           
  2171                           ;Lab7_sample_S3_F21.c: 182: drawtext(35,10, Act_Mode_Txt, 0xFFFF, 0x0000, 1);
  2172  00F72A  0E0A               	movlw	10
  2173  00F72C  6E29               	movwf	drawtext@y,c
  2174  00F72E  0E54               	movlw	low _Act_Mode_Txt
  2175  00F730  6E2A               	movwf	drawtext@_text,c
  2176  00F732  0E00               	movlw	high _Act_Mode_Txt
  2177  00F734  6E2B               	movwf	drawtext@_text+1,c
  2178  00F736  0EFF               	movlw	255
  2179  00F738  6E2D               	movwf	drawtext@color+1,c
  2180  00F73A  682C               	setf	drawtext@color,c
  2181  00F73C  0E00               	movlw	0
  2182  00F73E  6E2F               	movwf	drawtext@bg+1,c
  2183  00F740  0E00               	movlw	0
  2184  00F742  6E2E               	movwf	drawtext@bg,c
  2185  00F744  0E01               	movlw	1
  2186  00F746  6E30               	movwf	drawtext@size,c
  2187  00F748  0E23               	movlw	35
  2188  00F74A  ECE4  F073         	call	_drawtext
  2189                           
  2190                           ;Lab7_sample_S3_F21.c: 185: strcpy(txt, "FR:");
  2191  00F74E  C06B  F001         	movff	_txt,strcpy@to
  2192  00F752  C06C  F002         	movff	_txt+1,strcpy@to+1
  2193  00F756  0EEB               	movlw	low STR_3
  2194  00F758  6E03               	movwf	strcpy@from,c
  2195  00F75A  0EFF               	movlw	high STR_3
  2196  00F75C  6E04               	movwf	strcpy@from+1,c
  2197  00F75E  ECE2  F06D         	call	_strcpy	;wreg free
  2198                           
  2199                           ;Lab7_sample_S3_F21.c: 186: drawtext(50, 10, txt, 0xFFFF, 0x0000, 1);
  2200  00F762  0E0A               	movlw	10
  2201  00F764  6E29               	movwf	drawtext@y,c
  2202  00F766  C06B  F02A         	movff	_txt,drawtext@_text
  2203  00F76A  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2204  00F76E  0EFF               	movlw	255
  2205  00F770  6E2D               	movwf	drawtext@color+1,c
  2206  00F772  682C               	setf	drawtext@color,c
  2207  00F774  0E00               	movlw	0
  2208  00F776  6E2F               	movwf	drawtext@bg+1,c
  2209  00F778  0E00               	movlw	0
  2210  00F77A  6E2E               	movwf	drawtext@bg,c
  2211  00F77C  0E01               	movlw	1
  2212  00F77E  6E30               	movwf	drawtext@size,c
  2213  00F780  0E32               	movlw	50
  2214  00F782  ECE4  F073         	call	_drawtext
  2215                           
  2216                           ;Lab7_sample_S3_F21.c: 187: drawtext(70, 10, FlashingR_Txt, 0xFFFF, 0x0000, 1);
  2217  00F786  0E0A               	movlw	10
  2218  00F788  6E29               	movwf	drawtext@y,c
  2219  00F78A  0E56               	movlw	low _FlashingR_Txt
  2220  00F78C  6E2A               	movwf	drawtext@_text,c
  2221  00F78E  0E00               	movlw	high _FlashingR_Txt
  2222  00F790  6E2B               	movwf	drawtext@_text+1,c
  2223  00F792  0EFF               	movlw	255
  2224  00F794  6E2D               	movwf	drawtext@color+1,c
  2225  00F796  682C               	setf	drawtext@color,c
  2226  00F798  0E00               	movlw	0
  2227  00F79A  6E2F               	movwf	drawtext@bg+1,c
  2228  00F79C  0E00               	movlw	0
  2229  00F79E  6E2E               	movwf	drawtext@bg,c
  2230  00F7A0  0E01               	movlw	1
  2231  00F7A2  6E30               	movwf	drawtext@size,c
  2232  00F7A4  0E46               	movlw	70
  2233  00F7A6  ECE4  F073         	call	_drawtext
  2234                           
  2235                           ;Lab7_sample_S3_F21.c: 190: strcpy(txt, "FS:");
  2236  00F7AA  C06B  F001         	movff	_txt,strcpy@to
  2237  00F7AE  C06C  F002         	movff	_txt+1,strcpy@to+1
  2238  00F7B2  0EEF               	movlw	low STR_4
  2239  00F7B4  6E03               	movwf	strcpy@from,c
  2240  00F7B6  0EFF               	movlw	high STR_4
  2241  00F7B8  6E04               	movwf	strcpy@from+1,c
  2242  00F7BA  ECE2  F06D         	call	_strcpy	;wreg free
  2243                           
  2244                           ;Lab7_sample_S3_F21.c: 191: drawtext(80, 10, txt, 0xFFFF, 0x0000, 1);
  2245  00F7BE  0E0A               	movlw	10
  2246  00F7C0  6E29               	movwf	drawtext@y,c
  2247  00F7C2  C06B  F02A         	movff	_txt,drawtext@_text
  2248  00F7C6  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2249  00F7CA  0EFF               	movlw	255
  2250  00F7CC  6E2D               	movwf	drawtext@color+1,c
  2251  00F7CE  682C               	setf	drawtext@color,c
  2252  00F7D0  0E00               	movlw	0
  2253  00F7D2  6E2F               	movwf	drawtext@bg+1,c
  2254  00F7D4  0E00               	movlw	0
  2255  00F7D6  6E2E               	movwf	drawtext@bg,c
  2256  00F7D8  0E01               	movlw	1
  2257  00F7DA  6E30               	movwf	drawtext@size,c
  2258  00F7DC  0E50               	movlw	80
  2259  00F7DE  ECE4  F073         	call	_drawtext
  2260                           
  2261                           ;Lab7_sample_S3_F21.c: 192: drawtext(100, 10, FlashingR_Txt, 0xFFFF, 0x0000, 1);
  2262  00F7E2  0E0A               	movlw	10
  2263  00F7E4  6E29               	movwf	drawtext@y,c
  2264  00F7E6  0E56               	movlw	low _FlashingR_Txt
  2265  00F7E8  6E2A               	movwf	drawtext@_text,c
  2266  00F7EA  0E00               	movlw	high _FlashingR_Txt
  2267  00F7EC  6E2B               	movwf	drawtext@_text+1,c
  2268  00F7EE  0EFF               	movlw	255
  2269  00F7F0  6E2D               	movwf	drawtext@color+1,c
  2270  00F7F2  682C               	setf	drawtext@color,c
  2271  00F7F4  0E00               	movlw	0
  2272  00F7F6  6E2F               	movwf	drawtext@bg+1,c
  2273  00F7F8  0E00               	movlw	0
  2274  00F7FA  6E2E               	movwf	drawtext@bg,c
  2275  00F7FC  0E01               	movlw	1
  2276  00F7FE  6E30               	movwf	drawtext@size,c
  2277  00F800  0E64               	movlw	100
  2278  00F802  ECE4  F073         	call	_drawtext
  2279                           
  2280                           ;Lab7_sample_S3_F21.c: 195: strcpy(txt, "*");
  2281  00F806  C06B  F001         	movff	_txt,strcpy@to
  2282  00F80A  C06C  F002         	movff	_txt+1,strcpy@to+1
  2283  00F80E  0EFD               	movlw	low STR_5
  2284  00F810  6E03               	movwf	strcpy@from,c
  2285  00F812  0EFF               	movlw	high STR_5
  2286  00F814  6E04               	movwf	strcpy@from+1,c
  2287  00F816  ECE2  F06D         	call	_strcpy	;wreg free
  2288                           
  2289                           ;Lab7_sample_S3_F21.c: 196: drawtext(120, 10, txt, 0xFFFF, 0x0000, 1);
  2290  00F81A  0E0A               	movlw	10
  2291  00F81C  6E29               	movwf	drawtext@y,c
  2292  00F81E  C06B  F02A         	movff	_txt,drawtext@_text
  2293  00F822  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2294  00F826  0EFF               	movlw	255
  2295  00F828  6E2D               	movwf	drawtext@color+1,c
  2296  00F82A  682C               	setf	drawtext@color,c
  2297  00F82C  0E00               	movlw	0
  2298  00F82E  6E2F               	movwf	drawtext@bg+1,c
  2299  00F830  0E00               	movlw	0
  2300  00F832  6E2E               	movwf	drawtext@bg,c
  2301  00F834  0E01               	movlw	1
  2302  00F836  6E30               	movwf	drawtext@size,c
  2303  00F838  0E78               	movlw	120
  2304  00F83A  ECE4  F073         	call	_drawtext
  2305                           
  2306                           ;Lab7_sample_S3_F21.c: 199: strcpy(txt, "NORTH/SOUTH");
  2307  00F83E  C06B  F001         	movff	_txt,strcpy@to
  2308  00F842  C06C  F002         	movff	_txt+1,strcpy@to+1
  2309  00F846  0EC1               	movlw	low STR_6
  2310  00F848  6E03               	movwf	strcpy@from,c
  2311  00F84A  0EFF               	movlw	high STR_6
  2312  00F84C  6E04               	movwf	strcpy@from+1,c
  2313  00F84E  ECE2  F06D         	call	_strcpy	;wreg free
  2314                           
  2315                           ;Lab7_sample_S3_F21.c: 200: drawtext (30, 20 , txt, 0x001F, 0x0000, 1);
  2316  00F852  0E14               	movlw	20
  2317  00F854  6E29               	movwf	drawtext@y,c
  2318  00F856  C06B  F02A         	movff	_txt,drawtext@_text
  2319  00F85A  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2320  00F85E  0E00               	movlw	0
  2321  00F860  6E2D               	movwf	drawtext@color+1,c
  2322  00F862  0E1F               	movlw	31
  2323  00F864  6E2C               	movwf	drawtext@color,c
  2324  00F866  0E00               	movlw	0
  2325  00F868  6E2F               	movwf	drawtext@bg+1,c
  2326  00F86A  0E00               	movlw	0
  2327  00F86C  6E2E               	movwf	drawtext@bg,c
  2328  00F86E  0E01               	movlw	1
  2329  00F870  6E30               	movwf	drawtext@size,c
  2330  00F872  0E1E               	movlw	30
  2331  00F874  ECE4  F073         	call	_drawtext
  2332                           
  2333                           ;Lab7_sample_S3_F21.c: 201: drawRect (30, 20 + 15-8, 60, 18, 0x001F);
  2334  00F878  0E00               	movlw	0
  2335  00F87A  6E14               	movwf	drawRect@x+1,c
  2336  00F87C  0E1E               	movlw	30
  2337  00F87E  6E13               	movwf	drawRect@x,c
  2338  00F880  0E00               	movlw	0
  2339  00F882  6E16               	movwf	drawRect@y+1,c
  2340  00F884  0E1B               	movlw	27
  2341  00F886  6E15               	movwf	drawRect@y,c
  2342  00F888  0E00               	movlw	0
  2343  00F88A  6E18               	movwf	drawRect@w+1,c
  2344  00F88C  0E3C               	movlw	60
  2345  00F88E  6E17               	movwf	drawRect@w,c
  2346  00F890  0E00               	movlw	0
  2347  00F892  6E1A               	movwf	drawRect@h+1,c
  2348  00F894  0E12               	movlw	18
  2349  00F896  6E19               	movwf	drawRect@h,c
  2350  00F898  0E00               	movlw	0
  2351  00F89A  6E1C               	movwf	drawRect@color+1,c
  2352  00F89C  0E1F               	movlw	31
  2353  00F89E  6E1B               	movwf	drawRect@color,c
  2354  00F8A0  EC9E  F06F         	call	_drawRect	;wreg free
  2355                           
  2356                           ;Lab7_sample_S3_F21.c: 202: drawCircle(40, 20 + 15 , 7, 0xF800);
  2357  00F8A4  0E00               	movlw	0
  2358  00F8A6  6E0D               	movwf	drawCircle@x0+1,c
  2359  00F8A8  0E28               	movlw	40
  2360  00F8AA  6E0C               	movwf	drawCircle@x0,c
  2361  00F8AC  0E00               	movlw	0
  2362  00F8AE  6E0F               	movwf	drawCircle@y0+1,c
  2363  00F8B0  0E23               	movlw	35
  2364  00F8B2  6E0E               	movwf	drawCircle@y0,c
  2365  00F8B4  0E00               	movlw	0
  2366  00F8B6  6E11               	movwf	drawCircle@r+1,c
  2367  00F8B8  0E07               	movlw	7
  2368  00F8BA  6E10               	movwf	drawCircle@r,c
  2369  00F8BC  0EF8               	movlw	248
  2370  00F8BE  6E13               	movwf	drawCircle@color+1,c
  2371  00F8C0  0E00               	movlw	0
  2372  00F8C2  6E12               	movwf	drawCircle@color,c
  2373  00F8C4  ECCB  F077         	call	_drawCircle	;wreg free
  2374                           
  2375                           ;Lab7_sample_S3_F21.c: 203: drawCircle(60, 20 + 15 , 7, 0xFFE0);
  2376  00F8C8  0E00               	movlw	0
  2377  00F8CA  6E0D               	movwf	drawCircle@x0+1,c
  2378  00F8CC  0E3C               	movlw	60
  2379  00F8CE  6E0C               	movwf	drawCircle@x0,c
  2380  00F8D0  0E00               	movlw	0
  2381  00F8D2  6E0F               	movwf	drawCircle@y0+1,c
  2382  00F8D4  0E23               	movlw	35
  2383  00F8D6  6E0E               	movwf	drawCircle@y0,c
  2384  00F8D8  0E00               	movlw	0
  2385  00F8DA  6E11               	movwf	drawCircle@r+1,c
  2386  00F8DC  0E07               	movlw	7
  2387  00F8DE  6E10               	movwf	drawCircle@r,c
  2388  00F8E0  0EFF               	movlw	255
  2389  00F8E2  6E13               	movwf	drawCircle@color+1,c
  2390  00F8E4  0EE0               	movlw	224
  2391  00F8E6  6E12               	movwf	drawCircle@color,c
  2392  00F8E8  ECCB  F077         	call	_drawCircle	;wreg free
  2393                           
  2394                           ;Lab7_sample_S3_F21.c: 204: fillCircle(80, 20 + 15 , 7, 0x07E0);
  2395  00F8EC  0E00               	movlw	0
  2396  00F8EE  6E2C               	movwf	fillCircle@x0+1,c
  2397  00F8F0  0E50               	movlw	80
  2398  00F8F2  6E2B               	movwf	fillCircle@x0,c
  2399  00F8F4  0E00               	movlw	0
  2400  00F8F6  6E2E               	movwf	fillCircle@y0+1,c
  2401  00F8F8  0E23               	movlw	35
  2402  00F8FA  6E2D               	movwf	fillCircle@y0,c
  2403  00F8FC  0E00               	movlw	0
  2404  00F8FE  6E30               	movwf	fillCircle@r+1,c
  2405  00F900  0E07               	movlw	7
  2406  00F902  6E2F               	movwf	fillCircle@r,c
  2407  00F904  0E07               	movlw	7
  2408  00F906  6E32               	movwf	fillCircle@color+1,c
  2409  00F908  0EE0               	movlw	224
  2410  00F90A  6E31               	movwf	fillCircle@color,c
  2411  00F90C  EC4C  F06F         	call	_fillCircle	;wreg free
  2412                           
  2413                           ;Lab7_sample_S3_F21.c: 205: drawtext (100, 20 + 10, NS_Count, 0x001F, 0x0000, 2);
  2414  00F910  0E1E               	movlw	30
  2415  00F912  6E29               	movwf	drawtext@y,c
  2416  00F914  0E4B               	movlw	low _NS_Count
  2417  00F916  6E2A               	movwf	drawtext@_text,c
  2418  00F918  0E00               	movlw	high _NS_Count
  2419  00F91A  6E2B               	movwf	drawtext@_text+1,c
  2420  00F91C  0E00               	movlw	0
  2421  00F91E  6E2D               	movwf	drawtext@color+1,c
  2422  00F920  0E1F               	movlw	31
  2423  00F922  6E2C               	movwf	drawtext@color,c
  2424  00F924  0E00               	movlw	0
  2425  00F926  6E2F               	movwf	drawtext@bg+1,c
  2426  00F928  0E00               	movlw	0
  2427  00F92A  6E2E               	movwf	drawtext@bg,c
  2428  00F92C  0E02               	movlw	2
  2429  00F92E  6E30               	movwf	drawtext@size,c
  2430  00F930  0E64               	movlw	100
  2431  00F932  ECE4  F073         	call	_drawtext
  2432                           
  2433                           ;Lab7_sample_S3_F21.c: 208: strcpy(txt, "N/S LT");
  2434  00F936  C06B  F001         	movff	_txt,strcpy@to
  2435  00F93A  C06C  F002         	movff	_txt+1,strcpy@to+1
  2436  00F93E  0ED7               	movlw	low STR_7
  2437  00F940  6E03               	movwf	strcpy@from,c
  2438  00F942  0EFF               	movlw	high STR_7
  2439  00F944  6E04               	movwf	strcpy@from+1,c
  2440  00F946  ECE2  F06D         	call	_strcpy	;wreg free
  2441                           
  2442                           ;Lab7_sample_S3_F21.c: 209: drawtext (30, 50, txt, 0xF81F, 0x0000, 1);
  2443  00F94A  0E32               	movlw	50
  2444  00F94C  6E29               	movwf	drawtext@y,c
  2445  00F94E  C06B  F02A         	movff	_txt,drawtext@_text
  2446  00F952  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2447  00F956  0EF8               	movlw	248
  2448  00F958  6E2D               	movwf	drawtext@color+1,c
  2449  00F95A  0E1F               	movlw	31
  2450  00F95C  6E2C               	movwf	drawtext@color,c
  2451  00F95E  0E00               	movlw	0
  2452  00F960  6E2F               	movwf	drawtext@bg+1,c
  2453  00F962  0E00               	movlw	0
  2454  00F964  6E2E               	movwf	drawtext@bg,c
  2455  00F966  0E01               	movlw	1
  2456  00F968  6E30               	movwf	drawtext@size,c
  2457  00F96A  0E1E               	movlw	30
  2458  00F96C  ECE4  F073         	call	_drawtext
  2459                           
  2460                           ;Lab7_sample_S3_F21.c: 210: drawRect (30, 50 + 15-8, 60, 18, 0xF81F);
  2461  00F970  0E00               	movlw	0
  2462  00F972  6E14               	movwf	drawRect@x+1,c
  2463  00F974  0E1E               	movlw	30
  2464  00F976  6E13               	movwf	drawRect@x,c
  2465  00F978  0E00               	movlw	0
  2466  00F97A  6E16               	movwf	drawRect@y+1,c
  2467  00F97C  0E39               	movlw	57
  2468  00F97E  6E15               	movwf	drawRect@y,c
  2469  00F980  0E00               	movlw	0
  2470  00F982  6E18               	movwf	drawRect@w+1,c
  2471  00F984  0E3C               	movlw	60
  2472  00F986  6E17               	movwf	drawRect@w,c
  2473  00F988  0E00               	movlw	0
  2474  00F98A  6E1A               	movwf	drawRect@h+1,c
  2475  00F98C  0E12               	movlw	18
  2476  00F98E  6E19               	movwf	drawRect@h,c
  2477  00F990  0EF8               	movlw	248
  2478  00F992  6E1C               	movwf	drawRect@color+1,c
  2479  00F994  0E1F               	movlw	31
  2480  00F996  6E1B               	movwf	drawRect@color,c
  2481  00F998  EC9E  F06F         	call	_drawRect	;wreg free
  2482                           
  2483                           ;Lab7_sample_S3_F21.c: 211: fillCircle(40, 50 + 15, 7, 0xF800);
  2484  00F99C  0E00               	movlw	0
  2485  00F99E  6E2C               	movwf	fillCircle@x0+1,c
  2486  00F9A0  0E28               	movlw	40
  2487  00F9A2  6E2B               	movwf	fillCircle@x0,c
  2488  00F9A4  0E00               	movlw	0
  2489  00F9A6  6E2E               	movwf	fillCircle@y0+1,c
  2490  00F9A8  0E41               	movlw	65
  2491  00F9AA  6E2D               	movwf	fillCircle@y0,c
  2492  00F9AC  0E00               	movlw	0
  2493  00F9AE  6E30               	movwf	fillCircle@r+1,c
  2494  00F9B0  0E07               	movlw	7
  2495  00F9B2  6E2F               	movwf	fillCircle@r,c
  2496  00F9B4  0EF8               	movlw	248
  2497  00F9B6  6E32               	movwf	fillCircle@color+1,c
  2498  00F9B8  0E00               	movlw	0
  2499  00F9BA  6E31               	movwf	fillCircle@color,c
  2500  00F9BC  EC4C  F06F         	call	_fillCircle	;wreg free
  2501                           
  2502                           ;Lab7_sample_S3_F21.c: 212: drawCircle(60, 50 + 15, 7, 0xFFE0);
  2503  00F9C0  0E00               	movlw	0
  2504  00F9C2  6E0D               	movwf	drawCircle@x0+1,c
  2505  00F9C4  0E3C               	movlw	60
  2506  00F9C6  6E0C               	movwf	drawCircle@x0,c
  2507  00F9C8  0E00               	movlw	0
  2508  00F9CA  6E0F               	movwf	drawCircle@y0+1,c
  2509  00F9CC  0E41               	movlw	65
  2510  00F9CE  6E0E               	movwf	drawCircle@y0,c
  2511  00F9D0  0E00               	movlw	0
  2512  00F9D2  6E11               	movwf	drawCircle@r+1,c
  2513  00F9D4  0E07               	movlw	7
  2514  00F9D6  6E10               	movwf	drawCircle@r,c
  2515  00F9D8  0EFF               	movlw	255
  2516  00F9DA  6E13               	movwf	drawCircle@color+1,c
  2517  00F9DC  0EE0               	movlw	224
  2518  00F9DE  6E12               	movwf	drawCircle@color,c
  2519  00F9E0  ECCB  F077         	call	_drawCircle	;wreg free
  2520                           
  2521                           ;Lab7_sample_S3_F21.c: 213: drawCircle(80, 50 + 15, 7, 0x07E0);
  2522  00F9E4  0E00               	movlw	0
  2523  00F9E6  6E0D               	movwf	drawCircle@x0+1,c
  2524  00F9E8  0E50               	movlw	80
  2525  00F9EA  6E0C               	movwf	drawCircle@x0,c
  2526  00F9EC  0E00               	movlw	0
  2527  00F9EE  6E0F               	movwf	drawCircle@y0+1,c
  2528  00F9F0  0E41               	movlw	65
  2529  00F9F2  6E0E               	movwf	drawCircle@y0,c
  2530  00F9F4  0E00               	movlw	0
  2531  00F9F6  6E11               	movwf	drawCircle@r+1,c
  2532  00F9F8  0E07               	movlw	7
  2533  00F9FA  6E10               	movwf	drawCircle@r,c
  2534  00F9FC  0E07               	movlw	7
  2535  00F9FE  6E13               	movwf	drawCircle@color+1,c
  2536  00FA00  0EE0               	movlw	224
  2537  00FA02  6E12               	movwf	drawCircle@color,c
  2538  00FA04  ECCB  F077         	call	_drawCircle	;wreg free
  2539                           
  2540                           ;Lab7_sample_S3_F21.c: 214: drawtext (100, 50 + 10, NSLT_Count, 0xF81F, 0x0000, 2);
  2541  00FA08  0E3C               	movlw	60
  2542  00FA0A  6E29               	movwf	drawtext@y,c
  2543  00FA0C  0E48               	movlw	low _NSLT_Count
  2544  00FA0E  6E2A               	movwf	drawtext@_text,c
  2545  00FA10  0E00               	movlw	high _NSLT_Count
  2546  00FA12  6E2B               	movwf	drawtext@_text+1,c
  2547  00FA14  0EF8               	movlw	248
  2548  00FA16  6E2D               	movwf	drawtext@color+1,c
  2549  00FA18  0E1F               	movlw	31
  2550  00FA1A  6E2C               	movwf	drawtext@color,c
  2551  00FA1C  0E00               	movlw	0
  2552  00FA1E  6E2F               	movwf	drawtext@bg+1,c
  2553  00FA20  0E00               	movlw	0
  2554  00FA22  6E2E               	movwf	drawtext@bg,c
  2555  00FA24  0E02               	movlw	2
  2556  00FA26  6E30               	movwf	drawtext@size,c
  2557  00FA28  0E64               	movlw	100
  2558  00FA2A  ECE4  F073         	call	_drawtext
  2559                           
  2560                           ;Lab7_sample_S3_F21.c: 217: strcpy(txt, "EAST/WEST");
  2561  00FA2E  C06B  F001         	movff	_txt,strcpy@to
  2562  00FA32  C06C  F002         	movff	_txt+1,strcpy@to+1
  2563  00FA36  0ECD               	movlw	low STR_8
  2564  00FA38  6E03               	movwf	strcpy@from,c
  2565  00FA3A  0EFF               	movlw	high STR_8
  2566  00FA3C  6E04               	movwf	strcpy@from+1,c
  2567  00FA3E  ECE2  F06D         	call	_strcpy	;wreg free
  2568                           
  2569                           ;Lab7_sample_S3_F21.c: 218: drawtext (30, 80, txt, 0x07FF, 0x0000, 1);
  2570  00FA42  0E50               	movlw	80
  2571  00FA44  6E29               	movwf	drawtext@y,c
  2572  00FA46  C06B  F02A         	movff	_txt,drawtext@_text
  2573  00FA4A  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2574  00FA4E  0E07               	movlw	7
  2575  00FA50  6E2D               	movwf	drawtext@color+1,c
  2576  00FA52  682C               	setf	drawtext@color,c
  2577  00FA54  0E00               	movlw	0
  2578  00FA56  6E2F               	movwf	drawtext@bg+1,c
  2579  00FA58  0E00               	movlw	0
  2580  00FA5A  6E2E               	movwf	drawtext@bg,c
  2581  00FA5C  0E01               	movlw	1
  2582  00FA5E  6E30               	movwf	drawtext@size,c
  2583  00FA60  0E1E               	movlw	30
  2584  00FA62  ECE4  F073         	call	_drawtext
  2585                           
  2586                           ;Lab7_sample_S3_F21.c: 219: drawRect (30, 80 + 15-8, 60, 18, 0x07FF);
  2587  00FA66  0E00               	movlw	0
  2588  00FA68  6E14               	movwf	drawRect@x+1,c
  2589  00FA6A  0E1E               	movlw	30
  2590  00FA6C  6E13               	movwf	drawRect@x,c
  2591  00FA6E  0E00               	movlw	0
  2592  00FA70  6E16               	movwf	drawRect@y+1,c
  2593  00FA72  0E57               	movlw	87
  2594  00FA74  6E15               	movwf	drawRect@y,c
  2595  00FA76  0E00               	movlw	0
  2596  00FA78  6E18               	movwf	drawRect@w+1,c
  2597  00FA7A  0E3C               	movlw	60
  2598  00FA7C  6E17               	movwf	drawRect@w,c
  2599  00FA7E  0E00               	movlw	0
  2600  00FA80  6E1A               	movwf	drawRect@h+1,c
  2601  00FA82  0E12               	movlw	18
  2602  00FA84  6E19               	movwf	drawRect@h,c
  2603  00FA86  0E07               	movlw	7
  2604  00FA88  6E1C               	movwf	drawRect@color+1,c
  2605  00FA8A  681B               	setf	drawRect@color,c
  2606  00FA8C  EC9E  F06F         	call	_drawRect	;wreg free
  2607                           
  2608                           ;Lab7_sample_S3_F21.c: 220: fillCircle(40, 80 + 15, 7, 0xF800);
  2609  00FA90  0E00               	movlw	0
  2610  00FA92  6E2C               	movwf	fillCircle@x0+1,c
  2611  00FA94  0E28               	movlw	40
  2612  00FA96  6E2B               	movwf	fillCircle@x0,c
  2613  00FA98  0E00               	movlw	0
  2614  00FA9A  6E2E               	movwf	fillCircle@y0+1,c
  2615  00FA9C  0E5F               	movlw	95
  2616  00FA9E  6E2D               	movwf	fillCircle@y0,c
  2617  00FAA0  0E00               	movlw	0
  2618  00FAA2  6E30               	movwf	fillCircle@r+1,c
  2619  00FAA4  0E07               	movlw	7
  2620  00FAA6  6E2F               	movwf	fillCircle@r,c
  2621  00FAA8  0EF8               	movlw	248
  2622  00FAAA  6E32               	movwf	fillCircle@color+1,c
  2623  00FAAC  0E00               	movlw	0
  2624  00FAAE  6E31               	movwf	fillCircle@color,c
  2625  00FAB0  EC4C  F06F         	call	_fillCircle	;wreg free
  2626                           
  2627                           ;Lab7_sample_S3_F21.c: 221: drawCircle(60, 80 + 15, 7, 0xFFE0);
  2628  00FAB4  0E00               	movlw	0
  2629  00FAB6  6E0D               	movwf	drawCircle@x0+1,c
  2630  00FAB8  0E3C               	movlw	60
  2631  00FABA  6E0C               	movwf	drawCircle@x0,c
  2632  00FABC  0E00               	movlw	0
  2633  00FABE  6E0F               	movwf	drawCircle@y0+1,c
  2634  00FAC0  0E5F               	movlw	95
  2635  00FAC2  6E0E               	movwf	drawCircle@y0,c
  2636  00FAC4  0E00               	movlw	0
  2637  00FAC6  6E11               	movwf	drawCircle@r+1,c
  2638  00FAC8  0E07               	movlw	7
  2639  00FACA  6E10               	movwf	drawCircle@r,c
  2640  00FACC  0EFF               	movlw	255
  2641  00FACE  6E13               	movwf	drawCircle@color+1,c
  2642  00FAD0  0EE0               	movlw	224
  2643  00FAD2  6E12               	movwf	drawCircle@color,c
  2644  00FAD4  ECCB  F077         	call	_drawCircle	;wreg free
  2645                           
  2646                           ;Lab7_sample_S3_F21.c: 222: drawCircle(80, 80 + 15, 7, 0x07E0);
  2647  00FAD8  0E00               	movlw	0
  2648  00FADA  6E0D               	movwf	drawCircle@x0+1,c
  2649  00FADC  0E50               	movlw	80
  2650  00FADE  6E0C               	movwf	drawCircle@x0,c
  2651  00FAE0  0E00               	movlw	0
  2652  00FAE2  6E0F               	movwf	drawCircle@y0+1,c
  2653  00FAE4  0E5F               	movlw	95
  2654  00FAE6  6E0E               	movwf	drawCircle@y0,c
  2655  00FAE8  0E00               	movlw	0
  2656  00FAEA  6E11               	movwf	drawCircle@r+1,c
  2657  00FAEC  0E07               	movlw	7
  2658  00FAEE  6E10               	movwf	drawCircle@r,c
  2659  00FAF0  0E07               	movlw	7
  2660  00FAF2  6E13               	movwf	drawCircle@color+1,c
  2661  00FAF4  0EE0               	movlw	224
  2662  00FAF6  6E12               	movwf	drawCircle@color,c
  2663  00FAF8  ECCB  F077         	call	_drawCircle	;wreg free
  2664                           
  2665                           ;Lab7_sample_S3_F21.c: 223: drawtext (100, 80 + 10, EW_Count, 0x07FF, 0x0000, 2);
  2666  00FAFC  0E5A               	movlw	90
  2667  00FAFE  6E29               	movwf	drawtext@y,c
  2668  00FB00  0E45               	movlw	low _EW_Count
  2669  00FB02  6E2A               	movwf	drawtext@_text,c
  2670  00FB04  0E00               	movlw	high _EW_Count
  2671  00FB06  6E2B               	movwf	drawtext@_text+1,c
  2672  00FB08  0E07               	movlw	7
  2673  00FB0A  6E2D               	movwf	drawtext@color+1,c
  2674  00FB0C  682C               	setf	drawtext@color,c
  2675  00FB0E  0E00               	movlw	0
  2676  00FB10  6E2F               	movwf	drawtext@bg+1,c
  2677  00FB12  0E00               	movlw	0
  2678  00FB14  6E2E               	movwf	drawtext@bg,c
  2679  00FB16  0E02               	movlw	2
  2680  00FB18  6E30               	movwf	drawtext@size,c
  2681  00FB1A  0E64               	movlw	100
  2682  00FB1C  ECE4  F073         	call	_drawtext
  2683                           
  2684                           ;Lab7_sample_S3_F21.c: 226: strcpy(txt, "E/W LT");
  2685  00FB20  C06B  F001         	movff	_txt,strcpy@to
  2686  00FB24  C06C  F002         	movff	_txt+1,strcpy@to+1
  2687  00FB28  0EDE               	movlw	low STR_9
  2688  00FB2A  6E03               	movwf	strcpy@from,c
  2689  00FB2C  0EFF               	movlw	high STR_9
  2690  00FB2E  6E04               	movwf	strcpy@from+1,c
  2691  00FB30  ECE2  F06D         	call	_strcpy	;wreg free
  2692                           
  2693                           ;Lab7_sample_S3_F21.c: 227: drawtext (30, 110, txt, 0xFFFF, 0x0000, 1);
  2694  00FB34  0E6E               	movlw	110
  2695  00FB36  6E29               	movwf	drawtext@y,c
  2696  00FB38  C06B  F02A         	movff	_txt,drawtext@_text
  2697  00FB3C  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2698  00FB40  0EFF               	movlw	255
  2699  00FB42  6E2D               	movwf	drawtext@color+1,c
  2700  00FB44  682C               	setf	drawtext@color,c
  2701  00FB46  0E00               	movlw	0
  2702  00FB48  6E2F               	movwf	drawtext@bg+1,c
  2703  00FB4A  0E00               	movlw	0
  2704  00FB4C  6E2E               	movwf	drawtext@bg,c
  2705  00FB4E  0E01               	movlw	1
  2706  00FB50  6E30               	movwf	drawtext@size,c
  2707  00FB52  0E1E               	movlw	30
  2708  00FB54  ECE4  F073         	call	_drawtext
  2709                           
  2710                           ;Lab7_sample_S3_F21.c: 228: drawRect (30, 110 + 15-8, 60, 18, 0xFFFF);
  2711  00FB58  0E00               	movlw	0
  2712  00FB5A  6E14               	movwf	drawRect@x+1,c
  2713  00FB5C  0E1E               	movlw	30
  2714  00FB5E  6E13               	movwf	drawRect@x,c
  2715  00FB60  0E00               	movlw	0
  2716  00FB62  6E16               	movwf	drawRect@y+1,c
  2717  00FB64  0E75               	movlw	117
  2718  00FB66  6E15               	movwf	drawRect@y,c
  2719  00FB68  0E00               	movlw	0
  2720  00FB6A  6E18               	movwf	drawRect@w+1,c
  2721  00FB6C  0E3C               	movlw	60
  2722  00FB6E  6E17               	movwf	drawRect@w,c
  2723  00FB70  0E00               	movlw	0
  2724  00FB72  6E1A               	movwf	drawRect@h+1,c
  2725  00FB74  0E12               	movlw	18
  2726  00FB76  6E19               	movwf	drawRect@h,c
  2727  00FB78  0EFF               	movlw	255
  2728  00FB7A  6E1C               	movwf	drawRect@color+1,c
  2729  00FB7C  681B               	setf	drawRect@color,c
  2730  00FB7E  EC9E  F06F         	call	_drawRect	;wreg free
  2731                           
  2732                           ;Lab7_sample_S3_F21.c: 229: fillCircle(40, 110 + 15, 7, 0xF800);
  2733  00FB82  0E00               	movlw	0
  2734  00FB84  6E2C               	movwf	fillCircle@x0+1,c
  2735  00FB86  0E28               	movlw	40
  2736  00FB88  6E2B               	movwf	fillCircle@x0,c
  2737  00FB8A  0E00               	movlw	0
  2738  00FB8C  6E2E               	movwf	fillCircle@y0+1,c
  2739  00FB8E  0E7D               	movlw	125
  2740  00FB90  6E2D               	movwf	fillCircle@y0,c
  2741  00FB92  0E00               	movlw	0
  2742  00FB94  6E30               	movwf	fillCircle@r+1,c
  2743  00FB96  0E07               	movlw	7
  2744  00FB98  6E2F               	movwf	fillCircle@r,c
  2745  00FB9A  0EF8               	movlw	248
  2746  00FB9C  6E32               	movwf	fillCircle@color+1,c
  2747  00FB9E  0E00               	movlw	0
  2748  00FBA0  6E31               	movwf	fillCircle@color,c
  2749  00FBA2  EC4C  F06F         	call	_fillCircle	;wreg free
  2750                           
  2751                           ;Lab7_sample_S3_F21.c: 230: drawCircle(60, 110 + 15, 7, 0xFFE0);
  2752  00FBA6  0E00               	movlw	0
  2753  00FBA8  6E0D               	movwf	drawCircle@x0+1,c
  2754  00FBAA  0E3C               	movlw	60
  2755  00FBAC  6E0C               	movwf	drawCircle@x0,c
  2756  00FBAE  0E00               	movlw	0
  2757  00FBB0  6E0F               	movwf	drawCircle@y0+1,c
  2758  00FBB2  0E7D               	movlw	125
  2759  00FBB4  6E0E               	movwf	drawCircle@y0,c
  2760  00FBB6  0E00               	movlw	0
  2761  00FBB8  6E11               	movwf	drawCircle@r+1,c
  2762  00FBBA  0E07               	movlw	7
  2763  00FBBC  6E10               	movwf	drawCircle@r,c
  2764  00FBBE  0EFF               	movlw	255
  2765  00FBC0  6E13               	movwf	drawCircle@color+1,c
  2766  00FBC2  0EE0               	movlw	224
  2767  00FBC4  6E12               	movwf	drawCircle@color,c
  2768  00FBC6  ECCB  F077         	call	_drawCircle	;wreg free
  2769                           
  2770                           ;Lab7_sample_S3_F21.c: 231: drawCircle(80, 110 + 15, 7, 0x07E0);
  2771  00FBCA  0E00               	movlw	0
  2772  00FBCC  6E0D               	movwf	drawCircle@x0+1,c
  2773  00FBCE  0E50               	movlw	80
  2774  00FBD0  6E0C               	movwf	drawCircle@x0,c
  2775  00FBD2  0E00               	movlw	0
  2776  00FBD4  6E0F               	movwf	drawCircle@y0+1,c
  2777  00FBD6  0E7D               	movlw	125
  2778  00FBD8  6E0E               	movwf	drawCircle@y0,c
  2779  00FBDA  0E00               	movlw	0
  2780  00FBDC  6E11               	movwf	drawCircle@r+1,c
  2781  00FBDE  0E07               	movlw	7
  2782  00FBE0  6E10               	movwf	drawCircle@r,c
  2783  00FBE2  0E07               	movlw	7
  2784  00FBE4  6E13               	movwf	drawCircle@color+1,c
  2785  00FBE6  0EE0               	movlw	224
  2786  00FBE8  6E12               	movwf	drawCircle@color,c
  2787  00FBEA  ECCB  F077         	call	_drawCircle	;wreg free
  2788                           
  2789                           ;Lab7_sample_S3_F21.c: 232: drawtext (100, 110 + 10, EWLT_Count, 0xFFFF, 0x0000, 2);
  2790  00FBEE  0E78               	movlw	120
  2791  00FBF0  6E29               	movwf	drawtext@y,c
  2792  00FBF2  0E42               	movlw	low _EWLT_Count
  2793  00FBF4  6E2A               	movwf	drawtext@_text,c
  2794  00FBF6  0E00               	movlw	high _EWLT_Count
  2795  00FBF8  6E2B               	movwf	drawtext@_text+1,c
  2796  00FBFA  0EFF               	movlw	255
  2797  00FBFC  6E2D               	movwf	drawtext@color+1,c
  2798  00FBFE  682C               	setf	drawtext@color,c
  2799  00FC00  0E00               	movlw	0
  2800  00FC02  6E2F               	movwf	drawtext@bg+1,c
  2801  00FC04  0E00               	movlw	0
  2802  00FC06  6E2E               	movwf	drawtext@bg,c
  2803  00FC08  0E02               	movlw	2
  2804  00FC0A  6E30               	movwf	drawtext@size,c
  2805  00FC0C  0E64               	movlw	100
  2806  00FC0E  ECE4  F073         	call	_drawtext
  2807                           
  2808                           ;Lab7_sample_S3_F21.c: 235: strcpy(txt, "PNS");
  2809  00FC12  C06B  F001         	movff	_txt,strcpy@to
  2810  00FC16  C06C  F002         	movff	_txt+1,strcpy@to+1
  2811  00FC1A  0EF3               	movlw	low STR_10
  2812  00FC1C  6E03               	movwf	strcpy@from,c
  2813  00FC1E  0EFF               	movlw	high STR_10
  2814  00FC20  6E04               	movwf	strcpy@from+1,c
  2815  00FC22  ECE2  F06D         	call	_strcpy	;wreg free
  2816                           
  2817                           ;Lab7_sample_S3_F21.c: 236: drawtext(3, 20, txt, 0x001F, 0x0000, 1);
  2818  00FC26  0E14               	movlw	20
  2819  00FC28  6E29               	movwf	drawtext@y,c
  2820  00FC2A  C06B  F02A         	movff	_txt,drawtext@_text
  2821  00FC2E  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2822  00FC32  0E00               	movlw	0
  2823  00FC34  6E2D               	movwf	drawtext@color+1,c
  2824  00FC36  0E1F               	movlw	31
  2825  00FC38  6E2C               	movwf	drawtext@color,c
  2826  00FC3A  0E00               	movlw	0
  2827  00FC3C  6E2F               	movwf	drawtext@bg+1,c
  2828  00FC3E  0E00               	movlw	0
  2829  00FC40  6E2E               	movwf	drawtext@bg,c
  2830  00FC42  0E01               	movlw	1
  2831  00FC44  6E30               	movwf	drawtext@size,c
  2832  00FC46  0E03               	movlw	3
  2833  00FC48  ECE4  F073         	call	_drawtext
  2834                           
  2835                           ;Lab7_sample_S3_F21.c: 237: drawtext(2, 30, PED_NS_Count, 0x001F, 0x0000, 2);
  2836  00FC4C  0E1E               	movlw	30
  2837  00FC4E  6E29               	movwf	drawtext@y,c
  2838  00FC50  0E51               	movlw	low _PED_NS_Count
  2839  00FC52  6E2A               	movwf	drawtext@_text,c
  2840  00FC54  0E00               	movlw	high _PED_NS_Count
  2841  00FC56  6E2B               	movwf	drawtext@_text+1,c
  2842  00FC58  0E00               	movlw	0
  2843  00FC5A  6E2D               	movwf	drawtext@color+1,c
  2844  00FC5C  0E1F               	movlw	31
  2845  00FC5E  6E2C               	movwf	drawtext@color,c
  2846  00FC60  0E00               	movlw	0
  2847  00FC62  6E2F               	movwf	drawtext@bg+1,c
  2848  00FC64  0E00               	movlw	0
  2849  00FC66  6E2E               	movwf	drawtext@bg,c
  2850  00FC68  0E02               	movlw	2
  2851  00FC6A  6E30               	movwf	drawtext@size,c
  2852  00FC6C  0E02               	movlw	2
  2853  00FC6E  ECE4  F073         	call	_drawtext
  2854                           
  2855                           ;Lab7_sample_S3_F21.c: 240: drawtext(2, 90, PED_EW_Count, 0x07FF, 0x0000, 2);
  2856  00FC72  0E5A               	movlw	90
  2857  00FC74  6E29               	movwf	drawtext@y,c
  2858  00FC76  0E4E               	movlw	low _PED_EW_Count
  2859  00FC78  6E2A               	movwf	drawtext@_text,c
  2860  00FC7A  0E00               	movlw	high _PED_EW_Count
  2861  00FC7C  6E2B               	movwf	drawtext@_text+1,c
  2862  00FC7E  0E07               	movlw	7
  2863  00FC80  6E2D               	movwf	drawtext@color+1,c
  2864  00FC82  682C               	setf	drawtext@color,c
  2865  00FC84  0E00               	movlw	0
  2866  00FC86  6E2F               	movwf	drawtext@bg+1,c
  2867  00FC88  0E00               	movlw	0
  2868  00FC8A  6E2E               	movwf	drawtext@bg,c
  2869  00FC8C  0E02               	movlw	2
  2870  00FC8E  6E30               	movwf	drawtext@size,c
  2871  00FC90  0E02               	movlw	2
  2872  00FC92  ECE4  F073         	call	_drawtext
  2873                           
  2874                           ;Lab7_sample_S3_F21.c: 241: strcpy(txt, "PEW");
  2875  00FC96  C06B  F001         	movff	_txt,strcpy@to
  2876  00FC9A  C06C  F002         	movff	_txt+1,strcpy@to+1
  2877  00FC9E  0EF7               	movlw	low STR_11
  2878  00FCA0  6E03               	movwf	strcpy@from,c
  2879  00FCA2  0EFF               	movlw	high STR_11
  2880  00FCA4  6E04               	movwf	strcpy@from+1,c
  2881  00FCA6  ECE2  F06D         	call	_strcpy	;wreg free
  2882                           
  2883                           ;Lab7_sample_S3_F21.c: 242: drawtext(3, 80, txt, 0x07FF, 0x0000, 1);
  2884  00FCAA  0E50               	movlw	80
  2885  00FCAC  6E29               	movwf	drawtext@y,c
  2886  00FCAE  C06B  F02A         	movff	_txt,drawtext@_text
  2887  00FCB2  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2888  00FCB6  0E07               	movlw	7
  2889  00FCB8  6E2D               	movwf	drawtext@color+1,c
  2890  00FCBA  682C               	setf	drawtext@color,c
  2891  00FCBC  0E00               	movlw	0
  2892  00FCBE  6E2F               	movwf	drawtext@bg+1,c
  2893  00FCC0  0E00               	movlw	0
  2894  00FCC2  6E2E               	movwf	drawtext@bg,c
  2895  00FCC4  0E01               	movlw	1
  2896  00FCC6  6E30               	movwf	drawtext@size,c
  2897  00FCC8  0E03               	movlw	3
  2898  00FCCA  ECE4  F073         	call	_drawtext
  2899                           
  2900                           ;Lab7_sample_S3_F21.c: 245: strcpy(txt, "NSP NSLT EWP EWLT MR");
  2901  00FCCE  C06B  F001         	movff	_txt,strcpy@to
  2902  00FCD2  C06C  F002         	movff	_txt+1,strcpy@to+1
  2903  00FCD6  0E98               	movlw	low STR_12
  2904  00FCD8  6E03               	movwf	strcpy@from,c
  2905  00FCDA  0EFF               	movlw	high STR_12
  2906  00FCDC  6E04               	movwf	strcpy@from+1,c
  2907  00FCDE  ECE2  F06D         	call	_strcpy	;wreg free
  2908                           
  2909                           ;Lab7_sample_S3_F21.c: 246: drawtext(1, 140, txt, 0xFFFF, 0x0000, 1);
  2910  00FCE2  0E8C               	movlw	140
  2911  00FCE4  6E29               	movwf	drawtext@y,c
  2912  00FCE6  C06B  F02A         	movff	_txt,drawtext@_text
  2913  00FCEA  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  2914  00FCEE  0EFF               	movlw	255
  2915  00FCF0  6E2D               	movwf	drawtext@color+1,c
  2916  00FCF2  682C               	setf	drawtext@color,c
  2917  00FCF4  0E00               	movlw	0
  2918  00FCF6  6E2F               	movwf	drawtext@bg+1,c
  2919  00FCF8  0E00               	movlw	0
  2920  00FCFA  6E2E               	movwf	drawtext@bg,c
  2921  00FCFC  0E01               	movlw	1
  2922  00FCFE  6E30               	movwf	drawtext@size,c
  2923  00FD00  0E01               	movlw	1
  2924  00FD02  ECE4  F073         	call	_drawtext
  2925                           
  2926                           ;Lab7_sample_S3_F21.c: 247: drawtext(6, 140+9, SW_NSPED_Txt, 0xFFFF, 0x0000, 1);
  2927  00FD06  0E95               	movlw	149
  2928  00FD08  6E29               	movwf	drawtext@y,c
  2929  00FD0A  0E62               	movlw	low _SW_NSPED_Txt
  2930  00FD0C  6E2A               	movwf	drawtext@_text,c
  2931  00FD0E  0E00               	movlw	high _SW_NSPED_Txt
  2932  00FD10  6E2B               	movwf	drawtext@_text+1,c
  2933  00FD12  0EFF               	movlw	255
  2934  00FD14  6E2D               	movwf	drawtext@color+1,c
  2935  00FD16  682C               	setf	drawtext@color,c
  2936  00FD18  0E00               	movlw	0
  2937  00FD1A  6E2F               	movwf	drawtext@bg+1,c
  2938  00FD1C  0E00               	movlw	0
  2939  00FD1E  6E2E               	movwf	drawtext@bg,c
  2940  00FD20  0E01               	movlw	1
  2941  00FD22  6E30               	movwf	drawtext@size,c
  2942  00FD24  0E06               	movlw	6
  2943  00FD26  ECE4  F073         	call	_drawtext
  2944                           
  2945                           ;Lab7_sample_S3_F21.c: 248: drawtext(32, 140+9, SW_NSLT_Txt, 0xFFFF, 0x0000, 1);
  2946  00FD2A  0E95               	movlw	149
  2947  00FD2C  6E29               	movwf	drawtext@y,c
  2948  00FD2E  0E60               	movlw	low _SW_NSLT_Txt
  2949  00FD30  6E2A               	movwf	drawtext@_text,c
  2950  00FD32  0E00               	movlw	high _SW_NSLT_Txt
  2951  00FD34  6E2B               	movwf	drawtext@_text+1,c
  2952  00FD36  0EFF               	movlw	255
  2953  00FD38  6E2D               	movwf	drawtext@color+1,c
  2954  00FD3A  682C               	setf	drawtext@color,c
  2955  00FD3C  0E00               	movlw	0
  2956  00FD3E  6E2F               	movwf	drawtext@bg+1,c
  2957  00FD40  0E00               	movlw	0
  2958  00FD42  6E2E               	movwf	drawtext@bg,c
  2959  00FD44  0E01               	movlw	1
  2960  00FD46  6E30               	movwf	drawtext@size,c
  2961  00FD48  0E20               	movlw	32
  2962  00FD4A  ECE4  F073         	call	_drawtext
  2963                           
  2964                           ;Lab7_sample_S3_F21.c: 249: drawtext(58, 140+9, SW_EWPED_Txt, 0xFFFF, 0x0000, 1);
  2965  00FD4E  0E95               	movlw	149
  2966  00FD50  6E29               	movwf	drawtext@y,c
  2967  00FD52  0E5C               	movlw	low _SW_EWPED_Txt
  2968  00FD54  6E2A               	movwf	drawtext@_text,c
  2969  00FD56  0E00               	movlw	high _SW_EWPED_Txt
  2970  00FD58  6E2B               	movwf	drawtext@_text+1,c
  2971  00FD5A  0EFF               	movlw	255
  2972  00FD5C  6E2D               	movwf	drawtext@color+1,c
  2973  00FD5E  682C               	setf	drawtext@color,c
  2974  00FD60  0E00               	movlw	0
  2975  00FD62  6E2F               	movwf	drawtext@bg+1,c
  2976  00FD64  0E00               	movlw	0
  2977  00FD66  6E2E               	movwf	drawtext@bg,c
  2978  00FD68  0E01               	movlw	1
  2979  00FD6A  6E30               	movwf	drawtext@size,c
  2980  00FD6C  0E3A               	movlw	58
  2981  00FD6E  ECE4  F073         	call	_drawtext
  2982                           
  2983                           ;Lab7_sample_S3_F21.c: 250: drawtext(87, 140+9, SW_EWLT_Txt, 0xFFFF, 0x0000, 1);
  2984  00FD72  0E95               	movlw	149
  2985  00FD74  6E29               	movwf	drawtext@y,c
  2986  00FD76  0E5A               	movlw	low _SW_EWLT_Txt
  2987  00FD78  6E2A               	movwf	drawtext@_text,c
  2988  00FD7A  0E00               	movlw	high _SW_EWLT_Txt
  2989  00FD7C  6E2B               	movwf	drawtext@_text+1,c
  2990  00FD7E  0EFF               	movlw	255
  2991  00FD80  6E2D               	movwf	drawtext@color+1,c
  2992  00FD82  682C               	setf	drawtext@color,c
  2993  00FD84  0E00               	movlw	0
  2994  00FD86  6E2F               	movwf	drawtext@bg+1,c
  2995  00FD88  0E00               	movlw	0
  2996  00FD8A  6E2E               	movwf	drawtext@bg,c
  2997  00FD8C  0E01               	movlw	1
  2998  00FD8E  6E30               	movwf	drawtext@size,c
  2999  00FD90  0E57               	movlw	87
  3000  00FD92  ECE4  F073         	call	_drawtext
  3001                           
  3002                           ;Lab7_sample_S3_F21.c: 251: drawtext(112,140+9, SW_MODE_Txt, 0xFFFF, 0x0000, 1);
  3003  00FD96  0E95               	movlw	149
  3004  00FD98  6E29               	movwf	drawtext@y,c
  3005  00FD9A  0E5E               	movlw	low _SW_MODE_Txt
  3006  00FD9C  6E2A               	movwf	drawtext@_text,c
  3007  00FD9E  0E00               	movlw	high _SW_MODE_Txt
  3008  00FDA0  6E2B               	movwf	drawtext@_text+1,c
  3009  00FDA2  0EFF               	movlw	255
  3010  00FDA4  6E2D               	movwf	drawtext@color+1,c
  3011  00FDA6  682C               	setf	drawtext@color,c
  3012  00FDA8  0E00               	movlw	0
  3013  00FDAA  6E2F               	movwf	drawtext@bg+1,c
  3014  00FDAC  0E00               	movlw	0
  3015  00FDAE  6E2E               	movwf	drawtext@bg,c
  3016  00FDB0  0E01               	movlw	1
  3017  00FDB2  6E30               	movwf	drawtext@size,c
  3018  00FDB4  0E70               	movlw	112
  3019  00FDB6  ECE4  F073         	call	_drawtext
  3020  00FDBA  0012               	return		;funcret
  3021  00FDBC                     __end_of_Initialize_Screen:
  3022                           	opt stack 0
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           postdec1	equ	0xFE5
  3030                           fsr1l	equ	0xFE1
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _fillScreen *****************
  3034 ;; Defined at:
  3035 ;;		line 651 in file "ST7735_TFT.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  color           2   19[COMRAM] unsigned int 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;		None               void
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;Total ram usage:        2 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    4
  3056 ;; This function calls:
  3057 ;;		_fillRectangle
  3058 ;; This function is called by:
  3059 ;;		_Initialize_Screen
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text6
  3064  00DA7C                     __ptext6:
  3065                           	opt stack 0
  3066  00DA7C                     _fillScreen:
  3067                           	opt stack 25
  3068                           
  3069                           ;ST7735_TFT.c: 653: fillRectangle(0, 0, 128, 160, color);
  3070                           
  3071                           ;incstack = 0
  3072  00DA7C  0E00               	movlw	0
  3073  00DA7E  6E08               	movwf	fillRectangle@y,c
  3074  00DA80  0E80               	movlw	128
  3075  00DA82  6E09               	movwf	fillRectangle@w,c
  3076  00DA84  0EA0               	movlw	160
  3077  00DA86  6E0A               	movwf	fillRectangle@h,c
  3078  00DA88  C014  F00B         	movff	fillScreen@color,fillRectangle@color
  3079  00DA8C  C015  F00C         	movff	fillScreen@color+1,fillRectangle@color+1
  3080  00DA90  0E00               	movlw	0
  3081  00DA92  EC76  F073         	call	_fillRectangle
  3082  00DA96  0012               	return		;funcret
  3083  00DA98                     __end_of_fillScreen:
  3084                           	opt stack 0
  3085                           tblptru	equ	0xFF8
  3086                           tblptrh	equ	0xFF7
  3087                           tblptrl	equ	0xFF6
  3088                           tablat	equ	0xFF5
  3089                           postinc0	equ	0xFEE
  3090                           wreg	equ	0xFE8
  3091                           postdec1	equ	0xFE5
  3092                           fsr1l	equ	0xFE1
  3093                           status	equ	0xFD8
  3094                           
  3095 ;; *************** function _fillRectangle *****************
  3096 ;; Defined at:
  3097 ;;		line 535 in file "ST7735_TFT.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  x               1    wreg     unsigned char 
  3100 ;;  y               1    7[COMRAM] unsigned char 
  3101 ;;  w               1    8[COMRAM] unsigned char 
  3102 ;;  h               1    9[COMRAM] unsigned char 
  3103 ;;  color           2   10[COMRAM] unsigned int 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  x               1   18[COMRAM] unsigned char 
  3106 ;;  lo              1   17[COMRAM] unsigned char 
  3107 ;;  hi              1   16[COMRAM] unsigned char 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;		None               void
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3117 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;Total ram usage:       12 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    3
  3124 ;; This function calls:
  3125 ;;		_setAddrWindow
  3126 ;;		_spiwrite
  3127 ;; This function is called by:
  3128 ;;		_fillScreen
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text7
  3133  00E6EC                     __ptext7:
  3134                           	opt stack 0
  3135  00E6EC                     _fillRectangle:
  3136                           	opt stack 25
  3137                           
  3138                           ;incstack = 0
  3139                           ;fillRectangle@x stored from wreg
  3140  00E6EC  6E13               	movwf	fillRectangle@x,c
  3141                           
  3142                           ;ST7735_TFT.c: 537: unsigned char hi, lo;
  3143                           ;ST7735_TFT.c: 538: if((x >= 128) || (y >= 160))
  3144  00E6EE  0E80               	movlw	128
  3145  00E6F0  6013               	cpfslt	fillRectangle@x,c
  3146  00E6F2  D069               	goto	l226
  3147  00E6F4  0E9F               	movlw	159
  3148  00E6F6  6408               	cpfsgt	fillRectangle@y,c
  3149  00E6F8  D001               	goto	l3159
  3150                           
  3151                           ;ST7735_TFT.c: 539: return;
  3152  00E6FA  D065               	goto	l226
  3153  00E6FC                     l3159:
  3154                           
  3155                           ;ST7735_TFT.c: 540: if((x + w - 1) >= 128)
  3156  00E6FC  0EFF               	movlw	255
  3157  00E6FE  6E0D               	movwf	??_fillRectangle& (0+255),c
  3158  00E700  0EFF               	movlw	255
  3159  00E702  6E0E               	movwf	(??_fillRectangle+1)& (0+255),c
  3160  00E704  5009               	movf	fillRectangle@w,w,c
  3161  00E706  C013  F00F         	movff	fillRectangle@x,??_fillRectangle+2
  3162  00E70A  6A10               	clrf	(??_fillRectangle+3)& (0+255),c
  3163  00E70C  260F               	addwf	??_fillRectangle+2,f,c
  3164  00E70E  0E00               	movlw	0
  3165  00E710  2210               	addwfc	??_fillRectangle+3,f,c
  3166  00E712  500D               	movf	??_fillRectangle,w,c
  3167  00E714  260F               	addwf	??_fillRectangle+2,f,c
  3168  00E716  500E               	movf	??_fillRectangle+1,w,c
  3169  00E718  2210               	addwfc	??_fillRectangle+3,f,c
  3170  00E71A  BE10               	btfsc	??_fillRectangle+3,7,c
  3171  00E71C  D00A               	goto	l227
  3172  00E71E  5010               	movf	??_fillRectangle+3,w,c
  3173  00E720  E104               	bnz	u2030
  3174  00E722  0E80               	movlw	128
  3175  00E724  5C0F               	subwf	??_fillRectangle+2,w,c
  3176  00E726  A0D8               	btfss	status,0,c
  3177  00E728  D004               	goto	l227
  3178  00E72A                     u2030:
  3179                           
  3180                           ;ST7735_TFT.c: 541: w = 128 - x;
  3181  00E72A  5013               	movf	fillRectangle@x,w,c
  3182  00E72C  0800               	sublw	0
  3183  00E72E  0F80               	addlw	128
  3184  00E730  6E09               	movwf	fillRectangle@w,c
  3185  00E732                     l227:
  3186                           
  3187                           ;ST7735_TFT.c: 542: if((y + h - 1) >= 160)
  3188  00E732  0EFF               	movlw	255
  3189  00E734  6E0D               	movwf	??_fillRectangle& (0+255),c
  3190  00E736  0EFF               	movlw	255
  3191  00E738  6E0E               	movwf	(??_fillRectangle+1)& (0+255),c
  3192  00E73A  500A               	movf	fillRectangle@h,w,c
  3193  00E73C  C008  F00F         	movff	fillRectangle@y,??_fillRectangle+2
  3194  00E740  6A10               	clrf	(??_fillRectangle+3)& (0+255),c
  3195  00E742  260F               	addwf	??_fillRectangle+2,f,c
  3196  00E744  0E00               	movlw	0
  3197  00E746  2210               	addwfc	??_fillRectangle+3,f,c
  3198  00E748  500D               	movf	??_fillRectangle,w,c
  3199  00E74A  260F               	addwf	??_fillRectangle+2,f,c
  3200  00E74C  500E               	movf	??_fillRectangle+1,w,c
  3201  00E74E  2210               	addwfc	??_fillRectangle+3,f,c
  3202  00E750  BE10               	btfsc	??_fillRectangle+3,7,c
  3203  00E752  D00B               	goto	l3165
  3204  00E754  5010               	movf	??_fillRectangle+3,w,c
  3205  00E756  E104               	bnz	u2040
  3206  00E758  0EA0               	movlw	160
  3207  00E75A  5C0F               	subwf	??_fillRectangle+2,w,c
  3208  00E75C  A0D8               	btfss	status,0,c
  3209  00E75E  D005               	goto	l3165
  3210  00E760                     u2040:
  3211                           
  3212                           ;ST7735_TFT.c: 543: h = 160 - y;
  3213  00E760  5008               	movf	fillRectangle@y,w,c
  3214  00E762  0800               	sublw	0
  3215  00E764  0FA0               	addlw	160
  3216  00E766  6E0A               	movwf	fillRectangle@h,c
  3217  00E768  D000               	goto	l3165
  3218  00E76A                     l3165:
  3219                           
  3220                           ;ST7735_TFT.c: 544: setAddrWindow(x, y, x+w-1, y+h-1);
  3221  00E76A  C008  F004         	movff	fillRectangle@y,setAddrWindow@y0
  3222  00E76E  5013               	movf	fillRectangle@x,w,c
  3223  00E770  2409               	addwf	fillRectangle@w,w,c
  3224  00E772  6E0D               	movwf	??_fillRectangle& (0+255),c
  3225  00E774  040D               	decf	??_fillRectangle,w,c
  3226  00E776  6E05               	movwf	setAddrWindow@x1,c
  3227  00E778  5008               	movf	fillRectangle@y,w,c
  3228  00E77A  240A               	addwf	fillRectangle@h,w,c
  3229  00E77C  6E0E               	movwf	(??_fillRectangle+1)& (0+255),c
  3230  00E77E  040E               	decf	??_fillRectangle+1,w,c
  3231  00E780  6E06               	movwf	setAddrWindow@y1,c
  3232  00E782  5013               	movf	fillRectangle@x,w,c
  3233  00E784  EC25  F06F         	call	_setAddrWindow
  3234                           
  3235                           ;ST7735_TFT.c: 545: hi = color >> 8; lo = color;
  3236  00E788  500C               	movf	fillRectangle@color+1,w,c
  3237  00E78A  6E11               	movwf	fillRectangle@hi,c
  3238  00E78C  C00B  F012         	movff	fillRectangle@color,fillRectangle@lo
  3239                           
  3240                           ;ST7735_TFT.c: 546: PORTDbits.RD3 = 1;
  3241  00E790  8683               	bsf	3971,3,c	;volatile
  3242                           
  3243                           ;ST7735_TFT.c: 547: PORTDbits.RD4 = 0;
  3244  00E792  9883               	bcf	3971,4,c	;volatile
  3245                           
  3246                           ;ST7735_TFT.c: 549: for(y=h; y>0; y--) {
  3247  00E794  C00A  F008         	movff	fillRectangle@h,fillRectangle@y
  3248  00E798                     l3177:
  3249  00E798  5008               	movf	fillRectangle@y,w,c
  3250  00E79A  B4D8               	btfsc	status,2,c
  3251  00E79C  D013               	goto	l230
  3252  00E79E  D001               	goto	l229
  3253  00E7A0  D011               	goto	l230
  3254  00E7A2                     l229:
  3255                           
  3256                           ;ST7735_TFT.c: 550: for(x = w; x > 0; x--) {
  3257  00E7A2  C009  F013         	movff	fillRectangle@w,fillRectangle@x
  3258  00E7A6                     l3181:
  3259  00E7A6  5013               	movf	fillRectangle@x,w,c
  3260  00E7A8  B4D8               	btfsc	status,2,c
  3261  00E7AA  D00A               	goto	l3191
  3262  00E7AC  D001               	goto	l3185
  3263  00E7AE  D008               	goto	l3191
  3264  00E7B0                     l3185:
  3265                           
  3266                           ;ST7735_TFT.c: 551: spiwrite(hi);
  3267  00E7B0  5011               	movf	fillRectangle@hi,w,c
  3268  00E7B2  EC08  F06D         	call	_spiwrite
  3269                           
  3270                           ;ST7735_TFT.c: 552: spiwrite(lo);
  3271  00E7B6  5012               	movf	fillRectangle@lo,w,c
  3272  00E7B8  EC08  F06D         	call	_spiwrite
  3273  00E7BC  0613               	decf	fillRectangle@x,f,c
  3274  00E7BE  D7F3               	goto	l3181
  3275  00E7C0                     l3191:
  3276  00E7C0  0608               	decf	fillRectangle@y,f,c
  3277  00E7C2  D7EA               	goto	l3177
  3278  00E7C4                     l230:
  3279                           
  3280                           ;ST7735_TFT.c: 553: }
  3281                           ;ST7735_TFT.c: 554: }
  3282                           ;ST7735_TFT.c: 555: PORTDbits.RD4 = 1;
  3283  00E7C4  8883               	bsf	3971,4,c	;volatile
  3284  00E7C6                     l226:
  3285  00E7C6  0012               	return		;funcret
  3286  00E7C8                     __end_of_fillRectangle:
  3287                           	opt stack 0
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postdec1	equ	0xFE5
  3295                           fsr1l	equ	0xFE1
  3296                           status	equ	0xFD8
  3297                           
  3298 ;; *************** function _drawRect *****************
  3299 ;; Defined at:
  3300 ;;		line 717 in file "ST7735_TFT.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  x               2   18[COMRAM] unsigned int 
  3303 ;;  y               2   20[COMRAM] unsigned int 
  3304 ;;  w               2   22[COMRAM] unsigned int 
  3305 ;;  h               2   24[COMRAM] unsigned int 
  3306 ;;  color           2   26[COMRAM] unsigned int 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;		None               void
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3318 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;Total ram usage:       11 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    4
  3325 ;; This function calls:
  3326 ;;		_drawFastHLine
  3327 ;;		_drawFastVLine
  3328 ;; This function is called by:
  3329 ;;		_Initialize_Screen
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text8
  3334  00DF3C                     __ptext8:
  3335                           	opt stack 0
  3336  00DF3C                     _drawRect:
  3337                           	opt stack 25
  3338                           
  3339                           ;ST7735_TFT.c: 719: drawFastHLine(x, y, w, color);
  3340                           
  3341                           ;incstack = 0
  3342  00DF3C  C015  F008         	movff	drawRect@y,drawFastHLine@y
  3343  00DF40  C017  F009         	movff	drawRect@w,drawFastHLine@w
  3344  00DF44  C01B  F00A         	movff	drawRect@color,drawFastHLine@color
  3345  00DF48  C01C  F00B         	movff	drawRect@color+1,drawFastHLine@color+1
  3346  00DF4C  5013               	movf	drawRect@x,w,c
  3347  00DF4E  ECCF  F070         	call	_drawFastHLine
  3348                           
  3349                           ;ST7735_TFT.c: 720: drawFastHLine(x, y + h - 1, w, color);
  3350  00DF52  5015               	movf	drawRect@y,w,c
  3351  00DF54  2419               	addwf	drawRect@h,w,c
  3352  00DF56  6E1D               	movwf	??_drawRect& (0+255),c
  3353  00DF58  041D               	decf	??_drawRect,w,c
  3354  00DF5A  6E08               	movwf	drawFastHLine@y,c
  3355  00DF5C  C017  F009         	movff	drawRect@w,drawFastHLine@w
  3356  00DF60  C01B  F00A         	movff	drawRect@color,drawFastHLine@color
  3357  00DF64  C01C  F00B         	movff	drawRect@color+1,drawFastHLine@color+1
  3358  00DF68  5013               	movf	drawRect@x,w,c
  3359  00DF6A  ECCF  F070         	call	_drawFastHLine
  3360                           
  3361                           ;ST7735_TFT.c: 721: drawFastVLine(x, y, h, color);
  3362  00DF6E  C015  F008         	movff	drawRect@y,drawFastVLine@y
  3363  00DF72  C019  F009         	movff	drawRect@h,drawFastVLine@h
  3364  00DF76  C01B  F00A         	movff	drawRect@color,drawFastVLine@color
  3365  00DF7A  C01C  F00B         	movff	drawRect@color+1,drawFastVLine@color+1
  3366  00DF7E  5013               	movf	drawRect@x,w,c
  3367  00DF80  EC8B  F070         	call	_drawFastVLine
  3368                           
  3369                           ;ST7735_TFT.c: 722: drawFastVLine(x + w - 1, y, h, color);
  3370  00DF84  C015  F008         	movff	drawRect@y,drawFastVLine@y
  3371  00DF88  C019  F009         	movff	drawRect@h,drawFastVLine@h
  3372  00DF8C  C01B  F00A         	movff	drawRect@color,drawFastVLine@color
  3373  00DF90  C01C  F00B         	movff	drawRect@color+1,drawFastVLine@color+1
  3374  00DF94  5013               	movf	drawRect@x,w,c
  3375  00DF96  2417               	addwf	drawRect@w,w,c
  3376  00DF98  6E1D               	movwf	??_drawRect& (0+255),c
  3377  00DF9A  041D               	decf	??_drawRect,w,c
  3378  00DF9C  EC8B  F070         	call	_drawFastVLine
  3379  00DFA0  0012               	return		;funcret
  3380  00DFA2                     __end_of_drawRect:
  3381                           	opt stack 0
  3382                           tblptru	equ	0xFF8
  3383                           tblptrh	equ	0xFF7
  3384                           tblptrl	equ	0xFF6
  3385                           tablat	equ	0xFF5
  3386                           postinc0	equ	0xFEE
  3387                           wreg	equ	0xFE8
  3388                           postdec1	equ	0xFE5
  3389                           fsr1l	equ	0xFE1
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function _drawFastHLine *****************
  3393 ;; Defined at:
  3394 ;;		line 656 in file "ST7735_TFT.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  x               1    wreg     unsigned char 
  3397 ;;  y               1    7[COMRAM] unsigned char 
  3398 ;;  w               1    8[COMRAM] unsigned char 
  3399 ;;  color           2    9[COMRAM] unsigned int 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  x               1   17[COMRAM] unsigned char 
  3402 ;;  lo              1   16[COMRAM] unsigned char 
  3403 ;;  hi              1   15[COMRAM] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:       11 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    3
  3420 ;; This function calls:
  3421 ;;		_setAddrWindow
  3422 ;;		_spiwrite
  3423 ;; This function is called by:
  3424 ;;		_drawRect
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text9
  3429  00E19E                     __ptext9:
  3430                           	opt stack 0
  3431  00E19E                     _drawFastHLine:
  3432                           	opt stack 25
  3433                           
  3434                           ;incstack = 0
  3435                           ;drawFastHLine@x stored from wreg
  3436  00E19E  6E12               	movwf	drawFastHLine@x,c
  3437                           
  3438                           ;ST7735_TFT.c: 658: unsigned char hi, lo;
  3439                           ;ST7735_TFT.c: 659: if((x >= 128) || (y >= 160))
  3440  00E1A0  0E80               	movlw	128
  3441  00E1A2  6012               	cpfslt	drawFastHLine@x,c
  3442  00E1A4  D03F               	goto	l271
  3443  00E1A6  0E9F               	movlw	159
  3444  00E1A8  6408               	cpfsgt	drawFastHLine@y,c
  3445  00E1AA  D001               	goto	l3199
  3446                           
  3447                           ;ST7735_TFT.c: 660: return;
  3448  00E1AC  D03B               	goto	l271
  3449  00E1AE                     l3199:
  3450                           
  3451                           ;ST7735_TFT.c: 661: if((x + w - 1) >= 128)
  3452  00E1AE  0EFF               	movlw	255
  3453  00E1B0  6E0C               	movwf	??_drawFastHLine& (0+255),c
  3454  00E1B2  0EFF               	movlw	255
  3455  00E1B4  6E0D               	movwf	(??_drawFastHLine+1)& (0+255),c
  3456  00E1B6  5009               	movf	drawFastHLine@w,w,c
  3457  00E1B8  C012  F00E         	movff	drawFastHLine@x,??_drawFastHLine+2
  3458  00E1BC  6A0F               	clrf	(??_drawFastHLine+3)& (0+255),c
  3459  00E1BE  260E               	addwf	??_drawFastHLine+2,f,c
  3460  00E1C0  0E00               	movlw	0
  3461  00E1C2  220F               	addwfc	??_drawFastHLine+3,f,c
  3462  00E1C4  500C               	movf	??_drawFastHLine,w,c
  3463  00E1C6  260E               	addwf	??_drawFastHLine+2,f,c
  3464  00E1C8  500D               	movf	??_drawFastHLine+1,w,c
  3465  00E1CA  220F               	addwfc	??_drawFastHLine+3,f,c
  3466  00E1CC  BE0F               	btfsc	??_drawFastHLine+3,7,c
  3467  00E1CE  D00B               	goto	l3203
  3468  00E1D0  500F               	movf	??_drawFastHLine+3,w,c
  3469  00E1D2  E104               	bnz	u2110
  3470  00E1D4  0E80               	movlw	128
  3471  00E1D6  5C0E               	subwf	??_drawFastHLine+2,w,c
  3472  00E1D8  A0D8               	btfss	status,0,c
  3473  00E1DA  D005               	goto	l3203
  3474  00E1DC                     u2110:
  3475                           
  3476                           ;ST7735_TFT.c: 662: w = 128 - x;
  3477  00E1DC  5012               	movf	drawFastHLine@x,w,c
  3478  00E1DE  0800               	sublw	0
  3479  00E1E0  0F80               	addlw	128
  3480  00E1E2  6E09               	movwf	drawFastHLine@w,c
  3481  00E1E4  D000               	goto	l3203
  3482  00E1E6                     l3203:
  3483                           
  3484                           ;ST7735_TFT.c: 663: hi = color >> 8; lo = color;
  3485  00E1E6  500B               	movf	drawFastHLine@color+1,w,c
  3486  00E1E8  6E10               	movwf	drawFastHLine@hi,c
  3487  00E1EA  C00A  F011         	movff	drawFastHLine@color,drawFastHLine@lo
  3488                           
  3489                           ;ST7735_TFT.c: 664: setAddrWindow(x, y, x + w - 1, y);
  3490  00E1EE  C008  F004         	movff	drawFastHLine@y,setAddrWindow@y0
  3491  00E1F2  5012               	movf	drawFastHLine@x,w,c
  3492  00E1F4  2409               	addwf	drawFastHLine@w,w,c
  3493  00E1F6  6E0C               	movwf	??_drawFastHLine& (0+255),c
  3494  00E1F8  040C               	decf	??_drawFastHLine,w,c
  3495  00E1FA  6E05               	movwf	setAddrWindow@x1,c
  3496  00E1FC  C008  F006         	movff	drawFastHLine@y,setAddrWindow@y1
  3497  00E200  5012               	movf	drawFastHLine@x,w,c
  3498  00E202  EC25  F06F         	call	_setAddrWindow
  3499                           
  3500                           ;ST7735_TFT.c: 665: PORTDbits.RD3 = 1;
  3501  00E206  8683               	bsf	3971,3,c	;volatile
  3502                           
  3503                           ;ST7735_TFT.c: 666: PORTDbits.RD4 = 0;
  3504  00E208  9883               	bcf	3971,4,c	;volatile
  3505                           
  3506                           ;ST7735_TFT.c: 668: while (w--) {
  3507  00E20A  D007               	goto	l3215
  3508  00E20C                     l3213:
  3509                           
  3510                           ;ST7735_TFT.c: 669: spiwrite(hi);
  3511  00E20C  5010               	movf	drawFastHLine@hi,w,c
  3512  00E20E  EC08  F06D         	call	_spiwrite
  3513                           
  3514                           ;ST7735_TFT.c: 670: spiwrite(lo);
  3515  00E212  5011               	movf	drawFastHLine@lo,w,c
  3516  00E214  EC08  F06D         	call	_spiwrite
  3517  00E218  D000               	goto	l3215
  3518  00E21A                     l3215:
  3519  00E21A  0609               	decf	drawFastHLine@w,f,c
  3520  00E21C  2809               	incf	drawFastHLine@w,w,c
  3521  00E21E  A4D8               	btfss	status,2,c
  3522  00E220  D7F5               	goto	l3213
  3523                           
  3524                           ;ST7735_TFT.c: 671: }
  3525                           ;ST7735_TFT.c: 672: PORTDbits.RD4 = 1;
  3526  00E222  8883               	bsf	3971,4,c	;volatile
  3527  00E224                     l271:
  3528  00E224  0012               	return		;funcret
  3529  00E226                     __end_of_drawFastHLine:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           postdec1	equ	0xFE5
  3538                           fsr1l	equ	0xFE1
  3539                           status	equ	0xFD8
  3540                           
  3541 ;; *************** function _TFT_GreenTab_Initialize *****************
  3542 ;; Defined at:
  3543 ;;		line 676 in file "ST7735_TFT.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;		None               void
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    3
  3564 ;; This function calls:
  3565 ;;		_Rcmd1
  3566 ;;		_Rcmd2red
  3567 ;;		_Rcmd3
  3568 ;;		_write_command
  3569 ;;		_write_data
  3570 ;; This function is called by:
  3571 ;;		_Initialize_Screen
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text10
  3576  00DB0A                     __ptext10:
  3577                           	opt stack 0
  3578  00DB0A                     _TFT_GreenTab_Initialize:
  3579                           	opt stack 26
  3580                           
  3581                           ;ST7735_TFT.c: 678: PORTDbits.RD4 = 1;
  3582                           
  3583                           ;incstack = 0
  3584  00DB0A  8883               	bsf	3971,4,c	;volatile
  3585                           
  3586                           ;ST7735_TFT.c: 679: PORTDbits.RD3 = 0;
  3587  00DB0C  9683               	bcf	3971,3,c	;volatile
  3588                           
  3589                           ;ST7735_TFT.c: 681: SSPSTAT=0x80;
  3590  00DB0E  0E80               	movlw	128
  3591  00DB10  6EC7               	movwf	4039,c	;volatile
  3592                           
  3593                           ;ST7735_TFT.c: 682: SSPCON1=0x30;
  3594  00DB12  0E30               	movlw	48
  3595  00DB14  6EC6               	movwf	4038,c	;volatile
  3596                           
  3597                           ;ST7735_TFT.c: 685: Rcmd1();
  3598  00DB16  EC3D  F075         	call	_Rcmd1	;wreg free
  3599                           
  3600                           ;ST7735_TFT.c: 686: Rcmd2red();
  3601  00DB1A  EC38  F06E         	call	_Rcmd2red	;wreg free
  3602                           
  3603                           ;ST7735_TFT.c: 687: Rcmd3();
  3604  00DB1E  ECC4  F074         	call	_Rcmd3	;wreg free
  3605                           
  3606                           ;ST7735_TFT.c: 688: write_command(0x36);
  3607  00DB22  0E36               	movlw	54
  3608  00DB24  ECE6  F06C         	call	_write_command
  3609                           
  3610                           ;ST7735_TFT.c: 689: write_data(0xC0);
  3611  00DB28  0EC0               	movlw	192
  3612  00DB2A  ECEE  F06C         	call	_write_data
  3613                           
  3614                           ;ST7735_TFT.c: 690: _tft_type = 1;
  3615  00DB2E  0E01               	movlw	1
  3616  00DB30  6E76               	movwf	__tft_type,c
  3617  00DB32  0012               	return		;funcret
  3618  00DB34                     __end_of_TFT_GreenTab_Initialize:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           postdec1	equ	0xFE5
  3627                           fsr1l	equ	0xFE1
  3628                           status	equ	0xFD8
  3629                           
  3630 ;; *************** function _Rcmd3 *****************
  3631 ;; Defined at:
  3632 ;;		line 370 in file "ST7735_TFT.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;		None               void
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    2
  3653 ;; This function calls:
  3654 ;;		_delay_ms
  3655 ;;		_write_command
  3656 ;;		_write_data
  3657 ;; This function is called by:
  3658 ;;		_TFT_GreenTab_Initialize
  3659 ;;		_TFT_BlackTab_Initialize
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text11
  3664  00E988                     __ptext11:
  3665                           	opt stack 0
  3666  00E988                     _Rcmd3:
  3667                           	opt stack 26
  3668                           
  3669                           ;ST7735_TFT.c: 372: write_command(0xE0);
  3670                           
  3671                           ;incstack = 0
  3672  00E988  0EE0               	movlw	224
  3673  00E98A  ECE6  F06C         	call	_write_command
  3674                           
  3675                           ;ST7735_TFT.c: 373: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
  3676  00E98E  0E02               	movlw	2
  3677  00E990  ECEE  F06C         	call	_write_data
  3678  00E994  0E1C               	movlw	28
  3679  00E996  ECEE  F06C         	call	_write_data
  3680  00E99A  0E07               	movlw	7
  3681  00E99C  ECEE  F06C         	call	_write_data
  3682  00E9A0  0E12               	movlw	18
  3683  00E9A2  ECEE  F06C         	call	_write_data
  3684                           
  3685                           ;ST7735_TFT.c: 374: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
  3686  00E9A6  0E37               	movlw	55
  3687  00E9A8  ECEE  F06C         	call	_write_data
  3688  00E9AC  0E32               	movlw	50
  3689  00E9AE  ECEE  F06C         	call	_write_data
  3690  00E9B2  0E29               	movlw	41
  3691  00E9B4  ECEE  F06C         	call	_write_data
  3692  00E9B8  0E2D               	movlw	45
  3693  00E9BA  ECEE  F06C         	call	_write_data
  3694                           
  3695                           ;ST7735_TFT.c: 375: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
  3696  00E9BE  0E29               	movlw	41
  3697  00E9C0  ECEE  F06C         	call	_write_data
  3698  00E9C4  0E25               	movlw	37
  3699  00E9C6  ECEE  F06C         	call	_write_data
  3700  00E9CA  0E2B               	movlw	43
  3701  00E9CC  ECEE  F06C         	call	_write_data
  3702  00E9D0  0E39               	movlw	57
  3703  00E9D2  ECEE  F06C         	call	_write_data
  3704                           
  3705                           ;ST7735_TFT.c: 376: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
  3706  00E9D6  0E00               	movlw	0
  3707  00E9D8  ECEE  F06C         	call	_write_data
  3708  00E9DC  0E01               	movlw	1
  3709  00E9DE  ECEE  F06C         	call	_write_data
  3710  00E9E2  0E03               	movlw	3
  3711  00E9E4  ECEE  F06C         	call	_write_data
  3712  00E9E8  0E10               	movlw	16
  3713  00E9EA  ECEE  F06C         	call	_write_data
  3714                           
  3715                           ;ST7735_TFT.c: 377: write_command(0xE1);
  3716  00E9EE  0EE1               	movlw	225
  3717  00E9F0  ECE6  F06C         	call	_write_command
  3718                           
  3719                           ;ST7735_TFT.c: 378: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
  3720  00E9F4  0E03               	movlw	3
  3721  00E9F6  ECEE  F06C         	call	_write_data
  3722  00E9FA  0E1D               	movlw	29
  3723  00E9FC  ECEE  F06C         	call	_write_data
  3724  00EA00  0E07               	movlw	7
  3725  00EA02  ECEE  F06C         	call	_write_data
  3726  00EA06  0E06               	movlw	6
  3727  00EA08  ECEE  F06C         	call	_write_data
  3728                           
  3729                           ;ST7735_TFT.c: 379: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
  3730  00EA0C  0E2E               	movlw	46
  3731  00EA0E  ECEE  F06C         	call	_write_data
  3732  00EA12  0E2C               	movlw	44
  3733  00EA14  ECEE  F06C         	call	_write_data
  3734  00EA18  0E29               	movlw	41
  3735  00EA1A  ECEE  F06C         	call	_write_data
  3736  00EA1E  0E2D               	movlw	45
  3737  00EA20  ECEE  F06C         	call	_write_data
  3738                           
  3739                           ;ST7735_TFT.c: 380: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
  3740  00EA24  0E2E               	movlw	46
  3741  00EA26  ECEE  F06C         	call	_write_data
  3742  00EA2A  0E2E               	movlw	46
  3743  00EA2C  ECEE  F06C         	call	_write_data
  3744  00EA30  0E37               	movlw	55
  3745  00EA32  ECEE  F06C         	call	_write_data
  3746  00EA36  0E3F               	movlw	63
  3747  00EA38  ECEE  F06C         	call	_write_data
  3748                           
  3749                           ;ST7735_TFT.c: 381: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
  3750  00EA3C  0E00               	movlw	0
  3751  00EA3E  ECEE  F06C         	call	_write_data
  3752  00EA42  0E00               	movlw	0
  3753  00EA44  ECEE  F06C         	call	_write_data
  3754  00EA48  0E02               	movlw	2
  3755  00EA4A  ECEE  F06C         	call	_write_data
  3756  00EA4E  0E10               	movlw	16
  3757  00EA50  ECEE  F06C         	call	_write_data
  3758                           
  3759                           ;ST7735_TFT.c: 382: write_command(0x13);
  3760  00EA54  0E13               	movlw	19
  3761  00EA56  ECE6  F06C         	call	_write_command
  3762                           
  3763                           ;ST7735_TFT.c: 383: delay_ms(10);
  3764  00EA5A  0E00               	movlw	0
  3765  00EA5C  6E08               	movwf	delay_ms@ms+1,c
  3766  00EA5E  0E0A               	movlw	10
  3767  00EA60  6E07               	movwf	delay_ms@ms,c
  3768  00EA62  EC75  F06F         	call	_delay_ms	;wreg free
  3769                           
  3770                           ;ST7735_TFT.c: 384: write_command(0x29);
  3771  00EA66  0E29               	movlw	41
  3772  00EA68  ECE6  F06C         	call	_write_command
  3773                           
  3774                           ;ST7735_TFT.c: 385: delay_ms(100);
  3775  00EA6C  0E00               	movlw	0
  3776  00EA6E  6E08               	movwf	delay_ms@ms+1,c
  3777  00EA70  0E64               	movlw	100
  3778  00EA72  6E07               	movwf	delay_ms@ms,c
  3779  00EA74  EC75  F06F         	call	_delay_ms	;wreg free
  3780  00EA78  0012               	return		;funcret
  3781  00EA7A                     __end_of_Rcmd3:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           postdec1	equ	0xFE5
  3790                           fsr1l	equ	0xFE1
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _Rcmd2red *****************
  3794 ;; Defined at:
  3795 ;;		line 360 in file "ST7735_TFT.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;		None               void
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		_write_command
  3818 ;;		_write_data
  3819 ;; This function is called by:
  3820 ;;		_TFT_GreenTab_Initialize
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text12
  3825  00DC70                     __ptext12:
  3826                           	opt stack 0
  3827  00DC70                     _Rcmd2red:
  3828                           	opt stack 26
  3829                           
  3830                           ;ST7735_TFT.c: 362: write_command(0x2A);
  3831                           
  3832                           ;incstack = 0
  3833  00DC70  0E2A               	movlw	42
  3834  00DC72  ECE6  F06C         	call	_write_command
  3835                           
  3836                           ;ST7735_TFT.c: 363: write_data(0x00); write_data(0x00);
  3837  00DC76  0E00               	movlw	0
  3838  00DC78  ECEE  F06C         	call	_write_data
  3839  00DC7C  0E00               	movlw	0
  3840  00DC7E  ECEE  F06C         	call	_write_data
  3841                           
  3842                           ;ST7735_TFT.c: 364: write_data(0x00); write_data(0x7F);
  3843  00DC82  0E00               	movlw	0
  3844  00DC84  ECEE  F06C         	call	_write_data
  3845  00DC88  0E7F               	movlw	127
  3846  00DC8A  ECEE  F06C         	call	_write_data
  3847                           
  3848                           ;ST7735_TFT.c: 365: write_command(0x2B);
  3849  00DC8E  0E2B               	movlw	43
  3850  00DC90  ECE6  F06C         	call	_write_command
  3851                           
  3852                           ;ST7735_TFT.c: 366: write_data(0x00); write_data(0x00);
  3853  00DC94  0E00               	movlw	0
  3854  00DC96  ECEE  F06C         	call	_write_data
  3855  00DC9A  0E00               	movlw	0
  3856  00DC9C  ECEE  F06C         	call	_write_data
  3857                           
  3858                           ;ST7735_TFT.c: 367: write_data(0x00); write_data(0x9F);
  3859  00DCA0  0E00               	movlw	0
  3860  00DCA2  ECEE  F06C         	call	_write_data
  3861  00DCA6  0E9F               	movlw	159
  3862  00DCA8  ECEE  F06C         	call	_write_data
  3863  00DCAC  0012               	return		;funcret
  3864  00DCAE                     __end_of_Rcmd2red:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           postdec1	equ	0xFE5
  3873                           fsr1l	equ	0xFE1
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function _Rcmd1 *****************
  3877 ;; Defined at:
  3878 ;;		line 313 in file "ST7735_TFT.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;		None               void
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    2
  3899 ;; This function calls:
  3900 ;;		_delay_ms
  3901 ;;		_write_command
  3902 ;;		_write_data
  3903 ;; This function is called by:
  3904 ;;		_TFT_GreenTab_Initialize
  3905 ;;		_TFT_BlackTab_Initialize
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text13
  3910  00EA7A                     __ptext13:
  3911                           	opt stack 0
  3912  00EA7A                     _Rcmd1:
  3913                           	opt stack 26
  3914                           
  3915                           ;ST7735_TFT.c: 315: write_command(0x01);
  3916                           
  3917                           ;incstack = 0
  3918  00EA7A  0E01               	movlw	1
  3919  00EA7C  ECE6  F06C         	call	_write_command
  3920                           
  3921                           ;ST7735_TFT.c: 316: delay_ms(150);
  3922  00EA80  0E00               	movlw	0
  3923  00EA82  6E08               	movwf	delay_ms@ms+1,c
  3924  00EA84  0E96               	movlw	150
  3925  00EA86  6E07               	movwf	delay_ms@ms,c
  3926  00EA88  EC75  F06F         	call	_delay_ms	;wreg free
  3927                           
  3928                           ;ST7735_TFT.c: 317: write_command(0x11);
  3929  00EA8C  0E11               	movlw	17
  3930  00EA8E  ECE6  F06C         	call	_write_command
  3931                           
  3932                           ;ST7735_TFT.c: 318: delay_ms(500);
  3933  00EA92  0E01               	movlw	1
  3934  00EA94  6E08               	movwf	delay_ms@ms+1,c
  3935  00EA96  0EF4               	movlw	244
  3936  00EA98  6E07               	movwf	delay_ms@ms,c
  3937  00EA9A  EC75  F06F         	call	_delay_ms	;wreg free
  3938                           
  3939                           ;ST7735_TFT.c: 319: write_command(0xB1);
  3940  00EA9E  0EB1               	movlw	177
  3941  00EAA0  ECE6  F06C         	call	_write_command
  3942                           
  3943                           ;ST7735_TFT.c: 320: write_data(0x01);
  3944  00EAA4  0E01               	movlw	1
  3945  00EAA6  ECEE  F06C         	call	_write_data
  3946                           
  3947                           ;ST7735_TFT.c: 321: write_data(0x2C);
  3948  00EAAA  0E2C               	movlw	44
  3949  00EAAC  ECEE  F06C         	call	_write_data
  3950                           
  3951                           ;ST7735_TFT.c: 322: write_data(0x2D);
  3952  00EAB0  0E2D               	movlw	45
  3953  00EAB2  ECEE  F06C         	call	_write_data
  3954                           
  3955                           ;ST7735_TFT.c: 323: write_command(0xB2);
  3956  00EAB6  0EB2               	movlw	178
  3957  00EAB8  ECE6  F06C         	call	_write_command
  3958                           
  3959                           ;ST7735_TFT.c: 324: write_data(0x01);
  3960  00EABC  0E01               	movlw	1
  3961  00EABE  ECEE  F06C         	call	_write_data
  3962                           
  3963                           ;ST7735_TFT.c: 325: write_data(0x2C);
  3964  00EAC2  0E2C               	movlw	44
  3965  00EAC4  ECEE  F06C         	call	_write_data
  3966                           
  3967                           ;ST7735_TFT.c: 326: write_data(0x2D);
  3968  00EAC8  0E2D               	movlw	45
  3969  00EACA  ECEE  F06C         	call	_write_data
  3970                           
  3971                           ;ST7735_TFT.c: 327: write_command(0xB3);
  3972  00EACE  0EB3               	movlw	179
  3973  00EAD0  ECE6  F06C         	call	_write_command
  3974                           
  3975                           ;ST7735_TFT.c: 328: write_data(0x01);
  3976  00EAD4  0E01               	movlw	1
  3977  00EAD6  ECEE  F06C         	call	_write_data
  3978                           
  3979                           ;ST7735_TFT.c: 329: write_data(0x2C);
  3980  00EADA  0E2C               	movlw	44
  3981  00EADC  ECEE  F06C         	call	_write_data
  3982                           
  3983                           ;ST7735_TFT.c: 330: write_data(0x2D);
  3984  00EAE0  0E2D               	movlw	45
  3985  00EAE2  ECEE  F06C         	call	_write_data
  3986                           
  3987                           ;ST7735_TFT.c: 331: write_data(0x01);
  3988  00EAE6  0E01               	movlw	1
  3989  00EAE8  ECEE  F06C         	call	_write_data
  3990                           
  3991                           ;ST7735_TFT.c: 332: write_data(0x2C);
  3992  00EAEC  0E2C               	movlw	44
  3993  00EAEE  ECEE  F06C         	call	_write_data
  3994                           
  3995                           ;ST7735_TFT.c: 333: write_data(0x2D);
  3996  00EAF2  0E2D               	movlw	45
  3997  00EAF4  ECEE  F06C         	call	_write_data
  3998                           
  3999                           ;ST7735_TFT.c: 334: write_command(0xB4);
  4000  00EAF8  0EB4               	movlw	180
  4001  00EAFA  ECE6  F06C         	call	_write_command
  4002                           
  4003                           ;ST7735_TFT.c: 335: write_data(0x07);
  4004  00EAFE  0E07               	movlw	7
  4005  00EB00  ECEE  F06C         	call	_write_data
  4006                           
  4007                           ;ST7735_TFT.c: 336: write_command(0xC0);
  4008  00EB04  0EC0               	movlw	192
  4009  00EB06  ECE6  F06C         	call	_write_command
  4010                           
  4011                           ;ST7735_TFT.c: 337: write_data(0xA2);
  4012  00EB0A  0EA2               	movlw	162
  4013  00EB0C  ECEE  F06C         	call	_write_data
  4014                           
  4015                           ;ST7735_TFT.c: 338: write_data(0x02);
  4016  00EB10  0E02               	movlw	2
  4017  00EB12  ECEE  F06C         	call	_write_data
  4018                           
  4019                           ;ST7735_TFT.c: 339: write_data(0x84);
  4020  00EB16  0E84               	movlw	132
  4021  00EB18  ECEE  F06C         	call	_write_data
  4022                           
  4023                           ;ST7735_TFT.c: 340: write_command(0xC1);
  4024  00EB1C  0EC1               	movlw	193
  4025  00EB1E  ECE6  F06C         	call	_write_command
  4026                           
  4027                           ;ST7735_TFT.c: 341: write_data(0xC5);
  4028  00EB22  0EC5               	movlw	197
  4029  00EB24  ECEE  F06C         	call	_write_data
  4030                           
  4031                           ;ST7735_TFT.c: 342: write_command(0xC2);
  4032  00EB28  0EC2               	movlw	194
  4033  00EB2A  ECE6  F06C         	call	_write_command
  4034                           
  4035                           ;ST7735_TFT.c: 343: write_data(0x0A);
  4036  00EB2E  0E0A               	movlw	10
  4037  00EB30  ECEE  F06C         	call	_write_data
  4038                           
  4039                           ;ST7735_TFT.c: 344: write_data(0x00);
  4040  00EB34  0E00               	movlw	0
  4041  00EB36  ECEE  F06C         	call	_write_data
  4042                           
  4043                           ;ST7735_TFT.c: 345: write_command(0xC3);
  4044  00EB3A  0EC3               	movlw	195
  4045  00EB3C  ECE6  F06C         	call	_write_command
  4046                           
  4047                           ;ST7735_TFT.c: 346: write_data(0x8A);
  4048  00EB40  0E8A               	movlw	138
  4049  00EB42  ECEE  F06C         	call	_write_data
  4050                           
  4051                           ;ST7735_TFT.c: 347: write_data(0x2A);
  4052  00EB46  0E2A               	movlw	42
  4053  00EB48  ECEE  F06C         	call	_write_data
  4054                           
  4055                           ;ST7735_TFT.c: 348: write_command(0xC4);
  4056  00EB4C  0EC4               	movlw	196
  4057  00EB4E  ECE6  F06C         	call	_write_command
  4058                           
  4059                           ;ST7735_TFT.c: 349: write_data(0x8A);
  4060  00EB52  0E8A               	movlw	138
  4061  00EB54  ECEE  F06C         	call	_write_data
  4062                           
  4063                           ;ST7735_TFT.c: 350: write_data(0xEE);
  4064  00EB58  0EEE               	movlw	238
  4065  00EB5A  ECEE  F06C         	call	_write_data
  4066                           
  4067                           ;ST7735_TFT.c: 351: write_command(0xC5);
  4068  00EB5E  0EC5               	movlw	197
  4069  00EB60  ECE6  F06C         	call	_write_command
  4070                           
  4071                           ;ST7735_TFT.c: 352: write_data(0x0E);
  4072  00EB64  0E0E               	movlw	14
  4073  00EB66  ECEE  F06C         	call	_write_data
  4074                           
  4075                           ;ST7735_TFT.c: 353: write_command(0x20);
  4076  00EB6A  0E20               	movlw	32
  4077  00EB6C  ECE6  F06C         	call	_write_command
  4078                           
  4079                           ;ST7735_TFT.c: 354: write_command(0x36);
  4080  00EB70  0E36               	movlw	54
  4081  00EB72  ECE6  F06C         	call	_write_command
  4082                           
  4083                           ;ST7735_TFT.c: 355: write_data(0xC8);
  4084  00EB76  0EC8               	movlw	200
  4085  00EB78  ECEE  F06C         	call	_write_data
  4086                           
  4087                           ;ST7735_TFT.c: 356: write_command(0x3A);
  4088  00EB7C  0E3A               	movlw	58
  4089  00EB7E  ECE6  F06C         	call	_write_command
  4090                           
  4091                           ;ST7735_TFT.c: 357: write_data(0x05);
  4092  00EB82  0E05               	movlw	5
  4093  00EB84  ECEE  F06C         	call	_write_data
  4094  00EB88  0012               	return		;funcret
  4095  00EB8A                     __end_of_Rcmd1:
  4096                           	opt stack 0
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           postinc0	equ	0xFEE
  4102                           wreg	equ	0xFE8
  4103                           postdec1	equ	0xFE5
  4104                           fsr1l	equ	0xFE1
  4105                           status	equ	0xFD8
  4106                           
  4107 ;; *************** function _LCD_Reset *****************
  4108 ;; Defined at:
  4109 ;;		line 249 in file "ST7735_TFT.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;		None               void
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    2
  4130 ;; This function calls:
  4131 ;;		_delay_ms
  4132 ;; This function is called by:
  4133 ;;		_Initialize_Screen
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text14
  4138  00D9FE                     __ptext14:
  4139                           	opt stack 0
  4140  00D9FE                     _LCD_Reset:
  4141                           	opt stack 27
  4142                           
  4143                           ;ST7735_TFT.c: 251: PORTDbits.RD2 = 0;
  4144                           
  4145                           ;incstack = 0
  4146  00D9FE  9483               	bcf	3971,2,c	;volatile
  4147                           
  4148                           ;ST7735_TFT.c: 252: delay_ms(100);
  4149  00DA00  0E00               	movlw	0
  4150  00DA02  6E08               	movwf	delay_ms@ms+1,c
  4151  00DA04  0E64               	movlw	100
  4152  00DA06  6E07               	movwf	delay_ms@ms,c
  4153  00DA08  EC75  F06F         	call	_delay_ms	;wreg free
  4154                           
  4155                           ;ST7735_TFT.c: 253: PORTDbits.RD2 = 1;
  4156  00DA0C  8483               	bsf	3971,2,c	;volatile
  4157  00DA0E  0012               	return		;funcret
  4158  00DA10                     __end_of_LCD_Reset:
  4159                           	opt stack 0
  4160                           tblptru	equ	0xFF8
  4161                           tblptrh	equ	0xFF7
  4162                           tblptrl	equ	0xFF6
  4163                           tablat	equ	0xFF5
  4164                           postinc0	equ	0xFEE
  4165                           wreg	equ	0xFE8
  4166                           postdec1	equ	0xFE5
  4167                           fsr1l	equ	0xFE1
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function _delay_ms *****************
  4171 ;; Defined at:
  4172 ;;		line 96 in file "ST7735_TFT.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  ms              2    6[COMRAM] int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  count           2   10[COMRAM] int 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;Total ram usage:        6 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    1
  4193 ;; This function calls:
  4194 ;;		___wmul
  4195 ;; This function is called by:
  4196 ;;		_LCD_Reset
  4197 ;;		_Rcmd1
  4198 ;;		_Rcmd3
  4199 ;;		_Bcmd
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text15
  4204  00DEEA                     __ptext15:
  4205                           	opt stack 0
  4206  00DEEA                     _delay_ms:
  4207                           	opt stack 26
  4208                           
  4209                           ;ST7735_TFT.c: 102: int count;
  4210                           ;ST7735_TFT.c: 103: count = 8000000/4000/8 * ms;
  4211                           
  4212                           ;incstack = 0
  4213  00DEEA  C007  F001         	movff	delay_ms@ms,___wmul@multiplier
  4214  00DEEE  C008  F002         	movff	delay_ms@ms+1,___wmul@multiplier+1
  4215  00DEF2  0E00               	movlw	0
  4216  00DEF4  6E04               	movwf	___wmul@multiplicand+1,c
  4217  00DEF6  0EFA               	movlw	250
  4218  00DEF8  6E03               	movwf	___wmul@multiplicand,c
  4219  00DEFA  EC71  F06D         	call	___wmul	;wreg free
  4220  00DEFE  C001  F00B         	movff	?___wmul,delay_ms@count
  4221  00DF02  C002  F00C         	movff	?___wmul+1,delay_ms@count+1
  4222                           
  4223                           ;ST7735_TFT.c: 104: count = (0xffff - count);
  4224  00DF06  C00B  F009         	movff	delay_ms@count,??_delay_ms
  4225  00DF0A  C00C  F00A         	movff	delay_ms@count+1,??_delay_ms+1
  4226  00DF0E  1E09               	comf	??_delay_ms,f,c
  4227  00DF10  1E0A               	comf	??_delay_ms+1,f,c
  4228  00DF12  4A09               	infsnz	??_delay_ms,f,c
  4229  00DF14  2A0A               	incf	??_delay_ms+1,f,c
  4230  00DF16  0EFF               	movlw	255
  4231  00DF18  2409               	addwf	??_delay_ms,w,c
  4232  00DF1A  6E0B               	movwf	delay_ms@count,c
  4233  00DF1C  0EFF               	movlw	255
  4234  00DF1E  200A               	addwfc	??_delay_ms+1,w,c
  4235  00DF20  6E0C               	movwf	delay_ms@count+1,c
  4236                           
  4237                           ;ST7735_TFT.c: 106: T3CON = 0xb8;
  4238  00DF22  0EB8               	movlw	184
  4239  00DF24  6EB1               	movwf	4017,c	;volatile
  4240                           
  4241                           ;ST7735_TFT.c: 108: TMR0L = count & 0x00ff;
  4242  00DF26  C00B  FFD6         	movff	delay_ms@count,4054	;volatile
  4243                           
  4244                           ;ST7735_TFT.c: 109: TMR0H = count >> 8;
  4245  00DF2A  500C               	movf	delay_ms@count+1,w,c
  4246  00DF2C  6ED7               	movwf	4055,c	;volatile
  4247                           
  4248                           ;ST7735_TFT.c: 111: PIR2bits.TMR3IF = 0;
  4249  00DF2E  92A1               	bcf	4001,1,c	;volatile
  4250                           
  4251                           ;ST7735_TFT.c: 112: T3CONbits.TMR3ON = 1;
  4252  00DF30  80B1               	bsf	4017,0,c	;volatile
  4253                           
  4254                           ;ST7735_TFT.c: 114: while (PIR2bits.TMR3IF == 0);
  4255  00DF32  D000               	goto	l113
  4256  00DF34                     l113:
  4257  00DF34  A2A1               	btfss	4001,1,c	;volatile
  4258  00DF36  D7FE               	goto	l113
  4259                           
  4260                           ;ST7735_TFT.c: 115: T3CONbits.TMR3ON = 0;
  4261  00DF38  90B1               	bcf	4017,0,c	;volatile
  4262  00DF3A  0012               	return		;funcret
  4263  00DF3C                     __end_of_delay_ms:
  4264                           	opt stack 0
  4265                           tblptru	equ	0xFF8
  4266                           tblptrh	equ	0xFF7
  4267                           tblptrl	equ	0xFF6
  4268                           tablat	equ	0xFF5
  4269                           postinc0	equ	0xFEE
  4270                           wreg	equ	0xFE8
  4271                           postdec1	equ	0xFE5
  4272                           fsr1l	equ	0xFE1
  4273                           status	equ	0xFD8
  4274                           
  4275 ;; *************** function _Init_ADC *****************
  4276 ;; Defined at:
  4277 ;;		line 310 in file "Lab7_sample_S3_F21.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;		None               void
  4284 ;; Registers used:
  4285 ;;		wreg, status,2
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;Total ram usage:        0 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text16
  4305  00D9BE                     __ptext16:
  4306                           	opt stack 0
  4307  00D9BE                     _Init_ADC:
  4308                           	opt stack 30
  4309                           
  4310                           ;Lab7_sample_S3_F21.c: 312: ADCON0 = 0x01;
  4311                           
  4312                           ;incstack = 0
  4313  00D9BE  0E01               	movlw	1
  4314  00D9C0  6EC2               	movwf	4034,c	;volatile
  4315                           
  4316                           ;Lab7_sample_S3_F21.c: 313: ADCON1 = 0x0E;
  4317  00D9C2  0E0E               	movlw	14
  4318  00D9C4  6EC1               	movwf	4033,c	;volatile
  4319                           
  4320                           ;Lab7_sample_S3_F21.c: 314: ADCON2 = 0xA9;
  4321  00D9C6  0EA9               	movlw	169
  4322  00D9C8  6EC0               	movwf	4032,c	;volatile
  4323  00D9CA  0012               	return		;funcret
  4324  00D9CC                     __end_of_Init_ADC:
  4325                           	opt stack 0
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           postinc0	equ	0xFEE
  4331                           wreg	equ	0xFE8
  4332                           postdec1	equ	0xFE5
  4333                           fsr1l	equ	0xFE1
  4334                           status	equ	0xFD8
  4335                           
  4336 ;; *************** function _Day_Mode *****************
  4337 ;; Defined at:
  4338 ;;		line 409 in file "Lab7_sample_S3_F21.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;		None
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;		None               void
  4345 ;; Registers used:
  4346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;Total ram usage:        0 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:   10
  4359 ;; This function calls:
  4360 ;;		_PED_Control
  4361 ;;		_Set_EW
  4362 ;;		_Set_EW_LT
  4363 ;;		_Set_NS
  4364 ;;		_Set_NS_LT
  4365 ;;		_Wait_N_Seconds
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text17
  4372  00E4A0                     __ptext17:
  4373                           	opt stack 0
  4374  00E4A0                     _Day_Mode:
  4375                           	opt stack 20
  4376                           
  4377                           ;Lab7_sample_S3_F21.c: 411: MODE = 1;
  4378                           
  4379                           ;incstack = 0
  4380  00E4A0  0E00               	movlw	0
  4381  00E4A2  6E68               	movwf	_MODE+1,c
  4382  00E4A4  0E01               	movlw	1
  4383  00E4A6  6E67               	movwf	_MODE,c
  4384                           
  4385                           ;Lab7_sample_S3_F21.c: 412: PORTBbits.RB7 = 1;
  4386  00E4A8  8E81               	bsf	3969,7,c	;volatile
  4387                           
  4388                           ;Lab7_sample_S3_F21.c: 413: Act_Mode_Txt[0] = 'D';
  4389  00E4AA  0E44               	movlw	68
  4390  00E4AC  6E54               	movwf	_Act_Mode_Txt,c
  4391                           
  4392                           ;Lab7_sample_S3_F21.c: 415: Set_NS(2);
  4393  00E4AE  0E02               	movlw	2
  4394  00E4B0  ECBC  F06E         	call	_Set_NS
  4395                           
  4396                           ;Lab7_sample_S3_F21.c: 417: Set_EW(1);
  4397  00E4B4  0E01               	movlw	1
  4398  00E4B6  EC78  F06E         	call	_Set_EW
  4399                           
  4400                           ;Lab7_sample_S3_F21.c: 418: Set_NS_LT(1);
  4401  00E4BA  0E01               	movlw	1
  4402  00E4BC  ECDE  F06E         	call	_Set_NS_LT
  4403                           
  4404                           ;Lab7_sample_S3_F21.c: 419: Set_EW_LT(1);
  4405  00E4C0  0E01               	movlw	1
  4406  00E4C2  EC9A  F06E         	call	_Set_EW_LT
  4407                           
  4408                           ;Lab7_sample_S3_F21.c: 421: if(PORTBbits.RB0 == 1)
  4409  00E4C6  A081               	btfss	3969,0,c	;volatile
  4410  00E4C8  D005               	goto	l429
  4411                           
  4412                           ;Lab7_sample_S3_F21.c: 422: {
  4413                           ;Lab7_sample_S3_F21.c: 423: PED_Control(0,8);
  4414  00E4CA  0E08               	movlw	8
  4415  00E4CC  6E3C               	movwf	PED_Control@Num_Sec,c
  4416  00E4CE  0E00               	movlw	0
  4417  00E4D0  ECC9  F06D         	call	_PED_Control
  4418  00E4D4                     l429:
  4419                           
  4420                           ;Lab7_sample_S3_F21.c: 425: }
  4421                           ;Lab7_sample_S3_F21.c: 429: Wait_N_Seconds(7);
  4422  00E4D4  0E07               	movlw	7
  4423  00E4D6  EC9A  F06D         	call	_Wait_N_Seconds
  4424                           
  4425                           ;Lab7_sample_S3_F21.c: 431: Set_NS(3);
  4426  00E4DA  0E03               	movlw	3
  4427  00E4DC  ECBC  F06E         	call	_Set_NS
  4428                           
  4429                           ;Lab7_sample_S3_F21.c: 432: Wait_N_Seconds(3);
  4430  00E4E0  0E03               	movlw	3
  4431  00E4E2  EC9A  F06D         	call	_Wait_N_Seconds
  4432                           
  4433                           ;Lab7_sample_S3_F21.c: 434: Set_NS(1);
  4434  00E4E6  0E01               	movlw	1
  4435  00E4E8  ECBC  F06E         	call	_Set_NS
  4436                           
  4437                           ;Lab7_sample_S3_F21.c: 438: if(PORTAbits.RA5 == 1)
  4438  00E4EC  AA80               	btfss	3968,5,c	;volatile
  4439  00E4EE  D010               	goto	l3577
  4440                           
  4441                           ;Lab7_sample_S3_F21.c: 439: {
  4442                           ;Lab7_sample_S3_F21.c: 440: Set_EW_LT(2);
  4443  00E4F0  0E02               	movlw	2
  4444  00E4F2  EC9A  F06E         	call	_Set_EW_LT
  4445                           
  4446                           ;Lab7_sample_S3_F21.c: 441: Wait_N_Seconds(8);
  4447  00E4F6  0E08               	movlw	8
  4448  00E4F8  EC9A  F06D         	call	_Wait_N_Seconds
  4449                           
  4450                           ;Lab7_sample_S3_F21.c: 443: Set_EW_LT(3);
  4451  00E4FC  0E03               	movlw	3
  4452  00E4FE  EC9A  F06E         	call	_Set_EW_LT
  4453                           
  4454                           ;Lab7_sample_S3_F21.c: 444: Wait_N_Seconds(3);
  4455  00E502  0E03               	movlw	3
  4456  00E504  EC9A  F06D         	call	_Wait_N_Seconds
  4457                           
  4458                           ;Lab7_sample_S3_F21.c: 446: Set_EW_LT(1);
  4459  00E508  0E01               	movlw	1
  4460  00E50A  EC9A  F06E         	call	_Set_EW_LT
  4461  00E50E  D000               	goto	l3577
  4462  00E510                     l3577:
  4463                           
  4464                           ;Lab7_sample_S3_F21.c: 448: }
  4465                           ;Lab7_sample_S3_F21.c: 450: Set_EW(2);
  4466  00E510  0E02               	movlw	2
  4467  00E512  EC78  F06E         	call	_Set_EW
  4468                           
  4469                           ;Lab7_sample_S3_F21.c: 452: if( PORTBbits.RB1 == 1 )
  4470  00E516  A281               	btfss	3969,1,c	;volatile
  4471  00E518  D005               	goto	l431
  4472                           
  4473                           ;Lab7_sample_S3_F21.c: 453: {
  4474                           ;Lab7_sample_S3_F21.c: 454: PED_Control(1,9);
  4475  00E51A  0E09               	movlw	9
  4476  00E51C  6E3C               	movwf	PED_Control@Num_Sec,c
  4477  00E51E  0E01               	movlw	1
  4478  00E520  ECC9  F06D         	call	_PED_Control
  4479  00E524                     l431:
  4480                           
  4481                           ;Lab7_sample_S3_F21.c: 455: }
  4482                           ;Lab7_sample_S3_F21.c: 459: Wait_N_Seconds(9);
  4483  00E524  0E09               	movlw	9
  4484  00E526  EC9A  F06D         	call	_Wait_N_Seconds
  4485                           
  4486                           ;Lab7_sample_S3_F21.c: 461: Set_EW(3);
  4487  00E52A  0E03               	movlw	3
  4488  00E52C  EC78  F06E         	call	_Set_EW
  4489                           
  4490                           ;Lab7_sample_S3_F21.c: 462: Wait_N_Seconds(3);
  4491  00E530  0E03               	movlw	3
  4492  00E532  EC9A  F06D         	call	_Wait_N_Seconds
  4493                           
  4494                           ;Lab7_sample_S3_F21.c: 464: Set_EW(1);
  4495  00E536  0E01               	movlw	1
  4496  00E538  EC78  F06E         	call	_Set_EW
  4497                           
  4498                           ;Lab7_sample_S3_F21.c: 468: if(PORTAbits.RA4 == 1)
  4499  00E53C  A880               	btfss	3968,4,c	;volatile
  4500  00E53E  D010               	goto	l433
  4501                           
  4502                           ;Lab7_sample_S3_F21.c: 469: {
  4503                           ;Lab7_sample_S3_F21.c: 470: Set_NS_LT(2);
  4504  00E540  0E02               	movlw	2
  4505  00E542  ECDE  F06E         	call	_Set_NS_LT
  4506                           
  4507                           ;Lab7_sample_S3_F21.c: 471: Wait_N_Seconds(8);
  4508  00E546  0E08               	movlw	8
  4509  00E548  EC9A  F06D         	call	_Wait_N_Seconds
  4510                           
  4511                           ;Lab7_sample_S3_F21.c: 473: Set_NS_LT(3);
  4512  00E54C  0E03               	movlw	3
  4513  00E54E  ECDE  F06E         	call	_Set_NS_LT
  4514                           
  4515                           ;Lab7_sample_S3_F21.c: 474: Wait_N_Seconds(3);
  4516  00E552  0E03               	movlw	3
  4517  00E554  EC9A  F06D         	call	_Wait_N_Seconds
  4518                           
  4519                           ;Lab7_sample_S3_F21.c: 476: Set_NS_LT(1);
  4520  00E558  0E01               	movlw	1
  4521  00E55A  ECDE  F06E         	call	_Set_NS_LT
  4522  00E55E  D000               	goto	l433
  4523  00E560                     l433:
  4524  00E560  0012               	return		;funcret
  4525  00E562                     __end_of_Day_Mode:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postdec1	equ	0xFE5
  4534                           fsr1l	equ	0xFE1
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _Wait_N_Seconds *****************
  4538 ;; Defined at:
  4539 ;;		line 580 in file "Lab7_sample_S3_F21.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  seconds         1    wreg     unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  seconds         1   59[COMRAM] unsigned char 
  4544 ;;  I               1   60[COMRAM] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;		None               void
  4547 ;; Registers used:
  4548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;Total ram usage:        2 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    9
  4561 ;; This function calls:
  4562 ;;		_Wait_One_Second
  4563 ;;		_update_LCD_count
  4564 ;; This function is called by:
  4565 ;;		_Day_Mode
  4566 ;;		_Night_Mode
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text18
  4571  00DB34                     __ptext18:
  4572                           	opt stack 0
  4573  00DB34                     _Wait_N_Seconds:
  4574                           	opt stack 20
  4575                           
  4576                           ;incstack = 0
  4577                           ;Wait_N_Seconds@seconds stored from wreg
  4578  00DB34  6E3C               	movwf	Wait_N_Seconds@seconds,c
  4579                           
  4580                           ;Lab7_sample_S3_F21.c: 582: char I;
  4581                           ;Lab7_sample_S3_F21.c: 583: for (I = seconds; I > 0; I--)
  4582  00DB36  C03C  F03D         	movff	Wait_N_Seconds@seconds,Wait_N_Seconds@I
  4583  00DB3A                     l3415:
  4584  00DB3A  503D               	movf	Wait_N_Seconds@I,w,c
  4585  00DB3C  B4D8               	btfsc	status,2,c
  4586  00DB3E  D00B               	goto	l3425
  4587  00DB40  D001               	goto	l3419
  4588  00DB42  D009               	goto	l3425
  4589  00DB44                     l3419:
  4590                           
  4591                           ;Lab7_sample_S3_F21.c: 584: {
  4592                           ;Lab7_sample_S3_F21.c: 585: update_LCD_count(direction, I);
  4593  00DB44  C03D  F03A         	movff	Wait_N_Seconds@I,update_LCD_count@count
  4594  00DB48  5079               	movf	_direction,w,c
  4595  00DB4A  EC0C  F077         	call	_update_LCD_count
  4596                           
  4597                           ;Lab7_sample_S3_F21.c: 586: Wait_One_Second();
  4598  00DB4E  EC4A  F070         	call	_Wait_One_Second	;wreg free
  4599  00DB52  063D               	decf	Wait_N_Seconds@I,f,c
  4600  00DB54  D7F2               	goto	l3415
  4601  00DB56                     l3425:
  4602                           
  4603                           ;Lab7_sample_S3_F21.c: 587: }
  4604                           ;Lab7_sample_S3_F21.c: 588: update_LCD_count(direction, 0);
  4605  00DB56  0E00               	movlw	0
  4606  00DB58  6E3A               	movwf	update_LCD_count@count,c
  4607  00DB5A  5079               	movf	_direction,w,c
  4608  00DB5C  EC0C  F077         	call	_update_LCD_count
  4609  00DB60  0012               	return		;funcret
  4610  00DB62                     __end_of_Wait_N_Seconds:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           postinc0	equ	0xFEE
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1l	equ	0xFE1
  4620                           status	equ	0xFD8
  4621                           
  4622 ;; *************** function _update_LCD_count *****************
  4623 ;; Defined at:
  4624 ;;		line 641 in file "Lab7_sample_S3_F21.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  direction       1    wreg     unsigned char 
  4627 ;;  count           1   57[COMRAM] unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  direction       1   58[COMRAM] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;		None               void
  4632 ;; Registers used:
  4633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4639 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;Total ram usage:        2 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    7
  4646 ;; This function calls:
  4647 ;;		___awdiv
  4648 ;;		___awmod
  4649 ;;		_drawtext
  4650 ;; This function is called by:
  4651 ;;		_Wait_N_Seconds
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text19
  4656  00EE18                     __ptext19:
  4657                           	opt stack 0
  4658  00EE18                     _update_LCD_count:
  4659                           	opt stack 21
  4660                           
  4661                           ;incstack = 0
  4662                           ;update_LCD_count@direction stored from wreg
  4663  00EE18  6E3B               	movwf	update_LCD_count@direction,c
  4664                           
  4665                           ;Lab7_sample_S3_F21.c: 643: switch (direction)
  4666  00EE1A  D0AE               	goto	l3285
  4667  00EE1C                     l3267:
  4668                           
  4669                           ;Lab7_sample_S3_F21.c: 646: NS_Count[0] = count/10 + '0';
  4670  00EE1C  C03A  F001         	movff	update_LCD_count@count,___awdiv@dividend
  4671  00EE20  6A02               	clrf	___awdiv@dividend+1,c
  4672  00EE22  0E00               	movlw	0
  4673  00EE24  6E04               	movwf	___awdiv@divisor+1,c
  4674  00EE26  0E0A               	movlw	10
  4675  00EE28  6E03               	movwf	___awdiv@divisor,c
  4676  00EE2A  EC13  F071         	call	___awdiv	;wreg free
  4677  00EE2E  5001               	movf	?___awdiv,w,c
  4678  00EE30  0F30               	addlw	48
  4679  00EE32  6E4B               	movwf	_NS_Count,c
  4680                           
  4681                           ;Lab7_sample_S3_F21.c: 647: NS_Count[1] = count%10 + '0';
  4682  00EE34  C03A  F001         	movff	update_LCD_count@count,___awmod@dividend
  4683  00EE38  6A02               	clrf	___awmod@dividend+1,c
  4684  00EE3A  0E00               	movlw	0
  4685  00EE3C  6E04               	movwf	___awmod@divisor+1,c
  4686  00EE3E  0E0A               	movlw	10
  4687  00EE40  6E03               	movwf	___awmod@divisor,c
  4688  00EE42  EC09  F070         	call	___awmod	;wreg free
  4689  00EE46  5001               	movf	?___awmod,w,c
  4690  00EE48  0F30               	addlw	48
  4691  00EE4A  6E4C               	movwf	_NS_Count+1,c
  4692                           
  4693                           ;Lab7_sample_S3_F21.c: 648: drawtext(100, 20 + 10, NS_Count, 0x001F, 0x0000, 2);
  4694  00EE4C  0E1E               	movlw	30
  4695  00EE4E  6E29               	movwf	drawtext@y,c
  4696  00EE50  0E4B               	movlw	low _NS_Count
  4697  00EE52  6E2A               	movwf	drawtext@_text,c
  4698  00EE54  0E00               	movlw	high _NS_Count
  4699  00EE56  6E2B               	movwf	drawtext@_text+1,c
  4700  00EE58  0E00               	movlw	0
  4701  00EE5A  6E2D               	movwf	drawtext@color+1,c
  4702  00EE5C  0E1F               	movlw	31
  4703  00EE5E  6E2C               	movwf	drawtext@color,c
  4704  00EE60  0E00               	movlw	0
  4705  00EE62  6E2F               	movwf	drawtext@bg+1,c
  4706  00EE64  0E00               	movlw	0
  4707  00EE66  6E2E               	movwf	drawtext@bg,c
  4708  00EE68  0E02               	movlw	2
  4709  00EE6A  6E30               	movwf	drawtext@size,c
  4710  00EE6C  0E64               	movlw	100
  4711  00EE6E  ECE4  F073         	call	_drawtext
  4712                           
  4713                           ;Lab7_sample_S3_F21.c: 649: break;
  4714  00EE72  D090               	goto	l474
  4715  00EE74                     l3271:
  4716                           
  4717                           ;Lab7_sample_S3_F21.c: 652: NSLT_Count[0] = count/10 + '0';
  4718  00EE74  C03A  F001         	movff	update_LCD_count@count,___awdiv@dividend
  4719  00EE78  6A02               	clrf	___awdiv@dividend+1,c
  4720  00EE7A  0E00               	movlw	0
  4721  00EE7C  6E04               	movwf	___awdiv@divisor+1,c
  4722  00EE7E  0E0A               	movlw	10
  4723  00EE80  6E03               	movwf	___awdiv@divisor,c
  4724  00EE82  EC13  F071         	call	___awdiv	;wreg free
  4725  00EE86  5001               	movf	?___awdiv,w,c
  4726  00EE88  0F30               	addlw	48
  4727  00EE8A  6E48               	movwf	_NSLT_Count,c
  4728                           
  4729                           ;Lab7_sample_S3_F21.c: 653: NSLT_Count[1] = count%10 + '0';
  4730  00EE8C  C03A  F001         	movff	update_LCD_count@count,___awmod@dividend
  4731  00EE90  6A02               	clrf	___awmod@dividend+1,c
  4732  00EE92  0E00               	movlw	0
  4733  00EE94  6E04               	movwf	___awmod@divisor+1,c
  4734  00EE96  0E0A               	movlw	10
  4735  00EE98  6E03               	movwf	___awmod@divisor,c
  4736  00EE9A  EC09  F070         	call	___awmod	;wreg free
  4737  00EE9E  5001               	movf	?___awmod,w,c
  4738  00EEA0  0F30               	addlw	48
  4739  00EEA2  6E49               	movwf	_NSLT_Count+1,c
  4740                           
  4741                           ;Lab7_sample_S3_F21.c: 654: drawtext(100, 50 + 10, NSLT_Count, 0xF81F, 0x0000, 2);
  4742  00EEA4  0E3C               	movlw	60
  4743  00EEA6  6E29               	movwf	drawtext@y,c
  4744  00EEA8  0E48               	movlw	low _NSLT_Count
  4745  00EEAA  6E2A               	movwf	drawtext@_text,c
  4746  00EEAC  0E00               	movlw	high _NSLT_Count
  4747  00EEAE  6E2B               	movwf	drawtext@_text+1,c
  4748  00EEB0  0EF8               	movlw	248
  4749  00EEB2  6E2D               	movwf	drawtext@color+1,c
  4750  00EEB4  0E1F               	movlw	31
  4751  00EEB6  6E2C               	movwf	drawtext@color,c
  4752  00EEB8  0E00               	movlw	0
  4753  00EEBA  6E2F               	movwf	drawtext@bg+1,c
  4754  00EEBC  0E00               	movlw	0
  4755  00EEBE  6E2E               	movwf	drawtext@bg,c
  4756  00EEC0  0E02               	movlw	2
  4757  00EEC2  6E30               	movwf	drawtext@size,c
  4758  00EEC4  0E64               	movlw	100
  4759  00EEC6  ECE4  F073         	call	_drawtext
  4760                           
  4761                           ;Lab7_sample_S3_F21.c: 655: break;
  4762  00EECA  D064               	goto	l474
  4763  00EECC                     l3275:
  4764                           
  4765                           ;Lab7_sample_S3_F21.c: 658: EW_Count[0] = count/10 + '0';
  4766  00EECC  C03A  F001         	movff	update_LCD_count@count,___awdiv@dividend
  4767  00EED0  6A02               	clrf	___awdiv@dividend+1,c
  4768  00EED2  0E00               	movlw	0
  4769  00EED4  6E04               	movwf	___awdiv@divisor+1,c
  4770  00EED6  0E0A               	movlw	10
  4771  00EED8  6E03               	movwf	___awdiv@divisor,c
  4772  00EEDA  EC13  F071         	call	___awdiv	;wreg free
  4773  00EEDE  5001               	movf	?___awdiv,w,c
  4774  00EEE0  0F30               	addlw	48
  4775  00EEE2  6E45               	movwf	_EW_Count,c
  4776                           
  4777                           ;Lab7_sample_S3_F21.c: 659: EW_Count[1] = count%10 + '0';
  4778  00EEE4  C03A  F001         	movff	update_LCD_count@count,___awmod@dividend
  4779  00EEE8  6A02               	clrf	___awmod@dividend+1,c
  4780  00EEEA  0E00               	movlw	0
  4781  00EEEC  6E04               	movwf	___awmod@divisor+1,c
  4782  00EEEE  0E0A               	movlw	10
  4783  00EEF0  6E03               	movwf	___awmod@divisor,c
  4784  00EEF2  EC09  F070         	call	___awmod	;wreg free
  4785  00EEF6  5001               	movf	?___awmod,w,c
  4786  00EEF8  0F30               	addlw	48
  4787  00EEFA  6E46               	movwf	_EW_Count+1,c
  4788                           
  4789                           ;Lab7_sample_S3_F21.c: 660: drawtext(100, 80 + 10, EW_Count, 0x07FF, 0x0000, 2);
  4790  00EEFC  0E5A               	movlw	90
  4791  00EEFE  6E29               	movwf	drawtext@y,c
  4792  00EF00  0E45               	movlw	low _EW_Count
  4793  00EF02  6E2A               	movwf	drawtext@_text,c
  4794  00EF04  0E00               	movlw	high _EW_Count
  4795  00EF06  6E2B               	movwf	drawtext@_text+1,c
  4796  00EF08  0E07               	movlw	7
  4797  00EF0A  6E2D               	movwf	drawtext@color+1,c
  4798  00EF0C  682C               	setf	drawtext@color,c
  4799  00EF0E  0E00               	movlw	0
  4800  00EF10  6E2F               	movwf	drawtext@bg+1,c
  4801  00EF12  0E00               	movlw	0
  4802  00EF14  6E2E               	movwf	drawtext@bg,c
  4803  00EF16  0E02               	movlw	2
  4804  00EF18  6E30               	movwf	drawtext@size,c
  4805  00EF1A  0E64               	movlw	100
  4806  00EF1C  ECE4  F073         	call	_drawtext
  4807                           
  4808                           ;Lab7_sample_S3_F21.c: 661: break;
  4809  00EF20  D039               	goto	l474
  4810  00EF22                     l3279:
  4811                           
  4812                           ;Lab7_sample_S3_F21.c: 664: EWLT_Count[0] = count/10 + '0';
  4813  00EF22  C03A  F001         	movff	update_LCD_count@count,___awdiv@dividend
  4814  00EF26  6A02               	clrf	___awdiv@dividend+1,c
  4815  00EF28  0E00               	movlw	0
  4816  00EF2A  6E04               	movwf	___awdiv@divisor+1,c
  4817  00EF2C  0E0A               	movlw	10
  4818  00EF2E  6E03               	movwf	___awdiv@divisor,c
  4819  00EF30  EC13  F071         	call	___awdiv	;wreg free
  4820  00EF34  5001               	movf	?___awdiv,w,c
  4821  00EF36  0F30               	addlw	48
  4822  00EF38  6E42               	movwf	_EWLT_Count,c
  4823                           
  4824                           ;Lab7_sample_S3_F21.c: 665: EWLT_Count[1] = count%10 + '0';
  4825  00EF3A  C03A  F001         	movff	update_LCD_count@count,___awmod@dividend
  4826  00EF3E  6A02               	clrf	___awmod@dividend+1,c
  4827  00EF40  0E00               	movlw	0
  4828  00EF42  6E04               	movwf	___awmod@divisor+1,c
  4829  00EF44  0E0A               	movlw	10
  4830  00EF46  6E03               	movwf	___awmod@divisor,c
  4831  00EF48  EC09  F070         	call	___awmod	;wreg free
  4832  00EF4C  5001               	movf	?___awmod,w,c
  4833  00EF4E  0F30               	addlw	48
  4834  00EF50  6E43               	movwf	_EWLT_Count+1,c
  4835                           
  4836                           ;Lab7_sample_S3_F21.c: 666: drawtext(100, 110 + 10, EWLT_Count, 0xFFFF, 0x0000, 2);
  4837  00EF52  0E78               	movlw	120
  4838  00EF54  6E29               	movwf	drawtext@y,c
  4839  00EF56  0E42               	movlw	low _EWLT_Count
  4840  00EF58  6E2A               	movwf	drawtext@_text,c
  4841  00EF5A  0E00               	movlw	high _EWLT_Count
  4842  00EF5C  6E2B               	movwf	drawtext@_text+1,c
  4843  00EF5E  0EFF               	movlw	255
  4844  00EF60  6E2D               	movwf	drawtext@color+1,c
  4845  00EF62  682C               	setf	drawtext@color,c
  4846  00EF64  0E00               	movlw	0
  4847  00EF66  6E2F               	movwf	drawtext@bg+1,c
  4848  00EF68  0E00               	movlw	0
  4849  00EF6A  6E2E               	movwf	drawtext@bg,c
  4850  00EF6C  0E02               	movlw	2
  4851  00EF6E  6E30               	movwf	drawtext@size,c
  4852  00EF70  0E64               	movlw	100
  4853  00EF72  ECE4  F073         	call	_drawtext
  4854                           
  4855                           ;Lab7_sample_S3_F21.c: 671: }
  4856                           
  4857                           ;Lab7_sample_S3_F21.c: 667: break;
  4858  00EF76  D00E               	goto	l474
  4859  00EF78                     l3285:
  4860  00EF78  503B               	movf	update_LCD_count@direction,w,c
  4861                           
  4862                           ; Switch size 1, requested type "space"
  4863                           ; Number of cases is 4, Range of values is 0 to 3
  4864                           ; switch strategies available:
  4865                           ; Name         Instructions Cycles
  4866                           ; simple_byte           13     7 (average)
  4867                           ;	Chosen strategy is simple_byte
  4868  00EF7A  0A00               	xorlw	0	; case 0
  4869  00EF7C  B4D8               	btfsc	status,2,c
  4870  00EF7E  D74E               	goto	l3267
  4871  00EF80  0A01               	xorlw	1	; case 1
  4872  00EF82  B4D8               	btfsc	status,2,c
  4873  00EF84  D777               	goto	l3271
  4874  00EF86  0A03               	xorlw	3	; case 2
  4875  00EF88  B4D8               	btfsc	status,2,c
  4876  00EF8A  D7A0               	goto	l3275
  4877  00EF8C  0A01               	xorlw	1	; case 3
  4878  00EF8E  B4D8               	btfsc	status,2,c
  4879  00EF90  D7C8               	goto	l3279
  4880  00EF92  D000               	goto	l474
  4881  00EF94                     l474:
  4882  00EF94  0012               	return		;funcret
  4883  00EF96                     __end_of_update_LCD_count:
  4884                           	opt stack 0
  4885                           tblptru	equ	0xFF8
  4886                           tblptrh	equ	0xFF7
  4887                           tblptrl	equ	0xFF6
  4888                           tablat	equ	0xFF5
  4889                           postinc0	equ	0xFEE
  4890                           wreg	equ	0xFE8
  4891                           postdec1	equ	0xFE5
  4892                           fsr1l	equ	0xFE1
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function _Wait_One_Second *****************
  4896 ;; Defined at:
  4897 ;;		line 545 in file "Lab7_sample_S3_F21.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;		None               void
  4904 ;; Registers used:
  4905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;Total ram usage:        0 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    8
  4918 ;; This function calls:
  4919 ;;		_Wait_Half_Second
  4920 ;;		_drawtext
  4921 ;;		_strcpy
  4922 ;;		_update_LCD_misc
  4923 ;; This function is called by:
  4924 ;;		_Wait_N_Seconds
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text20
  4929  00E094                     __ptext20:
  4930                           	opt stack 0
  4931  00E094                     _Wait_One_Second:
  4932                           	opt stack 20
  4933                           
  4934                           ;Lab7_sample_S3_F21.c: 547: PORTDbits.RD7 = 1;
  4935                           
  4936                           ;incstack = 0
  4937  00E094  8E83               	bsf	3971,7,c	;volatile
  4938                           
  4939                           ;Lab7_sample_S3_F21.c: 548: strcpy(txt,"*");
  4940  00E096  C06B  F001         	movff	_txt,strcpy@to
  4941  00E09A  C06C  F002         	movff	_txt+1,strcpy@to+1
  4942  00E09E  0EFD               	movlw	low STR_5
  4943  00E0A0  6E03               	movwf	strcpy@from,c
  4944  00E0A2  0EFF               	movlw	high STR_5
  4945  00E0A4  6E04               	movwf	strcpy@from+1,c
  4946  00E0A6  ECE2  F06D         	call	_strcpy	;wreg free
  4947                           
  4948                           ;Lab7_sample_S3_F21.c: 549: drawtext(120,10,txt,0xFFFF,0x0000,1);
  4949  00E0AA  0E0A               	movlw	10
  4950  00E0AC  6E29               	movwf	drawtext@y,c
  4951  00E0AE  C06B  F02A         	movff	_txt,drawtext@_text
  4952  00E0B2  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  4953  00E0B6  0EFF               	movlw	255
  4954  00E0B8  6E2D               	movwf	drawtext@color+1,c
  4955  00E0BA  682C               	setf	drawtext@color,c
  4956  00E0BC  0E00               	movlw	0
  4957  00E0BE  6E2F               	movwf	drawtext@bg+1,c
  4958  00E0C0  0E00               	movlw	0
  4959  00E0C2  6E2E               	movwf	drawtext@bg,c
  4960  00E0C4  0E01               	movlw	1
  4961  00E0C6  6E30               	movwf	drawtext@size,c
  4962  00E0C8  0E78               	movlw	120
  4963  00E0CA  ECE4  F073         	call	_drawtext
  4964                           
  4965                           ;Lab7_sample_S3_F21.c: 550: Wait_Half_Second();
  4966  00E0CE  EC31  F06D         	call	_Wait_Half_Second	;wreg free
  4967                           
  4968                           ;Lab7_sample_S3_F21.c: 552: PORTDbits.RD7 = 0;
  4969  00E0D2  9E83               	bcf	3971,7,c	;volatile
  4970                           
  4971                           ;Lab7_sample_S3_F21.c: 553: strcpy(txt," ");
  4972  00E0D4  C06B  F001         	movff	_txt,strcpy@to
  4973  00E0D8  C06C  F002         	movff	_txt+1,strcpy@to+1
  4974  00E0DC  0EFB               	movlw	low STR_14
  4975  00E0DE  6E03               	movwf	strcpy@from,c
  4976  00E0E0  0EFF               	movlw	high STR_14
  4977  00E0E2  6E04               	movwf	strcpy@from+1,c
  4978  00E0E4  ECE2  F06D         	call	_strcpy	;wreg free
  4979                           
  4980                           ;Lab7_sample_S3_F21.c: 554: drawtext(120,10,txt,0xFFFF,0x0000,1);
  4981  00E0E8  0E0A               	movlw	10
  4982  00E0EA  6E29               	movwf	drawtext@y,c
  4983  00E0EC  C06B  F02A         	movff	_txt,drawtext@_text
  4984  00E0F0  C06C  F02B         	movff	_txt+1,drawtext@_text+1
  4985  00E0F4  0EFF               	movlw	255
  4986  00E0F6  6E2D               	movwf	drawtext@color+1,c
  4987  00E0F8  682C               	setf	drawtext@color,c
  4988  00E0FA  0E00               	movlw	0
  4989  00E0FC  6E2F               	movwf	drawtext@bg+1,c
  4990  00E0FE  0E00               	movlw	0
  4991  00E100  6E2E               	movwf	drawtext@bg,c
  4992  00E102  0E01               	movlw	1
  4993  00E104  6E30               	movwf	drawtext@size,c
  4994  00E106  0E78               	movlw	120
  4995  00E108  ECE4  F073         	call	_drawtext
  4996                           
  4997                           ;Lab7_sample_S3_F21.c: 555: Wait_Half_Second();
  4998  00E10C  EC31  F06D         	call	_Wait_Half_Second	;wreg free
  4999                           
  5000                           ;Lab7_sample_S3_F21.c: 556: update_LCD_misc();
  5001  00E110  ECA2  F078         	call	_update_LCD_misc	;wreg free
  5002  00E114  0012               	return		;funcret
  5003  00E116                     __end_of_Wait_One_Second:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           postinc0	equ	0xFEE
  5010                           wreg	equ	0xFE8
  5011                           postdec1	equ	0xFE5
  5012                           fsr1l	equ	0xFE1
  5013                           status	equ	0xFD8
  5014                           
  5015 ;; *************** function _update_LCD_misc *****************
  5016 ;; Defined at:
  5017 ;;		line 696 in file "Lab7_sample_S3_F21.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  nStep           2   57[COMRAM] int 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;		None               void
  5024 ;; Registers used:
  5025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;Total ram usage:        2 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    7
  5038 ;; This function calls:
  5039 ;;		___awtoft
  5040 ;;		___ftdiv
  5041 ;;		___ftge
  5042 ;;		___wmul
  5043 ;;		_drawtext
  5044 ;;		_get_full_ADC
  5045 ;; This function is called by:
  5046 ;;		_Wait_One_Second
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text21
  5051  00F144                     __ptext21:
  5052                           	opt stack 0
  5053  00F144                     _update_LCD_misc:
  5054                           	opt stack 20
  5055                           
  5056                           ;Lab7_sample_S3_F21.c: 698: int nStep = get_full_ADC();
  5057                           
  5058                           ;incstack = 0
  5059  00F144  EC5E  F06D         	call	_get_full_ADC	;wreg free
  5060  00F148  C001  F03A         	movff	?_get_full_ADC,update_LCD_misc@nStep
  5061  00F14C  C002  F03B         	movff	?_get_full_ADC+1,update_LCD_misc@nStep+1
  5062                           
  5063                           ;Lab7_sample_S3_F21.c: 699: volt = nStep * 5 /1024.0;
  5064  00F150  C03A  F001         	movff	update_LCD_misc@nStep,___wmul@multiplier
  5065  00F154  C03B  F002         	movff	update_LCD_misc@nStep+1,___wmul@multiplier+1
  5066  00F158  0E00               	movlw	0
  5067  00F15A  6E04               	movwf	___wmul@multiplicand+1,c
  5068  00F15C  0E05               	movlw	5
  5069  00F15E  6E03               	movwf	___wmul@multiplicand,c
  5070  00F160  EC71  F06D         	call	___wmul	;wreg free
  5071  00F164  C001  F009         	movff	?___wmul,___awtoft@c
  5072  00F168  C002  F00A         	movff	?___wmul+1,___awtoft@c+1
  5073  00F16C  ECFB  F06D         	call	___awtoft	;wreg free
  5074  00F170  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  5075  00F174  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  5076  00F178  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  5077  00F17C  0E00               	movlw	0
  5078  00F17E  6E10               	movwf	___ftdiv@f2,c
  5079  00F180  0E80               	movlw	128
  5080  00F182  6E11               	movwf	___ftdiv@f2+1,c
  5081  00F184  0E44               	movlw	68
  5082  00F186  6E12               	movwf	___ftdiv@f2+2,c
  5083  00F188  EC53  F074         	call	___ftdiv	;wreg free
  5084  00F18C  C00D  F064         	movff	?___ftdiv,_volt
  5085  00F190  C00E  F065         	movff	?___ftdiv+1,_volt+1
  5086  00F194  C00F  F066         	movff	?___ftdiv+2,_volt+2
  5087                           
  5088                           ;Lab7_sample_S3_F21.c: 700: SW_MODE = volt < 3.5 ? 1:0;
  5089  00F198  C064  F001         	movff	_volt,___ftge@ff1
  5090  00F19C  C065  F002         	movff	_volt+1,___ftge@ff1+1
  5091  00F1A0  C066  F003         	movff	_volt+2,___ftge@ff1+2
  5092  00F1A4  0E00               	movlw	0
  5093  00F1A6  6E04               	movwf	___ftge@ff2,c
  5094  00F1A8  0E60               	movlw	96
  5095  00F1AA  6E05               	movwf	___ftge@ff2+1,c
  5096  00F1AC  0E40               	movlw	64
  5097  00F1AE  6E06               	movwf	___ftge@ff2+2,c
  5098  00F1B0  EC5E  F071         	call	___ftge	;wreg free
  5099  00F1B4  B0D8               	btfsc	status,0,c
  5100  00F1B6  D002               	goto	u1830
  5101  00F1B8  0E01               	movlw	1
  5102  00F1BA  D001               	goto	u1840
  5103  00F1BC                     u1830:
  5104  00F1BC  0E00               	movlw	0
  5105  00F1BE                     u1840:
  5106  00F1BE  6E73               	movwf	_SW_MODE,c
  5107                           
  5108                           ;Lab7_sample_S3_F21.c: 702: SW_NSPED = PORTBbits.RB0;
  5109  00F1C0  0E00               	movlw	0
  5110  00F1C2  B081               	btfsc	3969,0,c	;volatile
  5111  00F1C4  0E01               	movlw	1
  5112  00F1C6  6E75               	movwf	_SW_NSPED,c
  5113                           
  5114                           ;Lab7_sample_S3_F21.c: 703: SW_NSLT = PORTAbits.RA4;
  5115  00F1C8  0E00               	movlw	0
  5116  00F1CA  B880               	btfsc	3968,4,c	;volatile
  5117  00F1CC  0E01               	movlw	1
  5118  00F1CE  6E74               	movwf	_SW_NSLT,c
  5119                           
  5120                           ;Lab7_sample_S3_F21.c: 704: SW_EWPED = PORTBbits.RB1;
  5121  00F1D0  0E00               	movlw	0
  5122  00F1D2  B281               	btfsc	3969,1,c	;volatile
  5123  00F1D4  0E01               	movlw	1
  5124  00F1D6  6E72               	movwf	_SW_EWPED,c
  5125                           
  5126                           ;Lab7_sample_S3_F21.c: 705: SW_EWLT = PORTAbits.RA5;
  5127  00F1D8  0E00               	movlw	0
  5128  00F1DA  BA80               	btfsc	3968,5,c	;volatile
  5129  00F1DC  0E01               	movlw	1
  5130  00F1DE  6E71               	movwf	_SW_EWLT,c
  5131                           
  5132                           ;Lab7_sample_S3_F21.c: 707: if (SW_NSPED == 0) SW_NSPED_Txt[0] = '0'; else SW_NSPED_Txt[
      +                          0] = '1';
  5133  00F1E0  5075               	movf	_SW_NSPED,w,c
  5134  00F1E2  A4D8               	btfss	status,2,c
  5135  00F1E4  D002               	goto	l2953
  5136  00F1E6  0E30               	movlw	48
  5137  00F1E8  D001               	goto	L1
  5138  00F1EA                     l2953:
  5139  00F1EA  0E31               	movlw	49
  5140  00F1EC                     L1:
  5141  00F1EC  6E62               	movwf	_SW_NSPED_Txt,c
  5142                           
  5143                           ;Lab7_sample_S3_F21.c: 708: if (SW_NSLT == 0) SW_NSLT_Txt[0] = '0'; else SW_NSLT_Txt[0] 
      +                          = '1';
  5144  00F1EE  5074               	movf	_SW_NSLT,w,c
  5145  00F1F0  A4D8               	btfss	status,2,c
  5146  00F1F2  D002               	goto	l2957
  5147  00F1F4  0E30               	movlw	48
  5148  00F1F6  D001               	goto	L2
  5149  00F1F8                     l2957:
  5150  00F1F8  0E31               	movlw	49
  5151  00F1FA                     L2:
  5152  00F1FA  6E60               	movwf	_SW_NSLT_Txt,c
  5153                           
  5154                           ;Lab7_sample_S3_F21.c: 709: if (SW_EWPED == 0) SW_EWPED_Txt[0] = '0'; else SW_EWPED_Txt[
      +                          0] = '1';
  5155  00F1FC  5072               	movf	_SW_EWPED,w,c
  5156  00F1FE  A4D8               	btfss	status,2,c
  5157  00F200  D002               	goto	l2961
  5158  00F202  0E30               	movlw	48
  5159  00F204  D001               	goto	L3
  5160  00F206                     l2961:
  5161  00F206  0E31               	movlw	49
  5162  00F208                     L3:
  5163  00F208  6E5C               	movwf	_SW_EWPED_Txt,c
  5164                           
  5165                           ;Lab7_sample_S3_F21.c: 710: if (SW_EWLT == 0) SW_EWLT_Txt[0] = '0'; else SW_EWLT_Txt[0] 
      +                          = '1';
  5166  00F20A  5071               	movf	_SW_EWLT,w,c
  5167  00F20C  A4D8               	btfss	status,2,c
  5168  00F20E  D002               	goto	l2965
  5169  00F210  0E30               	movlw	48
  5170  00F212  D001               	goto	L4
  5171  00F214                     l2965:
  5172  00F214  0E31               	movlw	49
  5173  00F216                     L4:
  5174  00F216  6E5A               	movwf	_SW_EWLT_Txt,c
  5175  00F218  D000               	goto	l2967
  5176  00F21A                     l2967:
  5177                           
  5178                           ;Lab7_sample_S3_F21.c: 713: drawtext(35,10, Act_Mode_Txt, 0xFFFF, 0x0000, 1);
  5179  00F21A  0E0A               	movlw	10
  5180  00F21C  6E29               	movwf	drawtext@y,c
  5181  00F21E  0E54               	movlw	low _Act_Mode_Txt
  5182  00F220  6E2A               	movwf	drawtext@_text,c
  5183  00F222  0E00               	movlw	high _Act_Mode_Txt
  5184  00F224  6E2B               	movwf	drawtext@_text+1,c
  5185  00F226  0EFF               	movlw	255
  5186  00F228  6E2D               	movwf	drawtext@color+1,c
  5187  00F22A  682C               	setf	drawtext@color,c
  5188  00F22C  0E00               	movlw	0
  5189  00F22E  6E2F               	movwf	drawtext@bg+1,c
  5190  00F230  0E00               	movlw	0
  5191  00F232  6E2E               	movwf	drawtext@bg,c
  5192  00F234  0E01               	movlw	1
  5193  00F236  6E30               	movwf	drawtext@size,c
  5194  00F238  0E23               	movlw	35
  5195  00F23A  ECE4  F073         	call	_drawtext
  5196                           
  5197                           ;Lab7_sample_S3_F21.c: 714: drawtext(70,10, FlashingR_Txt, 0xFFFF, 0x0000, 1);
  5198  00F23E  0E0A               	movlw	10
  5199  00F240  6E29               	movwf	drawtext@y,c
  5200  00F242  0E56               	movlw	low _FlashingR_Txt
  5201  00F244  6E2A               	movwf	drawtext@_text,c
  5202  00F246  0E00               	movlw	high _FlashingR_Txt
  5203  00F248  6E2B               	movwf	drawtext@_text+1,c
  5204  00F24A  0EFF               	movlw	255
  5205  00F24C  6E2D               	movwf	drawtext@color+1,c
  5206  00F24E  682C               	setf	drawtext@color,c
  5207  00F250  0E00               	movlw	0
  5208  00F252  6E2F               	movwf	drawtext@bg+1,c
  5209  00F254  0E00               	movlw	0
  5210  00F256  6E2E               	movwf	drawtext@bg,c
  5211  00F258  0E01               	movlw	1
  5212  00F25A  6E30               	movwf	drawtext@size,c
  5213  00F25C  0E46               	movlw	70
  5214  00F25E  ECE4  F073         	call	_drawtext
  5215                           
  5216                           ;Lab7_sample_S3_F21.c: 715: drawtext(100,10, FlashingS_Txt, 0xFFFF, 0x0000, 1);
  5217  00F262  0E0A               	movlw	10
  5218  00F264  6E29               	movwf	drawtext@y,c
  5219  00F266  0E58               	movlw	low _FlashingS_Txt
  5220  00F268  6E2A               	movwf	drawtext@_text,c
  5221  00F26A  0E00               	movlw	high _FlashingS_Txt
  5222  00F26C  6E2B               	movwf	drawtext@_text+1,c
  5223  00F26E  0EFF               	movlw	255
  5224  00F270  6E2D               	movwf	drawtext@color+1,c
  5225  00F272  682C               	setf	drawtext@color,c
  5226  00F274  0E00               	movlw	0
  5227  00F276  6E2F               	movwf	drawtext@bg+1,c
  5228  00F278  0E00               	movlw	0
  5229  00F27A  6E2E               	movwf	drawtext@bg,c
  5230  00F27C  0E01               	movlw	1
  5231  00F27E  6E30               	movwf	drawtext@size,c
  5232  00F280  0E64               	movlw	100
  5233  00F282  ECE4  F073         	call	_drawtext
  5234                           
  5235                           ;Lab7_sample_S3_F21.c: 716: drawtext(6, 140+9, SW_NSPED_Txt, 0xFFFF, 0x0000, 1);
  5236  00F286  0E95               	movlw	149
  5237  00F288  6E29               	movwf	drawtext@y,c
  5238  00F28A  0E62               	movlw	low _SW_NSPED_Txt
  5239  00F28C  6E2A               	movwf	drawtext@_text,c
  5240  00F28E  0E00               	movlw	high _SW_NSPED_Txt
  5241  00F290  6E2B               	movwf	drawtext@_text+1,c
  5242  00F292  0EFF               	movlw	255
  5243  00F294  6E2D               	movwf	drawtext@color+1,c
  5244  00F296  682C               	setf	drawtext@color,c
  5245  00F298  0E00               	movlw	0
  5246  00F29A  6E2F               	movwf	drawtext@bg+1,c
  5247  00F29C  0E00               	movlw	0
  5248  00F29E  6E2E               	movwf	drawtext@bg,c
  5249  00F2A0  0E01               	movlw	1
  5250  00F2A2  6E30               	movwf	drawtext@size,c
  5251  00F2A4  0E06               	movlw	6
  5252  00F2A6  ECE4  F073         	call	_drawtext
  5253                           
  5254                           ;Lab7_sample_S3_F21.c: 717: drawtext(32, 140+9, SW_NSLT_Txt, 0xFFFF, 0x0000, 1);
  5255  00F2AA  0E95               	movlw	149
  5256  00F2AC  6E29               	movwf	drawtext@y,c
  5257  00F2AE  0E60               	movlw	low _SW_NSLT_Txt
  5258  00F2B0  6E2A               	movwf	drawtext@_text,c
  5259  00F2B2  0E00               	movlw	high _SW_NSLT_Txt
  5260  00F2B4  6E2B               	movwf	drawtext@_text+1,c
  5261  00F2B6  0EFF               	movlw	255
  5262  00F2B8  6E2D               	movwf	drawtext@color+1,c
  5263  00F2BA  682C               	setf	drawtext@color,c
  5264  00F2BC  0E00               	movlw	0
  5265  00F2BE  6E2F               	movwf	drawtext@bg+1,c
  5266  00F2C0  0E00               	movlw	0
  5267  00F2C2  6E2E               	movwf	drawtext@bg,c
  5268  00F2C4  0E01               	movlw	1
  5269  00F2C6  6E30               	movwf	drawtext@size,c
  5270  00F2C8  0E20               	movlw	32
  5271  00F2CA  ECE4  F073         	call	_drawtext
  5272                           
  5273                           ;Lab7_sample_S3_F21.c: 718: drawtext(58, 140+9, SW_EWPED_Txt, 0xFFFF, 0x0000, 1);
  5274  00F2CE  0E95               	movlw	149
  5275  00F2D0  6E29               	movwf	drawtext@y,c
  5276  00F2D2  0E5C               	movlw	low _SW_EWPED_Txt
  5277  00F2D4  6E2A               	movwf	drawtext@_text,c
  5278  00F2D6  0E00               	movlw	high _SW_EWPED_Txt
  5279  00F2D8  6E2B               	movwf	drawtext@_text+1,c
  5280  00F2DA  0EFF               	movlw	255
  5281  00F2DC  6E2D               	movwf	drawtext@color+1,c
  5282  00F2DE  682C               	setf	drawtext@color,c
  5283  00F2E0  0E00               	movlw	0
  5284  00F2E2  6E2F               	movwf	drawtext@bg+1,c
  5285  00F2E4  0E00               	movlw	0
  5286  00F2E6  6E2E               	movwf	drawtext@bg,c
  5287  00F2E8  0E01               	movlw	1
  5288  00F2EA  6E30               	movwf	drawtext@size,c
  5289  00F2EC  0E3A               	movlw	58
  5290  00F2EE  ECE4  F073         	call	_drawtext
  5291                           
  5292                           ;Lab7_sample_S3_F21.c: 719: drawtext(87, 140+9, SW_EWLT_Txt, 0xFFFF, 0x0000, 1);
  5293  00F2F2  0E95               	movlw	149
  5294  00F2F4  6E29               	movwf	drawtext@y,c
  5295  00F2F6  0E5A               	movlw	low _SW_EWLT_Txt
  5296  00F2F8  6E2A               	movwf	drawtext@_text,c
  5297  00F2FA  0E00               	movlw	high _SW_EWLT_Txt
  5298  00F2FC  6E2B               	movwf	drawtext@_text+1,c
  5299  00F2FE  0EFF               	movlw	255
  5300  00F300  6E2D               	movwf	drawtext@color+1,c
  5301  00F302  682C               	setf	drawtext@color,c
  5302  00F304  0E00               	movlw	0
  5303  00F306  6E2F               	movwf	drawtext@bg+1,c
  5304  00F308  0E00               	movlw	0
  5305  00F30A  6E2E               	movwf	drawtext@bg,c
  5306  00F30C  0E01               	movlw	1
  5307  00F30E  6E30               	movwf	drawtext@size,c
  5308  00F310  0E57               	movlw	87
  5309  00F312  ECE4  F073         	call	_drawtext
  5310                           
  5311                           ;Lab7_sample_S3_F21.c: 720: drawtext(112, 140+9, SW_MODE_Txt, 0xFFFF, 0x0000, 1);
  5312  00F316  0E95               	movlw	149
  5313  00F318  6E29               	movwf	drawtext@y,c
  5314  00F31A  0E5E               	movlw	low _SW_MODE_Txt
  5315  00F31C  6E2A               	movwf	drawtext@_text,c
  5316  00F31E  0E00               	movlw	high _SW_MODE_Txt
  5317  00F320  6E2B               	movwf	drawtext@_text+1,c
  5318  00F322  0EFF               	movlw	255
  5319  00F324  6E2D               	movwf	drawtext@color+1,c
  5320  00F326  682C               	setf	drawtext@color,c
  5321  00F328  0E00               	movlw	0
  5322  00F32A  6E2F               	movwf	drawtext@bg+1,c
  5323  00F32C  0E00               	movlw	0
  5324  00F32E  6E2E               	movwf	drawtext@bg,c
  5325  00F330  0E01               	movlw	1
  5326  00F332  6E30               	movwf	drawtext@size,c
  5327  00F334  0E70               	movlw	112
  5328  00F336  ECE4  F073         	call	_drawtext
  5329  00F33A  0012               	return		;funcret
  5330  00F33C                     __end_of_update_LCD_misc:
  5331                           	opt stack 0
  5332                           tblptru	equ	0xFF8
  5333                           tblptrh	equ	0xFF7
  5334                           tblptrl	equ	0xFF6
  5335                           tablat	equ	0xFF5
  5336                           postinc0	equ	0xFEE
  5337                           wreg	equ	0xFE8
  5338                           postdec1	equ	0xFE5
  5339                           fsr1l	equ	0xFE1
  5340                           status	equ	0xFD8
  5341                           
  5342 ;; *************** function _get_full_ADC *****************
  5343 ;; Defined at:
  5344 ;;		line 317 in file "Lab7_sample_S3_F21.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  result          2    4[COMRAM] unsigned int 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  2    0[COMRAM] unsigned int 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, status,0
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;Total ram usage:        6 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_main
  5368 ;;		_update_LCD_misc
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text22
  5373  00DABC                     __ptext22:
  5374                           	opt stack 0
  5375  00DABC                     _get_full_ADC:
  5376                           	opt stack 30
  5377                           
  5378                           ;Lab7_sample_S3_F21.c: 319: unsigned int result;
  5379                           ;Lab7_sample_S3_F21.c: 320: ADCON0bits.GO=1;
  5380                           
  5381                           ;incstack = 0
  5382  00DABC  82C2               	bsf	4034,1,c	;volatile
  5383                           
  5384                           ;Lab7_sample_S3_F21.c: 321: while(ADCON0bits.DONE==1);
  5385  00DABE  D000               	goto	l376
  5386  00DAC0                     l376:
  5387  00DAC0  B2C2               	btfsc	4034,1,c	;volatile
  5388  00DAC2  D7FE               	goto	l376
  5389                           
  5390                           ;Lab7_sample_S3_F21.c: 322: result = (ADRESH * 0x100) + ADRESL;
  5391  00DAC4  50C4               	movf	4036,w,c	;volatile
  5392  00DAC6  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5393  00DAC8  6A03               	clrf	??_get_full_ADC& (0+255),c
  5394  00DACA  50C3               	movf	4035,w,c	;volatile
  5395  00DACC  2403               	addwf	??_get_full_ADC,w,c
  5396  00DACE  6E05               	movwf	get_full_ADC@result,c
  5397  00DAD0  0E00               	movlw	0
  5398  00DAD2  2004               	addwfc	??_get_full_ADC+1,w,c
  5399  00DAD4  6E06               	movwf	get_full_ADC@result+1,c
  5400                           
  5401                           ;Lab7_sample_S3_F21.c: 324: return result;
  5402  00DAD6  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5403  00DADA  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5404  00DADE  D000               	goto	l379
  5405  00DAE0                     l379:
  5406  00DAE0  0012               	return		;funcret
  5407  00DAE2                     __end_of_get_full_ADC:
  5408                           	opt stack 0
  5409                           tblptru	equ	0xFF8
  5410                           tblptrh	equ	0xFF7
  5411                           tblptrl	equ	0xFF6
  5412                           tablat	equ	0xFF5
  5413                           postinc0	equ	0xFEE
  5414                           wreg	equ	0xFE8
  5415                           postdec1	equ	0xFE5
  5416                           fsr1l	equ	0xFE1
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function ___ftge *****************
  5420 ;; Defined at:
  5421 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  ff1             3    0[COMRAM] float 
  5424 ;;  ff2             3    3[COMRAM] float 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;		None               void
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5436 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;Total ram usage:        9 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_main
  5446 ;;		_update_LCD_misc
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text23
  5451  00E2BC                     __ptext23:
  5452                           	opt stack 0
  5453  00E2BC                     ___ftge:
  5454                           	opt stack 30
  5455                           
  5456                           ;incstack = 0
  5457  00E2BC  AE03               	btfss	___ftge@ff1+2,7,c
  5458  00E2BE  D017               	goto	l2851
  5459  00E2C0  C001  F007         	movff	___ftge@ff1,??___ftge
  5460  00E2C4  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5461  00E2C8  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5462  00E2CC  1E07               	comf	??___ftge,f,c
  5463  00E2CE  1E08               	comf	??___ftge+1,f,c
  5464  00E2D0  1E09               	comf	??___ftge+2,f,c
  5465  00E2D2  2A07               	incf	??___ftge,f,c
  5466  00E2D4  0E00               	movlw	0
  5467  00E2D6  2208               	addwfc	??___ftge+1,f,c
  5468  00E2D8  2209               	addwfc	??___ftge+2,f,c
  5469  00E2DA  0E00               	movlw	0
  5470  00E2DC  2407               	addwf	??___ftge,w,c
  5471  00E2DE  6E01               	movwf	___ftge@ff1,c
  5472  00E2E0  0E00               	movlw	0
  5473  00E2E2  2008               	addwfc	??___ftge+1,w,c
  5474  00E2E4  6E02               	movwf	___ftge@ff1+1,c
  5475  00E2E6  0E80               	movlw	128
  5476  00E2E8  2009               	addwfc	??___ftge+2,w,c
  5477  00E2EA  6E03               	movwf	___ftge@ff1+2,c
  5478  00E2EC  D000               	goto	l2851
  5479  00E2EE                     l2851:
  5480  00E2EE  AE06               	btfss	___ftge@ff2+2,7,c
  5481  00E2F0  D017               	goto	l2855
  5482  00E2F2  C004  F007         	movff	___ftge@ff2,??___ftge
  5483  00E2F6  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5484  00E2FA  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5485  00E2FE  1E07               	comf	??___ftge,f,c
  5486  00E300  1E08               	comf	??___ftge+1,f,c
  5487  00E302  1E09               	comf	??___ftge+2,f,c
  5488  00E304  2A07               	incf	??___ftge,f,c
  5489  00E306  0E00               	movlw	0
  5490  00E308  2208               	addwfc	??___ftge+1,f,c
  5491  00E30A  2209               	addwfc	??___ftge+2,f,c
  5492  00E30C  0E00               	movlw	0
  5493  00E30E  2407               	addwf	??___ftge,w,c
  5494  00E310  6E04               	movwf	___ftge@ff2,c
  5495  00E312  0E00               	movlw	0
  5496  00E314  2008               	addwfc	??___ftge+1,w,c
  5497  00E316  6E05               	movwf	___ftge@ff2+1,c
  5498  00E318  0E80               	movlw	128
  5499  00E31A  2009               	addwfc	??___ftge+2,w,c
  5500  00E31C  6E06               	movwf	___ftge@ff2+2,c
  5501  00E31E  D000               	goto	l2855
  5502  00E320                     l2855:
  5503  00E320  0E00               	movlw	0
  5504  00E322  1A01               	xorwf	___ftge@ff1,f,c
  5505  00E324  0E00               	movlw	0
  5506  00E326  1A02               	xorwf	___ftge@ff1+1,f,c
  5507  00E328  0E80               	movlw	128
  5508  00E32A  1A03               	xorwf	___ftge@ff1+2,f,c
  5509  00E32C  0E00               	movlw	0
  5510  00E32E  1A04               	xorwf	___ftge@ff2,f,c
  5511  00E330  0E00               	movlw	0
  5512  00E332  1A05               	xorwf	___ftge@ff2+1,f,c
  5513  00E334  0E80               	movlw	128
  5514  00E336  1A06               	xorwf	___ftge@ff2+2,f,c
  5515  00E338  5004               	movf	___ftge@ff2,w,c
  5516  00E33A  5C01               	subwf	___ftge@ff1,w,c
  5517  00E33C  5005               	movf	___ftge@ff2+1,w,c
  5518  00E33E  5802               	subwfb	___ftge@ff1+1,w,c
  5519  00E340  5006               	movf	___ftge@ff2+2,w,c
  5520  00E342  5803               	subwfb	___ftge@ff1+2,w,c
  5521  00E344  B0D8               	btfsc	status,0,c
  5522  00E346  D002               	goto	l2861
  5523  00E348  90D8               	bcf	status,0,c
  5524  00E34A  D002               	goto	l917
  5525  00E34C                     l2861:
  5526  00E34C  80D8               	bsf	status,0,c
  5527  00E34E  D000               	goto	l917
  5528  00E350                     l917:
  5529  00E350  0012               	return		;funcret
  5530  00E352                     __end_of___ftge:
  5531                           	opt stack 0
  5532                           tblptru	equ	0xFF8
  5533                           tblptrh	equ	0xFF7
  5534                           tblptrl	equ	0xFF6
  5535                           tablat	equ	0xFF5
  5536                           postinc0	equ	0xFEE
  5537                           wreg	equ	0xFE8
  5538                           postdec1	equ	0xFE5
  5539                           fsr1l	equ	0xFE1
  5540                           status	equ	0xFD8
  5541                           
  5542 ;; *************** function ___ftdiv *****************
  5543 ;; Defined at:
  5544 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  f1              3   12[COMRAM] float 
  5547 ;;  f2              3   15[COMRAM] float 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  f3              3   22[COMRAM] float 
  5550 ;;  sign            1   26[COMRAM] unsigned char 
  5551 ;;  exp             1   25[COMRAM] unsigned char 
  5552 ;;  cntr            1   21[COMRAM] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  3   12[COMRAM] float 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, status,0, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5562 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;Total ram usage:       15 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    1
  5569 ;; This function calls:
  5570 ;;		___ftpack
  5571 ;; This function is called by:
  5572 ;;		_main
  5573 ;;		_update_LCD_misc
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text24
  5578  00E8A6                     __ptext24:
  5579                           	opt stack 0
  5580  00E8A6                     ___ftdiv:
  5581                           	opt stack 29
  5582                           
  5583                           ;incstack = 0
  5584  00E8A6  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  5585  00E8AA  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5586  00E8AC  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5587  00E8AE  340E               	rlcf	___ftdiv@f1+1,w,c
  5588  00E8B0  3613               	rlcf	??___ftdiv& (0+255),f,c
  5589  00E8B2  E301               	bnc	u1701
  5590  00E8B4  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5591  00E8B6                     u1701:
  5592  00E8B6  5013               	movf	??___ftdiv,w,c
  5593  00E8B8  6E1A               	movwf	___ftdiv@exp,c
  5594  00E8BA  501A               	movf	___ftdiv@exp,w,c
  5595  00E8BC  A4D8               	btfss	status,2,c
  5596  00E8BE  D002               	goto	l2795
  5597  00E8C0  D00E               	goto	l2797
  5598  00E8C2  D061               	goto	l908
  5599  00E8C4                     l2795:
  5600  00E8C4  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  5601  00E8C8  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  5602  00E8CA  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  5603  00E8CC  3411               	rlcf	___ftdiv@f2+1,w,c
  5604  00E8CE  3613               	rlcf	??___ftdiv& (0+255),f,c
  5605  00E8D0  E301               	bnc	u1721
  5606  00E8D2  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  5607  00E8D4                     u1721:
  5608  00E8D4  5013               	movf	??___ftdiv,w,c
  5609  00E8D6  6E1B               	movwf	___ftdiv@sign,c
  5610  00E8D8  501B               	movf	___ftdiv@sign,w,c
  5611  00E8DA  A4D8               	btfss	status,2,c
  5612  00E8DC  D007               	goto	l2801
  5613  00E8DE                     l2797:
  5614  00E8DE  0E00               	movlw	0
  5615  00E8E0  6E0D               	movwf	?___ftdiv,c
  5616  00E8E2  0E00               	movlw	0
  5617  00E8E4  6E0E               	movwf	?___ftdiv+1,c
  5618  00E8E6  0E00               	movlw	0
  5619  00E8E8  6E0F               	movwf	?___ftdiv+2,c
  5620  00E8EA  D04D               	goto	l908
  5621  00E8EC                     l2801:
  5622  00E8EC  0E00               	movlw	0
  5623  00E8EE  6E17               	movwf	___ftdiv@f3,c
  5624  00E8F0  0E00               	movlw	0
  5625  00E8F2  6E18               	movwf	___ftdiv@f3+1,c
  5626  00E8F4  0E00               	movlw	0
  5627  00E8F6  6E19               	movwf	___ftdiv@f3+2,c
  5628  00E8F8  501B               	movf	___ftdiv@sign,w,c
  5629  00E8FA  0F89               	addlw	137
  5630  00E8FC  5E1A               	subwf	___ftdiv@exp,f,c
  5631  00E8FE  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  5632  00E902  5012               	movf	___ftdiv@f2+2,w,c
  5633  00E904  1A1B               	xorwf	___ftdiv@sign,f,c
  5634  00E906  0E80               	movlw	128
  5635  00E908  161B               	andwf	___ftdiv@sign,f,c
  5636  00E90A  8E0E               	bsf	___ftdiv@f1+1,7,c
  5637  00E90C  0EFF               	movlw	255
  5638  00E90E  160D               	andwf	___ftdiv@f1,f,c
  5639  00E910  0EFF               	movlw	255
  5640  00E912  160E               	andwf	___ftdiv@f1+1,f,c
  5641  00E914  0E00               	movlw	0
  5642  00E916  160F               	andwf	___ftdiv@f1+2,f,c
  5643  00E918  8E11               	bsf	___ftdiv@f2+1,7,c
  5644  00E91A  0EFF               	movlw	255
  5645  00E91C  1610               	andwf	___ftdiv@f2,f,c
  5646  00E91E  0EFF               	movlw	255
  5647  00E920  1611               	andwf	___ftdiv@f2+1,f,c
  5648  00E922  0E00               	movlw	0
  5649  00E924  1612               	andwf	___ftdiv@f2+2,f,c
  5650  00E926  0E18               	movlw	24
  5651  00E928  6E16               	movwf	___ftdiv@cntr,c
  5652  00E92A  D000               	goto	l2821
  5653  00E92C                     l2821:
  5654  00E92C  90D8               	bcf	status,0,c
  5655  00E92E  3617               	rlcf	___ftdiv@f3,f,c
  5656  00E930  3618               	rlcf	___ftdiv@f3+1,f,c
  5657  00E932  3619               	rlcf	___ftdiv@f3+2,f,c
  5658  00E934  5010               	movf	___ftdiv@f2,w,c
  5659  00E936  5C0D               	subwf	___ftdiv@f1,w,c
  5660  00E938  5011               	movf	___ftdiv@f2+1,w,c
  5661  00E93A  580E               	subwfb	___ftdiv@f1+1,w,c
  5662  00E93C  5012               	movf	___ftdiv@f2+2,w,c
  5663  00E93E  580F               	subwfb	___ftdiv@f1+2,w,c
  5664  00E940  A0D8               	btfss	status,0,c
  5665  00E942  D007               	goto	l911
  5666  00E944  5010               	movf	___ftdiv@f2,w,c
  5667  00E946  5E0D               	subwf	___ftdiv@f1,f,c
  5668  00E948  5011               	movf	___ftdiv@f2+1,w,c
  5669  00E94A  5A0E               	subwfb	___ftdiv@f1+1,f,c
  5670  00E94C  5012               	movf	___ftdiv@f2+2,w,c
  5671  00E94E  5A0F               	subwfb	___ftdiv@f1+2,f,c
  5672  00E950  8017               	bsf	___ftdiv@f3,0,c
  5673  00E952                     l911:
  5674  00E952  90D8               	bcf	status,0,c
  5675  00E954  360D               	rlcf	___ftdiv@f1,f,c
  5676  00E956  360E               	rlcf	___ftdiv@f1+1,f,c
  5677  00E958  360F               	rlcf	___ftdiv@f1+2,f,c
  5678  00E95A  2E16               	decfsz	___ftdiv@cntr,f,c
  5679  00E95C  D7E7               	goto	l2821
  5680  00E95E  D000               	goto	l2831
  5681  00E960                     l2831:
  5682  00E960  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  5683  00E964  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5684  00E968  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5685  00E96C  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  5686  00E970  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  5687  00E974  EC13  F073         	call	___ftpack	;wreg free
  5688  00E978  C001  F00D         	movff	?___ftpack,?___ftdiv
  5689  00E97C  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  5690  00E980  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  5691  00E984  D000               	goto	l908
  5692  00E986                     l908:
  5693  00E986  0012               	return		;funcret
  5694  00E988                     __end_of___ftdiv:
  5695                           	opt stack 0
  5696                           tblptru	equ	0xFF8
  5697                           tblptrh	equ	0xFF7
  5698                           tblptrl	equ	0xFF6
  5699                           tablat	equ	0xFF5
  5700                           postinc0	equ	0xFEE
  5701                           wreg	equ	0xFE8
  5702                           postdec1	equ	0xFE5
  5703                           fsr1l	equ	0xFE1
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function ___awtoft *****************
  5707 ;; Defined at:
  5708 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  c               2    8[COMRAM] int 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  sign            1   11[COMRAM] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  3    8[COMRAM] float 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5722 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        4 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    1
  5729 ;; This function calls:
  5730 ;;		___ftpack
  5731 ;; This function is called by:
  5732 ;;		_main
  5733 ;;		_update_LCD_misc
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text25
  5738  00DBF6                     __ptext25:
  5739                           	opt stack 0
  5740  00DBF6                     ___awtoft:
  5741                           	opt stack 29
  5742                           
  5743                           ;incstack = 0
  5744  00DBF6  0E00               	movlw	0
  5745  00DBF8  6E0C               	movwf	___awtoft@sign,c
  5746  00DBFA  AE0A               	btfss	___awtoft@c+1,7,c
  5747  00DBFC  D007               	goto	l2843
  5748  00DBFE  6C09               	negf	___awtoft@c,c
  5749  00DC00  1E0A               	comf	___awtoft@c+1,f,c
  5750  00DC02  B0D8               	btfsc	status,0,c
  5751  00DC04  2A0A               	incf	___awtoft@c+1,f,c
  5752  00DC06  0E01               	movlw	1
  5753  00DC08  6E0C               	movwf	___awtoft@sign,c
  5754  00DC0A  D000               	goto	l2843
  5755  00DC0C                     l2843:
  5756  00DC0C  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5757  00DC10  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5758  00DC14  6A03               	clrf	___ftpack@arg+2,c
  5759  00DC16  0E8E               	movlw	142
  5760  00DC18  6E04               	movwf	___ftpack@exp,c
  5761  00DC1A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5762  00DC1E  EC13  F073         	call	___ftpack	;wreg free
  5763  00DC22  C001  F009         	movff	?___ftpack,?___awtoft
  5764  00DC26  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5765  00DC2A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5766  00DC2E  D000               	goto	l746
  5767  00DC30                     l746:
  5768  00DC30  0012               	return		;funcret
  5769  00DC32                     __end_of___awtoft:
  5770                           	opt stack 0
  5771                           tblptru	equ	0xFF8
  5772                           tblptrh	equ	0xFF7
  5773                           tblptrl	equ	0xFF6
  5774                           tablat	equ	0xFF5
  5775                           postinc0	equ	0xFEE
  5776                           wreg	equ	0xFE8
  5777                           postdec1	equ	0xFE5
  5778                           fsr1l	equ	0xFE1
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function ___ftpack *****************
  5782 ;; Defined at:
  5783 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  arg             3    0[COMRAM] unsigned um
  5786 ;;  exp             1    3[COMRAM] unsigned char 
  5787 ;;  sign            1    4[COMRAM] unsigned char 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  3    0[COMRAM] float 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5799 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;Total ram usage:        8 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		___awtoft
  5809 ;;		___ftdiv
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text26
  5814  00E626                     __ptext26:
  5815                           	opt stack 0
  5816  00E626                     ___ftpack:
  5817                           	opt stack 29
  5818                           
  5819                           ;incstack = 0
  5820  00E626  5004               	movf	___ftpack@exp,w,c
  5821  00E628  B4D8               	btfsc	status,2,c
  5822  00E62A  D005               	goto	l2681
  5823  00E62C  5001               	movf	___ftpack@arg,w,c
  5824  00E62E  1002               	iorwf	___ftpack@arg+1,w,c
  5825  00E630  1003               	iorwf	___ftpack@arg+2,w,c
  5826  00E632  A4D8               	btfss	status,2,c
  5827  00E634  D00E               	goto	l2687
  5828  00E636                     l2681:
  5829  00E636  0E00               	movlw	0
  5830  00E638  6E01               	movwf	?___ftpack,c
  5831  00E63A  0E00               	movlw	0
  5832  00E63C  6E02               	movwf	?___ftpack+1,c
  5833  00E63E  0E00               	movlw	0
  5834  00E640  6E03               	movwf	?___ftpack+2,c
  5835  00E642  D053               	goto	l836
  5836  00E644  D006               	goto	l2687
  5837  00E646                     l2685:
  5838  00E646  2A04               	incf	___ftpack@exp,f,c
  5839  00E648  90D8               	bcf	status,0,c
  5840  00E64A  3203               	rrcf	___ftpack@arg+2,f,c
  5841  00E64C  3202               	rrcf	___ftpack@arg+1,f,c
  5842  00E64E  3201               	rrcf	___ftpack@arg,f,c
  5843  00E650  D000               	goto	l2687
  5844  00E652                     l2687:
  5845  00E652  0E00               	movlw	0
  5846  00E654  1401               	andwf	___ftpack@arg,w,c
  5847  00E656  6E06               	movwf	??___ftpack& (0+255),c
  5848  00E658  0E00               	movlw	0
  5849  00E65A  1402               	andwf	___ftpack@arg+1,w,c
  5850  00E65C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5851  00E65E  0EFE               	movlw	254
  5852  00E660  1403               	andwf	___ftpack@arg+2,w,c
  5853  00E662  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5854  00E664  5006               	movf	??___ftpack,w,c
  5855  00E666  1007               	iorwf	??___ftpack+1,w,c
  5856  00E668  1008               	iorwf	??___ftpack+2,w,c
  5857  00E66A  B4D8               	btfsc	status,2,c
  5858  00E66C  D00E               	goto	l2693
  5859  00E66E  D7EB               	goto	l2685
  5860  00E670  D00C               	goto	l2693
  5861  00E672                     l2689:
  5862  00E672  2A04               	incf	___ftpack@exp,f,c
  5863  00E674  0E01               	movlw	1
  5864  00E676  2601               	addwf	___ftpack@arg,f,c
  5865  00E678  0E00               	movlw	0
  5866  00E67A  2202               	addwfc	___ftpack@arg+1,f,c
  5867  00E67C  0E00               	movlw	0
  5868  00E67E  2203               	addwfc	___ftpack@arg+2,f,c
  5869  00E680  90D8               	bcf	status,0,c
  5870  00E682  3203               	rrcf	___ftpack@arg+2,f,c
  5871  00E684  3202               	rrcf	___ftpack@arg+1,f,c
  5872  00E686  3201               	rrcf	___ftpack@arg,f,c
  5873  00E688  D000               	goto	l2693
  5874  00E68A                     l2693:
  5875  00E68A  0E00               	movlw	0
  5876  00E68C  1401               	andwf	___ftpack@arg,w,c
  5877  00E68E  6E06               	movwf	??___ftpack& (0+255),c
  5878  00E690  0E00               	movlw	0
  5879  00E692  1402               	andwf	___ftpack@arg+1,w,c
  5880  00E694  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5881  00E696  0EFF               	movlw	255
  5882  00E698  1403               	andwf	___ftpack@arg+2,w,c
  5883  00E69A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5884  00E69C  5006               	movf	??___ftpack,w,c
  5885  00E69E  1007               	iorwf	??___ftpack+1,w,c
  5886  00E6A0  1008               	iorwf	??___ftpack+2,w,c
  5887  00E6A2  B4D8               	btfsc	status,2,c
  5888  00E6A4  D008               	goto	l2697
  5889  00E6A6  D7E5               	goto	l2689
  5890  00E6A8  D006               	goto	l2697
  5891  00E6AA                     l2695:
  5892  00E6AA  0604               	decf	___ftpack@exp,f,c
  5893  00E6AC  90D8               	bcf	status,0,c
  5894  00E6AE  3601               	rlcf	___ftpack@arg,f,c
  5895  00E6B0  3602               	rlcf	___ftpack@arg+1,f,c
  5896  00E6B2  3603               	rlcf	___ftpack@arg+2,f,c
  5897  00E6B4  D000               	goto	l2697
  5898  00E6B6                     l2697:
  5899  00E6B6  BE02               	btfsc	___ftpack@arg+1,7,c
  5900  00E6B8  D004               	goto	l847
  5901  00E6BA  0E02               	movlw	2
  5902  00E6BC  6004               	cpfslt	___ftpack@exp,c
  5903  00E6BE  D7F5               	goto	l2695
  5904  00E6C0  D000               	goto	l847
  5905  00E6C2                     l847:
  5906  00E6C2  B004               	btfsc	___ftpack@exp,0,c
  5907  00E6C4  D002               	goto	l2703
  5908  00E6C6  9E02               	bcf	___ftpack@arg+1,7,c
  5909  00E6C8  D000               	goto	l2703
  5910  00E6CA                     l2703:
  5911  00E6CA  90D8               	bcf	status,0,c
  5912  00E6CC  3204               	rrcf	___ftpack@exp,f,c
  5913  00E6CE  5004               	movf	___ftpack@exp,w,c
  5914  00E6D0  1203               	iorwf	___ftpack@arg+2,f,c
  5915  00E6D2  5005               	movf	___ftpack@sign,w,c
  5916  00E6D4  B4D8               	btfsc	status,2,c
  5917  00E6D6  D002               	goto	l2709
  5918  00E6D8  8E03               	bsf	___ftpack@arg+2,7,c
  5919  00E6DA  D000               	goto	l2709
  5920  00E6DC                     l2709:
  5921  00E6DC  C001  F001         	movff	___ftpack@arg,?___ftpack
  5922  00E6E0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5923  00E6E4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5924  00E6E8  D000               	goto	l836
  5925  00E6EA                     l836:
  5926  00E6EA  0012               	return		;funcret
  5927  00E6EC                     __end_of___ftpack:
  5928                           	opt stack 0
  5929                           tblptru	equ	0xFF8
  5930                           tblptrh	equ	0xFF7
  5931                           tblptrl	equ	0xFF6
  5932                           tablat	equ	0xFF5
  5933                           postinc0	equ	0xFEE
  5934                           wreg	equ	0xFE8
  5935                           postdec1	equ	0xFE5
  5936                           fsr1l	equ	0xFE1
  5937                           status	equ	0xFD8
  5938                           
  5939 ;; *************** function _strcpy *****************
  5940 ;; Defined at:
  5941 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  to              2    0[COMRAM] PTR unsigned char 
  5944 ;;		 -> NULL(0), buffer(31), 
  5945 ;;  from            2    2[COMRAM] PTR const unsigned char 
  5946 ;;		 -> STR_14(2), STR_13(2), STR_12(21), STR_11(4), 
  5947 ;;		 -> STR_10(4), STR_9(7), STR_8(10), STR_7(7), 
  5948 ;;		 -> STR_6(12), STR_5(2), STR_4(4), STR_3(4), 
  5949 ;;		 -> STR_2(6), STR_1(20), 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  cp              2    4[COMRAM] PTR unsigned char 
  5952 ;;		 -> NULL(0), buffer(31), 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  2    0[COMRAM] PTR unsigned char 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;Total ram usage:        6 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_Initialize_Screen
  5972 ;;		_Wait_One_Second
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text27
  5977  00DBC4                     __ptext27:
  5978                           	opt stack 0
  5979  00DBC4                     _strcpy:
  5980                           	opt stack 27
  5981                           
  5982                           ;incstack = 0
  5983  00DBC4  C001  F005         	movff	strcpy@to,strcpy@cp
  5984  00DBC8  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  5985  00DBCC  D005               	goto	l2933
  5986  00DBCE                     l2931:
  5987  00DBCE  4A05               	infsnz	strcpy@cp,f,c
  5988  00DBD0  2A06               	incf	strcpy@cp+1,f,c
  5989  00DBD2  4A03               	infsnz	strcpy@from,f,c
  5990  00DBD4  2A04               	incf	strcpy@from+1,f,c
  5991  00DBD6  D000               	goto	l2933
  5992  00DBD8                     l2933:
  5993  00DBD8  C003  FFF6         	movff	strcpy@from,tblptrl
  5994  00DBDC  C004  FFF7         	movff	strcpy@from+1,tblptrh
  5995  00DBE0                     	if	0	;tblptru may be non-zero
  5996  00DBE0                     	endif
  5997  00DBE0                     	if	0	;tblptru may be non-zero
  5998  00DBE0                     	endif
  5999  00DBE0  C005  FFD9         	movff	strcpy@cp,fsr2l
  6000  00DBE4  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  6001  00DBE8  0008               	tblrd		*
  6002  00DBEA  CFF5 FFDF          	movff	tablat,indf2
  6003  00DBEE  50DF               	movf	indf2,w,c
  6004  00DBF0  A4D8               	btfss	status,2,c
  6005  00DBF2  D7ED               	goto	l2931
  6006                           
  6007                           ;	Return value of _strcpy is never used
  6008  00DBF4  0012               	return		;funcret
  6009  00DBF6                     __end_of_strcpy:
  6010                           	opt stack 0
  6011                           tblptru	equ	0xFF8
  6012                           tblptrh	equ	0xFF7
  6013                           tblptrl	equ	0xFF6
  6014                           tablat	equ	0xFF5
  6015                           postinc0	equ	0xFEE
  6016                           wreg	equ	0xFE8
  6017                           postdec1	equ	0xFE5
  6018                           fsr1l	equ	0xFE1
  6019                           indf2	equ	0xFDF
  6020                           fsr2h	equ	0xFDA
  6021                           fsr2l	equ	0xFD9
  6022                           status	equ	0xFD8
  6023                           
  6024 ;; *************** function _Set_NS_LT *****************
  6025 ;; Defined at:
  6026 ;;		line 341 in file "Lab7_sample_S3_F21.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  color           1    wreg     unsigned char 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  color           1   53[COMRAM] unsigned char 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;		None               void
  6033 ;; Registers used:
  6034 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;Total ram usage:        1 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    7
  6047 ;; This function calls:
  6048 ;;		_update_LCD_color
  6049 ;; This function is called by:
  6050 ;;		_Day_Mode
  6051 ;;		_Night_Mode
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text28
  6056  00DDBC                     __ptext28:
  6057                           	opt stack 0
  6058  00DDBC                     _Set_NS_LT:
  6059                           	opt stack 22
  6060                           
  6061                           ;incstack = 0
  6062                           ;Set_NS_LT@color stored from wreg
  6063  00DDBC  6E36               	movwf	Set_NS_LT@color,c
  6064                           
  6065                           ;Lab7_sample_S3_F21.c: 343: direction = 1;
  6066  00DDBE  0E01               	movlw	1
  6067  00DDC0  6E79               	movwf	_direction,c
  6068                           
  6069                           ;Lab7_sample_S3_F21.c: 344: update_LCD_color(direction, color);
  6070  00DDC2  C036  F033         	movff	Set_NS_LT@color,update_LCD_color@color
  6071  00DDC6  5079               	movf	_direction,w,c
  6072  00DDC8  EC9E  F079         	call	_update_LCD_color
  6073                           
  6074                           ;Lab7_sample_S3_F21.c: 346: switch (color)
  6075  00DDCC  D00A               	goto	l3377
  6076  00DDCE                     l392:
  6077  00DDCE  9082               	bcf	3970,0,c	;volatile
  6078  00DDD0  D001               	goto	L5
  6079  00DDD2                     l394:
  6080  00DDD2  8082               	bsf	3970,0,c	;volatile
  6081  00DDD4                     L5:
  6082  00DDD4  9282               	bcf	3970,1,c	;volatile
  6083  00DDD6  D013               	goto	l397
  6084  00DDD8                     l395:
  6085  00DDD8  9082               	bcf	3970,0,c	;volatile
  6086  00DDDA  D001               	goto	L6
  6087  00DDDC                     l396:
  6088  00DDDC  8082               	bsf	3970,0,c	;volatile
  6089  00DDDE                     L6:
  6090  00DDDE  8282               	bsf	3970,1,c	;volatile
  6091                           
  6092                           ;Lab7_sample_S3_F21.c: 352: }
  6093  00DDE0  D00E               	goto	l397
  6094  00DDE2                     l3377:
  6095  00DDE2  5036               	movf	Set_NS_LT@color,w,c
  6096                           
  6097                           ; Switch size 1, requested type "space"
  6098                           ; Number of cases is 4, Range of values is 0 to 3
  6099                           ; switch strategies available:
  6100                           ; Name         Instructions Cycles
  6101                           ; simple_byte           13     7 (average)
  6102                           ;	Chosen strategy is simple_byte
  6103  00DDE4  0A00               	xorlw	0	; case 0
  6104  00DDE6  B4D8               	btfsc	status,2,c
  6105  00DDE8  D7F2               	goto	l392
  6106  00DDEA  0A01               	xorlw	1	; case 1
  6107  00DDEC  B4D8               	btfsc	status,2,c
  6108  00DDEE  D7F1               	goto	l394
  6109  00DDF0  0A03               	xorlw	3	; case 2
  6110  00DDF2  B4D8               	btfsc	status,2,c
  6111  00DDF4  D7F1               	goto	l395
  6112  00DDF6  0A01               	xorlw	1	; case 3
  6113  00DDF8  B4D8               	btfsc	status,2,c
  6114  00DDFA  D7F0               	goto	l396
  6115  00DDFC  D000               	goto	l397
  6116  00DDFE                     l397:
  6117  00DDFE  0012               	return		;funcret
  6118  00DE00                     __end_of_Set_NS_LT:
  6119                           	opt stack 0
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           postinc0	equ	0xFEE
  6125                           wreg	equ	0xFE8
  6126                           postdec1	equ	0xFE5
  6127                           fsr1l	equ	0xFE1
  6128                           indf2	equ	0xFDF
  6129                           fsr2h	equ	0xFDA
  6130                           fsr2l	equ	0xFD9
  6131                           status	equ	0xFD8
  6132                           
  6133 ;; *************** function _Set_NS *****************
  6134 ;; Defined at:
  6135 ;;		line 327 in file "Lab7_sample_S3_F21.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  color           1    wreg     unsigned char 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  color           1   53[COMRAM] unsigned char 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;		None               void
  6142 ;; Registers used:
  6143 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;Total ram usage:        1 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    7
  6156 ;; This function calls:
  6157 ;;		_update_LCD_color
  6158 ;; This function is called by:
  6159 ;;		_Day_Mode
  6160 ;;		_Night_Mode
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text29
  6165  00DD78                     __ptext29:
  6166                           	opt stack 0
  6167  00DD78                     _Set_NS:
  6168                           	opt stack 22
  6169                           
  6170                           ;incstack = 0
  6171                           ;Set_NS@color stored from wreg
  6172  00DD78  6E36               	movwf	Set_NS@color,c
  6173                           
  6174                           ;Lab7_sample_S3_F21.c: 329: direction = 0;
  6175  00DD7A  0E00               	movlw	0
  6176  00DD7C  6E79               	movwf	_direction,c
  6177                           
  6178                           ;Lab7_sample_S3_F21.c: 330: update_LCD_color(direction, color);
  6179  00DD7E  C036  F033         	movff	Set_NS@color,update_LCD_color@color
  6180  00DD82  5079               	movf	_direction,w,c
  6181  00DD84  EC9E  F079         	call	_update_LCD_color
  6182                           
  6183                           ;Lab7_sample_S3_F21.c: 332: switch (color)
  6184  00DD88  D00A               	goto	l3369
  6185  00DD8A                     l383:
  6186  00DD8A  9881               	bcf	3969,4,c	;volatile
  6187  00DD8C  D001               	goto	L7
  6188  00DD8E                     l385:
  6189  00DD8E  8881               	bsf	3969,4,c	;volatile
  6190  00DD90                     L7:
  6191  00DD90  9A81               	bcf	3969,5,c	;volatile
  6192  00DD92  D013               	goto	l388
  6193  00DD94                     l386:
  6194  00DD94  9881               	bcf	3969,4,c	;volatile
  6195  00DD96  D001               	goto	L8
  6196  00DD98                     l387:
  6197  00DD98  8881               	bsf	3969,4,c	;volatile
  6198  00DD9A                     L8:
  6199  00DD9A  8A81               	bsf	3969,5,c	;volatile
  6200                           
  6201                           ;Lab7_sample_S3_F21.c: 338: }
  6202  00DD9C  D00E               	goto	l388
  6203  00DD9E                     l3369:
  6204  00DD9E  5036               	movf	Set_NS@color,w,c
  6205                           
  6206                           ; Switch size 1, requested type "space"
  6207                           ; Number of cases is 4, Range of values is 0 to 3
  6208                           ; switch strategies available:
  6209                           ; Name         Instructions Cycles
  6210                           ; simple_byte           13     7 (average)
  6211                           ;	Chosen strategy is simple_byte
  6212  00DDA0  0A00               	xorlw	0	; case 0
  6213  00DDA2  B4D8               	btfsc	status,2,c
  6214  00DDA4  D7F2               	goto	l383
  6215  00DDA6  0A01               	xorlw	1	; case 1
  6216  00DDA8  B4D8               	btfsc	status,2,c
  6217  00DDAA  D7F1               	goto	l385
  6218  00DDAC  0A03               	xorlw	3	; case 2
  6219  00DDAE  B4D8               	btfsc	status,2,c
  6220  00DDB0  D7F1               	goto	l386
  6221  00DDB2  0A01               	xorlw	1	; case 3
  6222  00DDB4  B4D8               	btfsc	status,2,c
  6223  00DDB6  D7F0               	goto	l387
  6224  00DDB8  D000               	goto	l388
  6225  00DDBA                     l388:
  6226  00DDBA  0012               	return		;funcret
  6227  00DDBC                     __end_of_Set_NS:
  6228                           	opt stack 0
  6229                           tblptru	equ	0xFF8
  6230                           tblptrh	equ	0xFF7
  6231                           tblptrl	equ	0xFF6
  6232                           tablat	equ	0xFF5
  6233                           postinc0	equ	0xFEE
  6234                           wreg	equ	0xFE8
  6235                           postdec1	equ	0xFE5
  6236                           fsr1l	equ	0xFE1
  6237                           indf2	equ	0xFDF
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function _Set_EW_LT *****************
  6243 ;; Defined at:
  6244 ;;		line 369 in file "Lab7_sample_S3_F21.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  color           1    wreg     unsigned char 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  color           1   53[COMRAM] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        1 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    7
  6265 ;; This function calls:
  6266 ;;		_update_LCD_color
  6267 ;; This function is called by:
  6268 ;;		_Day_Mode
  6269 ;;		_Night_Mode
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text30
  6274  00DD34                     __ptext30:
  6275                           	opt stack 0
  6276  00DD34                     _Set_EW_LT:
  6277                           	opt stack 22
  6278                           
  6279                           ;incstack = 0
  6280                           ;Set_EW_LT@color stored from wreg
  6281  00DD34  6E36               	movwf	Set_EW_LT@color,c
  6282                           
  6283                           ;Lab7_sample_S3_F21.c: 371: direction = 3;
  6284  00DD36  0E03               	movlw	3
  6285  00DD38  6E79               	movwf	_direction,c
  6286                           
  6287                           ;Lab7_sample_S3_F21.c: 372: update_LCD_color(direction, color);
  6288  00DD3A  C036  F033         	movff	Set_EW_LT@color,update_LCD_color@color
  6289  00DD3E  5079               	movf	_direction,w,c
  6290  00DD40  EC9E  F079         	call	_update_LCD_color
  6291                           
  6292                           ;Lab7_sample_S3_F21.c: 374: switch (color)
  6293  00DD44  D00A               	goto	l3393
  6294  00DD46                     l410:
  6295  00DD46  9284               	bcf	3972,1,c	;volatile
  6296  00DD48  D001               	goto	L9
  6297  00DD4A                     l412:
  6298  00DD4A  8284               	bsf	3972,1,c	;volatile
  6299  00DD4C                     L9:
  6300  00DD4C  9484               	bcf	3972,2,c	;volatile
  6301  00DD4E  D013               	goto	l415
  6302  00DD50                     l413:
  6303  00DD50  9284               	bcf	3972,1,c	;volatile
  6304  00DD52  D001               	goto	L10
  6305  00DD54                     l414:
  6306  00DD54  8284               	bsf	3972,1,c	;volatile
  6307  00DD56                     L10:
  6308  00DD56  8484               	bsf	3972,2,c	;volatile
  6309                           
  6310                           ;Lab7_sample_S3_F21.c: 380: }
  6311  00DD58  D00E               	goto	l415
  6312  00DD5A                     l3393:
  6313  00DD5A  5036               	movf	Set_EW_LT@color,w,c
  6314                           
  6315                           ; Switch size 1, requested type "space"
  6316                           ; Number of cases is 4, Range of values is 0 to 3
  6317                           ; switch strategies available:
  6318                           ; Name         Instructions Cycles
  6319                           ; simple_byte           13     7 (average)
  6320                           ;	Chosen strategy is simple_byte
  6321  00DD5C  0A00               	xorlw	0	; case 0
  6322  00DD5E  B4D8               	btfsc	status,2,c
  6323  00DD60  D7F2               	goto	l410
  6324  00DD62  0A01               	xorlw	1	; case 1
  6325  00DD64  B4D8               	btfsc	status,2,c
  6326  00DD66  D7F1               	goto	l412
  6327  00DD68  0A03               	xorlw	3	; case 2
  6328  00DD6A  B4D8               	btfsc	status,2,c
  6329  00DD6C  D7F1               	goto	l413
  6330  00DD6E  0A01               	xorlw	1	; case 3
  6331  00DD70  B4D8               	btfsc	status,2,c
  6332  00DD72  D7F0               	goto	l414
  6333  00DD74  D000               	goto	l415
  6334  00DD76                     l415:
  6335  00DD76  0012               	return		;funcret
  6336  00DD78                     __end_of_Set_EW_LT:
  6337                           	opt stack 0
  6338                           tblptru	equ	0xFF8
  6339                           tblptrh	equ	0xFF7
  6340                           tblptrl	equ	0xFF6
  6341                           tablat	equ	0xFF5
  6342                           postinc0	equ	0xFEE
  6343                           wreg	equ	0xFE8
  6344                           postdec1	equ	0xFE5
  6345                           fsr1l	equ	0xFE1
  6346                           indf2	equ	0xFDF
  6347                           fsr2h	equ	0xFDA
  6348                           fsr2l	equ	0xFD9
  6349                           status	equ	0xFD8
  6350                           
  6351 ;; *************** function _Set_EW *****************
  6352 ;; Defined at:
  6353 ;;		line 355 in file "Lab7_sample_S3_F21.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  color           1    wreg     unsigned char 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  color           1   53[COMRAM] unsigned char 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;		None               void
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;Total ram usage:        1 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    7
  6374 ;; This function calls:
  6375 ;;		_update_LCD_color
  6376 ;; This function is called by:
  6377 ;;		_Day_Mode
  6378 ;;		_Night_Mode
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text31
  6383  00DCF0                     __ptext31:
  6384                           	opt stack 0
  6385  00DCF0                     _Set_EW:
  6386                           	opt stack 22
  6387                           
  6388                           ;incstack = 0
  6389                           ;Set_EW@color stored from wreg
  6390  00DCF0  6E36               	movwf	Set_EW@color,c
  6391                           
  6392                           ;Lab7_sample_S3_F21.c: 357: direction = 2;
  6393  00DCF2  0E02               	movlw	2
  6394  00DCF4  6E79               	movwf	_direction,c
  6395                           
  6396                           ;Lab7_sample_S3_F21.c: 358: update_LCD_color(direction, color);
  6397  00DCF6  C036  F033         	movff	Set_EW@color,update_LCD_color@color
  6398  00DCFA  5079               	movf	_direction,w,c
  6399  00DCFC  EC9E  F079         	call	_update_LCD_color
  6400                           
  6401                           ;Lab7_sample_S3_F21.c: 360: switch (color)
  6402  00DD00  D00A               	goto	l3385
  6403  00DD02                     l401:
  6404  00DD02  9083               	bcf	3971,0,c	;volatile
  6405  00DD04  D001               	goto	L11
  6406  00DD06                     l403:
  6407  00DD06  8083               	bsf	3971,0,c	;volatile
  6408  00DD08                     L11:
  6409  00DD08  9283               	bcf	3971,1,c	;volatile
  6410  00DD0A  D013               	goto	l406
  6411  00DD0C                     l404:
  6412  00DD0C  9083               	bcf	3971,0,c	;volatile
  6413  00DD0E  D001               	goto	L12
  6414  00DD10                     l405:
  6415  00DD10  8083               	bsf	3971,0,c	;volatile
  6416  00DD12                     L12:
  6417  00DD12  8283               	bsf	3971,1,c	;volatile
  6418                           
  6419                           ;Lab7_sample_S3_F21.c: 366: }
  6420  00DD14  D00E               	goto	l406
  6421  00DD16                     l3385:
  6422  00DD16  5036               	movf	Set_EW@color,w,c
  6423                           
  6424                           ; Switch size 1, requested type "space"
  6425                           ; Number of cases is 4, Range of values is 0 to 3
  6426                           ; switch strategies available:
  6427                           ; Name         Instructions Cycles
  6428                           ; simple_byte           13     7 (average)
  6429                           ;	Chosen strategy is simple_byte
  6430  00DD18  0A00               	xorlw	0	; case 0
  6431  00DD1A  B4D8               	btfsc	status,2,c
  6432  00DD1C  D7F2               	goto	l401
  6433  00DD1E  0A01               	xorlw	1	; case 1
  6434  00DD20  B4D8               	btfsc	status,2,c
  6435  00DD22  D7F1               	goto	l403
  6436  00DD24  0A03               	xorlw	3	; case 2
  6437  00DD26  B4D8               	btfsc	status,2,c
  6438  00DD28  D7F1               	goto	l404
  6439  00DD2A  0A01               	xorlw	1	; case 3
  6440  00DD2C  B4D8               	btfsc	status,2,c
  6441  00DD2E  D7F0               	goto	l405
  6442  00DD30  D000               	goto	l406
  6443  00DD32                     l406:
  6444  00DD32  0012               	return		;funcret
  6445  00DD34                     __end_of_Set_EW:
  6446                           	opt stack 0
  6447                           tblptru	equ	0xFF8
  6448                           tblptrh	equ	0xFF7
  6449                           tblptrl	equ	0xFF6
  6450                           tablat	equ	0xFF5
  6451                           postinc0	equ	0xFEE
  6452                           wreg	equ	0xFE8
  6453                           postdec1	equ	0xFE5
  6454                           fsr1l	equ	0xFE1
  6455                           indf2	equ	0xFDF
  6456                           fsr2h	equ	0xFDA
  6457                           fsr2l	equ	0xFD9
  6458                           status	equ	0xFD8
  6459                           
  6460 ;; *************** function _update_LCD_color *****************
  6461 ;; Defined at:
  6462 ;;		line 591 in file "Lab7_sample_S3_F21.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  direction       1    wreg     unsigned char 
  6465 ;;  color           1   50[COMRAM] unsigned char 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  direction       1   51[COMRAM] unsigned char 
  6468 ;;  Circle_Y        1   52[COMRAM] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;		None               void
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6478 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;Total ram usage:        3 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    6
  6485 ;; This function calls:
  6486 ;;		_drawCircle
  6487 ;;		_fillCircle
  6488 ;; This function is called by:
  6489 ;;		_Set_NS
  6490 ;;		_Set_NS_LT
  6491 ;;		_Set_EW
  6492 ;;		_Set_EW_LT
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text32
  6497  00F33C                     __ptext32:
  6498                           	opt stack 0
  6499  00F33C                     _update_LCD_color:
  6500                           	opt stack 22
  6501                           
  6502                           ;incstack = 0
  6503                           ;update_LCD_color@direction stored from wreg
  6504  00F33C  6E34               	movwf	update_LCD_color@direction,c
  6505                           
  6506                           ;Lab7_sample_S3_F21.c: 593: char Circle_Y;
  6507                           ;Lab7_sample_S3_F21.c: 594: Circle_Y = 20 + 15 + direction * 30;
  6508  00F33E  5034               	movf	update_LCD_color@direction,w,c
  6509  00F340  0D1E               	mullw	30
  6510  00F342  50F3               	movf	prodl,w,c
  6511  00F344  0F23               	addlw	35
  6512  00F346  6E35               	movwf	update_LCD_color@Circle_Y,c
  6513                           
  6514                           ;Lab7_sample_S3_F21.c: 596: if (color == 0)
  6515  00F348  5033               	movf	update_LCD_color@color,w,c
  6516  00F34A  A4D8               	btfss	status,2,c
  6517  00F34C  D067               	goto	l3223
  6518                           
  6519                           ;Lab7_sample_S3_F21.c: 597: {
  6520                           ;Lab7_sample_S3_F21.c: 598: fillCircle(40, Circle_Y, 7, 0x0000);
  6521  00F34E  0E00               	movlw	0
  6522  00F350  6E2C               	movwf	fillCircle@x0+1,c
  6523  00F352  0E28               	movlw	40
  6524  00F354  6E2B               	movwf	fillCircle@x0,c
  6525  00F356  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6526  00F35A  6A2E               	clrf	fillCircle@y0+1,c
  6527  00F35C  0E00               	movlw	0
  6528  00F35E  6E30               	movwf	fillCircle@r+1,c
  6529  00F360  0E07               	movlw	7
  6530  00F362  6E2F               	movwf	fillCircle@r,c
  6531  00F364  0E00               	movlw	0
  6532  00F366  6E32               	movwf	fillCircle@color+1,c
  6533  00F368  0E00               	movlw	0
  6534  00F36A  6E31               	movwf	fillCircle@color,c
  6535  00F36C  EC4C  F06F         	call	_fillCircle	;wreg free
  6536                           
  6537                           ;Lab7_sample_S3_F21.c: 599: fillCircle(60, Circle_Y, 7, 0x0000);
  6538  00F370  0E00               	movlw	0
  6539  00F372  6E2C               	movwf	fillCircle@x0+1,c
  6540  00F374  0E3C               	movlw	60
  6541  00F376  6E2B               	movwf	fillCircle@x0,c
  6542  00F378  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6543  00F37C  6A2E               	clrf	fillCircle@y0+1,c
  6544  00F37E  0E00               	movlw	0
  6545  00F380  6E30               	movwf	fillCircle@r+1,c
  6546  00F382  0E07               	movlw	7
  6547  00F384  6E2F               	movwf	fillCircle@r,c
  6548  00F386  0E00               	movlw	0
  6549  00F388  6E32               	movwf	fillCircle@color+1,c
  6550  00F38A  0E00               	movlw	0
  6551  00F38C  6E31               	movwf	fillCircle@color,c
  6552  00F38E  EC4C  F06F         	call	_fillCircle	;wreg free
  6553                           
  6554                           ;Lab7_sample_S3_F21.c: 600: fillCircle(80, Circle_Y, 7, 0x0000);
  6555  00F392  0E00               	movlw	0
  6556  00F394  6E2C               	movwf	fillCircle@x0+1,c
  6557  00F396  0E50               	movlw	80
  6558  00F398  6E2B               	movwf	fillCircle@x0,c
  6559  00F39A  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6560  00F39E  6A2E               	clrf	fillCircle@y0+1,c
  6561  00F3A0  0E00               	movlw	0
  6562  00F3A2  6E30               	movwf	fillCircle@r+1,c
  6563  00F3A4  0E07               	movlw	7
  6564  00F3A6  6E2F               	movwf	fillCircle@r,c
  6565  00F3A8  0E00               	movlw	0
  6566  00F3AA  6E32               	movwf	fillCircle@color+1,c
  6567  00F3AC  0E00               	movlw	0
  6568  00F3AE  6E31               	movwf	fillCircle@color,c
  6569  00F3B0  EC4C  F06F         	call	_fillCircle	;wreg free
  6570                           
  6571                           ;Lab7_sample_S3_F21.c: 601: drawCircle(40, Circle_Y, 7, 0xF800);
  6572  00F3B4  0E00               	movlw	0
  6573  00F3B6  6E0D               	movwf	drawCircle@x0+1,c
  6574  00F3B8  0E28               	movlw	40
  6575  00F3BA  6E0C               	movwf	drawCircle@x0,c
  6576  00F3BC  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6577  00F3C0  6A0F               	clrf	drawCircle@y0+1,c
  6578  00F3C2  0E00               	movlw	0
  6579  00F3C4  6E11               	movwf	drawCircle@r+1,c
  6580  00F3C6  0E07               	movlw	7
  6581  00F3C8  6E10               	movwf	drawCircle@r,c
  6582  00F3CA  0EF8               	movlw	248
  6583  00F3CC  6E13               	movwf	drawCircle@color+1,c
  6584  00F3CE  0E00               	movlw	0
  6585  00F3D0  6E12               	movwf	drawCircle@color,c
  6586  00F3D2  ECCB  F077         	call	_drawCircle	;wreg free
  6587                           
  6588                           ;Lab7_sample_S3_F21.c: 602: drawCircle(60, Circle_Y, 7, 0xFFE0);
  6589  00F3D6  0E00               	movlw	0
  6590  00F3D8  6E0D               	movwf	drawCircle@x0+1,c
  6591  00F3DA  0E3C               	movlw	60
  6592  00F3DC  6E0C               	movwf	drawCircle@x0,c
  6593  00F3DE  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6594  00F3E2  6A0F               	clrf	drawCircle@y0+1,c
  6595  00F3E4  0E00               	movlw	0
  6596  00F3E6  6E11               	movwf	drawCircle@r+1,c
  6597  00F3E8  0E07               	movlw	7
  6598  00F3EA  6E10               	movwf	drawCircle@r,c
  6599  00F3EC  0EFF               	movlw	255
  6600  00F3EE  6E13               	movwf	drawCircle@color+1,c
  6601  00F3F0  0EE0               	movlw	224
  6602  00F3F2  6E12               	movwf	drawCircle@color,c
  6603  00F3F4  ECCB  F077         	call	_drawCircle	;wreg free
  6604                           
  6605                           ;Lab7_sample_S3_F21.c: 603: drawCircle(80, Circle_Y, 7, 0x07E0);
  6606  00F3F8  0E00               	movlw	0
  6607  00F3FA  6E0D               	movwf	drawCircle@x0+1,c
  6608  00F3FC  0E50               	movlw	80
  6609  00F3FE  6E0C               	movwf	drawCircle@x0,c
  6610  00F400  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6611  00F404  6A0F               	clrf	drawCircle@y0+1,c
  6612  00F406  0E00               	movlw	0
  6613  00F408  6E11               	movwf	drawCircle@r+1,c
  6614  00F40A  0E07               	movlw	7
  6615  00F40C  6E10               	movwf	drawCircle@r,c
  6616  00F40E  0E07               	movlw	7
  6617  00F410  6E13               	movwf	drawCircle@color+1,c
  6618  00F412  0EE0               	movlw	224
  6619  00F414  6E12               	movwf	drawCircle@color,c
  6620  00F416  ECCB  F077         	call	_drawCircle	;wreg free
  6621  00F41A  D000               	goto	l3223
  6622  00F41C                     l3223:
  6623                           
  6624                           ;Lab7_sample_S3_F21.c: 604: }
  6625                           ;Lab7_sample_S3_F21.c: 606: if (color == 1)
  6626  00F41C  0433               	decf	update_LCD_color@color,w,c
  6627  00F41E  A4D8               	btfss	status,2,c
  6628  00F420  D067               	goto	l3227
  6629                           
  6630                           ;Lab7_sample_S3_F21.c: 607: {
  6631                           ;Lab7_sample_S3_F21.c: 608: fillCircle(40, Circle_Y, 7, 0xF800);
  6632  00F422  0E00               	movlw	0
  6633  00F424  6E2C               	movwf	fillCircle@x0+1,c
  6634  00F426  0E28               	movlw	40
  6635  00F428  6E2B               	movwf	fillCircle@x0,c
  6636  00F42A  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6637  00F42E  6A2E               	clrf	fillCircle@y0+1,c
  6638  00F430  0E00               	movlw	0
  6639  00F432  6E30               	movwf	fillCircle@r+1,c
  6640  00F434  0E07               	movlw	7
  6641  00F436  6E2F               	movwf	fillCircle@r,c
  6642  00F438  0EF8               	movlw	248
  6643  00F43A  6E32               	movwf	fillCircle@color+1,c
  6644  00F43C  0E00               	movlw	0
  6645  00F43E  6E31               	movwf	fillCircle@color,c
  6646  00F440  EC4C  F06F         	call	_fillCircle	;wreg free
  6647                           
  6648                           ;Lab7_sample_S3_F21.c: 609: fillCircle(60, Circle_Y, 7, 0x0000);
  6649  00F444  0E00               	movlw	0
  6650  00F446  6E2C               	movwf	fillCircle@x0+1,c
  6651  00F448  0E3C               	movlw	60
  6652  00F44A  6E2B               	movwf	fillCircle@x0,c
  6653  00F44C  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6654  00F450  6A2E               	clrf	fillCircle@y0+1,c
  6655  00F452  0E00               	movlw	0
  6656  00F454  6E30               	movwf	fillCircle@r+1,c
  6657  00F456  0E07               	movlw	7
  6658  00F458  6E2F               	movwf	fillCircle@r,c
  6659  00F45A  0E00               	movlw	0
  6660  00F45C  6E32               	movwf	fillCircle@color+1,c
  6661  00F45E  0E00               	movlw	0
  6662  00F460  6E31               	movwf	fillCircle@color,c
  6663  00F462  EC4C  F06F         	call	_fillCircle	;wreg free
  6664                           
  6665                           ;Lab7_sample_S3_F21.c: 610: fillCircle(80, Circle_Y, 7, 0x0000);
  6666  00F466  0E00               	movlw	0
  6667  00F468  6E2C               	movwf	fillCircle@x0+1,c
  6668  00F46A  0E50               	movlw	80
  6669  00F46C  6E2B               	movwf	fillCircle@x0,c
  6670  00F46E  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6671  00F472  6A2E               	clrf	fillCircle@y0+1,c
  6672  00F474  0E00               	movlw	0
  6673  00F476  6E30               	movwf	fillCircle@r+1,c
  6674  00F478  0E07               	movlw	7
  6675  00F47A  6E2F               	movwf	fillCircle@r,c
  6676  00F47C  0E00               	movlw	0
  6677  00F47E  6E32               	movwf	fillCircle@color+1,c
  6678  00F480  0E00               	movlw	0
  6679  00F482  6E31               	movwf	fillCircle@color,c
  6680  00F484  EC4C  F06F         	call	_fillCircle	;wreg free
  6681                           
  6682                           ;Lab7_sample_S3_F21.c: 611: drawCircle(40, Circle_Y, 7, 0xF800);
  6683  00F488  0E00               	movlw	0
  6684  00F48A  6E0D               	movwf	drawCircle@x0+1,c
  6685  00F48C  0E28               	movlw	40
  6686  00F48E  6E0C               	movwf	drawCircle@x0,c
  6687  00F490  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6688  00F494  6A0F               	clrf	drawCircle@y0+1,c
  6689  00F496  0E00               	movlw	0
  6690  00F498  6E11               	movwf	drawCircle@r+1,c
  6691  00F49A  0E07               	movlw	7
  6692  00F49C  6E10               	movwf	drawCircle@r,c
  6693  00F49E  0EF8               	movlw	248
  6694  00F4A0  6E13               	movwf	drawCircle@color+1,c
  6695  00F4A2  0E00               	movlw	0
  6696  00F4A4  6E12               	movwf	drawCircle@color,c
  6697  00F4A6  ECCB  F077         	call	_drawCircle	;wreg free
  6698                           
  6699                           ;Lab7_sample_S3_F21.c: 612: drawCircle(60, Circle_Y, 7, 0xFFE0);
  6700  00F4AA  0E00               	movlw	0
  6701  00F4AC  6E0D               	movwf	drawCircle@x0+1,c
  6702  00F4AE  0E3C               	movlw	60
  6703  00F4B0  6E0C               	movwf	drawCircle@x0,c
  6704  00F4B2  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6705  00F4B6  6A0F               	clrf	drawCircle@y0+1,c
  6706  00F4B8  0E00               	movlw	0
  6707  00F4BA  6E11               	movwf	drawCircle@r+1,c
  6708  00F4BC  0E07               	movlw	7
  6709  00F4BE  6E10               	movwf	drawCircle@r,c
  6710  00F4C0  0EFF               	movlw	255
  6711  00F4C2  6E13               	movwf	drawCircle@color+1,c
  6712  00F4C4  0EE0               	movlw	224
  6713  00F4C6  6E12               	movwf	drawCircle@color,c
  6714  00F4C8  ECCB  F077         	call	_drawCircle	;wreg free
  6715                           
  6716                           ;Lab7_sample_S3_F21.c: 613: drawCircle(80, Circle_Y, 7, 0x07E0);
  6717  00F4CC  0E00               	movlw	0
  6718  00F4CE  6E0D               	movwf	drawCircle@x0+1,c
  6719  00F4D0  0E50               	movlw	80
  6720  00F4D2  6E0C               	movwf	drawCircle@x0,c
  6721  00F4D4  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6722  00F4D8  6A0F               	clrf	drawCircle@y0+1,c
  6723  00F4DA  0E00               	movlw	0
  6724  00F4DC  6E11               	movwf	drawCircle@r+1,c
  6725  00F4DE  0E07               	movlw	7
  6726  00F4E0  6E10               	movwf	drawCircle@r,c
  6727  00F4E2  0E07               	movlw	7
  6728  00F4E4  6E13               	movwf	drawCircle@color+1,c
  6729  00F4E6  0EE0               	movlw	224
  6730  00F4E8  6E12               	movwf	drawCircle@color,c
  6731  00F4EA  ECCB  F077         	call	_drawCircle	;wreg free
  6732  00F4EE  D000               	goto	l3227
  6733  00F4F0                     l3227:
  6734                           
  6735                           ;Lab7_sample_S3_F21.c: 614: }
  6736                           ;Lab7_sample_S3_F21.c: 616: if (color == 3)
  6737  00F4F0  0E03               	movlw	3
  6738  00F4F2  1833               	xorwf	update_LCD_color@color,w,c
  6739  00F4F4  A4D8               	btfss	status,2,c
  6740  00F4F6  D067               	goto	l3231
  6741                           
  6742                           ;Lab7_sample_S3_F21.c: 617: {
  6743                           ;Lab7_sample_S3_F21.c: 618: fillCircle(40, Circle_Y, 7, 0x0000);
  6744  00F4F8  0E00               	movlw	0
  6745  00F4FA  6E2C               	movwf	fillCircle@x0+1,c
  6746  00F4FC  0E28               	movlw	40
  6747  00F4FE  6E2B               	movwf	fillCircle@x0,c
  6748  00F500  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6749  00F504  6A2E               	clrf	fillCircle@y0+1,c
  6750  00F506  0E00               	movlw	0
  6751  00F508  6E30               	movwf	fillCircle@r+1,c
  6752  00F50A  0E07               	movlw	7
  6753  00F50C  6E2F               	movwf	fillCircle@r,c
  6754  00F50E  0E00               	movlw	0
  6755  00F510  6E32               	movwf	fillCircle@color+1,c
  6756  00F512  0E00               	movlw	0
  6757  00F514  6E31               	movwf	fillCircle@color,c
  6758  00F516  EC4C  F06F         	call	_fillCircle	;wreg free
  6759                           
  6760                           ;Lab7_sample_S3_F21.c: 619: fillCircle(60, Circle_Y, 7, 0xFFE0);
  6761  00F51A  0E00               	movlw	0
  6762  00F51C  6E2C               	movwf	fillCircle@x0+1,c
  6763  00F51E  0E3C               	movlw	60
  6764  00F520  6E2B               	movwf	fillCircle@x0,c
  6765  00F522  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6766  00F526  6A2E               	clrf	fillCircle@y0+1,c
  6767  00F528  0E00               	movlw	0
  6768  00F52A  6E30               	movwf	fillCircle@r+1,c
  6769  00F52C  0E07               	movlw	7
  6770  00F52E  6E2F               	movwf	fillCircle@r,c
  6771  00F530  0EFF               	movlw	255
  6772  00F532  6E32               	movwf	fillCircle@color+1,c
  6773  00F534  0EE0               	movlw	224
  6774  00F536  6E31               	movwf	fillCircle@color,c
  6775  00F538  EC4C  F06F         	call	_fillCircle	;wreg free
  6776                           
  6777                           ;Lab7_sample_S3_F21.c: 620: fillCircle(80, Circle_Y, 7, 0x0000);
  6778  00F53C  0E00               	movlw	0
  6779  00F53E  6E2C               	movwf	fillCircle@x0+1,c
  6780  00F540  0E50               	movlw	80
  6781  00F542  6E2B               	movwf	fillCircle@x0,c
  6782  00F544  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6783  00F548  6A2E               	clrf	fillCircle@y0+1,c
  6784  00F54A  0E00               	movlw	0
  6785  00F54C  6E30               	movwf	fillCircle@r+1,c
  6786  00F54E  0E07               	movlw	7
  6787  00F550  6E2F               	movwf	fillCircle@r,c
  6788  00F552  0E00               	movlw	0
  6789  00F554  6E32               	movwf	fillCircle@color+1,c
  6790  00F556  0E00               	movlw	0
  6791  00F558  6E31               	movwf	fillCircle@color,c
  6792  00F55A  EC4C  F06F         	call	_fillCircle	;wreg free
  6793                           
  6794                           ;Lab7_sample_S3_F21.c: 621: drawCircle(40, Circle_Y, 7, 0xF800);
  6795  00F55E  0E00               	movlw	0
  6796  00F560  6E0D               	movwf	drawCircle@x0+1,c
  6797  00F562  0E28               	movlw	40
  6798  00F564  6E0C               	movwf	drawCircle@x0,c
  6799  00F566  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6800  00F56A  6A0F               	clrf	drawCircle@y0+1,c
  6801  00F56C  0E00               	movlw	0
  6802  00F56E  6E11               	movwf	drawCircle@r+1,c
  6803  00F570  0E07               	movlw	7
  6804  00F572  6E10               	movwf	drawCircle@r,c
  6805  00F574  0EF8               	movlw	248
  6806  00F576  6E13               	movwf	drawCircle@color+1,c
  6807  00F578  0E00               	movlw	0
  6808  00F57A  6E12               	movwf	drawCircle@color,c
  6809  00F57C  ECCB  F077         	call	_drawCircle	;wreg free
  6810                           
  6811                           ;Lab7_sample_S3_F21.c: 622: drawCircle(60, Circle_Y, 7, 0xFFE0);
  6812  00F580  0E00               	movlw	0
  6813  00F582  6E0D               	movwf	drawCircle@x0+1,c
  6814  00F584  0E3C               	movlw	60
  6815  00F586  6E0C               	movwf	drawCircle@x0,c
  6816  00F588  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6817  00F58C  6A0F               	clrf	drawCircle@y0+1,c
  6818  00F58E  0E00               	movlw	0
  6819  00F590  6E11               	movwf	drawCircle@r+1,c
  6820  00F592  0E07               	movlw	7
  6821  00F594  6E10               	movwf	drawCircle@r,c
  6822  00F596  0EFF               	movlw	255
  6823  00F598  6E13               	movwf	drawCircle@color+1,c
  6824  00F59A  0EE0               	movlw	224
  6825  00F59C  6E12               	movwf	drawCircle@color,c
  6826  00F59E  ECCB  F077         	call	_drawCircle	;wreg free
  6827                           
  6828                           ;Lab7_sample_S3_F21.c: 623: drawCircle(80, Circle_Y, 7, 0x07E0);
  6829  00F5A2  0E00               	movlw	0
  6830  00F5A4  6E0D               	movwf	drawCircle@x0+1,c
  6831  00F5A6  0E50               	movlw	80
  6832  00F5A8  6E0C               	movwf	drawCircle@x0,c
  6833  00F5AA  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6834  00F5AE  6A0F               	clrf	drawCircle@y0+1,c
  6835  00F5B0  0E00               	movlw	0
  6836  00F5B2  6E11               	movwf	drawCircle@r+1,c
  6837  00F5B4  0E07               	movlw	7
  6838  00F5B6  6E10               	movwf	drawCircle@r,c
  6839  00F5B8  0E07               	movlw	7
  6840  00F5BA  6E13               	movwf	drawCircle@color+1,c
  6841  00F5BC  0EE0               	movlw	224
  6842  00F5BE  6E12               	movwf	drawCircle@color,c
  6843  00F5C0  ECCB  F077         	call	_drawCircle	;wreg free
  6844  00F5C4  D000               	goto	l3231
  6845  00F5C6                     l3231:
  6846                           
  6847                           ;Lab7_sample_S3_F21.c: 624: }
  6848                           ;Lab7_sample_S3_F21.c: 626: if (color == 2)
  6849  00F5C6  0E02               	movlw	2
  6850  00F5C8  1833               	xorwf	update_LCD_color@color,w,c
  6851  00F5CA  A4D8               	btfss	status,2,c
  6852  00F5CC  D067               	goto	l465
  6853                           
  6854                           ;Lab7_sample_S3_F21.c: 627: {
  6855                           ;Lab7_sample_S3_F21.c: 628: fillCircle(40, Circle_Y, 7, 0x0000);
  6856  00F5CE  0E00               	movlw	0
  6857  00F5D0  6E2C               	movwf	fillCircle@x0+1,c
  6858  00F5D2  0E28               	movlw	40
  6859  00F5D4  6E2B               	movwf	fillCircle@x0,c
  6860  00F5D6  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6861  00F5DA  6A2E               	clrf	fillCircle@y0+1,c
  6862  00F5DC  0E00               	movlw	0
  6863  00F5DE  6E30               	movwf	fillCircle@r+1,c
  6864  00F5E0  0E07               	movlw	7
  6865  00F5E2  6E2F               	movwf	fillCircle@r,c
  6866  00F5E4  0E00               	movlw	0
  6867  00F5E6  6E32               	movwf	fillCircle@color+1,c
  6868  00F5E8  0E00               	movlw	0
  6869  00F5EA  6E31               	movwf	fillCircle@color,c
  6870  00F5EC  EC4C  F06F         	call	_fillCircle	;wreg free
  6871                           
  6872                           ;Lab7_sample_S3_F21.c: 629: fillCircle(60, Circle_Y, 7, 0x0000);
  6873  00F5F0  0E00               	movlw	0
  6874  00F5F2  6E2C               	movwf	fillCircle@x0+1,c
  6875  00F5F4  0E3C               	movlw	60
  6876  00F5F6  6E2B               	movwf	fillCircle@x0,c
  6877  00F5F8  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6878  00F5FC  6A2E               	clrf	fillCircle@y0+1,c
  6879  00F5FE  0E00               	movlw	0
  6880  00F600  6E30               	movwf	fillCircle@r+1,c
  6881  00F602  0E07               	movlw	7
  6882  00F604  6E2F               	movwf	fillCircle@r,c
  6883  00F606  0E00               	movlw	0
  6884  00F608  6E32               	movwf	fillCircle@color+1,c
  6885  00F60A  0E00               	movlw	0
  6886  00F60C  6E31               	movwf	fillCircle@color,c
  6887  00F60E  EC4C  F06F         	call	_fillCircle	;wreg free
  6888                           
  6889                           ;Lab7_sample_S3_F21.c: 630: fillCircle(80, Circle_Y, 7, 0x07E0);
  6890  00F612  0E00               	movlw	0
  6891  00F614  6E2C               	movwf	fillCircle@x0+1,c
  6892  00F616  0E50               	movlw	80
  6893  00F618  6E2B               	movwf	fillCircle@x0,c
  6894  00F61A  C035  F02D         	movff	update_LCD_color@Circle_Y,fillCircle@y0
  6895  00F61E  6A2E               	clrf	fillCircle@y0+1,c
  6896  00F620  0E00               	movlw	0
  6897  00F622  6E30               	movwf	fillCircle@r+1,c
  6898  00F624  0E07               	movlw	7
  6899  00F626  6E2F               	movwf	fillCircle@r,c
  6900  00F628  0E07               	movlw	7
  6901  00F62A  6E32               	movwf	fillCircle@color+1,c
  6902  00F62C  0EE0               	movlw	224
  6903  00F62E  6E31               	movwf	fillCircle@color,c
  6904  00F630  EC4C  F06F         	call	_fillCircle	;wreg free
  6905                           
  6906                           ;Lab7_sample_S3_F21.c: 631: drawCircle(40, Circle_Y, 7, 0xF800);
  6907  00F634  0E00               	movlw	0
  6908  00F636  6E0D               	movwf	drawCircle@x0+1,c
  6909  00F638  0E28               	movlw	40
  6910  00F63A  6E0C               	movwf	drawCircle@x0,c
  6911  00F63C  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6912  00F640  6A0F               	clrf	drawCircle@y0+1,c
  6913  00F642  0E00               	movlw	0
  6914  00F644  6E11               	movwf	drawCircle@r+1,c
  6915  00F646  0E07               	movlw	7
  6916  00F648  6E10               	movwf	drawCircle@r,c
  6917  00F64A  0EF8               	movlw	248
  6918  00F64C  6E13               	movwf	drawCircle@color+1,c
  6919  00F64E  0E00               	movlw	0
  6920  00F650  6E12               	movwf	drawCircle@color,c
  6921  00F652  ECCB  F077         	call	_drawCircle	;wreg free
  6922                           
  6923                           ;Lab7_sample_S3_F21.c: 632: drawCircle(60, Circle_Y, 7, 0xFFE0);
  6924  00F656  0E00               	movlw	0
  6925  00F658  6E0D               	movwf	drawCircle@x0+1,c
  6926  00F65A  0E3C               	movlw	60
  6927  00F65C  6E0C               	movwf	drawCircle@x0,c
  6928  00F65E  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6929  00F662  6A0F               	clrf	drawCircle@y0+1,c
  6930  00F664  0E00               	movlw	0
  6931  00F666  6E11               	movwf	drawCircle@r+1,c
  6932  00F668  0E07               	movlw	7
  6933  00F66A  6E10               	movwf	drawCircle@r,c
  6934  00F66C  0EFF               	movlw	255
  6935  00F66E  6E13               	movwf	drawCircle@color+1,c
  6936  00F670  0EE0               	movlw	224
  6937  00F672  6E12               	movwf	drawCircle@color,c
  6938  00F674  ECCB  F077         	call	_drawCircle	;wreg free
  6939                           
  6940                           ;Lab7_sample_S3_F21.c: 633: drawCircle(80, Circle_Y, 7, 0x07E0);
  6941  00F678  0E00               	movlw	0
  6942  00F67A  6E0D               	movwf	drawCircle@x0+1,c
  6943  00F67C  0E50               	movlw	80
  6944  00F67E  6E0C               	movwf	drawCircle@x0,c
  6945  00F680  C035  F00E         	movff	update_LCD_color@Circle_Y,drawCircle@y0
  6946  00F684  6A0F               	clrf	drawCircle@y0+1,c
  6947  00F686  0E00               	movlw	0
  6948  00F688  6E11               	movwf	drawCircle@r+1,c
  6949  00F68A  0E07               	movlw	7
  6950  00F68C  6E10               	movwf	drawCircle@r,c
  6951  00F68E  0E07               	movlw	7
  6952  00F690  6E13               	movwf	drawCircle@color+1,c
  6953  00F692  0EE0               	movlw	224
  6954  00F694  6E12               	movwf	drawCircle@color,c
  6955  00F696  ECCB  F077         	call	_drawCircle	;wreg free
  6956  00F69A  D000               	goto	l465
  6957  00F69C                     l465:
  6958  00F69C  0012               	return		;funcret
  6959  00F69E                     __end_of_update_LCD_color:
  6960                           	opt stack 0
  6961                           tblptru	equ	0xFF8
  6962                           tblptrh	equ	0xFF7
  6963                           tblptrl	equ	0xFF6
  6964                           tablat	equ	0xFF5
  6965                           prodl	equ	0xFF3
  6966                           postinc0	equ	0xFEE
  6967                           wreg	equ	0xFE8
  6968                           postdec1	equ	0xFE5
  6969                           fsr1l	equ	0xFE1
  6970                           indf2	equ	0xFDF
  6971                           fsr2h	equ	0xFDA
  6972                           fsr2l	equ	0xFD9
  6973                           status	equ	0xFD8
  6974                           
  6975 ;; *************** function _fillCircle *****************
  6976 ;; Defined at:
  6977 ;;		line 646 in file "ST7735_TFT.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  x0              2   42[COMRAM] int 
  6980 ;;  y0              2   44[COMRAM] int 
  6981 ;;  r               2   46[COMRAM] int 
  6982 ;;  color           2   48[COMRAM] unsigned int 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6994 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;Total ram usage:        8 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    5
  7001 ;; This function calls:
  7002 ;;		_drawFastVLine
  7003 ;;		_fillCircleHelper
  7004 ;; This function is called by:
  7005 ;;		_Initialize_Screen
  7006 ;;		_update_LCD_color
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text33
  7011  00DE98                     __ptext33:
  7012                           	opt stack 0
  7013  00DE98                     _fillCircle:
  7014                           	opt stack 22
  7015                           
  7016                           ;ST7735_TFT.c: 648: drawFastVLine(x0, y0 - r, 2 * r + 1, color);
  7017                           
  7018                           ;incstack = 0
  7019  00DE98  502F               	movf	fillCircle@r,w,c
  7020  00DE9A  0800               	sublw	0
  7021  00DE9C  242D               	addwf	fillCircle@y0,w,c
  7022  00DE9E  6E08               	movwf	drawFastVLine@y,c
  7023  00DEA0  80D8               	bsf	status,0,c
  7024  00DEA2  342F               	rlcf	fillCircle@r,w,c
  7025  00DEA4  6E09               	movwf	drawFastVLine@h,c
  7026  00DEA6  C031  F00A         	movff	fillCircle@color,drawFastVLine@color
  7027  00DEAA  C032  F00B         	movff	fillCircle@color+1,drawFastVLine@color+1
  7028  00DEAE  502B               	movf	fillCircle@x0,w,c
  7029  00DEB0  EC8B  F070         	call	_drawFastVLine
  7030                           
  7031                           ;ST7735_TFT.c: 649: fillCircleHelper(x0, y0, r, 3, 0, color);
  7032  00DEB4  C02B  F013         	movff	fillCircle@x0,fillCircleHelper@x0
  7033  00DEB8  C02C  F014         	movff	fillCircle@x0+1,fillCircleHelper@x0+1
  7034  00DEBC  C02D  F015         	movff	fillCircle@y0,fillCircleHelper@y0
  7035  00DEC0  C02E  F016         	movff	fillCircle@y0+1,fillCircleHelper@y0+1
  7036  00DEC4  C02F  F017         	movff	fillCircle@r,fillCircleHelper@r
  7037  00DEC8  C030  F018         	movff	fillCircle@r+1,fillCircleHelper@r+1
  7038  00DECC  0E00               	movlw	0
  7039  00DECE  6E1A               	movwf	fillCircleHelper@cornername+1,c
  7040  00DED0  0E03               	movlw	3
  7041  00DED2  6E19               	movwf	fillCircleHelper@cornername,c
  7042  00DED4  0E00               	movlw	0
  7043  00DED6  6E1C               	movwf	fillCircleHelper@delta+1,c
  7044  00DED8  0E00               	movlw	0
  7045  00DEDA  6E1B               	movwf	fillCircleHelper@delta,c
  7046  00DEDC  C031  F01D         	movff	fillCircle@color,fillCircleHelper@color
  7047  00DEE0  C032  F01E         	movff	fillCircle@color+1,fillCircleHelper@color+1
  7048  00DEE4  ECC5  F075         	call	_fillCircleHelper	;wreg free
  7049  00DEE8  0012               	return		;funcret
  7050  00DEEA                     __end_of_fillCircle:
  7051                           	opt stack 0
  7052                           tblptru	equ	0xFF8
  7053                           tblptrh	equ	0xFF7
  7054                           tblptrl	equ	0xFF6
  7055                           tablat	equ	0xFF5
  7056                           prodl	equ	0xFF3
  7057                           postinc0	equ	0xFEE
  7058                           wreg	equ	0xFE8
  7059                           postdec1	equ	0xFE5
  7060                           fsr1l	equ	0xFE1
  7061                           indf2	equ	0xFDF
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8
  7065                           
  7066 ;; *************** function _fillCircleHelper *****************
  7067 ;; Defined at:
  7068 ;;		line 621 in file "ST7735_TFT.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  x0              2   18[COMRAM] int 
  7071 ;;  y0              2   20[COMRAM] int 
  7072 ;;  r               2   22[COMRAM] int 
  7073 ;;  cornername      2   24[COMRAM] unsigned int 
  7074 ;;  delta           2   26[COMRAM] int 
  7075 ;;  color           2   28[COMRAM] unsigned int 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  y               2   40[COMRAM] int 
  7078 ;;  x               2   38[COMRAM] int 
  7079 ;;  f               2   36[COMRAM] int 
  7080 ;;  ddF_y           2   34[COMRAM] int 
  7081 ;;  ddF_x           2   32[COMRAM] int 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;		None               void
  7084 ;; Registers used:
  7085 ;;		wreg, status,2, status,0, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7091 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;Total ram usage:       24 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    4
  7098 ;; This function calls:
  7099 ;;		_drawFastVLine
  7100 ;; This function is called by:
  7101 ;;		_fillCircle
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text34
  7106  00EB8A                     __ptext34:
  7107                           	opt stack 0
  7108  00EB8A                     _fillCircleHelper:
  7109                           	opt stack 22
  7110                           
  7111                           ;ST7735_TFT.c: 623: signed int f, ddF_x, ddF_y, x, y;
  7112                           ;ST7735_TFT.c: 624: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  7113                           
  7114                           ;incstack = 0
  7115  00EB8A  C017  F01F         	movff	fillCircleHelper@r,??_fillCircleHelper
  7116  00EB8E  C018  F020         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  7117  00EB92  1E1F               	comf	??_fillCircleHelper,f,c
  7118  00EB94  1E20               	comf	??_fillCircleHelper+1,f,c
  7119  00EB96  4A1F               	infsnz	??_fillCircleHelper,f,c
  7120  00EB98  2A20               	incf	??_fillCircleHelper+1,f,c
  7121  00EB9A  0E01               	movlw	1
  7122  00EB9C  241F               	addwf	??_fillCircleHelper,w,c
  7123  00EB9E  6E25               	movwf	fillCircleHelper@f,c
  7124  00EBA0  0E00               	movlw	0
  7125  00EBA2  2020               	addwfc	??_fillCircleHelper+1,w,c
  7126  00EBA4  6E26               	movwf	fillCircleHelper@f+1,c
  7127  00EBA6  0E00               	movlw	0
  7128  00EBA8  6E22               	movwf	fillCircleHelper@ddF_x+1,c
  7129  00EBAA  0E01               	movlw	1
  7130  00EBAC  6E21               	movwf	fillCircleHelper@ddF_x,c
  7131  00EBAE  C017  F01F         	movff	fillCircleHelper@r,??_fillCircleHelper
  7132  00EBB2  C018  F020         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  7133  00EBB6  90D8               	bcf	status,0,c
  7134  00EBB8  361F               	rlcf	??_fillCircleHelper,f,c
  7135  00EBBA  3620               	rlcf	??_fillCircleHelper+1,f,c
  7136  00EBBC  1E1F               	comf	??_fillCircleHelper,f,c
  7137  00EBBE  1E20               	comf	??_fillCircleHelper+1,f,c
  7138  00EBC0  4A1F               	infsnz	??_fillCircleHelper,f,c
  7139  00EBC2  2A20               	incf	??_fillCircleHelper+1,f,c
  7140  00EBC4  C01F  F023         	movff	??_fillCircleHelper,fillCircleHelper@ddF_y
  7141  00EBC8  C020  F024         	movff	??_fillCircleHelper+1,fillCircleHelper@ddF_y+1
  7142  00EBCC  0E00               	movlw	0
  7143  00EBCE  6E28               	movwf	fillCircleHelper@x+1,c
  7144  00EBD0  0E00               	movlw	0
  7145  00EBD2  6E27               	movwf	fillCircleHelper@x,c
  7146  00EBD4  C017  F029         	movff	fillCircleHelper@r,fillCircleHelper@y
  7147  00EBD8  C018  F02A         	movff	fillCircleHelper@r+1,fillCircleHelper@y+1
  7148                           
  7149                           ;ST7735_TFT.c: 625: while (x<y) {
  7150  00EBDC  D067               	goto	l2779
  7151  00EBDE                     l2759:
  7152                           
  7153                           ;ST7735_TFT.c: 626: if (f >= 0) {
  7154  00EBDE  BE26               	btfsc	fillCircleHelper@f+1,7,c
  7155  00EBE0  D00B               	goto	l255
  7156                           
  7157                           ;ST7735_TFT.c: 627: y--;
  7158  00EBE2  0629               	decf	fillCircleHelper@y,f,c
  7159  00EBE4  A0D8               	btfss	status,0,c
  7160  00EBE6  062A               	decf	fillCircleHelper@y+1,f,c
  7161                           
  7162                           ;ST7735_TFT.c: 628: ddF_y += 2;
  7163  00EBE8  0E02               	movlw	2
  7164  00EBEA  2623               	addwf	fillCircleHelper@ddF_y,f,c
  7165  00EBEC  0E00               	movlw	0
  7166  00EBEE  2224               	addwfc	fillCircleHelper@ddF_y+1,f,c
  7167                           
  7168                           ;ST7735_TFT.c: 629: f += ddF_y;
  7169  00EBF0  5023               	movf	fillCircleHelper@ddF_y,w,c
  7170  00EBF2  2625               	addwf	fillCircleHelper@f,f,c
  7171  00EBF4  5024               	movf	fillCircleHelper@ddF_y+1,w,c
  7172  00EBF6  2226               	addwfc	fillCircleHelper@f+1,f,c
  7173  00EBF8                     l255:
  7174                           
  7175                           ;ST7735_TFT.c: 630: }
  7176                           ;ST7735_TFT.c: 631: x++;
  7177  00EBF8  4A27               	infsnz	fillCircleHelper@x,f,c
  7178  00EBFA  2A28               	incf	fillCircleHelper@x+1,f,c
  7179                           
  7180                           ;ST7735_TFT.c: 632: ddF_x += 2;
  7181  00EBFC  0E02               	movlw	2
  7182  00EBFE  2621               	addwf	fillCircleHelper@ddF_x,f,c
  7183  00EC00  0E00               	movlw	0
  7184  00EC02  2222               	addwfc	fillCircleHelper@ddF_x+1,f,c
  7185                           
  7186                           ;ST7735_TFT.c: 633: f += ddF_x;
  7187  00EC04  5021               	movf	fillCircleHelper@ddF_x,w,c
  7188  00EC06  2625               	addwf	fillCircleHelper@f,f,c
  7189  00EC08  5022               	movf	fillCircleHelper@ddF_x+1,w,c
  7190  00EC0A  2226               	addwfc	fillCircleHelper@f+1,f,c
  7191                           
  7192                           ;ST7735_TFT.c: 635: if (cornername & 0x1) {
  7193  00EC0C  A019               	btfss	fillCircleHelper@cornername,0,c
  7194  00EC0E  D025               	goto	l2775
  7195                           
  7196                           ;ST7735_TFT.c: 636: drawFastVLine(x0+x, y0-y, 2*y+1+delta, color);
  7197  00EC10  5029               	movf	fillCircleHelper@y,w,c
  7198  00EC12  0800               	sublw	0
  7199  00EC14  2415               	addwf	fillCircleHelper@y0,w,c
  7200  00EC16  6E08               	movwf	drawFastVLine@y,c
  7201  00EC18  5029               	movf	fillCircleHelper@y,w,c
  7202  00EC1A  2429               	addwf	fillCircleHelper@y,w,c
  7203  00EC1C  241B               	addwf	fillCircleHelper@delta,w,c
  7204  00EC1E  6E1F               	movwf	??_fillCircleHelper& (0+255),c
  7205  00EC20  281F               	incf	??_fillCircleHelper,w,c
  7206  00EC22  6E09               	movwf	drawFastVLine@h,c
  7207  00EC24  C01D  F00A         	movff	fillCircleHelper@color,drawFastVLine@color
  7208  00EC28  C01E  F00B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  7209  00EC2C  5013               	movf	fillCircleHelper@x0,w,c
  7210  00EC2E  2427               	addwf	fillCircleHelper@x,w,c
  7211  00EC30  EC8B  F070         	call	_drawFastVLine
  7212                           
  7213                           ;ST7735_TFT.c: 637: drawFastVLine(x0+y, y0-x, 2*x+1+delta, color);
  7214  00EC34  5027               	movf	fillCircleHelper@x,w,c
  7215  00EC36  0800               	sublw	0
  7216  00EC38  2415               	addwf	fillCircleHelper@y0,w,c
  7217  00EC3A  6E08               	movwf	drawFastVLine@y,c
  7218  00EC3C  5027               	movf	fillCircleHelper@x,w,c
  7219  00EC3E  2427               	addwf	fillCircleHelper@x,w,c
  7220  00EC40  241B               	addwf	fillCircleHelper@delta,w,c
  7221  00EC42  6E1F               	movwf	??_fillCircleHelper& (0+255),c
  7222  00EC44  281F               	incf	??_fillCircleHelper,w,c
  7223  00EC46  6E09               	movwf	drawFastVLine@h,c
  7224  00EC48  C01D  F00A         	movff	fillCircleHelper@color,drawFastVLine@color
  7225  00EC4C  C01E  F00B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  7226  00EC50  5013               	movf	fillCircleHelper@x0,w,c
  7227  00EC52  2429               	addwf	fillCircleHelper@y,w,c
  7228  00EC54  EC8B  F070         	call	_drawFastVLine
  7229  00EC58  D000               	goto	l2775
  7230  00EC5A                     l2775:
  7231                           
  7232                           ;ST7735_TFT.c: 638: }
  7233                           ;ST7735_TFT.c: 639: if (cornername & 0x2) {
  7234  00EC5A  A219               	btfss	fillCircleHelper@cornername,1,c
  7235  00EC5C  D027               	goto	l2779
  7236                           
  7237                           ;ST7735_TFT.c: 640: drawFastVLine(x0-x, y0-y, 2*y+1+delta, color);
  7238  00EC5E  5029               	movf	fillCircleHelper@y,w,c
  7239  00EC60  0800               	sublw	0
  7240  00EC62  2415               	addwf	fillCircleHelper@y0,w,c
  7241  00EC64  6E08               	movwf	drawFastVLine@y,c
  7242  00EC66  5029               	movf	fillCircleHelper@y,w,c
  7243  00EC68  2429               	addwf	fillCircleHelper@y,w,c
  7244  00EC6A  241B               	addwf	fillCircleHelper@delta,w,c
  7245  00EC6C  6E1F               	movwf	??_fillCircleHelper& (0+255),c
  7246  00EC6E  281F               	incf	??_fillCircleHelper,w,c
  7247  00EC70  6E09               	movwf	drawFastVLine@h,c
  7248  00EC72  C01D  F00A         	movff	fillCircleHelper@color,drawFastVLine@color
  7249  00EC76  C01E  F00B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  7250  00EC7A  5027               	movf	fillCircleHelper@x,w,c
  7251  00EC7C  0800               	sublw	0
  7252  00EC7E  2413               	addwf	fillCircleHelper@x0,w,c
  7253  00EC80  EC8B  F070         	call	_drawFastVLine
  7254                           
  7255                           ;ST7735_TFT.c: 641: drawFastVLine(x0-y, y0-x, 2*x+1+delta, color);
  7256  00EC84  5027               	movf	fillCircleHelper@x,w,c
  7257  00EC86  0800               	sublw	0
  7258  00EC88  2415               	addwf	fillCircleHelper@y0,w,c
  7259  00EC8A  6E08               	movwf	drawFastVLine@y,c
  7260  00EC8C  5027               	movf	fillCircleHelper@x,w,c
  7261  00EC8E  2427               	addwf	fillCircleHelper@x,w,c
  7262  00EC90  241B               	addwf	fillCircleHelper@delta,w,c
  7263  00EC92  6E1F               	movwf	??_fillCircleHelper& (0+255),c
  7264  00EC94  281F               	incf	??_fillCircleHelper,w,c
  7265  00EC96  6E09               	movwf	drawFastVLine@h,c
  7266  00EC98  C01D  F00A         	movff	fillCircleHelper@color,drawFastVLine@color
  7267  00EC9C  C01E  F00B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  7268  00ECA0  5029               	movf	fillCircleHelper@y,w,c
  7269  00ECA2  0800               	sublw	0
  7270  00ECA4  2413               	addwf	fillCircleHelper@x0,w,c
  7271  00ECA6  EC8B  F070         	call	_drawFastVLine
  7272  00ECAA  D000               	goto	l2779
  7273  00ECAC                     l2779:
  7274  00ECAC  5029               	movf	fillCircleHelper@y,w,c
  7275  00ECAE  5C27               	subwf	fillCircleHelper@x,w,c
  7276  00ECB0  5028               	movf	fillCircleHelper@x+1,w,c
  7277  00ECB2  0A80               	xorlw	128
  7278  00ECB4  6E1F               	movwf	??_fillCircleHelper& (0+255),c
  7279  00ECB6  502A               	movf	fillCircleHelper@y+1,w,c
  7280  00ECB8  0A80               	xorlw	128
  7281  00ECBA  581F               	subwfb	??_fillCircleHelper& (0+255),w,c
  7282  00ECBC  A0D8               	btfss	status,0,c
  7283  00ECBE  D78F               	goto	l2759
  7284  00ECC0  0012               	return		;funcret
  7285  00ECC2                     __end_of_fillCircleHelper:
  7286                           	opt stack 0
  7287                           tblptru	equ	0xFF8
  7288                           tblptrh	equ	0xFF7
  7289                           tblptrl	equ	0xFF6
  7290                           tablat	equ	0xFF5
  7291                           prodl	equ	0xFF3
  7292                           postinc0	equ	0xFEE
  7293                           wreg	equ	0xFE8
  7294                           postdec1	equ	0xFE5
  7295                           fsr1l	equ	0xFE1
  7296                           indf2	equ	0xFDF
  7297                           fsr2h	equ	0xFDA
  7298                           fsr2l	equ	0xFD9
  7299                           status	equ	0xFD8
  7300                           
  7301 ;; *************** function _drawCircle *****************
  7302 ;; Defined at:
  7303 ;;		line 560 in file "ST7735_TFT.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;  x0              2   11[COMRAM] int 
  7306 ;;  y0              2   13[COMRAM] int 
  7307 ;;  r               2   15[COMRAM] int 
  7308 ;;  color           2   17[COMRAM] unsigned int 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  y               2   29[COMRAM] int 
  7311 ;;  x               2   27[COMRAM] int 
  7312 ;;  f               2   25[COMRAM] int 
  7313 ;;  ddF_y           2   23[COMRAM] int 
  7314 ;;  ddF_x           2   21[COMRAM] int 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;		None               void
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7324 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;Total ram usage:       20 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    4
  7331 ;; This function calls:
  7332 ;;		_drawPixel
  7333 ;; This function is called by:
  7334 ;;		_Initialize_Screen
  7335 ;;		_update_LCD_color
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text35
  7340  00EF96                     __ptext35:
  7341                           	opt stack 0
  7342  00EF96                     _drawCircle:
  7343                           	opt stack 23
  7344                           
  7345                           ;ST7735_TFT.c: 562: signed int f, ddF_x, ddF_y, x, y;
  7346                           ;ST7735_TFT.c: 563: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  7347                           
  7348                           ;incstack = 0
  7349  00EF96  C010  F014         	movff	drawCircle@r,??_drawCircle
  7350  00EF9A  C011  F015         	movff	drawCircle@r+1,??_drawCircle+1
  7351  00EF9E  1E14               	comf	??_drawCircle,f,c
  7352  00EFA0  1E15               	comf	??_drawCircle+1,f,c
  7353  00EFA2  4A14               	infsnz	??_drawCircle,f,c
  7354  00EFA4  2A15               	incf	??_drawCircle+1,f,c
  7355  00EFA6  0E01               	movlw	1
  7356  00EFA8  2414               	addwf	??_drawCircle,w,c
  7357  00EFAA  6E1A               	movwf	drawCircle@f,c
  7358  00EFAC  0E00               	movlw	0
  7359  00EFAE  2015               	addwfc	??_drawCircle+1,w,c
  7360  00EFB0  6E1B               	movwf	drawCircle@f+1,c
  7361  00EFB2  0E00               	movlw	0
  7362  00EFB4  6E17               	movwf	drawCircle@ddF_x+1,c
  7363  00EFB6  0E01               	movlw	1
  7364  00EFB8  6E16               	movwf	drawCircle@ddF_x,c
  7365  00EFBA  C010  F014         	movff	drawCircle@r,??_drawCircle
  7366  00EFBE  C011  F015         	movff	drawCircle@r+1,??_drawCircle+1
  7367  00EFC2  90D8               	bcf	status,0,c
  7368  00EFC4  3614               	rlcf	??_drawCircle,f,c
  7369  00EFC6  3615               	rlcf	??_drawCircle+1,f,c
  7370  00EFC8  1E14               	comf	??_drawCircle,f,c
  7371  00EFCA  1E15               	comf	??_drawCircle+1,f,c
  7372  00EFCC  4A14               	infsnz	??_drawCircle,f,c
  7373  00EFCE  2A15               	incf	??_drawCircle+1,f,c
  7374  00EFD0  C014  F018         	movff	??_drawCircle,drawCircle@ddF_y
  7375  00EFD4  C015  F019         	movff	??_drawCircle+1,drawCircle@ddF_y+1
  7376  00EFD8  0E00               	movlw	0
  7377  00EFDA  6E1D               	movwf	drawCircle@x+1,c
  7378  00EFDC  0E00               	movlw	0
  7379  00EFDE  6E1C               	movwf	drawCircle@x,c
  7380  00EFE0  C010  F01E         	movff	drawCircle@r,drawCircle@y
  7381  00EFE4  C011  F01F         	movff	drawCircle@r+1,drawCircle@y+1
  7382                           
  7383                           ;ST7735_TFT.c: 564: drawPixel(x0 , y0 + r, color);
  7384  00EFE8  500E               	movf	drawCircle@y0,w,c
  7385  00EFEA  2410               	addwf	drawCircle@r,w,c
  7386  00EFEC  6E08               	movwf	drawPixel@y,c
  7387  00EFEE  C012  F009         	movff	drawCircle@color,drawPixel@color
  7388  00EFF2  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7389  00EFF6  500C               	movf	drawCircle@x0,w,c
  7390  00EFF8  ECB1  F06D         	call	_drawPixel
  7391                           
  7392                           ;ST7735_TFT.c: 565: drawPixel(x0 , y0 - r, color);
  7393  00EFFC  5010               	movf	drawCircle@r,w,c
  7394  00EFFE  0800               	sublw	0
  7395  00F000  240E               	addwf	drawCircle@y0,w,c
  7396  00F002  6E08               	movwf	drawPixel@y,c
  7397  00F004  C012  F009         	movff	drawCircle@color,drawPixel@color
  7398  00F008  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7399  00F00C  500C               	movf	drawCircle@x0,w,c
  7400  00F00E  ECB1  F06D         	call	_drawPixel
  7401                           
  7402                           ;ST7735_TFT.c: 566: drawPixel(x0+r, y0 , color);
  7403  00F012  C00E  F008         	movff	drawCircle@y0,drawPixel@y
  7404  00F016  C012  F009         	movff	drawCircle@color,drawPixel@color
  7405  00F01A  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7406  00F01E  500C               	movf	drawCircle@x0,w,c
  7407  00F020  2410               	addwf	drawCircle@r,w,c
  7408  00F022  ECB1  F06D         	call	_drawPixel
  7409                           
  7410                           ;ST7735_TFT.c: 567: drawPixel(x0-r, y0 , color);
  7411  00F026  C00E  F008         	movff	drawCircle@y0,drawPixel@y
  7412  00F02A  C012  F009         	movff	drawCircle@color,drawPixel@color
  7413  00F02E  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7414  00F032  5010               	movf	drawCircle@r,w,c
  7415  00F034  0800               	sublw	0
  7416  00F036  240C               	addwf	drawCircle@x0,w,c
  7417  00F038  ECB1  F06D         	call	_drawPixel
  7418                           
  7419                           ;ST7735_TFT.c: 568: while (x < y) {
  7420  00F03C  D078               	goto	l2925
  7421  00F03E                     l2897:
  7422                           
  7423                           ;ST7735_TFT.c: 569: if (f >= 0) {
  7424  00F03E  BE1B               	btfsc	drawCircle@f+1,7,c
  7425  00F040  D00B               	goto	l237
  7426                           
  7427                           ;ST7735_TFT.c: 570: y--;
  7428  00F042  061E               	decf	drawCircle@y,f,c
  7429  00F044  A0D8               	btfss	status,0,c
  7430  00F046  061F               	decf	drawCircle@y+1,f,c
  7431                           
  7432                           ;ST7735_TFT.c: 571: ddF_y += 2;
  7433  00F048  0E02               	movlw	2
  7434  00F04A  2618               	addwf	drawCircle@ddF_y,f,c
  7435  00F04C  0E00               	movlw	0
  7436  00F04E  2219               	addwfc	drawCircle@ddF_y+1,f,c
  7437                           
  7438                           ;ST7735_TFT.c: 572: f += ddF_y;
  7439  00F050  5018               	movf	drawCircle@ddF_y,w,c
  7440  00F052  261A               	addwf	drawCircle@f,f,c
  7441  00F054  5019               	movf	drawCircle@ddF_y+1,w,c
  7442  00F056  221B               	addwfc	drawCircle@f+1,f,c
  7443  00F058                     l237:
  7444                           
  7445                           ;ST7735_TFT.c: 573: }
  7446                           ;ST7735_TFT.c: 574: x++;
  7447  00F058  4A1C               	infsnz	drawCircle@x,f,c
  7448  00F05A  2A1D               	incf	drawCircle@x+1,f,c
  7449                           
  7450                           ;ST7735_TFT.c: 575: ddF_x += 2;
  7451  00F05C  0E02               	movlw	2
  7452  00F05E  2616               	addwf	drawCircle@ddF_x,f,c
  7453  00F060  0E00               	movlw	0
  7454  00F062  2217               	addwfc	drawCircle@ddF_x+1,f,c
  7455                           
  7456                           ;ST7735_TFT.c: 576: f += ddF_x;
  7457  00F064  5016               	movf	drawCircle@ddF_x,w,c
  7458  00F066  261A               	addwf	drawCircle@f,f,c
  7459  00F068  5017               	movf	drawCircle@ddF_x+1,w,c
  7460  00F06A  221B               	addwfc	drawCircle@f+1,f,c
  7461                           
  7462                           ;ST7735_TFT.c: 577: drawPixel(x0 + x, y0 + y, color);
  7463  00F06C  500E               	movf	drawCircle@y0,w,c
  7464  00F06E  241E               	addwf	drawCircle@y,w,c
  7465  00F070  6E08               	movwf	drawPixel@y,c
  7466  00F072  C012  F009         	movff	drawCircle@color,drawPixel@color
  7467  00F076  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7468  00F07A  500C               	movf	drawCircle@x0,w,c
  7469  00F07C  241C               	addwf	drawCircle@x,w,c
  7470  00F07E  ECB1  F06D         	call	_drawPixel
  7471                           
  7472                           ;ST7735_TFT.c: 578: drawPixel(x0 - x, y0 + y, color);
  7473  00F082  500E               	movf	drawCircle@y0,w,c
  7474  00F084  241E               	addwf	drawCircle@y,w,c
  7475  00F086  6E08               	movwf	drawPixel@y,c
  7476  00F088  C012  F009         	movff	drawCircle@color,drawPixel@color
  7477  00F08C  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7478  00F090  501C               	movf	drawCircle@x,w,c
  7479  00F092  0800               	sublw	0
  7480  00F094  240C               	addwf	drawCircle@x0,w,c
  7481  00F096  ECB1  F06D         	call	_drawPixel
  7482                           
  7483                           ;ST7735_TFT.c: 579: drawPixel(x0 + x, y0 - y, color);
  7484  00F09A  501E               	movf	drawCircle@y,w,c
  7485  00F09C  0800               	sublw	0
  7486  00F09E  240E               	addwf	drawCircle@y0,w,c
  7487  00F0A0  6E08               	movwf	drawPixel@y,c
  7488  00F0A2  C012  F009         	movff	drawCircle@color,drawPixel@color
  7489  00F0A6  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7490  00F0AA  500C               	movf	drawCircle@x0,w,c
  7491  00F0AC  241C               	addwf	drawCircle@x,w,c
  7492  00F0AE  ECB1  F06D         	call	_drawPixel
  7493                           
  7494                           ;ST7735_TFT.c: 580: drawPixel(x0 - x, y0 - y, color);
  7495  00F0B2  501E               	movf	drawCircle@y,w,c
  7496  00F0B4  0800               	sublw	0
  7497  00F0B6  240E               	addwf	drawCircle@y0,w,c
  7498  00F0B8  6E08               	movwf	drawPixel@y,c
  7499  00F0BA  C012  F009         	movff	drawCircle@color,drawPixel@color
  7500  00F0BE  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7501  00F0C2  501C               	movf	drawCircle@x,w,c
  7502  00F0C4  0800               	sublw	0
  7503  00F0C6  240C               	addwf	drawCircle@x0,w,c
  7504  00F0C8  ECB1  F06D         	call	_drawPixel
  7505                           
  7506                           ;ST7735_TFT.c: 581: drawPixel(x0 + y, y0 + x, color);
  7507  00F0CC  500E               	movf	drawCircle@y0,w,c
  7508  00F0CE  241C               	addwf	drawCircle@x,w,c
  7509  00F0D0  6E08               	movwf	drawPixel@y,c
  7510  00F0D2  C012  F009         	movff	drawCircle@color,drawPixel@color
  7511  00F0D6  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7512  00F0DA  500C               	movf	drawCircle@x0,w,c
  7513  00F0DC  241E               	addwf	drawCircle@y,w,c
  7514  00F0DE  ECB1  F06D         	call	_drawPixel
  7515                           
  7516                           ;ST7735_TFT.c: 582: drawPixel(x0 - y, y0 + x, color);
  7517  00F0E2  500E               	movf	drawCircle@y0,w,c
  7518  00F0E4  241C               	addwf	drawCircle@x,w,c
  7519  00F0E6  6E08               	movwf	drawPixel@y,c
  7520  00F0E8  C012  F009         	movff	drawCircle@color,drawPixel@color
  7521  00F0EC  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7522  00F0F0  501E               	movf	drawCircle@y,w,c
  7523  00F0F2  0800               	sublw	0
  7524  00F0F4  240C               	addwf	drawCircle@x0,w,c
  7525  00F0F6  ECB1  F06D         	call	_drawPixel
  7526                           
  7527                           ;ST7735_TFT.c: 583: drawPixel(x0 + y, y0 - x, color);
  7528  00F0FA  501C               	movf	drawCircle@x,w,c
  7529  00F0FC  0800               	sublw	0
  7530  00F0FE  240E               	addwf	drawCircle@y0,w,c
  7531  00F100  6E08               	movwf	drawPixel@y,c
  7532  00F102  C012  F009         	movff	drawCircle@color,drawPixel@color
  7533  00F106  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7534  00F10A  500C               	movf	drawCircle@x0,w,c
  7535  00F10C  241E               	addwf	drawCircle@y,w,c
  7536  00F10E  ECB1  F06D         	call	_drawPixel
  7537                           
  7538                           ;ST7735_TFT.c: 584: drawPixel(x0 - y, y0 - x, color);
  7539  00F112  501C               	movf	drawCircle@x,w,c
  7540  00F114  0800               	sublw	0
  7541  00F116  240E               	addwf	drawCircle@y0,w,c
  7542  00F118  6E08               	movwf	drawPixel@y,c
  7543  00F11A  C012  F009         	movff	drawCircle@color,drawPixel@color
  7544  00F11E  C013  F00A         	movff	drawCircle@color+1,drawPixel@color+1
  7545  00F122  501E               	movf	drawCircle@y,w,c
  7546  00F124  0800               	sublw	0
  7547  00F126  240C               	addwf	drawCircle@x0,w,c
  7548  00F128  ECB1  F06D         	call	_drawPixel
  7549  00F12C  D000               	goto	l2925
  7550  00F12E                     l2925:
  7551  00F12E  501E               	movf	drawCircle@y,w,c
  7552  00F130  5C1C               	subwf	drawCircle@x,w,c
  7553  00F132  501D               	movf	drawCircle@x+1,w,c
  7554  00F134  0A80               	xorlw	128
  7555  00F136  6E14               	movwf	??_drawCircle& (0+255),c
  7556  00F138  501F               	movf	drawCircle@y+1,w,c
  7557  00F13A  0A80               	xorlw	128
  7558  00F13C  5814               	subwfb	??_drawCircle& (0+255),w,c
  7559  00F13E  A0D8               	btfss	status,0,c
  7560  00F140  D77E               	goto	l2897
  7561  00F142  0012               	return		;funcret
  7562  00F144                     __end_of_drawCircle:
  7563                           	opt stack 0
  7564                           tblptru	equ	0xFF8
  7565                           tblptrh	equ	0xFF7
  7566                           tblptrl	equ	0xFF6
  7567                           tablat	equ	0xFF5
  7568                           prodl	equ	0xFF3
  7569                           postinc0	equ	0xFEE
  7570                           wreg	equ	0xFE8
  7571                           postdec1	equ	0xFE5
  7572                           fsr1l	equ	0xFE1
  7573                           indf2	equ	0xFDF
  7574                           fsr2h	equ	0xFDA
  7575                           fsr2l	equ	0xFD9
  7576                           status	equ	0xFD8
  7577                           
  7578 ;; *************** function _PED_Control *****************
  7579 ;; Defined at:
  7580 ;;		line 397 in file "Lab7_sample_S3_F21.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  direction       1    wreg     unsigned char 
  7583 ;;  Num_Sec         1   59[COMRAM] unsigned char 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  direction       1   60[COMRAM] unsigned char 
  7586 ;;  i               1   61[COMRAM] unsigned char 
  7587 ;; Return value:  Size  Location     Type
  7588 ;;		None               void
  7589 ;; Registers used:
  7590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;Total ram usage:        3 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; Hardware stack levels required when called:    8
  7603 ;; This function calls:
  7604 ;;		_Wait_One_Second_With_Beep
  7605 ;;		_update_LCD_PED_Count
  7606 ;; This function is called by:
  7607 ;;		_Day_Mode
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text36
  7612  00DB92                     __ptext36:
  7613                           	opt stack 0
  7614  00DB92                     _PED_Control:
  7615                           	opt stack 21
  7616                           
  7617                           ;incstack = 0
  7618                           ;PED_Control@direction stored from wreg
  7619  00DB92  6E3D               	movwf	PED_Control@direction,c
  7620                           
  7621                           ;Lab7_sample_S3_F21.c: 399: for(char i = Num_Sec-1;i>0; i--)
  7622  00DB94  043C               	decf	PED_Control@Num_Sec,w,c
  7623  00DB96  6E3E               	movwf	PED_Control@i,c
  7624  00DB98                     l3397:
  7625  00DB98  503E               	movf	PED_Control@i,w,c
  7626  00DB9A  B4D8               	btfsc	status,2,c
  7627  00DB9C  D00B               	goto	l3409
  7628  00DB9E  D001               	goto	l3401
  7629  00DBA0  D009               	goto	l3409
  7630  00DBA2                     l3401:
  7631                           
  7632                           ;Lab7_sample_S3_F21.c: 400: {
  7633                           ;Lab7_sample_S3_F21.c: 401: update_LCD_PED_Count(direction, i);
  7634  00DBA2  C03E  F03A         	movff	PED_Control@i,update_LCD_PED_Count@count
  7635  00DBA6  503D               	movf	PED_Control@direction,w,c
  7636  00DBA8  ECB1  F072         	call	_update_LCD_PED_Count
  7637                           
  7638                           ;Lab7_sample_S3_F21.c: 402: Wait_One_Second_With_Beep();
  7639  00DBAC  EC26  F06D         	call	_Wait_One_Second_With_Beep	;wreg free
  7640  00DBB0  063E               	decf	PED_Control@i,f,c
  7641  00DBB2  D7F2               	goto	l3397
  7642  00DBB4                     l3409:
  7643                           
  7644                           ;Lab7_sample_S3_F21.c: 403: }
  7645                           ;Lab7_sample_S3_F21.c: 405: update_LCD_PED_Count(direction, 0);
  7646  00DBB4  0E00               	movlw	0
  7647  00DBB6  6E3A               	movwf	update_LCD_PED_Count@count,c
  7648  00DBB8  503D               	movf	PED_Control@direction,w,c
  7649  00DBBA  ECB1  F072         	call	_update_LCD_PED_Count
  7650                           
  7651                           ;Lab7_sample_S3_F21.c: 406: Wait_One_Second_With_Beep();
  7652  00DBBE  EC26  F06D         	call	_Wait_One_Second_With_Beep	;wreg free
  7653  00DBC2  0012               	return		;funcret
  7654  00DBC4                     __end_of_PED_Control:
  7655                           	opt stack 0
  7656                           tblptru	equ	0xFF8
  7657                           tblptrh	equ	0xFF7
  7658                           tblptrl	equ	0xFF6
  7659                           tablat	equ	0xFF5
  7660                           prodl	equ	0xFF3
  7661                           postinc0	equ	0xFEE
  7662                           wreg	equ	0xFE8
  7663                           postdec1	equ	0xFE5
  7664                           fsr1l	equ	0xFE1
  7665                           indf2	equ	0xFDF
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8
  7669                           
  7670 ;; *************** function _update_LCD_PED_Count *****************
  7671 ;; Defined at:
  7672 ;;		line 674 in file "Lab7_sample_S3_F21.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  direction       1    wreg     unsigned char 
  7675 ;;  count           1   57[COMRAM] unsigned char 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  direction       1   58[COMRAM] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;		None               void
  7680 ;; Registers used:
  7681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7687 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;Total ram usage:        2 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    7
  7694 ;; This function calls:
  7695 ;;		___awdiv
  7696 ;;		___awmod
  7697 ;;		_drawtext
  7698 ;; This function is called by:
  7699 ;;		_PED_Control
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text37
  7704  00E562                     __ptext37:
  7705                           	opt stack 0
  7706  00E562                     _update_LCD_PED_Count:
  7707                           	opt stack 21
  7708                           
  7709                           ;incstack = 0
  7710                           ;update_LCD_PED_Count@direction stored from wreg
  7711  00E562  6E3B               	movwf	update_LCD_PED_Count@direction,c
  7712                           
  7713                           ;Lab7_sample_S3_F21.c: 677: switch (direction)
  7714  00E564  D057               	goto	l3247
  7715  00E566                     l3237:
  7716                           
  7717                           ;Lab7_sample_S3_F21.c: 680: PED_NS_Count[0] = count/10 + '0';
  7718  00E566  C03A  F001         	movff	update_LCD_PED_Count@count,___awdiv@dividend
  7719  00E56A  6A02               	clrf	___awdiv@dividend+1,c
  7720  00E56C  0E00               	movlw	0
  7721  00E56E  6E04               	movwf	___awdiv@divisor+1,c
  7722  00E570  0E0A               	movlw	10
  7723  00E572  6E03               	movwf	___awdiv@divisor,c
  7724  00E574  EC13  F071         	call	___awdiv	;wreg free
  7725  00E578  5001               	movf	?___awdiv,w,c
  7726  00E57A  0F30               	addlw	48
  7727  00E57C  6E51               	movwf	_PED_NS_Count,c
  7728                           
  7729                           ;Lab7_sample_S3_F21.c: 681: PED_NS_Count[1] = count%10 + '0';
  7730  00E57E  C03A  F001         	movff	update_LCD_PED_Count@count,___awmod@dividend
  7731  00E582  6A02               	clrf	___awmod@dividend+1,c
  7732  00E584  0E00               	movlw	0
  7733  00E586  6E04               	movwf	___awmod@divisor+1,c
  7734  00E588  0E0A               	movlw	10
  7735  00E58A  6E03               	movwf	___awmod@divisor,c
  7736  00E58C  EC09  F070         	call	___awmod	;wreg free
  7737  00E590  5001               	movf	?___awmod,w,c
  7738  00E592  0F30               	addlw	48
  7739  00E594  6E52               	movwf	_PED_NS_Count+1,c
  7740                           
  7741                           ;Lab7_sample_S3_F21.c: 682: drawtext(2, 30, PED_NS_Count, 0x001F, 0x0000, 2);
  7742  00E596  0E1E               	movlw	30
  7743  00E598  6E29               	movwf	drawtext@y,c
  7744  00E59A  0E51               	movlw	low _PED_NS_Count
  7745  00E59C  6E2A               	movwf	drawtext@_text,c
  7746  00E59E  0E00               	movlw	high _PED_NS_Count
  7747  00E5A0  6E2B               	movwf	drawtext@_text+1,c
  7748  00E5A2  0E00               	movlw	0
  7749  00E5A4  6E2D               	movwf	drawtext@color+1,c
  7750  00E5A6  0E1F               	movlw	31
  7751  00E5A8  6E2C               	movwf	drawtext@color,c
  7752  00E5AA  0E00               	movlw	0
  7753  00E5AC  6E2F               	movwf	drawtext@bg+1,c
  7754  00E5AE  0E00               	movlw	0
  7755  00E5B0  6E2E               	movwf	drawtext@bg,c
  7756  00E5B2  0E02               	movlw	2
  7757  00E5B4  6E30               	movwf	drawtext@size,c
  7758  00E5B6  0E02               	movlw	2
  7759  00E5B8  ECE4  F073         	call	_drawtext
  7760                           
  7761                           ;Lab7_sample_S3_F21.c: 683: break;
  7762  00E5BC  D033               	goto	l481
  7763  00E5BE                     l3241:
  7764                           
  7765                           ;Lab7_sample_S3_F21.c: 685: PED_EW_Count[0] = count/10 + '0';
  7766  00E5BE  C03A  F001         	movff	update_LCD_PED_Count@count,___awdiv@dividend
  7767  00E5C2  6A02               	clrf	___awdiv@dividend+1,c
  7768  00E5C4  0E00               	movlw	0
  7769  00E5C6  6E04               	movwf	___awdiv@divisor+1,c
  7770  00E5C8  0E0A               	movlw	10
  7771  00E5CA  6E03               	movwf	___awdiv@divisor,c
  7772  00E5CC  EC13  F071         	call	___awdiv	;wreg free
  7773  00E5D0  5001               	movf	?___awdiv,w,c
  7774  00E5D2  0F30               	addlw	48
  7775  00E5D4  6E4E               	movwf	_PED_EW_Count,c
  7776                           
  7777                           ;Lab7_sample_S3_F21.c: 686: PED_EW_Count[1] = count%10 + '0';
  7778  00E5D6  C03A  F001         	movff	update_LCD_PED_Count@count,___awmod@dividend
  7779  00E5DA  6A02               	clrf	___awmod@dividend+1,c
  7780  00E5DC  0E00               	movlw	0
  7781  00E5DE  6E04               	movwf	___awmod@divisor+1,c
  7782  00E5E0  0E0A               	movlw	10
  7783  00E5E2  6E03               	movwf	___awmod@divisor,c
  7784  00E5E4  EC09  F070         	call	___awmod	;wreg free
  7785  00E5E8  5001               	movf	?___awmod,w,c
  7786  00E5EA  0F30               	addlw	48
  7787  00E5EC  6E4F               	movwf	_PED_EW_Count+1,c
  7788                           
  7789                           ;Lab7_sample_S3_F21.c: 687: drawtext(2, 90, PED_EW_Count, 0x07FF, 0x0000, 2);
  7790  00E5EE  0E5A               	movlw	90
  7791  00E5F0  6E29               	movwf	drawtext@y,c
  7792  00E5F2  0E4E               	movlw	low _PED_EW_Count
  7793  00E5F4  6E2A               	movwf	drawtext@_text,c
  7794  00E5F6  0E00               	movlw	high _PED_EW_Count
  7795  00E5F8  6E2B               	movwf	drawtext@_text+1,c
  7796  00E5FA  0E07               	movlw	7
  7797  00E5FC  6E2D               	movwf	drawtext@color+1,c
  7798  00E5FE  682C               	setf	drawtext@color,c
  7799  00E600  0E00               	movlw	0
  7800  00E602  6E2F               	movwf	drawtext@bg+1,c
  7801  00E604  0E00               	movlw	0
  7802  00E606  6E2E               	movwf	drawtext@bg,c
  7803  00E608  0E02               	movlw	2
  7804  00E60A  6E30               	movwf	drawtext@size,c
  7805  00E60C  0E02               	movlw	2
  7806  00E60E  ECE4  F073         	call	_drawtext
  7807                           
  7808                           ;Lab7_sample_S3_F21.c: 692: }
  7809                           
  7810                           ;Lab7_sample_S3_F21.c: 688: break;
  7811  00E612  D008               	goto	l481
  7812  00E614                     l3247:
  7813  00E614  503B               	movf	update_LCD_PED_Count@direction,w,c
  7814                           
  7815                           ; Switch size 1, requested type "space"
  7816                           ; Number of cases is 2, Range of values is 0 to 2
  7817                           ; switch strategies available:
  7818                           ; Name         Instructions Cycles
  7819                           ; simple_byte            7     4 (average)
  7820                           ;	Chosen strategy is simple_byte
  7821  00E616  0A00               	xorlw	0	; case 0
  7822  00E618  B4D8               	btfsc	status,2,c
  7823  00E61A  D7A5               	goto	l3237
  7824  00E61C  0A02               	xorlw	2	; case 2
  7825  00E61E  B4D8               	btfsc	status,2,c
  7826  00E620  D7CE               	goto	l3241
  7827  00E622  D000               	goto	l481
  7828  00E624                     l481:
  7829  00E624  0012               	return		;funcret
  7830  00E626                     __end_of_update_LCD_PED_Count:
  7831                           	opt stack 0
  7832                           tblptru	equ	0xFF8
  7833                           tblptrh	equ	0xFF7
  7834                           tblptrl	equ	0xFF6
  7835                           tablat	equ	0xFF5
  7836                           prodl	equ	0xFF3
  7837                           postinc0	equ	0xFEE
  7838                           wreg	equ	0xFE8
  7839                           postdec1	equ	0xFE5
  7840                           fsr1l	equ	0xFE1
  7841                           indf2	equ	0xFDF
  7842                           fsr2h	equ	0xFDA
  7843                           fsr2l	equ	0xFD9
  7844                           status	equ	0xFD8
  7845                           
  7846 ;; *************** function _drawtext *****************
  7847 ;; Defined at:
  7848 ;;		line 506 in file "ST7735_TFT.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  x               1    wreg     unsigned char 
  7851 ;;  y               1   40[COMRAM] unsigned char 
  7852 ;;  _text           2   41[COMRAM] PTR unsigned char 
  7853 ;;		 -> NULL(0), FlashingS_Txt(2), SW_MODE_Txt(2), SW_EWLT_Txt(2), 
  7854 ;;		 -> SW_EWPED_Txt(2), SW_NSLT_Txt(2), SW_NSPED_Txt(2), PED_EW_Count(3), 
  7855 ;;		 -> PED_NS_Count(3), EWLT_Count(3), EW_Count(3), NSLT_Count(3), 
  7856 ;;		 -> NS_Count(3), FlashingR_Txt(2), Act_Mode_Txt(2), buffer(31), 
  7857 ;;  color           2   43[COMRAM] unsigned int 
  7858 ;;  bg              2   45[COMRAM] unsigned int 
  7859 ;;  size            1   47[COMRAM] unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  x               1   52[COMRAM] unsigned char 
  7862 ;;  i               2   53[COMRAM] unsigned int 
  7863 ;;  textsize        2   50[COMRAM] unsigned int 
  7864 ;;  cursor_x        1   56[COMRAM] unsigned char 
  7865 ;;  cursor_y        1   55[COMRAM] unsigned char 
  7866 ;; Return value:  Size  Location     Type
  7867 ;;		None               void
  7868 ;; Registers used:
  7869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7875 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7876 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;Total ram usage:       17 bytes
  7880 ;; Hardware stack levels used:    1
  7881 ;; Hardware stack levels required when called:    6
  7882 ;; This function calls:
  7883 ;;		_drawChar
  7884 ;;		_strlen
  7885 ;; This function is called by:
  7886 ;;		_Initialize_Screen
  7887 ;;		_Wait_One_Second
  7888 ;;		_update_LCD_count
  7889 ;;		_update_LCD_PED_Count
  7890 ;;		_update_LCD_misc
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text38
  7895  00E7C8                     __ptext38:
  7896                           	opt stack 0
  7897  00E7C8                     _drawtext:
  7898                           	opt stack 21
  7899                           
  7900                           ;incstack = 0
  7901                           ;drawtext@x stored from wreg
  7902  00E7C8  6E35               	movwf	drawtext@x,c
  7903                           
  7904                           ;ST7735_TFT.c: 508: unsigned char cursor_x, cursor_y;
  7905                           ;ST7735_TFT.c: 509: unsigned int textsize, i;
  7906                           ;ST7735_TFT.c: 510: cursor_x = x, cursor_y = y;
  7907  00E7CA  C035  F039         	movff	drawtext@x,drawtext@cursor_x
  7908  00E7CE  C029  F038         	movff	drawtext@y,drawtext@cursor_y
  7909                           
  7910                           ;ST7735_TFT.c: 511: textsize = strlen(_text);
  7911  00E7D2  C02A  F001         	movff	drawtext@_text,strlen@s
  7912  00E7D6  C02B  F002         	movff	drawtext@_text+1,strlen@s+1
  7913  00E7DA  EC19  F06E         	call	_strlen	;wreg free
  7914  00E7DE  C001  F033         	movff	?_strlen,drawtext@textsize
  7915  00E7E2  C002  F034         	movff	?_strlen+1,drawtext@textsize+1
  7916                           
  7917                           ;ST7735_TFT.c: 512: for(i = 0; i < textsize; i++){
  7918  00E7E6  0E00               	movlw	0
  7919  00E7E8  6E37               	movwf	drawtext@i+1,c
  7920  00E7EA  0E00               	movlw	0
  7921  00E7EC  6E36               	movwf	drawtext@i,c
  7922  00E7EE  D054               	goto	l2747
  7923  00E7F0                     l2721:
  7924                           
  7925                           ;ST7735_TFT.c: 513: if(wrap && ((cursor_x + size * 5) > 128)){
  7926  00E7F0  5041               	movf	_wrap,w,c
  7927  00E7F2  B4D8               	btfsc	status,2,c
  7928  00E7F4  D02C               	goto	l2737
  7929  00E7F6  5030               	movf	drawtext@size,w,c
  7930  00E7F8  0D05               	mullw	5
  7931  00E7FA  5039               	movf	drawtext@cursor_x,w,c
  7932  00E7FC  6E31               	movwf	??_drawtext& (0+255),c
  7933  00E7FE  6A32               	clrf	(??_drawtext+1)& (0+255),c
  7934  00E800  50F3               	movf	prodl,w,c
  7935  00E802  2631               	addwf	??_drawtext,f,c
  7936  00E804  50F4               	movf	prodh,w,c
  7937  00E806  2232               	addwfc	??_drawtext+1,f,c
  7938  00E808  BE32               	btfsc	??_drawtext+1,7,c
  7939  00E80A  D021               	goto	l2737
  7940  00E80C  5032               	movf	??_drawtext+1,w,c
  7941  00E80E  E104               	bnz	u1600
  7942  00E810  0E81               	movlw	129
  7943  00E812  5C31               	subwf	??_drawtext,w,c
  7944  00E814  A0D8               	btfss	status,0,c
  7945  00E816  D01B               	goto	l2737
  7946  00E818                     u1600:
  7947                           
  7948                           ;ST7735_TFT.c: 514: cursor_x = 0;
  7949  00E818  0E00               	movlw	0
  7950  00E81A  6E39               	movwf	drawtext@cursor_x,c
  7951                           
  7952                           ;ST7735_TFT.c: 515: cursor_y = cursor_y + size * 7 + 3 ;
  7953  00E81C  5030               	movf	drawtext@size,w,c
  7954  00E81E  0D07               	mullw	7
  7955  00E820  50F3               	movf	prodl,w,c
  7956  00E822  2438               	addwf	drawtext@cursor_y,w,c
  7957  00E824  0F03               	addlw	3
  7958  00E826  6E38               	movwf	drawtext@cursor_y,c
  7959                           
  7960                           ;ST7735_TFT.c: 516: if(cursor_y > 160) cursor_y = 160;
  7961  00E828  0EA0               	movlw	160
  7962  00E82A  6438               	cpfsgt	drawtext@cursor_y,c
  7963  00E82C  D003               	goto	l2733
  7964  00E82E  0EA0               	movlw	160
  7965  00E830  6E38               	movwf	drawtext@cursor_y,c
  7966  00E832  D000               	goto	l2733
  7967  00E834                     l2733:
  7968                           
  7969                           ;ST7735_TFT.c: 517: if(_text[i] == 0x20) goto _skip; }
  7970  00E834  5036               	movf	drawtext@i,w,c
  7971  00E836  242A               	addwf	drawtext@_text,w,c
  7972  00E838  6ED9               	movwf	fsr2l,c
  7973  00E83A  5037               	movf	drawtext@i+1,w,c
  7974  00E83C  202B               	addwfc	drawtext@_text+1,w,c
  7975  00E83E  6EDA               	movwf	fsr2h,c
  7976  00E840  0E20               	movlw	32
  7977  00E842  18DE               	xorwf	postinc2,w,c
  7978  00E844  B4D8               	btfsc	status,2,c
  7979  00E846  D025               	goto	l2745
  7980  00E848  D002               	goto	l2737
  7981  00E84A  D023               	goto	l2745
  7982  00E84C  D000               	goto	l2737
  7983  00E84E                     l2737:
  7984                           
  7985                           ;ST7735_TFT.c: 518: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  7986  00E84E  C038  F01E         	movff	drawtext@cursor_y,drawChar@y
  7987  00E852  5036               	movf	drawtext@i,w,c
  7988  00E854  242A               	addwf	drawtext@_text,w,c
  7989  00E856  6ED9               	movwf	fsr2l,c
  7990  00E858  5037               	movf	drawtext@i+1,w,c
  7991  00E85A  202B               	addwfc	drawtext@_text+1,w,c
  7992  00E85C  6EDA               	movwf	fsr2h,c
  7993  00E85E  50DF               	movf	indf2,w,c
  7994  00E860  6E1F               	movwf	drawChar@c,c
  7995  00E862  C02C  F020         	movff	drawtext@color,drawChar@color
  7996  00E866  C02D  F021         	movff	drawtext@color+1,drawChar@color+1
  7997  00E86A  C02E  F022         	movff	drawtext@bg,drawChar@bg
  7998  00E86E  C02F  F023         	movff	drawtext@bg+1,drawChar@bg+1
  7999  00E872  C030  F024         	movff	drawtext@size,drawChar@size
  8000  00E876  5039               	movf	drawtext@cursor_x,w,c
  8001  00E878  EC61  F076         	call	_drawChar
  8002                           
  8003                           ;ST7735_TFT.c: 519: cursor_x = cursor_x + size * 6;
  8004  00E87C  5030               	movf	drawtext@size,w,c
  8005  00E87E  0D06               	mullw	6
  8006  00E880  50F3               	movf	prodl,w,c
  8007  00E882  2439               	addwf	drawtext@cursor_x,w,c
  8008  00E884  6E39               	movwf	drawtext@cursor_x,c
  8009                           
  8010                           ;ST7735_TFT.c: 520: if(cursor_x > 128) cursor_x = 128;
  8011  00E886  0E80               	movlw	128
  8012  00E888  6439               	cpfsgt	drawtext@cursor_x,c
  8013  00E88A  D003               	goto	l2745
  8014  00E88C  0E80               	movlw	128
  8015  00E88E  6E39               	movwf	drawtext@cursor_x,c
  8016  00E890  D000               	goto	l2745
  8017  00E892                     l2745:
  8018  00E892  4A36               	infsnz	drawtext@i,f,c
  8019  00E894  2A37               	incf	drawtext@i+1,f,c
  8020  00E896  D000               	goto	l2747
  8021  00E898                     l2747:
  8022  00E898  5033               	movf	drawtext@textsize,w,c
  8023  00E89A  5C36               	subwf	drawtext@i,w,c
  8024  00E89C  5034               	movf	drawtext@textsize+1,w,c
  8025  00E89E  5837               	subwfb	drawtext@i+1,w,c
  8026  00E8A0  A0D8               	btfss	status,0,c
  8027  00E8A2  D7A6               	goto	l2721
  8028  00E8A4  0012               	return		;funcret
  8029  00E8A6                     __end_of_drawtext:
  8030                           	opt stack 0
  8031                           tblptru	equ	0xFF8
  8032                           tblptrh	equ	0xFF7
  8033                           tblptrl	equ	0xFF6
  8034                           tablat	equ	0xFF5
  8035                           prodh	equ	0xFF4
  8036                           prodl	equ	0xFF3
  8037                           postinc0	equ	0xFEE
  8038                           wreg	equ	0xFE8
  8039                           postdec1	equ	0xFE5
  8040                           fsr1l	equ	0xFE1
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           fsr2h	equ	0xFDA
  8044                           fsr2l	equ	0xFD9
  8045                           status	equ	0xFD8
  8046                           
  8047 ;; *************** function _strlen *****************
  8048 ;; Defined at:
  8049 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8052 ;;		 -> NULL(0), FlashingS_Txt(2), SW_MODE_Txt(2), SW_EWLT_Txt(2), 
  8053 ;;		 -> SW_EWPED_Txt(2), SW_NSLT_Txt(2), SW_NSPED_Txt(2), PED_EW_Count(3), 
  8054 ;;		 -> PED_NS_Count(3), EWLT_Count(3), EW_Count(3), NSLT_Count(3), 
  8055 ;;		 -> NS_Count(3), FlashingR_Txt(2), Act_Mode_Txt(2), buffer(31), 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  8058 ;;		 -> NULL(0), FlashingS_Txt(2), SW_MODE_Txt(2), SW_EWLT_Txt(2), 
  8059 ;;		 -> SW_EWPED_Txt(2), SW_NSLT_Txt(2), SW_NSPED_Txt(2), PED_EW_Count(3), 
  8060 ;;		 -> PED_NS_Count(3), EWLT_Count(3), EW_Count(3), NSLT_Count(3), 
  8061 ;;		 -> NS_Count(3), FlashingR_Txt(2), Act_Mode_Txt(2), buffer(31), 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  2    0[COMRAM] unsigned int 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;Total ram usage:        6 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_drawtext
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text39
  8085  00DC32                     __ptext39:
  8086                           	opt stack 0
  8087  00DC32                     _strlen:
  8088                           	opt stack 26
  8089                           
  8090                           ;incstack = 0
  8091  00DC32  C001  F005         	movff	strlen@s,strlen@cp
  8092  00DC36  C002  F006         	movff	strlen@s+1,strlen@cp+1
  8093  00DC3A  D003               	goto	l2671
  8094  00DC3C                     l2669:
  8095  00DC3C  4A05               	infsnz	strlen@cp,f,c
  8096  00DC3E  2A06               	incf	strlen@cp+1,f,c
  8097  00DC40  D000               	goto	l2671
  8098  00DC42                     l2671:
  8099  00DC42  C005  FFD9         	movff	strlen@cp,fsr2l
  8100  00DC46  C006  FFDA         	movff	strlen@cp+1,fsr2h
  8101  00DC4A  50DF               	movf	indf2,w,c
  8102  00DC4C  A4D8               	btfss	status,2,c
  8103  00DC4E  D7F6               	goto	l2669
  8104  00DC50  C001  F003         	movff	strlen@s,??_strlen
  8105  00DC54  C002  F004         	movff	strlen@s+1,??_strlen+1
  8106  00DC58  1E03               	comf	??_strlen,f,c
  8107  00DC5A  1E04               	comf	??_strlen+1,f,c
  8108  00DC5C  4A03               	infsnz	??_strlen,f,c
  8109  00DC5E  2A04               	incf	??_strlen+1,f,c
  8110  00DC60  5005               	movf	strlen@cp,w,c
  8111  00DC62  2403               	addwf	??_strlen,w,c
  8112  00DC64  6E01               	movwf	?_strlen,c
  8113  00DC66  5006               	movf	strlen@cp+1,w,c
  8114  00DC68  2004               	addwfc	??_strlen+1,w,c
  8115  00DC6A  6E02               	movwf	?_strlen+1,c
  8116  00DC6C  D000               	goto	l1085
  8117  00DC6E                     l1085:
  8118  00DC6E  0012               	return		;funcret
  8119  00DC70                     __end_of_strlen:
  8120                           	opt stack 0
  8121                           tblptru	equ	0xFF8
  8122                           tblptrh	equ	0xFF7
  8123                           tblptrl	equ	0xFF6
  8124                           tablat	equ	0xFF5
  8125                           prodh	equ	0xFF4
  8126                           prodl	equ	0xFF3
  8127                           postinc0	equ	0xFEE
  8128                           wreg	equ	0xFE8
  8129                           postdec1	equ	0xFE5
  8130                           fsr1l	equ	0xFE1
  8131                           indf2	equ	0xFDF
  8132                           postinc2	equ	0xFDE
  8133                           fsr2h	equ	0xFDA
  8134                           fsr2l	equ	0xFD9
  8135                           status	equ	0xFD8
  8136                           
  8137 ;; *************** function _drawChar *****************
  8138 ;; Defined at:
  8139 ;;		line 479 in file "ST7735_TFT.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  x               1    wreg     unsigned char 
  8142 ;;  y               1   29[COMRAM] unsigned char 
  8143 ;;  c               1   30[COMRAM] unsigned char 
  8144 ;;  color           2   31[COMRAM] unsigned int 
  8145 ;;  bg              2   33[COMRAM] unsigned int 
  8146 ;;  size            1   35[COMRAM] unsigned char 
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  x               1   37[COMRAM] unsigned char 
  8149 ;;  line            1   36[COMRAM] unsigned char 
  8150 ;;  i               1   39[COMRAM] unsigned char 
  8151 ;;  j               1   38[COMRAM] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;		None               void
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8161 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8165 ;;Total ram usage:       11 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:    5
  8168 ;; This function calls:
  8169 ;;		___wmul
  8170 ;;		_drawPixel
  8171 ;;		_fillRect
  8172 ;; This function is called by:
  8173 ;;		_drawtext
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           	psect	text40
  8178  00ECC2                     __ptext40:
  8179                           	opt stack 0
  8180  00ECC2                     _drawChar:
  8181                           	opt stack 21
  8182                           
  8183                           ;incstack = 0
  8184                           ;drawChar@x stored from wreg
  8185  00ECC2  6E26               	movwf	drawChar@x,c
  8186                           
  8187                           ;ST7735_TFT.c: 481: char i, j;
  8188                           ;ST7735_TFT.c: 482: if((x >= 128) || (y >= 160))
  8189  00ECC4  0E80               	movlw	128
  8190  00ECC6  6026               	cpfslt	drawChar@x,c
  8191  00ECC8  D0A6               	goto	l189
  8192  00ECCA  0E9F               	movlw	159
  8193  00ECCC  641E               	cpfsgt	drawChar@y,c
  8194  00ECCE  D001               	goto	l2617
  8195                           
  8196                           ;ST7735_TFT.c: 483: return;
  8197  00ECD0  D0A2               	goto	l189
  8198  00ECD2                     l2617:
  8199                           
  8200                           ;ST7735_TFT.c: 484: if(size < 1) size = 1;
  8201  00ECD2  5024               	movf	drawChar@size,w,c
  8202  00ECD4  A4D8               	btfss	status,2,c
  8203  00ECD6  D003               	goto	l2621
  8204  00ECD8  0E01               	movlw	1
  8205  00ECDA  6E24               	movwf	drawChar@size,c
  8206  00ECDC  D000               	goto	l2621
  8207  00ECDE                     l2621:
  8208                           
  8209                           ;ST7735_TFT.c: 485: if((c < ' ') || (c > '~'))
  8210  00ECDE  0E1F               	movlw	31
  8211  00ECE0  641F               	cpfsgt	drawChar@c,c
  8212  00ECE2  D004               	goto	l2625
  8213  00ECE4  0E7E               	movlw	126
  8214  00ECE6  641F               	cpfsgt	drawChar@c,c
  8215  00ECE8  D003               	goto	l191
  8216  00ECEA  D000               	goto	l2625
  8217  00ECEC                     l2625:
  8218                           
  8219                           ;ST7735_TFT.c: 486: c = '?';
  8220  00ECEC  0E3F               	movlw	63
  8221  00ECEE  6E1F               	movwf	drawChar@c,c
  8222  00ECF0                     l191:
  8223                           
  8224                           ;ST7735_TFT.c: 487: for(i=0; i<5; i++ ) {
  8225  00ECF0  0E00               	movlw	0
  8226  00ECF2  6E28               	movwf	drawChar@i,c
  8227  00ECF4                     l2627:
  8228  00ECF4  0E04               	movlw	4
  8229  00ECF6  6428               	cpfsgt	drawChar@i,c
  8230  00ECF8  D001               	goto	l2631
  8231  00ECFA  D08D               	goto	l189
  8232  00ECFC                     l2631:
  8233                           
  8234                           ;ST7735_TFT.c: 488: unsigned char line;
  8235                           ;ST7735_TFT.c: 489: if(c < 'S')
  8236  00ECFC  0E53               	movlw	83
  8237  00ECFE  601F               	cpfslt	drawChar@c,c
  8238  00ED00  D015               	goto	l2635
  8239                           
  8240                           ;ST7735_TFT.c: 490: line = font[(c - 32)*5 + i];
  8241  00ED02  0EE0               	movlw	224
  8242  00ED04  241F               	addwf	drawChar@c,w,c
  8243  00ED06  6E01               	movwf	___wmul@multiplier,c
  8244  00ED08  6A02               	clrf	___wmul@multiplier+1,c
  8245  00ED0A  0EFF               	movlw	255
  8246  00ED0C  2202               	addwfc	___wmul@multiplier+1,f,c
  8247  00ED0E  0E00               	movlw	0
  8248  00ED10  6E04               	movwf	___wmul@multiplicand+1,c
  8249  00ED12  0E05               	movlw	5
  8250  00ED14  6E03               	movwf	___wmul@multiplicand,c
  8251  00ED16  EC71  F06D         	call	___wmul	;wreg free
  8252  00ED1A  5028               	movf	drawChar@i,w,c
  8253  00ED1C  2601               	addwf	?___wmul,f,c
  8254  00ED1E  0E00               	movlw	0
  8255  00ED20  2202               	addwfc	?___wmul+1,f,c
  8256  00ED22  0EBD               	movlw	low _font
  8257  00ED24  2401               	addwf	?___wmul,w,c
  8258  00ED26  6EF6               	movwf	tblptrl,c
  8259  00ED28  0EFD               	movlw	high _font
  8260  00ED2A  D014               	goto	L13
  8261  00ED2C                     l2635:
  8262                           
  8263                           ;ST7735_TFT.c: 491: else
  8264                           ;ST7735_TFT.c: 492: line = font2[(c - 'S')*5 + i];
  8265  00ED2C  0EAD               	movlw	173
  8266  00ED2E  241F               	addwf	drawChar@c,w,c
  8267  00ED30  6E01               	movwf	___wmul@multiplier,c
  8268  00ED32  6A02               	clrf	___wmul@multiplier+1,c
  8269  00ED34  0EFF               	movlw	255
  8270  00ED36  2202               	addwfc	___wmul@multiplier+1,f,c
  8271  00ED38  0E00               	movlw	0
  8272  00ED3A  6E04               	movwf	___wmul@multiplicand+1,c
  8273  00ED3C  0E05               	movlw	5
  8274  00ED3E  6E03               	movwf	___wmul@multiplicand,c
  8275  00ED40  EC71  F06D         	call	___wmul	;wreg free
  8276  00ED44  5028               	movf	drawChar@i,w,c
  8277  00ED46  2601               	addwf	?___wmul,f,c
  8278  00ED48  0E00               	movlw	0
  8279  00ED4A  2202               	addwfc	?___wmul+1,f,c
  8280  00ED4C  0EBC               	movlw	low _font2
  8281  00ED4E  2401               	addwf	?___wmul,w,c
  8282  00ED50  6EF6               	movwf	tblptrl,c
  8283  00ED52  0EFE               	movlw	high _font2
  8284  00ED54                     L13:
  8285  00ED54  2002               	addwfc	?___wmul+1,w,c
  8286  00ED56  6EF7               	movwf	tblptrh,c
  8287  00ED58                     	if	0	;There are less than 3 active tblptr bytes
  8288  00ED58                     	endif
  8289  00ED58  0008               	tblrd		*
  8290  00ED5A  CFF5 F025          	movff	tablat,drawChar@line
  8291  00ED5E  D000               	goto	l2637
  8292  00ED60                     l2637:
  8293                           
  8294                           ;ST7735_TFT.c: 493: for(j=0; j<7; j++, line >>= 1) {
  8295  00ED60  0E00               	movlw	0
  8296  00ED62  6E27               	movwf	drawChar@j,c
  8297  00ED64                     l2639:
  8298  00ED64  0E06               	movlw	6
  8299  00ED66  6427               	cpfsgt	drawChar@j,c
  8300  00ED68  D001               	goto	l198
  8301  00ED6A  D053               	goto	l2663
  8302  00ED6C                     l198:
  8303                           
  8304                           ;ST7735_TFT.c: 494: if(line & 0x01) {
  8305  00ED6C  A025               	btfss	drawChar@line,0,c
  8306  00ED6E  D023               	goto	l2649
  8307                           
  8308                           ;ST7735_TFT.c: 495: if(size == 1) drawPixel(x+i, y+j, color);
  8309  00ED70  0424               	decf	drawChar@size,w,c
  8310  00ED72  A4D8               	btfss	status,2,c
  8311  00ED74  D00C               	goto	l2647
  8312  00ED76  501E               	movf	drawChar@y,w,c
  8313  00ED78  2427               	addwf	drawChar@j,w,c
  8314  00ED7A  6E08               	movwf	drawPixel@y,c
  8315  00ED7C  C020  F009         	movff	drawChar@color,drawPixel@color
  8316  00ED80  C021  F00A         	movff	drawChar@color+1,drawPixel@color+1
  8317  00ED84  5026               	movf	drawChar@x,w,c
  8318  00ED86  2428               	addwf	drawChar@i,w,c
  8319  00ED88  ECB1  F06D         	call	_drawPixel
  8320  00ED8C  D03E               	goto	l2657
  8321  00ED8E                     l2647:
  8322                           
  8323                           ;ST7735_TFT.c: 496: else fillRect(x+(i*size), y+(j*size), size, size, color);
  8324  00ED8E  5027               	movf	drawChar@j,w,c
  8325  00ED90  0224               	mulwf	drawChar@size,c
  8326  00ED92  50F3               	movf	prodl,w,c
  8327  00ED94  241E               	addwf	drawChar@y,w,c
  8328  00ED96  6E13               	movwf	fillRect@y,c
  8329  00ED98  C024  F014         	movff	drawChar@size,fillRect@w
  8330  00ED9C  C024  F015         	movff	drawChar@size,fillRect@h
  8331  00EDA0  C020  F016         	movff	drawChar@color,fillRect@color
  8332  00EDA4  C021  F017         	movff	drawChar@color+1,fillRect@color+1
  8333  00EDA8  5028               	movf	drawChar@i,w,c
  8334  00EDAA  0224               	mulwf	drawChar@size,c
  8335  00EDAC  50F3               	movf	prodl,w,c
  8336  00EDAE  2426               	addwf	drawChar@x,w,c
  8337  00EDB0  EC00  F06F         	call	_fillRect
  8338                           
  8339                           ;ST7735_TFT.c: 497: }
  8340  00EDB4  D02A               	goto	l2657
  8341  00EDB6                     l2649:
  8342                           
  8343                           ;ST7735_TFT.c: 498: else if(bg != color) {
  8344  00EDB6  5020               	movf	drawChar@color,w,c
  8345  00EDB8  1822               	xorwf	drawChar@bg,w,c
  8346  00EDBA  E104               	bnz	u1460
  8347  00EDBC  5021               	movf	drawChar@color+1,w,c
  8348  00EDBE  1823               	xorwf	drawChar@bg+1,w,c
  8349  00EDC0  B4D8               	btfsc	status,2,c
  8350  00EDC2  D023               	goto	l2657
  8351  00EDC4                     u1460:
  8352                           
  8353                           ;ST7735_TFT.c: 499: if(size == 1) drawPixel(x+i, y+j, bg);
  8354  00EDC4  0424               	decf	drawChar@size,w,c
  8355  00EDC6  A4D8               	btfss	status,2,c
  8356  00EDC8  D00C               	goto	l2655
  8357  00EDCA  501E               	movf	drawChar@y,w,c
  8358  00EDCC  2427               	addwf	drawChar@j,w,c
  8359  00EDCE  6E08               	movwf	drawPixel@y,c
  8360  00EDD0  C022  F009         	movff	drawChar@bg,drawPixel@color
  8361  00EDD4  C023  F00A         	movff	drawChar@bg+1,drawPixel@color+1
  8362  00EDD8  5026               	movf	drawChar@x,w,c
  8363  00EDDA  2428               	addwf	drawChar@i,w,c
  8364  00EDDC  ECB1  F06D         	call	_drawPixel
  8365  00EDE0  D014               	goto	l2657
  8366  00EDE2                     l2655:
  8367                           
  8368                           ;ST7735_TFT.c: 500: else fillRect(x+i*size, y+j*size, size, size, bg);
  8369  00EDE2  5027               	movf	drawChar@j,w,c
  8370  00EDE4  0224               	mulwf	drawChar@size,c
  8371  00EDE6  50F3               	movf	prodl,w,c
  8372  00EDE8  241E               	addwf	drawChar@y,w,c
  8373  00EDEA  6E13               	movwf	fillRect@y,c
  8374  00EDEC  C024  F014         	movff	drawChar@size,fillRect@w
  8375  00EDF0  C024  F015         	movff	drawChar@size,fillRect@h
  8376  00EDF4  C022  F016         	movff	drawChar@bg,fillRect@color
  8377  00EDF8  C023  F017         	movff	drawChar@bg+1,fillRect@color+1
  8378  00EDFC  5028               	movf	drawChar@i,w,c
  8379  00EDFE  0224               	mulwf	drawChar@size,c
  8380  00EE00  50F3               	movf	prodl,w,c
  8381  00EE02  2426               	addwf	drawChar@x,w,c
  8382  00EE04  EC00  F06F         	call	_fillRect
  8383  00EE08  D000               	goto	l2657
  8384  00EE0A                     l2657:
  8385  00EE0A  2A27               	incf	drawChar@j,f,c
  8386  00EE0C  90D8               	bcf	status,0,c
  8387  00EE0E  3225               	rrcf	drawChar@line,f,c
  8388  00EE10  D7A9               	goto	l2639
  8389  00EE12                     l2663:
  8390  00EE12  2A28               	incf	drawChar@i,f,c
  8391  00EE14  D76F               	goto	l2627
  8392  00EE16                     l189:
  8393  00EE16  0012               	return		;funcret
  8394  00EE18                     __end_of_drawChar:
  8395                           	opt stack 0
  8396                           tblptru	equ	0xFF8
  8397                           tblptrh	equ	0xFF7
  8398                           tblptrl	equ	0xFF6
  8399                           tablat	equ	0xFF5
  8400                           prodh	equ	0xFF4
  8401                           prodl	equ	0xFF3
  8402                           postinc0	equ	0xFEE
  8403                           wreg	equ	0xFE8
  8404                           postdec1	equ	0xFE5
  8405                           fsr1l	equ	0xFE1
  8406                           indf2	equ	0xFDF
  8407                           postinc2	equ	0xFDE
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function _fillRect *****************
  8413 ;; Defined at:
  8414 ;;		line 469 in file "ST7735_TFT.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  x               1    wreg     unsigned char 
  8417 ;;  y               1   18[COMRAM] unsigned char 
  8418 ;;  w               1   19[COMRAM] unsigned char 
  8419 ;;  h               1   20[COMRAM] unsigned char 
  8420 ;;  color           2   21[COMRAM] unsigned int 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  x               1   26[COMRAM] unsigned char 
  8423 ;;  i               2   27[COMRAM] int 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;		None               void
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8433 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;Total ram usage:       11 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    4
  8440 ;; This function calls:
  8441 ;;		_drawFastVLine
  8442 ;; This function is called by:
  8443 ;;		_drawChar
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text41
  8448  00DE00                     __ptext41:
  8449                           	opt stack 0
  8450  00DE00                     _fillRect:
  8451                           	opt stack 21
  8452                           
  8453                           ;incstack = 0
  8454                           ;fillRect@x stored from wreg
  8455  00DE00  6E1B               	movwf	fillRect@x,c
  8456                           
  8457                           ;ST7735_TFT.c: 471: signed int i;
  8458                           ;ST7735_TFT.c: 473: for (i = x; i < x + w; i++)
  8459  00DE02  C01B  F01C         	movff	fillRect@x,fillRect@i
  8460  00DE06  6A1D               	clrf	fillRect@i+1,c
  8461  00DE08  D00E               	goto	l2605
  8462  00DE0A                     l2601:
  8463                           
  8464                           ;ST7735_TFT.c: 474: {
  8465                           ;ST7735_TFT.c: 475: drawFastVLine(i, y, h, color);
  8466  00DE0A  C013  F008         	movff	fillRect@y,drawFastVLine@y
  8467  00DE0E  C015  F009         	movff	fillRect@h,drawFastVLine@h
  8468  00DE12  C016  F00A         	movff	fillRect@color,drawFastVLine@color
  8469  00DE16  C017  F00B         	movff	fillRect@color+1,drawFastVLine@color+1
  8470  00DE1A  501C               	movf	fillRect@i,w,c
  8471  00DE1C  EC8B  F070         	call	_drawFastVLine
  8472  00DE20  4A1C               	infsnz	fillRect@i,f,c
  8473  00DE22  2A1D               	incf	fillRect@i+1,f,c
  8474  00DE24  D000               	goto	l2605
  8475  00DE26                     l2605:
  8476  00DE26  5014               	movf	fillRect@w,w,c
  8477  00DE28  C01B  F018         	movff	fillRect@x,??_fillRect
  8478  00DE2C  6A19               	clrf	(??_fillRect+1)& (0+255),c
  8479  00DE2E  2618               	addwf	??_fillRect,f,c
  8480  00DE30  0E00               	movlw	0
  8481  00DE32  2219               	addwfc	??_fillRect+1,f,c
  8482  00DE34  5018               	movf	??_fillRect,w,c
  8483  00DE36  5C1C               	subwf	fillRect@i,w,c
  8484  00DE38  501D               	movf	fillRect@i+1,w,c
  8485  00DE3A  0A80               	xorlw	128
  8486  00DE3C  6E1A               	movwf	(??_fillRect+2)& (0+255),c
  8487  00DE3E  5019               	movf	??_fillRect+1,w,c
  8488  00DE40  0A80               	xorlw	128
  8489  00DE42  581A               	subwfb	(??_fillRect+2)& (0+255),w,c
  8490  00DE44  A0D8               	btfss	status,0,c
  8491  00DE46  D7E1               	goto	l2601
  8492  00DE48  0012               	return		;funcret
  8493  00DE4A                     __end_of_fillRect:
  8494                           	opt stack 0
  8495                           tblptru	equ	0xFF8
  8496                           tblptrh	equ	0xFF7
  8497                           tblptrl	equ	0xFF6
  8498                           tablat	equ	0xFF5
  8499                           prodh	equ	0xFF4
  8500                           prodl	equ	0xFF3
  8501                           postinc0	equ	0xFEE
  8502                           wreg	equ	0xFE8
  8503                           postdec1	equ	0xFE5
  8504                           fsr1l	equ	0xFE1
  8505                           indf2	equ	0xFDF
  8506                           postinc2	equ	0xFDE
  8507                           fsr2h	equ	0xFDA
  8508                           fsr2l	equ	0xFD9
  8509                           status	equ	0xFD8
  8510                           
  8511 ;; *************** function _drawFastVLine *****************
  8512 ;; Defined at:
  8513 ;;		line 448 in file "ST7735_TFT.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  x               1    wreg     unsigned char 
  8516 ;;  y               1    7[COMRAM] unsigned char 
  8517 ;;  h               1    8[COMRAM] unsigned char 
  8518 ;;  color           2    9[COMRAM] unsigned int 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  x               1   17[COMRAM] unsigned char 
  8521 ;;  lo              1   16[COMRAM] unsigned char 
  8522 ;;  hi              1   15[COMRAM] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;		None               void
  8525 ;; Registers used:
  8526 ;;		wreg, status,2, status,0, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8535 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;Total ram usage:       11 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    3
  8539 ;; This function calls:
  8540 ;;		_setAddrWindow
  8541 ;;		_spiwrite
  8542 ;; This function is called by:
  8543 ;;		_fillRect
  8544 ;;		_fillCircleHelper
  8545 ;;		_fillCircle
  8546 ;;		_drawRect
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text42
  8551  00E116                     __ptext42:
  8552                           	opt stack 0
  8553  00E116                     _drawFastVLine:
  8554                           	opt stack 21
  8555                           
  8556                           ;incstack = 0
  8557                           ;drawFastVLine@x stored from wreg
  8558  00E116  6E12               	movwf	drawFastVLine@x,c
  8559                           
  8560                           ;ST7735_TFT.c: 450: unsigned char hi, lo;
  8561                           ;ST7735_TFT.c: 451: if((x >= 128) || (y >= 160))
  8562  00E118  0E80               	movlw	128
  8563  00E11A  6012               	cpfslt	drawFastVLine@x,c
  8564  00E11C  D03F               	goto	l173
  8565  00E11E  0E9F               	movlw	159
  8566  00E120  6408               	cpfsgt	drawFastVLine@y,c
  8567  00E122  D001               	goto	l2571
  8568                           
  8569                           ;ST7735_TFT.c: 452: return;
  8570  00E124  D03B               	goto	l173
  8571  00E126                     l2571:
  8572                           
  8573                           ;ST7735_TFT.c: 453: if((y + h - 1) >= 160)
  8574  00E126  0EFF               	movlw	255
  8575  00E128  6E0C               	movwf	??_drawFastVLine& (0+255),c
  8576  00E12A  0EFF               	movlw	255
  8577  00E12C  6E0D               	movwf	(??_drawFastVLine+1)& (0+255),c
  8578  00E12E  5009               	movf	drawFastVLine@h,w,c
  8579  00E130  C008  F00E         	movff	drawFastVLine@y,??_drawFastVLine+2
  8580  00E134  6A0F               	clrf	(??_drawFastVLine+3)& (0+255),c
  8581  00E136  260E               	addwf	??_drawFastVLine+2,f,c
  8582  00E138  0E00               	movlw	0
  8583  00E13A  220F               	addwfc	??_drawFastVLine+3,f,c
  8584  00E13C  500C               	movf	??_drawFastVLine,w,c
  8585  00E13E  260E               	addwf	??_drawFastVLine+2,f,c
  8586  00E140  500D               	movf	??_drawFastVLine+1,w,c
  8587  00E142  220F               	addwfc	??_drawFastVLine+3,f,c
  8588  00E144  BE0F               	btfsc	??_drawFastVLine+3,7,c
  8589  00E146  D00B               	goto	l2575
  8590  00E148  500F               	movf	??_drawFastVLine+3,w,c
  8591  00E14A  E104               	bnz	u1310
  8592  00E14C  0EA0               	movlw	160
  8593  00E14E  5C0E               	subwf	??_drawFastVLine+2,w,c
  8594  00E150  A0D8               	btfss	status,0,c
  8595  00E152  D005               	goto	l2575
  8596  00E154                     u1310:
  8597                           
  8598                           ;ST7735_TFT.c: 454: h = 160 - y;
  8599  00E154  5008               	movf	drawFastVLine@y,w,c
  8600  00E156  0800               	sublw	0
  8601  00E158  0FA0               	addlw	160
  8602  00E15A  6E09               	movwf	drawFastVLine@h,c
  8603  00E15C  D000               	goto	l2575
  8604  00E15E                     l2575:
  8605                           
  8606                           ;ST7735_TFT.c: 455: hi = color >> 8; lo = color;
  8607  00E15E  500B               	movf	drawFastVLine@color+1,w,c
  8608  00E160  6E10               	movwf	drawFastVLine@hi,c
  8609  00E162  C00A  F011         	movff	drawFastVLine@color,drawFastVLine@lo
  8610                           
  8611                           ;ST7735_TFT.c: 456: setAddrWindow(x, y, x, y + h - 1);
  8612  00E166  C008  F004         	movff	drawFastVLine@y,setAddrWindow@y0
  8613  00E16A  C012  F005         	movff	drawFastVLine@x,setAddrWindow@x1
  8614  00E16E  5008               	movf	drawFastVLine@y,w,c
  8615  00E170  2409               	addwf	drawFastVLine@h,w,c
  8616  00E172  6E0C               	movwf	??_drawFastVLine& (0+255),c
  8617  00E174  040C               	decf	??_drawFastVLine,w,c
  8618  00E176  6E06               	movwf	setAddrWindow@y1,c
  8619  00E178  5012               	movf	drawFastVLine@x,w,c
  8620  00E17A  EC25  F06F         	call	_setAddrWindow
  8621                           
  8622                           ;ST7735_TFT.c: 457: PORTDbits.RD3 = 1;
  8623  00E17E  8683               	bsf	3971,3,c	;volatile
  8624                           
  8625                           ;ST7735_TFT.c: 458: PORTDbits.RD4 = 0;
  8626  00E180  9883               	bcf	3971,4,c	;volatile
  8627                           
  8628                           ;ST7735_TFT.c: 460: while (h--) {
  8629  00E182  D007               	goto	l2587
  8630  00E184                     l2585:
  8631                           
  8632                           ;ST7735_TFT.c: 461: spiwrite(hi);
  8633  00E184  5010               	movf	drawFastVLine@hi,w,c
  8634  00E186  EC08  F06D         	call	_spiwrite
  8635                           
  8636                           ;ST7735_TFT.c: 462: spiwrite(lo);
  8637  00E18A  5011               	movf	drawFastVLine@lo,w,c
  8638  00E18C  EC08  F06D         	call	_spiwrite
  8639  00E190  D000               	goto	l2587
  8640  00E192                     l2587:
  8641  00E192  0609               	decf	drawFastVLine@h,f,c
  8642  00E194  2809               	incf	drawFastVLine@h,w,c
  8643  00E196  A4D8               	btfss	status,2,c
  8644  00E198  D7F5               	goto	l2585
  8645                           
  8646                           ;ST7735_TFT.c: 463: }
  8647                           ;ST7735_TFT.c: 464: PORTDbits.RD4 = 1;
  8648  00E19A  8883               	bsf	3971,4,c	;volatile
  8649  00E19C                     l173:
  8650  00E19C  0012               	return		;funcret
  8651  00E19E                     __end_of_drawFastVLine:
  8652                           	opt stack 0
  8653                           tblptru	equ	0xFF8
  8654                           tblptrh	equ	0xFF7
  8655                           tblptrl	equ	0xFF6
  8656                           tablat	equ	0xFF5
  8657                           prodh	equ	0xFF4
  8658                           prodl	equ	0xFF3
  8659                           postinc0	equ	0xFEE
  8660                           wreg	equ	0xFE8
  8661                           postdec1	equ	0xFE5
  8662                           fsr1l	equ	0xFE1
  8663                           indf2	equ	0xFDF
  8664                           postinc2	equ	0xFDE
  8665                           fsr2h	equ	0xFDA
  8666                           fsr2l	equ	0xFD9
  8667                           status	equ	0xFD8
  8668                           
  8669 ;; *************** function _drawPixel *****************
  8670 ;; Defined at:
  8671 ;;		line 439 in file "ST7735_TFT.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  x               1    wreg     unsigned char 
  8674 ;;  y               1    7[COMRAM] unsigned char 
  8675 ;;  color           2    8[COMRAM] unsigned int 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;  x               1   10[COMRAM] unsigned char 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;		None               void
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;Total ram usage:        4 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    3
  8694 ;; This function calls:
  8695 ;;		_setAddrWindow
  8696 ;;		_write_data
  8697 ;; This function is called by:
  8698 ;;		_drawChar
  8699 ;;		_drawCircle
  8700 ;;		_drawCircleHelper
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text43
  8705  00DB62                     __ptext43:
  8706                           	opt stack 0
  8707  00DB62                     _drawPixel:
  8708                           	opt stack 22
  8709                           
  8710                           ;incstack = 0
  8711                           ;drawPixel@x stored from wreg
  8712  00DB62  6E0B               	movwf	drawPixel@x,c
  8713                           
  8714                           ;ST7735_TFT.c: 441: if((x >= 128) || (y >= 160))
  8715  00DB64  0E80               	movlw	128
  8716  00DB66  600B               	cpfslt	drawPixel@x,c
  8717  00DB68  D013               	goto	l167
  8718  00DB6A  0E9F               	movlw	159
  8719  00DB6C  6408               	cpfsgt	drawPixel@y,c
  8720  00DB6E  D001               	goto	l2593
  8721                           
  8722                           ;ST7735_TFT.c: 442: return;
  8723  00DB70  D00F               	goto	l167
  8724  00DB72                     l2593:
  8725                           
  8726                           ;ST7735_TFT.c: 443: setAddrWindow(x,y,x+1,y+1);
  8727  00DB72  C008  F004         	movff	drawPixel@y,setAddrWindow@y0
  8728  00DB76  280B               	incf	drawPixel@x,w,c
  8729  00DB78  6E05               	movwf	setAddrWindow@x1,c
  8730  00DB7A  2808               	incf	drawPixel@y,w,c
  8731  00DB7C  6E06               	movwf	setAddrWindow@y1,c
  8732  00DB7E  500B               	movf	drawPixel@x,w,c
  8733  00DB80  EC25  F06F         	call	_setAddrWindow
  8734                           
  8735                           ;ST7735_TFT.c: 444: write_data(color >> 8);
  8736  00DB84  500A               	movf	drawPixel@color+1,w,c
  8737  00DB86  ECEE  F06C         	call	_write_data
  8738                           
  8739                           ;ST7735_TFT.c: 445: write_data(color & 0xFF);
  8740  00DB8A  5009               	movf	drawPixel@color,w,c
  8741  00DB8C  ECEE  F06C         	call	_write_data
  8742  00DB90                     l167:
  8743  00DB90  0012               	return		;funcret
  8744  00DB92                     __end_of_drawPixel:
  8745                           	opt stack 0
  8746                           tblptru	equ	0xFF8
  8747                           tblptrh	equ	0xFF7
  8748                           tblptrl	equ	0xFF6
  8749                           tablat	equ	0xFF5
  8750                           prodh	equ	0xFF4
  8751                           prodl	equ	0xFF3
  8752                           postinc0	equ	0xFEE
  8753                           wreg	equ	0xFE8
  8754                           postdec1	equ	0xFE5
  8755                           fsr1l	equ	0xFE1
  8756                           indf2	equ	0xFDF
  8757                           postinc2	equ	0xFDE
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function _setAddrWindow *****************
  8763 ;; Defined at:
  8764 ;;		line 424 in file "ST7735_TFT.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  x0              1    wreg     unsigned char 
  8767 ;;  y0              1    3[COMRAM] unsigned char 
  8768 ;;  x1              1    4[COMRAM] unsigned char 
  8769 ;;  y1              1    5[COMRAM] unsigned char 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  x0              1    6[COMRAM] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;		None               void
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8781 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;Total ram usage:        4 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    2
  8788 ;; This function calls:
  8789 ;;		_write_command
  8790 ;;		_write_data
  8791 ;; This function is called by:
  8792 ;;		_drawPixel
  8793 ;;		_drawFastVLine
  8794 ;;		_fillRectangle
  8795 ;;		_drawFastHLine
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text44
  8800  00DE4A                     __ptext44:
  8801                           	opt stack 0
  8802  00DE4A                     _setAddrWindow:
  8803                           	opt stack 21
  8804                           
  8805                           ;incstack = 0
  8806                           ;setAddrWindow@x0 stored from wreg
  8807  00DE4A  6E07               	movwf	setAddrWindow@x0,c
  8808                           
  8809                           ;ST7735_TFT.c: 426: write_command(0x2A);
  8810  00DE4C  0E2A               	movlw	42
  8811  00DE4E  ECE6  F06C         	call	_write_command
  8812                           
  8813                           ;ST7735_TFT.c: 427: write_data(0);
  8814  00DE52  0E00               	movlw	0
  8815  00DE54  ECEE  F06C         	call	_write_data
  8816                           
  8817                           ;ST7735_TFT.c: 428: write_data(x0 + colstart);
  8818  00DE58  5007               	movf	setAddrWindow@x0,w,c
  8819  00DE5A  2477               	addwf	_colstart,w,c
  8820  00DE5C  ECEE  F06C         	call	_write_data
  8821                           
  8822                           ;ST7735_TFT.c: 429: write_data(0);
  8823  00DE60  0E00               	movlw	0
  8824  00DE62  ECEE  F06C         	call	_write_data
  8825                           
  8826                           ;ST7735_TFT.c: 430: write_data(x1 + colstart);
  8827  00DE66  5005               	movf	setAddrWindow@x1,w,c
  8828  00DE68  2477               	addwf	_colstart,w,c
  8829  00DE6A  ECEE  F06C         	call	_write_data
  8830                           
  8831                           ;ST7735_TFT.c: 431: write_command(0x2B);
  8832  00DE6E  0E2B               	movlw	43
  8833  00DE70  ECE6  F06C         	call	_write_command
  8834                           
  8835                           ;ST7735_TFT.c: 432: write_data(0);
  8836  00DE74  0E00               	movlw	0
  8837  00DE76  ECEE  F06C         	call	_write_data
  8838                           
  8839                           ;ST7735_TFT.c: 433: write_data(y0 + rowstart);
  8840  00DE7A  5004               	movf	setAddrWindow@y0,w,c
  8841  00DE7C  247A               	addwf	_rowstart,w,c
  8842  00DE7E  ECEE  F06C         	call	_write_data
  8843                           
  8844                           ;ST7735_TFT.c: 434: write_data(0);
  8845  00DE82  0E00               	movlw	0
  8846  00DE84  ECEE  F06C         	call	_write_data
  8847                           
  8848                           ;ST7735_TFT.c: 435: write_data(y1 + rowstart);
  8849  00DE88  5006               	movf	setAddrWindow@y1,w,c
  8850  00DE8A  247A               	addwf	_rowstart,w,c
  8851  00DE8C  ECEE  F06C         	call	_write_data
  8852                           
  8853                           ;ST7735_TFT.c: 436: write_command(0x2C);
  8854  00DE90  0E2C               	movlw	44
  8855  00DE92  ECE6  F06C         	call	_write_command
  8856  00DE96  0012               	return		;funcret
  8857  00DE98                     __end_of_setAddrWindow:
  8858                           	opt stack 0
  8859                           tblptru	equ	0xFF8
  8860                           tblptrh	equ	0xFF7
  8861                           tblptrl	equ	0xFF6
  8862                           tablat	equ	0xFF5
  8863                           prodh	equ	0xFF4
  8864                           prodl	equ	0xFF3
  8865                           postinc0	equ	0xFEE
  8866                           wreg	equ	0xFE8
  8867                           postdec1	equ	0xFE5
  8868                           fsr1l	equ	0xFE1
  8869                           indf2	equ	0xFDF
  8870                           postinc2	equ	0xFDE
  8871                           fsr2h	equ	0xFDA
  8872                           fsr2l	equ	0xFD9
  8873                           status	equ	0xFD8
  8874                           
  8875 ;; *************** function _write_data *****************
  8876 ;; Defined at:
  8877 ;;		line 241 in file "ST7735_TFT.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  data_           1    wreg     unsigned char 
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  data_           1    2[COMRAM] unsigned char 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;		None               void
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8895 ;;Total ram usage:        1 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    1
  8898 ;; This function calls:
  8899 ;;		_spiwrite
  8900 ;; This function is called by:
  8901 ;;		_Rcmd1
  8902 ;;		_Rcmd2red
  8903 ;;		_Rcmd3
  8904 ;;		_setAddrWindow
  8905 ;;		_drawPixel
  8906 ;;		_TFT_GreenTab_Initialize
  8907 ;;		_Bcmd
  8908 ;;		_setScrollDefinition
  8909 ;;		_Rcmd2green
  8910 ;;		_VerticalScroll
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text45
  8915  00D9DC                     __ptext45:
  8916                           	opt stack 0
  8917  00D9DC                     _write_data:
  8918                           	opt stack 21
  8919                           
  8920                           ;incstack = 0
  8921                           ;write_data@data_ stored from wreg
  8922  00D9DC  6E03               	movwf	write_data@data_,c
  8923                           
  8924                           ;ST7735_TFT.c: 243: PORTDbits.RD4 = 0;
  8925  00D9DE  9883               	bcf	3971,4,c	;volatile
  8926                           
  8927                           ;ST7735_TFT.c: 244: PORTDbits.RD3 = 1;
  8928  00D9E0  8683               	bsf	3971,3,c	;volatile
  8929                           
  8930                           ;ST7735_TFT.c: 245: spiwrite(data_);
  8931  00D9E2  5003               	movf	write_data@data_,w,c
  8932  00D9E4  EC08  F06D         	call	_spiwrite
  8933                           
  8934                           ;ST7735_TFT.c: 246: PORTDbits.RD4 = 1;
  8935  00D9E8  8883               	bsf	3971,4,c	;volatile
  8936  00D9EA  0012               	return		;funcret
  8937  00D9EC                     __end_of_write_data:
  8938                           	opt stack 0
  8939                           tblptru	equ	0xFF8
  8940                           tblptrh	equ	0xFF7
  8941                           tblptrl	equ	0xFF6
  8942                           tablat	equ	0xFF5
  8943                           prodh	equ	0xFF4
  8944                           prodl	equ	0xFF3
  8945                           postinc0	equ	0xFEE
  8946                           wreg	equ	0xFE8
  8947                           postdec1	equ	0xFE5
  8948                           fsr1l	equ	0xFE1
  8949                           indf2	equ	0xFDF
  8950                           postinc2	equ	0xFDE
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _write_command *****************
  8956 ;; Defined at:
  8957 ;;		line 230 in file "ST7735_TFT.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  cmd_            1    wreg     unsigned char 
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;  cmd_            1    2[COMRAM] unsigned char 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;		None               void
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;Total ram usage:        1 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:    1
  8978 ;; This function calls:
  8979 ;;		_spiwrite
  8980 ;; This function is called by:
  8981 ;;		_Rcmd1
  8982 ;;		_Rcmd2red
  8983 ;;		_Rcmd3
  8984 ;;		_setAddrWindow
  8985 ;;		_TFT_GreenTab_Initialize
  8986 ;;		_Bcmd
  8987 ;;		_setScrollDefinition
  8988 ;;		_Rcmd2green
  8989 ;;		_VerticalScroll
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text46
  8994  00D9CC                     __ptext46:
  8995                           	opt stack 0
  8996  00D9CC                     _write_command:
  8997                           	opt stack 21
  8998                           
  8999                           ;incstack = 0
  9000                           ;write_command@cmd_ stored from wreg
  9001  00D9CC  6E03               	movwf	write_command@cmd_,c
  9002                           
  9003                           ;ST7735_TFT.c: 232: PORTDbits.RD4 = 0;
  9004  00D9CE  9883               	bcf	3971,4,c	;volatile
  9005                           
  9006                           ;ST7735_TFT.c: 234: PORTDbits.RD3 = 0;
  9007  00D9D0  9683               	bcf	3971,3,c	;volatile
  9008                           
  9009                           ;ST7735_TFT.c: 235: spiwrite(cmd_);
  9010  00D9D2  5003               	movf	write_command@cmd_,w,c
  9011  00D9D4  EC08  F06D         	call	_spiwrite
  9012                           
  9013                           ;ST7735_TFT.c: 237: PORTDbits.RD4 = 1;
  9014  00D9D8  8883               	bsf	3971,4,c	;volatile
  9015  00D9DA  0012               	return		;funcret
  9016  00D9DC                     __end_of_write_command:
  9017                           	opt stack 0
  9018                           tblptru	equ	0xFF8
  9019                           tblptrh	equ	0xFF7
  9020                           tblptrl	equ	0xFF6
  9021                           tablat	equ	0xFF5
  9022                           prodh	equ	0xFF4
  9023                           prodl	equ	0xFF3
  9024                           postinc0	equ	0xFEE
  9025                           wreg	equ	0xFE8
  9026                           postdec1	equ	0xFE5
  9027                           fsr1l	equ	0xFE1
  9028                           indf2	equ	0xFDF
  9029                           postinc2	equ	0xFDE
  9030                           fsr2h	equ	0xFDA
  9031                           fsr2l	equ	0xFD9
  9032                           status	equ	0xFD8
  9033                           
  9034 ;; *************** function _spiwrite *****************
  9035 ;; Defined at:
  9036 ;;		line 221 in file "ST7735_TFT.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  spidata         1    wreg     unsigned char 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  spidata         1    1[COMRAM] unsigned char 
  9041 ;;  x               1    0[COMRAM] unsigned char 
  9042 ;; Return value:  Size  Location     Type
  9043 ;;		None               void
  9044 ;; Registers used:
  9045 ;;		wreg
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9055 ;;Total ram usage:        2 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; This function calls:
  9058 ;;		Nothing
  9059 ;; This function is called by:
  9060 ;;		_write_command
  9061 ;;		_write_data
  9062 ;;		_drawFastVLine
  9063 ;;		_fillRectangle
  9064 ;;		_drawFastHLine
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text47
  9069  00DA10                     __ptext47:
  9070                           	opt stack 0
  9071  00DA10                     _spiwrite:
  9072                           	opt stack 23
  9073                           
  9074                           ;incstack = 0
  9075                           ;spiwrite@spidata stored from wreg
  9076  00DA10  6E02               	movwf	spiwrite@spidata,c
  9077                           
  9078                           ;ST7735_TFT.c: 223: char x;
  9079                           ;ST7735_TFT.c: 224: PIR1bits.SSPIF = 0;
  9080  00DA12  969E               	bcf	3998,3,c	;volatile
  9081                           
  9082                           ;ST7735_TFT.c: 225: x = SSPBUF;
  9083  00DA14  CFC9 F001          	movff	4041,spiwrite@x	;volatile
  9084                           
  9085                           ;ST7735_TFT.c: 226: SSPBUF = spidata;
  9086  00DA18  C002  FFC9         	movff	spiwrite@spidata,4041	;volatile
  9087                           
  9088                           ;ST7735_TFT.c: 227: while (!SSPSTATbits.BF);
  9089  00DA1C  D000               	goto	l123
  9090  00DA1E                     l123:
  9091  00DA1E  A0C7               	btfss	4039,0,c	;volatile
  9092  00DA20  D7FE               	goto	l123
  9093  00DA22  0012               	return		;funcret
  9094  00DA24                     __end_of_spiwrite:
  9095                           	opt stack 0
  9096                           tblptru	equ	0xFF8
  9097                           tblptrh	equ	0xFF7
  9098                           tblptrl	equ	0xFF6
  9099                           tablat	equ	0xFF5
  9100                           prodh	equ	0xFF4
  9101                           prodl	equ	0xFF3
  9102                           postinc0	equ	0xFEE
  9103                           wreg	equ	0xFE8
  9104                           postdec1	equ	0xFE5
  9105                           fsr1l	equ	0xFE1
  9106                           indf2	equ	0xFDF
  9107                           postinc2	equ	0xFDE
  9108                           fsr2h	equ	0xFDA
  9109                           fsr2l	equ	0xFD9
  9110                           status	equ	0xFD8
  9111                           
  9112 ;; *************** function ___wmul *****************
  9113 ;; Defined at:
  9114 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  multiplier      2    0[COMRAM] unsigned int 
  9117 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  product         2    4[COMRAM] unsigned int 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2    0[COMRAM] unsigned int 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0, prodl, prodh
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9133 ;;Total ram usage:        6 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_delay_ms
  9139 ;;		_drawChar
  9140 ;;		_main
  9141 ;;		_update_LCD_misc
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text48
  9146  00DAE2                     __ptext48:
  9147                           	opt stack 0
  9148  00DAE2                     ___wmul:
  9149                           	opt stack 30
  9150                           
  9151                           ;incstack = 0
  9152  00DAE2  5001               	movf	___wmul@multiplier,w,c
  9153  00DAE4  0203               	mulwf	___wmul@multiplicand,c
  9154  00DAE6  CFF3 F005          	movff	prodl,___wmul@product
  9155  00DAEA  CFF4 F006          	movff	prodh,___wmul@product+1
  9156  00DAEE  5001               	movf	___wmul@multiplier,w,c
  9157  00DAF0  0204               	mulwf	___wmul@multiplicand+1,c
  9158  00DAF2  50F3               	movf	prodl,w,c
  9159  00DAF4  2606               	addwf	___wmul@product+1,f,c
  9160  00DAF6  5002               	movf	___wmul@multiplier+1,w,c
  9161  00DAF8  0203               	mulwf	___wmul@multiplicand,c
  9162  00DAFA  50F3               	movf	prodl,w,c
  9163  00DAFC  2606               	addwf	___wmul@product+1,f,c
  9164  00DAFE  C005  F001         	movff	___wmul@product,?___wmul
  9165  00DB02  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9166  00DB06  D000               	goto	l528
  9167  00DB08                     l528:
  9168  00DB08  0012               	return		;funcret
  9169  00DB0A                     __end_of___wmul:
  9170                           	opt stack 0
  9171                           tblptru	equ	0xFF8
  9172                           tblptrh	equ	0xFF7
  9173                           tblptrl	equ	0xFF6
  9174                           tablat	equ	0xFF5
  9175                           prodh	equ	0xFF4
  9176                           prodl	equ	0xFF3
  9177                           postinc0	equ	0xFEE
  9178                           wreg	equ	0xFE8
  9179                           postdec1	equ	0xFE5
  9180                           fsr1l	equ	0xFE1
  9181                           indf2	equ	0xFDF
  9182                           postinc2	equ	0xFDE
  9183                           fsr2h	equ	0xFDA
  9184                           fsr2l	equ	0xFD9
  9185                           status	equ	0xFD8
  9186                           
  9187 ;; *************** function ___awmod *****************
  9188 ;; Defined at:
  9189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;  dividend        2    0[COMRAM] int 
  9192 ;;  divisor         2    2[COMRAM] int 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  sign            1    5[COMRAM] unsigned char 
  9195 ;;  counter         1    4[COMRAM] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  2    0[COMRAM] int 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;Total ram usage:        6 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_update_LCD_count
  9215 ;;		_update_LCD_PED_Count
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text49
  9220  00E012                     __ptext49:
  9221                           	opt stack 0
  9222  00E012                     ___awmod:
  9223                           	opt stack 27
  9224                           
  9225                           ;incstack = 0
  9226  00E012  0E00               	movlw	0
  9227  00E014  6E06               	movwf	___awmod@sign,c
  9228  00E016  AE02               	btfss	___awmod@dividend+1,7,c
  9229  00E018  D007               	goto	l3035
  9230  00E01A  6C01               	negf	___awmod@dividend,c
  9231  00E01C  1E02               	comf	___awmod@dividend+1,f,c
  9232  00E01E  B0D8               	btfsc	status,0,c
  9233  00E020  2A02               	incf	___awmod@dividend+1,f,c
  9234  00E022  0E01               	movlw	1
  9235  00E024  6E06               	movwf	___awmod@sign,c
  9236  00E026  D000               	goto	l3035
  9237  00E028                     l3035:
  9238  00E028  AE04               	btfss	___awmod@divisor+1,7,c
  9239  00E02A  D005               	goto	l3039
  9240  00E02C  6C03               	negf	___awmod@divisor,c
  9241  00E02E  1E04               	comf	___awmod@divisor+1,f,c
  9242  00E030  B0D8               	btfsc	status,0,c
  9243  00E032  2A04               	incf	___awmod@divisor+1,f,c
  9244  00E034  D000               	goto	l3039
  9245  00E036                     l3039:
  9246  00E036  5003               	movf	___awmod@divisor,w,c
  9247  00E038  1004               	iorwf	___awmod@divisor+1,w,c
  9248  00E03A  B4D8               	btfsc	status,2,c
  9249  00E03C  D01D               	goto	l3055
  9250  00E03E  0E01               	movlw	1
  9251  00E040  6E05               	movwf	___awmod@counter,c
  9252  00E042  D005               	goto	l3045
  9253  00E044                     l3043:
  9254  00E044  90D8               	bcf	status,0,c
  9255  00E046  3603               	rlcf	___awmod@divisor,f,c
  9256  00E048  3604               	rlcf	___awmod@divisor+1,f,c
  9257  00E04A  2A05               	incf	___awmod@counter,f,c
  9258  00E04C  D000               	goto	l3045
  9259  00E04E                     l3045:
  9260  00E04E  BE04               	btfsc	___awmod@divisor+1,7,c
  9261  00E050  D002               	goto	l3047
  9262  00E052  D7F8               	goto	l3043
  9263  00E054  D000               	goto	l3047
  9264  00E056                     l3047:
  9265  00E056  5003               	movf	___awmod@divisor,w,c
  9266  00E058  5C01               	subwf	___awmod@dividend,w,c
  9267  00E05A  5004               	movf	___awmod@divisor+1,w,c
  9268  00E05C  5802               	subwfb	___awmod@dividend+1,w,c
  9269  00E05E  A0D8               	btfss	status,0,c
  9270  00E060  D005               	goto	l3051
  9271  00E062  5003               	movf	___awmod@divisor,w,c
  9272  00E064  5E01               	subwf	___awmod@dividend,f,c
  9273  00E066  5004               	movf	___awmod@divisor+1,w,c
  9274  00E068  5A02               	subwfb	___awmod@dividend+1,f,c
  9275  00E06A  D000               	goto	l3051
  9276  00E06C                     l3051:
  9277  00E06C  90D8               	bcf	status,0,c
  9278  00E06E  3204               	rrcf	___awmod@divisor+1,f,c
  9279  00E070  3203               	rrcf	___awmod@divisor,f,c
  9280  00E072  2E05               	decfsz	___awmod@counter,f,c
  9281  00E074  D7F0               	goto	l3047
  9282  00E076  D000               	goto	l3055
  9283  00E078                     l3055:
  9284  00E078  5006               	movf	___awmod@sign,w,c
  9285  00E07A  B4D8               	btfsc	status,2,c
  9286  00E07C  D005               	goto	l3059
  9287  00E07E  6C01               	negf	___awmod@dividend,c
  9288  00E080  1E02               	comf	___awmod@dividend+1,f,c
  9289  00E082  B0D8               	btfsc	status,0,c
  9290  00E084  2A02               	incf	___awmod@dividend+1,f,c
  9291  00E086  D000               	goto	l3059
  9292  00E088                     l3059:
  9293  00E088  C001  F001         	movff	___awmod@dividend,?___awmod
  9294  00E08C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9295  00E090  D000               	goto	l734
  9296  00E092                     l734:
  9297  00E092  0012               	return		;funcret
  9298  00E094                     __end_of___awmod:
  9299                           	opt stack 0
  9300                           tblptru	equ	0xFF8
  9301                           tblptrh	equ	0xFF7
  9302                           tblptrl	equ	0xFF6
  9303                           tablat	equ	0xFF5
  9304                           prodh	equ	0xFF4
  9305                           prodl	equ	0xFF3
  9306                           postinc0	equ	0xFEE
  9307                           wreg	equ	0xFE8
  9308                           postdec1	equ	0xFE5
  9309                           fsr1l	equ	0xFE1
  9310                           indf2	equ	0xFDF
  9311                           postinc2	equ	0xFDE
  9312                           fsr2h	equ	0xFDA
  9313                           fsr2l	equ	0xFD9
  9314                           status	equ	0xFD8
  9315                           
  9316 ;; *************** function ___awdiv *****************
  9317 ;; Defined at:
  9318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  dividend        2    0[COMRAM] int 
  9321 ;;  divisor         2    2[COMRAM] int 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  quotient        2    6[COMRAM] int 
  9324 ;;  sign            1    5[COMRAM] unsigned char 
  9325 ;;  counter         1    4[COMRAM] unsigned char 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  2    0[COMRAM] int 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9338 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;Total ram usage:        8 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_update_LCD_count
  9345 ;;		_update_LCD_PED_Count
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           	psect	text50
  9350  00E226                     __ptext50:
  9351                           	opt stack 0
  9352  00E226                     ___awdiv:
  9353                           	opt stack 27
  9354                           
  9355                           ;incstack = 0
  9356  00E226  0E00               	movlw	0
  9357  00E228  6E06               	movwf	___awdiv@sign,c
  9358  00E22A  AE04               	btfss	___awdiv@divisor+1,7,c
  9359  00E22C  D007               	goto	l2991
  9360  00E22E  6C03               	negf	___awdiv@divisor,c
  9361  00E230  1E04               	comf	___awdiv@divisor+1,f,c
  9362  00E232  B0D8               	btfsc	status,0,c
  9363  00E234  2A04               	incf	___awdiv@divisor+1,f,c
  9364  00E236  0E01               	movlw	1
  9365  00E238  6E06               	movwf	___awdiv@sign,c
  9366  00E23A  D000               	goto	l2991
  9367  00E23C                     l2991:
  9368  00E23C  AE02               	btfss	___awdiv@dividend+1,7,c
  9369  00E23E  D007               	goto	l2997
  9370  00E240  6C01               	negf	___awdiv@dividend,c
  9371  00E242  1E02               	comf	___awdiv@dividend+1,f,c
  9372  00E244  B0D8               	btfsc	status,0,c
  9373  00E246  2A02               	incf	___awdiv@dividend+1,f,c
  9374  00E248  0E01               	movlw	1
  9375  00E24A  1A06               	xorwf	___awdiv@sign,f,c
  9376  00E24C  D000               	goto	l2997
  9377  00E24E                     l2997:
  9378  00E24E  0E00               	movlw	0
  9379  00E250  6E08               	movwf	___awdiv@quotient+1,c
  9380  00E252  0E00               	movlw	0
  9381  00E254  6E07               	movwf	___awdiv@quotient,c
  9382  00E256  5003               	movf	___awdiv@divisor,w,c
  9383  00E258  1004               	iorwf	___awdiv@divisor+1,w,c
  9384  00E25A  B4D8               	btfsc	status,2,c
  9385  00E25C  D021               	goto	l3019
  9386  00E25E  0E01               	movlw	1
  9387  00E260  6E05               	movwf	___awdiv@counter,c
  9388  00E262  D005               	goto	l3005
  9389  00E264                     l3003:
  9390  00E264  90D8               	bcf	status,0,c
  9391  00E266  3603               	rlcf	___awdiv@divisor,f,c
  9392  00E268  3604               	rlcf	___awdiv@divisor+1,f,c
  9393  00E26A  2A05               	incf	___awdiv@counter,f,c
  9394  00E26C  D000               	goto	l3005
  9395  00E26E                     l3005:
  9396  00E26E  BE04               	btfsc	___awdiv@divisor+1,7,c
  9397  00E270  D002               	goto	l3007
  9398  00E272  D7F8               	goto	l3003
  9399  00E274  D000               	goto	l3007
  9400  00E276                     l3007:
  9401  00E276  90D8               	bcf	status,0,c
  9402  00E278  3607               	rlcf	___awdiv@quotient,f,c
  9403  00E27A  3608               	rlcf	___awdiv@quotient+1,f,c
  9404  00E27C  5003               	movf	___awdiv@divisor,w,c
  9405  00E27E  5C01               	subwf	___awdiv@dividend,w,c
  9406  00E280  5004               	movf	___awdiv@divisor+1,w,c
  9407  00E282  5802               	subwfb	___awdiv@dividend+1,w,c
  9408  00E284  A0D8               	btfss	status,0,c
  9409  00E286  D006               	goto	l3015
  9410  00E288  5003               	movf	___awdiv@divisor,w,c
  9411  00E28A  5E01               	subwf	___awdiv@dividend,f,c
  9412  00E28C  5004               	movf	___awdiv@divisor+1,w,c
  9413  00E28E  5A02               	subwfb	___awdiv@dividend+1,f,c
  9414  00E290  8007               	bsf	___awdiv@quotient,0,c
  9415  00E292  D000               	goto	l3015
  9416  00E294                     l3015:
  9417  00E294  90D8               	bcf	status,0,c
  9418  00E296  3204               	rrcf	___awdiv@divisor+1,f,c
  9419  00E298  3203               	rrcf	___awdiv@divisor,f,c
  9420  00E29A  2E05               	decfsz	___awdiv@counter,f,c
  9421  00E29C  D7EC               	goto	l3007
  9422  00E29E  D000               	goto	l3019
  9423  00E2A0                     l3019:
  9424  00E2A0  5006               	movf	___awdiv@sign,w,c
  9425  00E2A2  B4D8               	btfsc	status,2,c
  9426  00E2A4  D005               	goto	l3023
  9427  00E2A6  6C07               	negf	___awdiv@quotient,c
  9428  00E2A8  1E08               	comf	___awdiv@quotient+1,f,c
  9429  00E2AA  B0D8               	btfsc	status,0,c
  9430  00E2AC  2A08               	incf	___awdiv@quotient+1,f,c
  9431  00E2AE  D000               	goto	l3023
  9432  00E2B0                     l3023:
  9433  00E2B0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9434  00E2B4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9435  00E2B8  D000               	goto	l721
  9436  00E2BA                     l721:
  9437  00E2BA  0012               	return		;funcret
  9438  00E2BC                     __end_of___awdiv:
  9439                           	opt stack 0
  9440                           tblptru	equ	0xFF8
  9441                           tblptrh	equ	0xFF7
  9442                           tblptrl	equ	0xFF6
  9443                           tablat	equ	0xFF5
  9444                           prodh	equ	0xFF4
  9445                           prodl	equ	0xFF3
  9446                           postinc0	equ	0xFEE
  9447                           wreg	equ	0xFE8
  9448                           postdec1	equ	0xFE5
  9449                           fsr1l	equ	0xFE1
  9450                           indf2	equ	0xFDF
  9451                           postinc2	equ	0xFDE
  9452                           fsr2h	equ	0xFDA
  9453                           fsr2l	equ	0xFD9
  9454                           status	equ	0xFD8
  9455                           
  9456 ;; *************** function _Wait_One_Second_With_Beep *****************
  9457 ;; Defined at:
  9458 ;;		line 559 in file "Lab7_sample_S3_F21.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;		None
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;		None
  9463 ;; Return value:  Size  Location     Type
  9464 ;;		None               void
  9465 ;; Registers used:
  9466 ;;		wreg, status,2, cstack
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;Total ram usage:        0 bytes
  9477 ;; Hardware stack levels used:    1
  9478 ;; Hardware stack levels required when called:    1
  9479 ;; This function calls:
  9480 ;;		_Activate_Buzzer
  9481 ;;		_Deactivate_Buzzer
  9482 ;;		_Wait_Half_Second
  9483 ;; This function is called by:
  9484 ;;		_PED_Control
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text51
  9489  00DA4C                     __ptext51:
  9490                           	opt stack 0
  9491  00DA4C                     _Wait_One_Second_With_Beep:
  9492                           	opt stack 27
  9493                           
  9494                           ;Lab7_sample_S3_F21.c: 561: PORTDbits.RD7 = 1;
  9495                           
  9496                           ;incstack = 0
  9497  00DA4C  8E83               	bsf	3971,7,c	;volatile
  9498                           
  9499                           ;Lab7_sample_S3_F21.c: 562: Activate_Buzzer();
  9500  00DA4E  ECF6  F06C         	call	_Activate_Buzzer	;wreg free
  9501                           
  9502                           ;Lab7_sample_S3_F21.c: 563: Wait_Half_Second();
  9503  00DA52  EC31  F06D         	call	_Wait_Half_Second	;wreg free
  9504                           
  9505                           ;Lab7_sample_S3_F21.c: 564: PORTDbits.RD7 = 0;
  9506  00DA56  9E83               	bcf	3971,7,c	;volatile
  9507                           
  9508                           ;Lab7_sample_S3_F21.c: 565: Deactivate_Buzzer();
  9509  00DA58  ECDB  F06C         	call	_Deactivate_Buzzer	;wreg free
  9510                           
  9511                           ;Lab7_sample_S3_F21.c: 566: Wait_Half_Second();
  9512  00DA5C  EC31  F06D         	call	_Wait_Half_Second	;wreg free
  9513  00DA60  0012               	return		;funcret
  9514  00DA62                     __end_of_Wait_One_Second_With_Beep:
  9515                           	opt stack 0
  9516                           tblptru	equ	0xFF8
  9517                           tblptrh	equ	0xFF7
  9518                           tblptrl	equ	0xFF6
  9519                           tablat	equ	0xFF5
  9520                           prodh	equ	0xFF4
  9521                           prodl	equ	0xFF3
  9522                           postinc0	equ	0xFEE
  9523                           wreg	equ	0xFE8
  9524                           postdec1	equ	0xFE5
  9525                           fsr1l	equ	0xFE1
  9526                           indf2	equ	0xFDF
  9527                           postinc2	equ	0xFDE
  9528                           fsr2h	equ	0xFDA
  9529                           fsr2l	equ	0xFD9
  9530                           status	equ	0xFD8
  9531                           
  9532 ;; *************** function _Wait_Half_Second *****************
  9533 ;; Defined at:
  9534 ;;		line 569 in file "Lab7_sample_S3_F21.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;		None
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;		None
  9539 ;; Return value:  Size  Location     Type
  9540 ;;		None               void
  9541 ;; Registers used:
  9542 ;;		wreg, status,2
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;Total ram usage:        0 bytes
  9553 ;; Hardware stack levels used:    1
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_Wait_One_Second
  9558 ;;		_Wait_One_Second_With_Beep
  9559 ;;		_Old_Wait_One_Second
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text52
  9564  00DA62                     __ptext52:
  9565                           	opt stack 0
  9566  00DA62                     _Wait_Half_Second:
  9567                           	opt stack 27
  9568                           
  9569                           ;Lab7_sample_S3_F21.c: 571: T0CON = 0x03;
  9570                           
  9571                           ;incstack = 0
  9572  00DA62  0E03               	movlw	3
  9573  00DA64  6ED5               	movwf	4053,c	;volatile
  9574                           
  9575                           ;Lab7_sample_S3_F21.c: 572: TMR0L = 0xDB;
  9576  00DA66  0EDB               	movlw	219
  9577  00DA68  6ED6               	movwf	4054,c	;volatile
  9578                           
  9579                           ;Lab7_sample_S3_F21.c: 573: TMR0H = 0x0B;
  9580  00DA6A  0E0B               	movlw	11
  9581  00DA6C  6ED7               	movwf	4055,c	;volatile
  9582                           
  9583                           ;Lab7_sample_S3_F21.c: 574: INTCONbits.TMR0IF = 0;
  9584  00DA6E  94F2               	bcf	intcon,2,c	;volatile
  9585                           
  9586                           ;Lab7_sample_S3_F21.c: 575: T0CONbits.TMR0ON = 1;
  9587  00DA70  8ED5               	bsf	4053,7,c	;volatile
  9588                           
  9589                           ;Lab7_sample_S3_F21.c: 576: while (INTCONbits.TMR0IF == 0);
  9590  00DA72  D000               	goto	l450
  9591  00DA74                     l450:
  9592  00DA74  A4F2               	btfss	intcon,2,c	;volatile
  9593  00DA76  D7FE               	goto	l450
  9594                           
  9595                           ;Lab7_sample_S3_F21.c: 577: T0CONbits.TMR0ON = 0;
  9596  00DA78  9ED5               	bcf	4053,7,c	;volatile
  9597  00DA7A  0012               	return		;funcret
  9598  00DA7C                     __end_of_Wait_Half_Second:
  9599                           	opt stack 0
  9600                           tblptru	equ	0xFF8
  9601                           tblptrh	equ	0xFF7
  9602                           tblptrl	equ	0xFF6
  9603                           tablat	equ	0xFF5
  9604                           prodh	equ	0xFF4
  9605                           prodl	equ	0xFF3
  9606                           intcon	equ	0xFF2
  9607                           postinc0	equ	0xFEE
  9608                           wreg	equ	0xFE8
  9609                           postdec1	equ	0xFE5
  9610                           fsr1l	equ	0xFE1
  9611                           indf2	equ	0xFDF
  9612                           postinc2	equ	0xFDE
  9613                           fsr2h	equ	0xFDA
  9614                           fsr2l	equ	0xFD9
  9615                           status	equ	0xFD8
  9616                           
  9617 ;; *************** function _Deactivate_Buzzer *****************
  9618 ;; Defined at:
  9619 ;;		line 391 in file "Lab7_sample_S3_F21.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;		None               void
  9626 ;; Registers used:
  9627 ;;		wreg, status,2
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; This function calls:
  9640 ;;		Nothing
  9641 ;; This function is called by:
  9642 ;;		_Wait_One_Second_With_Beep
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text53
  9647  00D9B6                     __ptext53:
  9648                           	opt stack 0
  9649  00D9B6                     _Deactivate_Buzzer:
  9650                           	opt stack 27
  9651                           
  9652                           ;Lab7_sample_S3_F21.c: 393: CCP2CON = 0x0;
  9653                           
  9654                           ;incstack = 0
  9655  00D9B6  0E00               	movlw	0
  9656  00D9B8  6EBA               	movwf	4026,c	;volatile
  9657                           
  9658                           ;Lab7_sample_S3_F21.c: 394: PORTBbits.RB3 = 0;
  9659  00D9BA  9681               	bcf	3969,3,c	;volatile
  9660  00D9BC  0012               	return		;funcret
  9661  00D9BE                     __end_of_Deactivate_Buzzer:
  9662                           	opt stack 0
  9663                           tblptru	equ	0xFF8
  9664                           tblptrh	equ	0xFF7
  9665                           tblptrl	equ	0xFF6
  9666                           tablat	equ	0xFF5
  9667                           prodh	equ	0xFF4
  9668                           prodl	equ	0xFF3
  9669                           intcon	equ	0xFF2
  9670                           postinc0	equ	0xFEE
  9671                           wreg	equ	0xFE8
  9672                           postdec1	equ	0xFE5
  9673                           fsr1l	equ	0xFE1
  9674                           indf2	equ	0xFDF
  9675                           postinc2	equ	0xFDE
  9676                           fsr2h	equ	0xFDA
  9677                           fsr2l	equ	0xFD9
  9678                           status	equ	0xFD8
  9679                           
  9680 ;; *************** function _Activate_Buzzer *****************
  9681 ;; Defined at:
  9682 ;;		line 383 in file "Lab7_sample_S3_F21.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;		None               void
  9689 ;; Registers used:
  9690 ;;		wreg, status,2
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_Wait_One_Second_With_Beep
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text54
  9710  00D9EC                     __ptext54:
  9711                           	opt stack 0
  9712  00D9EC                     _Activate_Buzzer:
  9713                           	opt stack 27
  9714                           
  9715                           ;Lab7_sample_S3_F21.c: 385: PR2 = 0b11111001;
  9716                           
  9717                           ;incstack = 0
  9718  00D9EC  0EF9               	movlw	249
  9719  00D9EE  6ECB               	movwf	4043,c	;volatile
  9720                           
  9721                           ;Lab7_sample_S3_F21.c: 386: T2CON = 0b00000101;
  9722  00D9F0  0E05               	movlw	5
  9723  00D9F2  6ECA               	movwf	4042,c	;volatile
  9724                           
  9725                           ;Lab7_sample_S3_F21.c: 387: CCPR2L = 0b01001010;
  9726  00D9F4  0E4A               	movlw	74
  9727  00D9F6  6EBB               	movwf	4027,c	;volatile
  9728                           
  9729                           ;Lab7_sample_S3_F21.c: 388: CCP2CON = 0b00111100;
  9730  00D9F8  0E3C               	movlw	60
  9731  00D9FA  6EBA               	movwf	4026,c	;volatile
  9732  00D9FC  0012               	return		;funcret
  9733  00D9FE                     __end_of_Activate_Buzzer:
  9734                           	opt stack 0
  9735                           tblptru	equ	0xFF8
  9736                           tblptrh	equ	0xFF7
  9737                           tblptrl	equ	0xFF6
  9738                           tablat	equ	0xFF5
  9739                           prodh	equ	0xFF4
  9740                           prodl	equ	0xFF3
  9741                           intcon	equ	0xFF2
  9742                           postinc0	equ	0xFEE
  9743                           wreg	equ	0xFE8
  9744                           postdec1	equ	0xFE5
  9745                           fsr1l	equ	0xFE1
  9746                           indf2	equ	0xFDF
  9747                           postinc2	equ	0xFDE
  9748                           fsr2h	equ	0xFDA
  9749                           fsr2l	equ	0xFD9
  9750                           status	equ	0xFD8
  9751                           tblptru	equ	0xFF8
  9752                           tblptrh	equ	0xFF7
  9753                           tblptrl	equ	0xFF6
  9754                           tablat	equ	0xFF5
  9755                           prodh	equ	0xFF4
  9756                           prodl	equ	0xFF3
  9757                           intcon	equ	0xFF2
  9758                           postinc0	equ	0xFEE
  9759                           wreg	equ	0xFE8
  9760                           postdec1	equ	0xFE5
  9761                           fsr1l	equ	0xFE1
  9762                           indf2	equ	0xFDF
  9763                           postinc2	equ	0xFDE
  9764                           fsr2h	equ	0xFDA
  9765                           fsr2l	equ	0xFD9
  9766                           status	equ	0xFD8
  9767                           
  9768                           	psect	rparam
  9769  0000                     tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           postinc0	equ	0xFEE
  9777                           wreg	equ	0xFE8
  9778                           postdec1	equ	0xFE5
  9779                           fsr1l	equ	0xFE1
  9780                           indf2	equ	0xFDF
  9781                           postinc2	equ	0xFDE
  9782                           fsr2h	equ	0xFDA
  9783                           fsr2l	equ	0xFD9
  9784                           status	equ	0xFD8


Data Sizes:
    Strings     103
    Constant    475
    Data        35
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     64     122
    BANK0           128      0      31
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), FlashingS_Txt(COMRAM[2]), SW_MODE_Txt(COMRAM[2]), SW_EWLT_Txt(COMRAM[2]), 
		 -> SW_EWPED_Txt(COMRAM[2]), SW_NSLT_Txt(COMRAM[2]), SW_NSPED_Txt(COMRAM[2]), PED_EW_Count(COMRAM[3]), 
		 -> PED_NS_Count(COMRAM[3]), EWLT_Count(COMRAM[3]), EW_Count(COMRAM[3]), NSLT_Count(COMRAM[3]), 
		 -> NS_Count(COMRAM[3]), FlashingR_Txt(COMRAM[2]), Act_Mode_Txt(COMRAM[2]), buffer(BANK0[31]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), FlashingS_Txt(COMRAM[2]), SW_MODE_Txt(COMRAM[2]), SW_EWLT_Txt(COMRAM[2]), 
		 -> SW_EWPED_Txt(COMRAM[2]), SW_NSLT_Txt(COMRAM[2]), SW_NSPED_Txt(COMRAM[2]), PED_EW_Count(COMRAM[3]), 
		 -> PED_NS_Count(COMRAM[3]), EWLT_Count(COMRAM[3]), EW_Count(COMRAM[3]), NSLT_Count(COMRAM[3]), 
		 -> NS_Count(COMRAM[3]), FlashingR_Txt(COMRAM[2]), Act_Mode_Txt(COMRAM[2]), buffer(BANK0[31]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[21]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[7]), STR_8(CODE[10]), STR_7(CODE[7]), 
		 -> STR_6(CODE[12]), STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[6]), STR_1(CODE[20]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    txt	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), FlashingS_Txt(COMRAM[2]), SW_MODE_Txt(COMRAM[2]), SW_EWLT_Txt(COMRAM[2]), 
		 -> SW_EWPED_Txt(COMRAM[2]), SW_NSLT_Txt(COMRAM[2]), SW_NSPED_Txt(COMRAM[2]), PED_EW_Count(COMRAM[3]), 
		 -> PED_NS_Count(COMRAM[3]), EWLT_Count(COMRAM[3]), EW_Count(COMRAM[3]), NSLT_Count(COMRAM[3]), 
		 -> NS_Count(COMRAM[3]), FlashingR_Txt(COMRAM[2]), Act_Mode_Txt(COMRAM[2]), buffer(BANK0[31]), 


Critical Paths under _main in COMRAM

    _init_UART->_OpenUSART
    _Night_Mode->_Wait_N_Seconds
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawRect->_drawFastHLine
    _drawRect->_drawFastVLine
    _drawFastHLine->_setAddrWindow
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul
    _Day_Mode->_PED_Control
    _Wait_N_Seconds->_update_LCD_count
    _update_LCD_count->_drawtext
    _Wait_One_Second->_update_LCD_misc
    _update_LCD_misc->_drawtext
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _Set_NS_LT->_update_LCD_color
    _Set_NS->_update_LCD_color
    _Set_EW_LT->_update_LCD_color
    _Set_EW->_update_LCD_color
    _update_LCD_color->_fillCircle
    _fillCircle->_fillCircleHelper
    _fillCircleHelper->_drawFastVLine
    _drawCircle->_drawPixel
    _PED_Control->_update_LCD_PED_Count
    _update_LCD_PED_Count->_drawtext
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _write_data->_spiwrite
    _write_command->_spiwrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  375642
                                             62 COMRAM     2     2      0
                           _Day_Mode
                           _Init_ADC
                  _Initialize_Screen
                         _Night_Mode
                           ___awtoft
                            ___ftdiv
                             ___ftge
                             ___wmul
                       _get_full_ADC
                            _init_IO
                          _init_UART
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Night_Mode                                           0     0      0  147696
                             _Set_EW
                          _Set_EW_LT
                             _Set_NS
                          _Set_NS_LT
                     _Wait_N_Seconds
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   52368
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                         _drawCircle
                           _drawRect
                           _drawtext
                         _fillCircle
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    1660
                                             19 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    1585
                                              7 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _drawRect                                            11     1     10    5386
                                             18 COMRAM    11     1     10
                      _drawFastHLine
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (3) _drawFastHLine                                       11     7      4    1488
                                              7 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    3402
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    1611
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0      90
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    1611
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    1521
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    1521
                                              6 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Day_Mode                                             0     0      0  170195
                        _PED_Control
                             _Set_EW
                          _Set_EW_LT
                             _Set_NS
                          _Set_NS_LT
                     _Wait_N_Seconds
 ---------------------------------------------------------------------------------
 (2) _Wait_N_Seconds                                       2     2      0   69456
                                             59 COMRAM     2     2      0
                    _Wait_One_Second
                   _update_LCD_count
 ---------------------------------------------------------------------------------
 (3) _update_LCD_count                                     2     1      1   22347
                                             57 COMRAM     2     1      1
                            ___awdiv
                            ___awmod
                           _drawtext
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second                                      0     0      0   47019
                   _Wait_Half_Second
                           _drawtext
                             _strcpy
                    _update_LCD_misc
 ---------------------------------------------------------------------------------
 (4) _update_LCD_misc                                      2     2      0   25285
                                             57 COMRAM     2     2      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                             ___wmul
                           _drawtext
                       _get_full_ADC
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     348
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2201
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1826
                                              8 COMRAM     4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    1559
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Set_NS_LT                                            1     1      0   19560
                                             53 COMRAM     1     1      0
                   _update_LCD_color
 ---------------------------------------------------------------------------------
 (2) _Set_NS                                               1     1      0   19560
                                             53 COMRAM     1     1      0
                   _update_LCD_color
 ---------------------------------------------------------------------------------
 (2) _Set_EW_LT                                            1     1      0   19560
                                             53 COMRAM     1     1      0
                   _update_LCD_color
 ---------------------------------------------------------------------------------
 (2) _Set_EW                                               1     1      0   19560
                                             53 COMRAM     1     1      0
                   _update_LCD_color
 ---------------------------------------------------------------------------------
 (3) _update_LCD_color                                     3     2      1   19516
                                             50 COMRAM     3     2      1
                         _drawCircle
                         _fillCircle
 ---------------------------------------------------------------------------------
 (4) _fillCircle                                           8     0      8    9639
                                             42 COMRAM     8     0      8
                      _drawFastVLine
                   _fillCircleHelper
 ---------------------------------------------------------------------------------
 (5) _fillCircleHelper                                    24    12     12    3607
                                             18 COMRAM    24    12     12
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (4) _drawCircle                                          20    12      8    9026
                                             11 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (2) _PED_Control                                          3     2      1   22499
                                             59 COMRAM     3     2      1
          _Wait_One_Second_With_Beep
               _update_LCD_PED_Count
 ---------------------------------------------------------------------------------
 (3) _update_LCD_PED_Count                                 2     1      1   22259
                                             57 COMRAM     2     1      1
                            ___awdiv
                            ___awmod
                           _drawtext
 ---------------------------------------------------------------------------------
 (4) _drawtext                                            17     9      8   20175
                                             40 COMRAM    17     9      8
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     143
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _drawChar                                            11     4      7    8408
                                             29 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (6) _fillRect                                            11     6      5    3044
                                             18 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (7) _drawFastVLine                                       11     7      4    2442
                                              7 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (6) _drawPixel                                            4     1      3    3367
                                              7 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (8) _setAddrWindow                                        4     1      3     814
                                              3 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (9) _write_data                                           1     1      0      45
                                              2 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (9) _write_command                                        1     1      0      45
                                              2 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (8) _spiwrite                                             2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     689
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     932
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     936
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second_With_Beep                            0     0      0       0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (4) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Day_Mode
     _PED_Control
       _Wait_One_Second_With_Beep
         _Activate_Buzzer
         _Deactivate_Buzzer
         _Wait_Half_Second
       _update_LCD_PED_Count
         ___awdiv
         ___awmod
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
     _Set_EW
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Set_EW_LT
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Set_NS
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Set_NS_LT
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _strcpy
         _update_LCD_misc
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
           ___wmul
           _drawtext
             _drawChar
               ___wmul
               _drawPixel
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _write_data
                   _spiwrite
               _fillRect
                 _drawFastVLine
                   _setAddrWindow
                     _write_command
                       _spiwrite
                     _write_data
                       _spiwrite
                   _spiwrite
             _strlen
           _get_full_ADC
       _update_LCD_count
         ___awdiv
         ___awmod
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
   _Init_ADC
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawCircle
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
     _drawRect
       _drawFastHLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
       _drawFastVLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillCircle
       _drawFastVLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
       _fillCircleHelper
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _Night_Mode
     _Set_EW
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Set_EW_LT
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Set_NS
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Set_NS_LT
       _update_LCD_color
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _fillCircle
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
           _fillCircleHelper
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _strcpy
         _update_LCD_misc
           ___awtoft
             ___ftpack
             ___wmul (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
           ___wmul
           _drawtext
             _drawChar
               ___wmul
               _drawPixel
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _write_data
                   _spiwrite
               _fillRect
                 _drawFastVLine
                   _setAddrWindow
                     _write_command
                       _spiwrite
                     _write_data
                       _spiwrite
                   _spiwrite
             _strlen
           _get_full_ADC
       _update_LCD_count
         ___awdiv
         ___awmod
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
   ___awtoft
     ___ftpack
     ___wmul (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       ___wmul (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
   ___ftge
   ___wmul
   _get_full_ADC
   _init_IO
   _init_UART
     _OpenUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      1F       5       24.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     40      7A       1       96.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99      34        0.0%
DATA                 0      0      99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 14 14:01:38 2021

                       drawCircle@f 001A                         drawCircle@r 0010  
                       drawCircle@x 001C                         drawCircle@y 001E  
         _Wait_One_Second_With_Beep DA4C                         _SSPSTATbits 000FC7  
                      drawCircle@x0 000C                        drawCircle@y0 000E  
                      ___awdiv@sign 0006                 ___wmul@multiplicand 0003  
          update_LCD_color@Circle_Y 0035                                 l113 DF34  
                               l123 DA1E                                 l230 E7C4  
                               l401 DD02                                 l410 DD46  
                               l226 E7C6                                 l403 DD06  
                               l227 E732                                 l404 DD0C  
                               l412 DD4A                                 l173 E19C  
                               l237 F058                                 l405 DD10  
                               l413 DD50                                 l229 E7A2  
                               l406 DD32                                 l414 DD54  
                               l167 DB90                                 l191 ECF0  
                               l255 EBF8                                 l415 DD76  
                               l431 E524                                 l271 E224  
                               l520 DFE8                                 l433 E560  
                               l521 DFEA                                 l450 DA74  
                               l522 DFF4                                 l523 DFF6  
                               l516 DFCE                                 l189 EE16  
                               l429 E4D4                                 l525 E010  
                               l198 ED6C                                 l438 E3F6  
                               l383 DD8A                                 l528 DB08  
                               l392 DDCE                                 l376 DAC0  
                               l721 E2BA                                 l481 E624  
                               l465 F69C                                 l385 DD8E  
                               l386 DD94                                 l394 DDD2  
                               l474 EF94                                 l387 DD98  
                               l395 DDD8                                 l379 DAE0  
                               l388 DDBA                                 l396 DDDC  
                               l397 DDFE                                 l734 E092  
                               l911 E952                                 l746 DC30  
                               l836 E6EA                                 l908 E986  
                               l917 E350                                 l847 E6C2  
                 ?_Wait_Half_Second 0001       update_LCD_PED_Count@direction 003B  
                               _PR2 000FCB                   _Deactivate_Buzzer D9B6  
                               _dir 0078                                 _nbr 0069  
                               _txt 006B                      drawFastHLine@w 0009  
                    drawFastHLine@x 0012                      drawFastHLine@y 0008  
                      ___awmod@sign 0006             __end_of_update_LCD_misc F33C  
                               wreg 000FE8                  ??_Wait_Half_Second 0001  
                ?_Deactivate_Buzzer 0001                     ??_fillRectangle 000D  
                      __CFG_LVP$OFF 000000             _TFT_GreenTab_Initialize DB0A  
                      ___ftdiv@cntr 0016                        ___ftdiv@sign 001B  
                      __CFG_WDT$OFF 000000                      drawFastVLine@h 0009  
                              l3003 E264                                l3005 E26E  
                              l1085 DC6E                                l3023 E2B0  
                              l3015 E294                                l3007 E276  
                              l3019 E2A0                                l3051 E06C  
                              l3043 E044                                l3035 E028  
                              l3203 E1E6                      drawFastVLine@x 0012  
                              l3045 E04E                                l3213 E20C  
                    drawFastVLine@y 0008                                l3047 E056  
                              l3055 E078                                l3039 E036  
                              l3231 F5C6                                l3223 F41C  
                              l3215 E21A                                l2601 DE0A  
                              l3241 E5BE                                l3401 DBA2  
                              l3059 E088                                l3227 F4F0  
                              l3331 DFD2                                l3323 DFBE  
                              l2605 DE26                                l2621 ECDE  
                              l3237 E566                                l3181 E7A6  
                              l3165 E76A                                l2631 ECFC  
                              l3247 E614                                l2703 E6CA  
                              l3271 EE74                                l3415 DB3A  
                              l3191 E7C0                                l3159 E6FC  
                              l3327 DFC6                                l3319 DFB4  
                              l2625 ECEC                                l2617 ECD2  
                              l2721 E7F0                                l3409 DBB4  
                              l2801 E8EC                                l3425 DB56  
                              l3185 E7B0                                l3177 E798  
                              l2571 E126                                l2635 ED2C  
                              l2627 ECF4                                l3275 EECC  
                              l3267 EE1C                                l3419 DB44  
                              l3339 DFE0                                l2637 ED60  
                              l2733 E834                                l2709 E6DC  
                              l2821 E92C                                l3285 EF78  
                              l2575 E15E                                l2655 EDE2  
                              l2647 ED8E                                l2663 EE12  
                              l2639 ED64                                l2671 DC42  
                              l2831 E960                                l3279 EF22  
                              l3199 E1AE                                l2593 DB72  
                              l2585 E184                                l2657 EE0A  
                              l2649 EDB6                                l2745 E892  
                              l2737 E84E                                l3385 DD16  
                              l3393 DD5A                                l3369 DD9E  
                              l3377 DDE2                                l2681 E636  
                              l2587 E192                                l2747 E898  
                              l2931 DBCE                                l2843 DC0C  
                              l2851 E2EE                                l3627 E3B4  
                              l2669 DC3C                                l3397 DB98  
                              l2925 F12E                                l2933 DBD8  
                              l2693 E68A                                l2685 E646  
                              l2861 E34C                                l2775 EC5A  
                              l2759 EBDE                                l2695 E6AA  
                              l2687 E652                                l2855 E320  
                              l2697 E6B6                                l2689 E672  
                              l2961 F206                                l2953 F1EA  
                              l3577 E510                                l2779 ECAC  
                              l2795 E8C4                                l2797 E8DE  
                              l2965 F214                                l2957 F1F8  
                              l2991 E23C                                l2967 F21A  
                              l2897 F03E                                l2997 E24E  
                              l3885 E40E                                l3895 E496  
                              STR_1 FFAD                                STR_2 FFE5  
                              STR_3 FFEB                                STR_4 FFEF  
                              STR_5 FFFD                                STR_6 FFC1  
                              STR_7 FFD7                                STR_8 FFCD  
                              STR_9 FFDE                                u1310 E154  
                              u2110 E1DC                                u2030 E72A  
                              u2040 E760                                u1600 E818  
                              u1460 EDC4                                u2500 E486  
                              u1701 E8B6                                u2510 E488  
                              u1721 E8D4                                u1830 F1BC  
                              u1840 F1BE                                _MODE 0067  
                              _TRMT 007D61                 ??_Deactivate_Buzzer 0001  
                              _main E3F8                                _font FDBD  
                      ___ftpack@arg 0001                        ___ftpack@exp 0004  
                    ??_get_full_ADC 0003                                fsr2h 000FDA  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                                _wrap 0041  
                              _volt 0064                     drawFastHLine@hi 0010  
                   drawFastHLine@lo 0011            __end_of_update_LCD_color F69E  
          __end_of_update_LCD_count EF96                  __size_of_LCD_Reset 0012  
                              prodh 000FF4                                prodl 000FF3  
                              start 0000                     ??_drawFastHLine 000C  
                   ??_drawFastVLine 000C                        ___param_bank 000010  
                      _Act_Mode_Txt 0054           __end_of_Deactivate_Buzzer D9BE  
                   drawFastVLine@hi 0010                     drawFastVLine@lo 0011  
                       _SW_EWLT_Txt 005A                         _SW_MODE_Txt 005E  
                             ?_main 0001                     __end_of___awdiv E2BC  
                   drawCircle@ddF_x 0016                               STR_10 FFF3  
                   drawCircle@ddF_y 0018                               STR_11 FFF7  
                             STR_12 FF98                               STR_13 FFFD  
                             STR_14 FFFB                     __end_of___awmod E094  
                   __end_of___ftdiv E988                               _T0CON 000FD5  
                   ___awdiv@divisor 0003                               _T2CON 000FCA  
                             _T3CON 000FB1                     ___awdiv@counter 0005  
                   drawCircle@color 0012                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR0L 000FD6  
                             _SPBRG 000FAF                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                             _Count 006D                        ?_PED_Control 003C  
                             _Rcmd1 EA7A                               _Rcmd3 E988  
                       _SW_NSLT_Txt 0060                       drawRect@color 001B  
                     ___awtoft@sign 000C                     __end_of_init_IO DA38  
                             _font2 FEBC               fillCircleHelper@ddF_x 0021  
             fillCircleHelper@ddF_y 0023                   ??_Wait_One_Second 003C  
                     ___ftpack@sign 0005               fillCircleHelper@delta 001B  
             fillCircleHelper@color 001D                      __CFG_BOREN$OFF 000000  
                             tablat 000FF5                               status 000FD8  
            ??_update_LCD_PED_Count 003B                    __end_of_Day_Mode E562  
                    _Wait_N_Seconds DB34                     write_data@data_ 0003  
                   __initialization DCAE                        __end_of_main E4A0  
                      __end_of_font FEBC                    __end_of_Init_ADC D9CC  
                  __end_of_Rcmd2red DCAE                          _Night_Mode E352  
                            ??_main 003F                       __activetblptr 000002  
             Wait_N_Seconds@seconds 003C                   __end_of_LCD_Reset DA10  
                      _SW_EWPED_Txt 005C           ??_TFT_GreenTab_Initialize 000D  
                  ?_update_LCD_misc 0001                              ?_Rcmd1 0001  
                            ?_Rcmd3 0001                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR2L 000FBB                PED_Control@direction 003D  
                  ___awdiv@dividend 0001                    __end_of___awtoft DC32  
                  __end_of___ftpack E6EC                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPBUF 000FC9  
            __end_of_Wait_N_Seconds DB62                        _SW_NSPED_Txt 0062  
                  __end_of_delay_ms DF3C                              _Set_EW DCF0  
                            _Set_NS DD78                    __end_of_fillRect DE4A  
                  __end_of_drawChar EE18                    __end_of_drawRect DFA2  
                __size_of_Set_EW_LT 0044                  __size_of_OpenUSART 0070  
                            ___ftge E2BC                  __size_of_Set_NS_LT 0044  
          __size_of_Activate_Buzzer 0012                              ___wmul DAE2  
                         ??___awdiv 0005           __size_of_fillCircleHelper 0138  
                  __end_of_drawtext E8A6                           ??___awmod 0005  
                         ??___ftdiv 0013                              _buffer 0080  
                            clear_0 DCB4                              clear_1 DCC0  
                  ___awdiv@quotient 0007                     ___awmod@divisor 0003  
        __size_of_Deactivate_Buzzer 0008                     ___awmod@counter 0005  
                      drawtext@size 0030                              _strcpy DBC4  
                            _strlen DC32                __end_of_get_full_ADC DAE2  
                         ??_init_IO 0001                        __pdataCOMRAM 0041  
__size_of_Wait_One_Second_With_Beep 0016                         Set_EW@color 0036  
                      __mediumconst FDBC                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  __end_of_spiwrite DA24                         Set_NS@color 0036  
                        __accesstop 0080             __end_of__initialization DCE6  
                        ___ftge@ff1 0001                          ___ftge@ff2 0004  
                   ?_Wait_N_Seconds 0001                       ___rparam_used 000001  
                        ___ftdiv@f1 000D                          ___ftdiv@f2 0010  
                        ___ftdiv@f3 0017                          ___awtoft@c 0009  
                     __end_of_Rcmd1 EB8A                       __end_of_Rcmd3 EA7A  
                    __pcstackCOMRAM 0001                       __end_of_font2 FF98  
                       ?_Night_Mode 0001                      drawPixel@color 0009  
            __size_of_write_command 0010                           ?_Day_Mode 0001  
        fillCircleHelper@cornername 0019                             ??_Rcmd1 000D  
                           ??_Rcmd3 000D                  __size_of_drawPixel 0030  
                 __end_of_Set_EW_LT DD78                   __end_of_OpenUSART E012  
                 __end_of_Set_NS_LT DE00                __size_of_PED_Control 0032  
                        __pbssBANK0 0080                           ?_Init_ADC 0001  
                         ?_Rcmd2red 0001                  __size_of_init_UART 0014  
         __size_of_Wait_Half_Second 001A                     spiwrite@spidata 0002  
                 ?_update_LCD_color 0033                   ?_update_LCD_count 003A  
                           ?_Set_EW 0001                             ?_Set_NS 0001  
                __CFG_CCP2MX$PORTBE 000000                  ??_update_LCD_color 0034  
                ??_update_LCD_count 003B                             ?___ftge 0001  
                           ?___wmul 0001              __size_of_setAddrWindow 004E  
                           _CCP2CON 000FBA           update_LCD_PED_Count@count 003A  
                         ?___awtoft 0009                           ?___ftpack 0001  
                   _Wait_One_Second E094                          _fillCircle DE98  
                           ?_strcpy 0001                             ?_strlen 0001  
                 ??_Activate_Buzzer 0001                          _fillScreen DA7C  
                        _drawCircle EF96                          ??_Day_Mode 003F  
                         ?_delay_ms 0007                           ?_fillRect 0013  
         update_LCD_count@direction 003B                           ?_drawChar 001E  
                           _SSPCON1 000FC6                           ?_drawRect 0013  
                           _SSPSTAT 000FC7               __end_of_fillRectangle E7C8  
                         ?_drawtext 0029                             _SW_EWLT 0071  
                           _SW_MODE 0073                          ??_Init_ADC 0001  
                           _SW_NSLT 0074                          ??_Rcmd2red 0004  
               __size_of_Night_Mode 00A6                       _write_command D9CC  
                           __Hparam 0000                             __Lparam 0000  
                   __size_of_Set_EW 0044                     __size_of_Set_NS 0044  
             __end_of_drawFastHLine E226                   __end_of_drawPixel DB92  
             __end_of_drawFastVLine E19E                    _fillCircleHelper EB8A  
                   __size_of___ftge 0096                             ___awdiv E226  
                           ___awmod E012                             ___ftdiv E8A6  
                   __size_of___wmul 0028               __size_of_get_full_ADC 0026  
                         ?_spiwrite 0001                             __pcinit DCAE  
                        ??___awtoft 000C                          ??___ftpack 0006  
                           __ramtop 1000                             __ptext0 E3F8  
                           __ptext1 DA38                             __ptext2 DFA2  
                           __ptext3 DA24                             __ptext4 E352  
                           __ptext5 F69E                             __ptext6 DA7C  
                           __ptext7 E6EC                             __ptext8 DF3C  
                           __ptext9 E19E                   __end_of_init_UART DA4C  
                         _T0CONbits 000FD5                     __size_of_strcpy 0032  
                   __size_of_strlen 003E                             _init_IO DA24  
                         _T3CONbits 000FB1                    ___awmod@dividend 0001  
                        ??_delay_ms 0009                       drawtext@_text 002A  
                     drawtext@color 002C                          ??_fillRect 0018  
                        ??_drawChar 0025                           _LCD_Reset D9FE  
                        ??_drawRect 001D                       _setAddrWindow DE4A  
                drawFastHLine@color 000A                          delay_ms@ms 0007  
              end_of_initialization DCE6                          ??_drawtext 0031  
                    ?_write_command 0001                       __Lmediumconst FDBC  
                         _PED_Count 0070                        _get_full_ADC DABC  
                      PED_Control@i 003E       __size_of_update_LCD_PED_Count 00C4  
           __end_of_Wait_One_Second E116                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postinc0 000FEE  
                           postinc2 000FDE                          ??_spiwrite 0001  
                           strlen@s 0001                     fillCircle@color 0031  
                       ?_fillCircle 002B                           _PORTAbits 000F80  
                  drawtext@cursor_x 0039                    drawtext@cursor_y 0038  
                         _PORTBbits 000F81                           _PORTCbits 000F82  
                         _PORTDbits 000F83                           _PORTEbits 000F84  
                       ?_fillScreen 0014                         ?_drawCircle 000C  
                        drawChar@bg 0022                           _TRISCbits 000F94  
                    ?_setAddrWindow 0004                          ?_LCD_Reset 0001  
                  ??_Wait_N_Seconds 003C                    drawtext@textsize 0033  
          __size_of_update_LCD_misc 01F8                          drawPixel@x 000B  
                        drawPixel@y 0008                    _Wait_Half_Second DA62  
                       ___ftdiv@exp 001A                           _TXSTAbits 000FAC  
                PED_Control@Num_Sec 003C                  get_full_ADC@result 0005  
                    __end_of_Set_EW DD34                      __end_of_Set_NS DDBC  
                    __end_of___ftge E352                      __end_of___wmul DB0A  
                     delay_ms@count 000B                          _write_data D9DC  
                     __pidataCOMRAM DA99                        ??_Night_Mode 003E  
          ?_TFT_GreenTab_Initialize 0001                          drawtext@bg 002E  
                    __end_of_strcpy DBF6                      __end_of_strlen DC70  
               start_initialization DCAE                   __size_of_Day_Mode 00C2  
                   ??_write_command 0003                           _Set_EW_LT DD34  
                         _OpenUSART DFA2                           _Set_NS_LT DDBC  
               __size_of_fillCircle 0052                    __CFG_OSC$INTIO67 000000  
                 __size_of_Init_ADC 000E                  __end_of_Night_Mode E3F8  
                 __size_of_Rcmd2red 003E                 __size_of_fillScreen 001C  
                   Wait_N_Seconds@I 003D                 __size_of_drawCircle 01AE  
                          ??_Set_EW 0036                            ??_Set_NS 0036  
                   _Activate_Buzzer D9EC                    ?_Wait_One_Second 0001  
                          ??___ftge 0007                            ??___wmul 0005  
                   setAddrWindow@x0 0007                     setAddrWindow@x1 0005  
                   setAddrWindow@y0 0004                     setAddrWindow@y1 0006  
                          ??_strcpy 0005                            ??_strlen 0003  
                      _PED_EW_Count 004E           __size_of_update_LCD_color 0362  
         __size_of_update_LCD_count 017E                   __size_of___awtoft 003C  
                 __size_of___ftpack 00C6                         __pbssCOMRAM 0064  
                     ??_PED_Control 003D                     ??_setAddrWindow 0007  
                      _PED_NS_Count 0051                         ??_LCD_Reset 000D  
          __end_of_fillCircleHelper ECC2                   __size_of_delay_ms 0052  
        ?_Wait_One_Second_With_Beep 0001                   __size_of_fillRect 004A  
                 __size_of_drawChar 0156                          ?_Set_EW_LT 0001  
                        ?_OpenUSART 0001                   __size_of_drawRect 0066  
                        ?_Set_NS_LT 0001                   __size_of_drawtext 00DE  
                 ??_update_LCD_misc 003A     __end_of_TFT_GreenTab_Initialize DB34  
                     __pmediumconst FDBC                            ?___awdiv 0001  
                          ?___awmod 0001                            ?___ftdiv 000D  
                         __tft_type 0076                           _direction 0079  
                drawFastVLine@color 000A                         ?_write_data 0001  
                         _drawPixel DB62                   __size_of_spiwrite 0014  
                          ?_init_IO 0001                   _Initialize_Screen F69E  
                    __size_of_Rcmd1 0110                      __size_of_Rcmd3 00F2  
                         _init_UART DA38                  ?_Initialize_Screen 0001  
                          _FLASHING 006E   __end_of_Wait_One_Second_With_Beep DA62  
               __end_of_PED_Control DBC4             __end_of_Activate_Buzzer D9FE  
                    ___wmul@product 0005                 ??_Initialize_Screen 003A  
                          _PIE1bits 000F9D                            _PIR1bits 000F9E  
                          _PIR2bits 000FA1                            _EW_Count 0045  
                         fillRect@h 0015                           fillRect@i 001C  
                         fillRect@w 0014                           fillRect@x 001B  
                         fillRect@y 0013                           drawChar@c 001F  
                         drawChar@i 0028                           drawChar@j 0027  
                      ??_fillCircle 0033                           drawChar@x 0026  
                         drawChar@y 001E                          ?_drawPixel 0008  
            __size_of_fillRectangle 00DC                            _NS_Count 004B  
                        _ADCON0bits 000FC2            __end_of_Wait_Half_Second DA7C  
                 ___wmul@multiplier 0001           __end_of_Initialize_Screen FDBC  
                      ??_fillScreen 0016                           drawRect@h 0019  
                         drawRect@w 0017                           drawRect@x 0013  
                         drawRect@y 0015                       _FlashingR_Txt 0056  
                     _FlashingS_Txt 0058                        ??_drawCircle 0014  
      __end_of_update_LCD_PED_Count E626                           main@nStep 003F  
                          _SW_EWPED 0072               update_LCD_color@color 0033  
                          _Day_Mode E4A0                            _SW_NSPED 0075  
         update_LCD_color@direction 0034                          ?_init_UART 0001  
            __size_of_drawFastHLine 0088                           copy_data0 DCDA  
                         drawtext@i 0036              __size_of_drawFastVLine 0088  
                         drawtext@x 0035                           drawtext@y 0029  
                          _Init_ADC D9BE                   write_command@cmd_ 0003  
                       ??_Set_EW_LT 0036                         ??_OpenUSART 0003  
                       ??_Set_NS_LT 0036                            _Rcmd2red DC70  
               __size_of_write_data 0010                     OpenUSART@config 0003  
                __end_of_fillCircle DEEA                            __Hrparam 0000  
                __end_of_fillScreen DA98               update_LCD_count@count 003A  
                          __Lrparam 0000                  __end_of_drawCircle F144  
                  __size_of___awdiv 0096                    __size_of___awmod 0082  
                  __size_of___ftdiv 00E2                            ___awtoft DBF6  
                          ___ftpack E626                    _update_LCD_color F33C  
                  _update_LCD_count EE18                    __size_of_init_IO 0014  
                       _PED_Control DB92                            _delay_ms DEEA  
                          __ptext10 DB0A                            __ptext11 E988  
                          __ptext20 E094                            __ptext12 DC70  
                          __ptext21 F144                            __ptext13 EA7A  
                          __ptext30 DD34                            __ptext22 DABC  
                          __ptext14 D9FE                            __ptext31 DCF0  
                          __ptext23 E2BC                            __ptext15 DEEA  
                          __ptext40 ECC2                            __ptext32 F33C  
                          __ptext24 E8A6                            __ptext16 D9BE  
                          __ptext41 DE00                            __ptext33 DE98  
                          __ptext25 DBF6                            __ptext17 E4A0  
                          __ptext50 E226                            __ptext42 E116  
                          __ptext34 EB8A                            __ptext26 E626  
                          __ptext18 DB34                            __ptext51 DA4C  
                          __ptext43 DB62                            __ptext35 EF96  
                          __ptext27 DBC4                            __ptext19 EE18  
                          __ptext52 DA62                            __ptext44 DE4A  
                          __ptext36 DB92                            __ptext28 DDBC  
                          __ptext53 D9B6                            __ptext45 D9DC  
                          __ptext37 E562                            __ptext29 DD78  
                          __ptext54 D9EC                            __ptext46 D9CC  
                          __ptext38 E7C8                            __ptext47 DA10  
                          __ptext39 DC32                            __ptext48 DAE2  
                          __ptext49 E012                            _fillRect DE00  
                          _drawChar ECC2                            _drawRect DF3C  
  __size_of_TFT_GreenTab_Initialize 002A                    _FLASHING_REQUEST 006F  
                          _colstart 0077                            _drawtext E7C8  
                        strcpy@from 0003                       _fillRectangle E6EC  
                  ?_Activate_Buzzer 0001                       __size_of_main 00A8  
                   fillRectangle@hi 0011                     fillRectangle@lo 0012  
                     _drawFastHLine E19E                      Set_EW_LT@color 0036  
                     _drawFastVLine E116                            _spiwrite DA10  
                       ??_drawPixel 000B                            _rowstart 007A  
                fillCircleHelper@x0 0013                  fillCircleHelper@y0 0015  
        __size_of_Initialize_Screen 071E                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 0001                         ??_init_UART 0004  
                        _EWLT_Count 0042                   ?_fillCircleHelper 0013  
                         spiwrite@x 0001         ??_Wait_One_Second_With_Beep 0001  
                   _update_LCD_misc F144                      ?_fillRectangle 0008  
                ??_fillCircleHelper 001F               __end_of_write_command D9DC  
                   fillScreen@color 0014                update_LCD_misc@nStep 003A  
              _update_LCD_PED_Count E562             __size_of_Wait_N_Seconds 002E  
                      fillCircle@x0 002B                        fillCircle@y0 002D  
                    ?_drawFastHLine 0008                      fillRectangle@h 000A  
                    fillRectangle@w 0009                      fillRectangle@x 0013  
                    fillRectangle@y 0008                      ?_drawFastVLine 0008  
                 fillCircleHelper@f 0025                   fillCircleHelper@r 0017  
                 fillCircleHelper@x 0027                   fillCircleHelper@y 0029  
                      ??_write_data 0003                       fillRect@color 0016  
          __size_of_Wait_One_Second 0082                            strcpy@cp 0005  
                          strlen@cp 0005                            strcpy@to 0001  
                        _NSLT_Count 0048                         fillCircle@r 002F  
             __end_of_setAddrWindow DE98                  fillRectangle@color 000B  
                     drawChar@color 0020                  __end_of_write_data D9EC  
                      drawChar@line 0025                      Set_NS_LT@color 0036  
                     ?_get_full_ADC 0001                        drawChar@size 0024  
             ?_update_LCD_PED_Count 003A  
