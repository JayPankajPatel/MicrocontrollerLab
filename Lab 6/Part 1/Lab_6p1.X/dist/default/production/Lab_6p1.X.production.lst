

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Oct 15 15:51:19 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  002CF8                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _segDisplay
    59  002CF8  0001               	dw	1
    60  002CFA  004F               	dw	79
    61  002CFC  0012               	dw	18
    62  002CFE  0006               	dw	6
    63  002D00  004C               	dw	76
    64  002D02  0024               	dw	36
    65  002D04  0020               	dw	32
    66  002D06  000F               	dw	15
    67  002D08  0000               	dw	0
    68  002D0A  0004               	dw	4
    69                           
    70                           	psect	smallconst
    71  001000                     __psmallconst:
    72                           	opt stack 0
    73  001000  00                 	db	0
    74  001001                     _dpowers:
    75                           	opt stack 0
    76  001001  0001               	dw	1
    77  001003  0000               	dw	0
    78  001005  000A               	dw	10
    79  001007  0000               	dw	0
    80  001009  0064               	dw	100
    81  00100B  0000               	dw	0
    82  00100D  03E8               	dw	1000
    83  00100F  0000               	dw	0
    84  001011  2710               	dw	10000
    85  001013  0000               	dw	0
    86  001015  86A0               	dw	34464
    87  001017  0001               	dw	1
    88  001019  4240               	dw	16960
    89  00101B  000F               	dw	15
    90  00101D  9680               	dw	38528
    91  00101F  0098               	dw	152
    92  001021  E100               	dw	57600
    93  001023  05F5               	dw	1525
    94  001025  CA00               	dw	51712
    95  001027  3B9A               	dw	15258
    96  001029                     __end_of_dpowers:
    97                           	opt stack 0
    98  001029                     __npowers_:
    99                           	opt stack 0
   100  001029  00                 	db	0
   101  00102A  80                 	db	128
   102  00102B  3F                 	db	63
   103  00102C  CD                 	db	205
   104  00102D  CC                 	db	204
   105  00102E  3D                 	db	61
   106  00102F  D7                 	db	215
   107  001030  23                 	db	35
   108  001031  3C                 	db	60
   109  001032  12                 	db	18
   110  001033  83                 	db	131
   111  001034  3A                 	db	58
   112  001035  B7                 	db	183
   113  001036  D1                 	db	209
   114  001037  38                 	db	56
   115  001038  C6                 	db	198
   116  001039  27                 	db	39
   117  00103A  37                 	db	55
   118  00103B  38                 	db	56
   119  00103C  86                 	db	134
   120  00103D  35                 	db	53
   121  00103E  C0                 	db	192
   122  00103F  D6                 	db	214
   123  001040  33                 	db	51
   124  001041  CC                 	db	204
   125  001042  2B                 	db	43
   126  001043  32                 	db	50
   127  001044  70                 	db	112
   128  001045  89                 	db	137
   129  001046  30                 	db	48
   130  001047  E7                 	db	231
   131  001048  DB                 	db	219
   132  001049  2E                 	db	46
   133  00104A  E5                 	db	229
   134  00104B  3C                 	db	60
   135  00104C  1E                 	db	30
   136  00104D  42                 	db	66
   137  00104E  A2                 	db	162
   138  00104F  0D                 	db	13
   139  001050                     __end_of__npowers_:
   140                           	opt stack 0
   141  001050                     __powers_:
   142                           	opt stack 0
   143  001050  00                 	db	0
   144  001051  80                 	db	128
   145  001052  3F                 	db	63
   146  001053  00                 	db	0
   147  001054  20                 	db	32
   148  001055  41                 	db	65
   149  001056  00                 	db	0
   150  001057  C8                 	db	200
   151  001058  42                 	db	66
   152  001059  00                 	db	0
   153  00105A  7A                 	db	122
   154  00105B  44                 	db	68
   155  00105C  40                 	db	64
   156  00105D  1C                 	db	28
   157  00105E  46                 	db	70
   158  00105F  50                 	db	80
   159  001060  C3                 	db	195
   160  001061  47                 	db	71
   161  001062  24                 	db	36
   162  001063  74                 	db	116
   163  001064  49                 	db	73
   164  001065  97                 	db	151
   165  001066  18                 	db	24
   166  001067  4B                 	db	75
   167  001068  BC                 	db	188
   168  001069  BE                 	db	190
   169  00106A  4C                 	db	76
   170  00106B  6B                 	db	107
   171  00106C  6E                 	db	110
   172  00106D  4E                 	db	78
   173  00106E  03                 	db	3
   174  00106F  15                 	db	21
   175  001070  50                 	db	80
   176  001071  79                 	db	121
   177  001072  AD                 	db	173
   178  001073  60                 	db	96
   179  001074  F3                 	db	243
   180  001075  49                 	db	73
   181  001076  71                 	db	113
   182  001077                     __end_of__powers_:
   183                           	opt stack 0
   184  0000                     _ADCON0	set	4034
   185  0000                     _ADCON0bits	set	4034
   186  0000                     _ADCON1	set	4033
   187  0000                     _ADCON2	set	4032
   188  0000                     _ADRESH	set	4036
   189  0000                     _ADRESL	set	4035
   190  0000                     _CCP2CON	set	4026
   191  0000                     _CCPR2L	set	4027
   192  0000                     _INTCONbits	set	4082
   193  0000                     _OSCCON	set	4051
   194  0000                     _PIE1bits	set	3997
   195  0000                     _PIR1bits	set	3998
   196  0000                     _PORTA	set	3968
   197  0000                     _PORTAbits	set	3968
   198  0000                     _PORTB	set	3969
   199  0000                     _PORTBbits	set	3969
   200  0000                     _PORTC	set	3970
   201  0000                     _PORTD	set	3971
   202  0000                     _PORTDbits	set	3971
   203  0000                     _PORTE	set	3972
   204  0000                     _PORTEbits	set	3972
   205  0000                     _PR2	set	4043
   206  0000                     _RCSTA	set	4011
   207  0000                     _RCSTAbits	set	4011
   208  0000                     _SPBRG	set	4015
   209  0000                     _SPBRGH	set	4016
   210  0000                     _T0CON	set	4053
   211  0000                     _T0CONbits	set	4053
   212  0000                     _T2CON	set	4042
   213  0000                     _TMR0H	set	4055
   214  0000                     _TMR0L	set	4054
   215  0000                     _TRISA	set	3986
   216  0000                     _TRISB	set	3987
   217  0000                     _TRISC	set	3988
   218  0000                     _TRISCbits	set	3988
   219  0000                     _TRISD	set	3989
   220  0000                     _TRISE	set	3990
   221  0000                     _TXREG	set	4013
   222  0000                     _TXSTA	set	4012
   223  0000                     _TXSTAbits	set	4012
   224  0000                     _TRMT	set	32097
   225  001077                     STR_1:
   226  001077  56                 	db	86	;'V'
   227  001078  4F                 	db	79	;'O'
   228  001079  4C                 	db	76	;'L'
   229  00107A  54                 	db	84	;'T'
   230  00107B  20                 	db	32
   231  00107C  3D                 	db	61	;'='
   232  00107D  20                 	db	32
   233  00107E  25                 	db	37
   234  00107F  66                 	db	102	;'f'
   235  001080  0D                 	db	13
   236  001081  0A                 	db	10
   237  001082  00                 	db	0
   238                           
   239                           ; #config settings
   240  001083  00                 	db	0	; dummy byte at the end
   241  0000                     
   242                           	psect	cinit
   243  002BF2                     __pcinit:
   244                           	opt stack 0
   245  002BF2                     start_initialization:
   246                           	opt stack 0
   247  002BF2                     __initialization:
   248                           	opt stack 0
   249                           
   250                           ; Initialize objects allocated to COMRAM (20 bytes)
   251                           ; load TBLPTR registers with __pidataCOMRAM
   252  002BF2  0EF8               	movlw	low __pidataCOMRAM
   253  002BF4  6EF6               	movwf	tblptrl,c
   254  002BF6  0E2C               	movlw	high __pidataCOMRAM
   255  002BF8  6EF7               	movwf	tblptrh,c
   256  002BFA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   257  002BFC  6EF8               	movwf	tblptru,c
   258  002BFE  EE00  F067         	lfsr	0,__pdataCOMRAM
   259  002C02  EE10 F014          	lfsr	1,20
   260  002C06                     copy_data0:
   261  002C06  0009               	tblrd		*+
   262  002C08  CFF5 FFEE          	movff	tablat,postinc0
   263  002C0C  50E5               	movf	postdec1,w,c
   264  002C0E  50E1               	movf	fsr1l,w,c
   265  002C10  E1FA               	bnz	copy_data0
   266  002C12                     end_of_initialization:
   267                           	opt stack 0
   268  002C12                     __end_of__initialization:
   269                           	opt stack 0
   270  002C12  0E00               	movlw	low (__Lmediumconst shr (0+16))
   271  002C14  6EF8               	movwf	tblptru,c
   272  002C16  0100               	movlb	0
   273  002C18  EFD2  F010         	goto	_main	;jump to C main() function
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	dataCOMRAM
   283  000067                     __pdataCOMRAM:
   284                           	opt stack 0
   285  000067                     _segDisplay:
   286                           	opt stack 0
   287  000067                     	ds	20
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           postdec1	equ	0xFE5
   294                           fsr1l	equ	0xFE1
   295                           
   296                           	psect	cstackCOMRAM
   297  000001                     __pcstackCOMRAM:
   298                           	opt stack 0
   299  000001                     ?_get_full_ADC:
   300                           	opt stack 0
   301  000001                     ?___awmod:
   302                           	opt stack 0
   303  000001                     ?___ftpack:
   304                           	opt stack 0
   305  000001                     ?___ftneg:
   306                           	opt stack 0
   307  000001                     ?__tdiv_to_l_:
   308                           	opt stack 0
   309  000001                     ?__div_to_l_:
   310                           	opt stack 0
   311  000001                     ?___lldiv:
   312                           	opt stack 0
   313  000001                     ?___llmod:
   314                           	opt stack 0
   315  000001                     putch@c:
   316                           	opt stack 0
   317  000001                     Wait_N_Seconds@seconds:
   318                           	opt stack 0
   319  000001                     Set_NS@color:
   320                           	opt stack 0
   321  000001                     Set_NSLT@color:
   322                           	opt stack 0
   323  000001                     Set_EW@color:
   324                           	opt stack 0
   325  000001                     Set_EWLT@color:
   326                           	opt stack 0
   327  000001                     DISPLAY_UPPER_7SEG@testbit:
   328                           	opt stack 0
   329  000001                     DISPLAY_LOWER_7SEG@LED2:
   330                           	opt stack 0
   331  000001                     OpenUSART@spbrg:
   332                           	opt stack 0
   333  000001                     ___awmod@dividend:
   334                           	opt stack 0
   335  000001                     __div_to_l_@f1:
   336                           	opt stack 0
   337  000001                     ___ftpack@arg:
   338                           	opt stack 0
   339  000001                     __tdiv_to_l_@f1:
   340                           	opt stack 0
   341  000001                     ___ftge@ff1:
   342                           	opt stack 0
   343  000001                     ___ftneg@f1:
   344                           	opt stack 0
   345  000001                     ___lldiv@dividend:
   346                           	opt stack 0
   347  000001                     ___llmod@dividend:
   348                           	opt stack 0
   349                           
   350                           ; 4 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     Wait_N_Seconds@I:
   353                           	opt stack 0
   354  000002                     DISPLAY_UPPER_7SEG@Upper:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x1
   358  000002                     	ds	1
   359  000003                     ??_get_full_ADC:
   360  000003                     DISPLAY_LOWER_7SEG@Lower:
   361                           	opt stack 0
   362  000003                     OpenUSART@config:
   363                           	opt stack 0
   364  000003                     ___awmod@divisor:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	1
   369  000004                     PED_Control@Num_Sec:
   370                           	opt stack 0
   371  000004                     ___ftpack@exp:
   372                           	opt stack 0
   373  000004                     __div_to_l_@f2:
   374                           	opt stack 0
   375  000004                     __tdiv_to_l_@f2:
   376                           	opt stack 0
   377  000004                     ___ftge@ff2:
   378                           	opt stack 0
   379                           
   380                           ; 3 bytes @ 0x3
   381  000004                     	ds	1
   382  000005                     PED_Control@Direction:
   383                           	opt stack 0
   384  000005                     ___awmod@counter:
   385                           	opt stack 0
   386  000005                     ___ftpack@sign:
   387                           	opt stack 0
   388  000005                     get_full_ADC@result:
   389                           	opt stack 0
   390  000005                     ___lldiv@divisor:
   391                           	opt stack 0
   392  000005                     ___llmod@divisor:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x4
   396  000005                     	ds	1
   397  000006                     ??___ftpack:
   398  000006                     PED_Control@i:
   399                           	opt stack 0
   400  000006                     ___awmod@sign:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404  000006                     	ds	1
   405  000007                     ??__tdiv_to_l_:
   406  000007                     ??___ftge:
   407  000007                     ?___awdiv:
   408                           	opt stack 0
   409  000007                     PED_Control@i_765:
   410                           	opt stack 0
   411  000007                     ___awdiv@dividend:
   412                           	opt stack 0
   413  000007                     __div_to_l_@quot:
   414                           	opt stack 0
   415                           
   416                           ; 4 bytes @ 0x6
   417  000007                     	ds	1
   418  000008                     
   419                           ; 0 bytes @ 0x7
   420  000008                     	ds	1
   421  000009                     ?___awtoft:
   422                           	opt stack 0
   423  000009                     ?___lltoft:
   424                           	opt stack 0
   425  000009                     ___llmod@counter:
   426                           	opt stack 0
   427  000009                     ___awdiv@divisor:
   428                           	opt stack 0
   429  000009                     ___awtoft@c:
   430                           	opt stack 0
   431  000009                     ___lldiv@quotient:
   432                           	opt stack 0
   433  000009                     ___lltoft@c:
   434                           	opt stack 0
   435                           
   436                           ; 4 bytes @ 0x8
   437  000009                     	ds	1
   438  00000A                     __tdiv_to_l_@quot:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x9
   442  00000A                     	ds	1
   443  00000B                     ___awdiv@counter:
   444                           	opt stack 0
   445  00000B                     __div_to_l_@cntr:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0xA
   449  00000B                     	ds	1
   450  00000C                     ___awdiv@sign:
   451                           	opt stack 0
   452  00000C                     ___awtoft@sign:
   453                           	opt stack 0
   454  00000C                     __div_to_l_@exp1:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xB
   458  00000C                     	ds	1
   459  00000D                     ??___lltoft:
   460  00000D                     ___lldiv@counter:
   461                           	opt stack 0
   462  00000D                     ___awdiv@quotient:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0xC
   466  00000D                     	ds	1
   467  00000E                     __tdiv_to_l_@cntr:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0xD
   471  00000E                     	ds	1
   472  00000F                     ?___wmul:
   473                           	opt stack 0
   474  00000F                     __tdiv_to_l_@exp1:
   475                           	opt stack 0
   476  00000F                     ___wmul@multiplier:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0xE
   480  00000F                     	ds	2
   481  000011                     ___lltoft@exp:
   482                           	opt stack 0
   483  000011                     ___wmul@multiplicand:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x10
   487  000011                     	ds	2
   488  000013                     ___wmul@product:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x12
   492  000013                     	ds	2
   493  000015                     ?___ftmul:
   494                           	opt stack 0
   495  000015                     ___ftmul@f1:
   496                           	opt stack 0
   497                           
   498                           ; 3 bytes @ 0x14
   499  000015                     	ds	3
   500  000018                     ___ftmul@f2:
   501                           	opt stack 0
   502                           
   503                           ; 3 bytes @ 0x17
   504  000018                     	ds	3
   505  00001B                     ??___ftmul:
   506                           
   507                           ; 0 bytes @ 0x1A
   508  00001B                     	ds	3
   509  00001E                     ___ftmul@exp:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1D
   513  00001E                     	ds	1
   514  00001F                     ___ftmul@f3_as_product:
   515                           	opt stack 0
   516                           
   517                           ; 3 bytes @ 0x1E
   518  00001F                     	ds	3
   519  000022                     ___ftmul@cntr:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x21
   523  000022                     	ds	1
   524  000023                     ___ftmul@sign:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x22
   528  000023                     	ds	1
   529  000024                     ?___ftdiv:
   530                           	opt stack 0
   531  000024                     ?_fround:
   532                           	opt stack 0
   533  000024                     ?_scale:
   534                           	opt stack 0
   535  000024                     ___ftdiv@f1:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x23
   539  000024                     	ds	3
   540  000027                     ___ftdiv@f2:
   541                           	opt stack 0
   542  000027                     _fround$1663:
   543                           	opt stack 0
   544  000027                     _scale$1664:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x26
   548  000027                     	ds	3
   549  00002A                     ??___ftdiv:
   550  00002A                     scale@scl:
   551                           	opt stack 0
   552  00002A                     _fround$1662:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x29
   556  00002A                     	ds	1
   557  00002B                     ?___fttol:
   558                           	opt stack 0
   559  00002B                     ___fttol@f1:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x2A
   563  00002B                     	ds	2
   564  00002D                     fround@prec:
   565                           	opt stack 0
   566  00002D                     ___ftdiv@cntr:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x2C
   570  00002D                     	ds	1
   571  00002E                     ?___ftadd:
   572                           	opt stack 0
   573  00002E                     ___ftadd@f1:
   574                           	opt stack 0
   575  00002E                     ___ftdiv@f3:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0x2D
   579  00002E                     	ds	1
   580  00002F                     ??___fttol:
   581                           
   582                           ; 0 bytes @ 0x2E
   583  00002F                     	ds	2
   584  000031                     ___ftdiv@exp:
   585                           	opt stack 0
   586  000031                     ___ftadd@f2:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x30
   590  000031                     	ds	1
   591  000032                     ___ftdiv@sign:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x31
   595  000032                     	ds	2
   596  000034                     ??___ftadd:
   597  000034                     ___fttol@sign1:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x33
   601  000034                     	ds	1
   602  000035                     ___fttol@lval:
   603                           	opt stack 0
   604                           
   605                           ; 4 bytes @ 0x34
   606  000035                     	ds	2
   607  000037                     ___ftadd@sign:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x36
   611  000037                     	ds	1
   612  000038                     ___ftadd@exp2:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x37
   616  000038                     	ds	1
   617  000039                     ___ftadd@exp1:
   618                           	opt stack 0
   619  000039                     ___fttol@exp1:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x38
   623  000039                     	ds	1
   624  00003A                     ?___ftsub:
   625                           	opt stack 0
   626  00003A                     ___ftsub@f1:
   627                           	opt stack 0
   628                           
   629                           ; 3 bytes @ 0x39
   630  00003A                     	ds	3
   631  00003D                     ___ftsub@f2:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x3C
   635  00003D                     	ds	3
   636  000040                     ?_printf:
   637                           	opt stack 0
   638  000040                     printf@f:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x3F
   642  000040                     	ds	5
   643  000045                     ??_printf:
   644                           
   645                           ; 0 bytes @ 0x44
   646  000045                     	ds	6
   647  00004B                     _printf$1665:
   648                           	opt stack 0
   649                           
   650                           ; 3 bytes @ 0x4A
   651  00004B                     	ds	3
   652  00004E                     printf@ap:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x4D
   656  00004E                     	ds	2
   657  000050                     printf@flag:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x4F
   661  000050                     	ds	2
   662  000052                     printf@prec:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x51
   666  000052                     	ds	2
   667  000054                     printf@val:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x53
   671  000054                     	ds	4
   672  000058                     printf@exp:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x57
   676  000058                     	ds	2
   677  00005A                     printf@tmpval:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x59
   681  00005A                     	ds	4
   682  00005E                     printf@fval:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x5D
   686  00005E                     	ds	3
   687  000061                     printf@c:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x60
   691  000061                     	ds	1
   692  000062                     main@step:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x61
   696  000062                     	ds	2
   697  000064                     main@volt:
   698                           	opt stack 0
   699                           
   700                           ; 3 bytes @ 0x63
   701  000064                     	ds	3
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           postdec1	equ	0xFE5
   708                           fsr1l	equ	0xFE1
   709                           
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 104 in file "Lab6p1.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  volt            3   99[COMRAM] float 
   720 ;;  step            2   97[COMRAM] int 
   721 ;; Return value:  Size  Location     Type
   722 ;;		None               void
   723 ;; Registers used:
   724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;Total ram usage:        5 bytes
   735 ;; Hardware stack levels required when called:    4
   736 ;; This function calls:
   737 ;;		_Day_Mode
   738 ;;		_Night_Mode
   739 ;;		___awtoft
   740 ;;		___ftdiv
   741 ;;		___ftge
   742 ;;		___ftmul
   743 ;;		_get_full_ADC
   744 ;;		_init_ADC
   745 ;;		_init_UART
   746 ;;		_printf
   747 ;; This function is called by:
   748 ;;		Startup code after reset
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text0
   753  0021A4                     __ptext0:
   754                           	opt stack 0
   755  0021A4                     _main:
   756                           	opt stack 27
   757                           
   758                           ;Lab6p1.c: 107: init_ADC();
   759                           
   760                           ;incstack = 0
   761  0021A4  ECA0  F016         	call	_init_ADC	;wreg free
   762                           
   763                           ;Lab6p1.c: 108: init_UART();
   764  0021A8  EC86  F016         	call	_init_UART	;wreg free
   765                           
   766                           ;Lab6p1.c: 110: TRISA = 0x1F;
   767  0021AC  0E1F               	movlw	31
   768  0021AE  6E92               	movwf	3986,c	;volatile
   769                           
   770                           ;Lab6p1.c: 111: TRISB = 0x00;
   771  0021B0  0E00               	movlw	0
   772  0021B2  6E93               	movwf	3987,c	;volatile
   773                           
   774                           ;Lab6p1.c: 112: TRISC = 0x00;
   775  0021B4  0E00               	movlw	0
   776  0021B6  6E94               	movwf	3988,c	;volatile
   777                           
   778                           ;Lab6p1.c: 113: TRISD = 0x00;
   779  0021B8  0E00               	movlw	0
   780  0021BA  6E95               	movwf	3989,c	;volatile
   781                           
   782                           ;Lab6p1.c: 114: TRISE = 0x00;
   783  0021BC  0E00               	movlw	0
   784  0021BE  6E96               	movwf	3990,c	;volatile
   785                           
   786                           ;Lab6p1.c: 116: PORTA = 0x00;
   787  0021C0  0E00               	movlw	0
   788  0021C2  6E80               	movwf	3968,c	;volatile
   789                           
   790                           ;Lab6p1.c: 117: PORTB = 0x00;
   791  0021C4  0E00               	movlw	0
   792  0021C6  6E81               	movwf	3969,c	;volatile
   793                           
   794                           ;Lab6p1.c: 118: PORTC = 0xFF;
   795  0021C8  6882               	setf	3970,c	;volatile
   796                           
   797                           ;Lab6p1.c: 119: PORTD = 0xFF;
   798  0021CA  6883               	setf	3971,c	;volatile
   799                           
   800                           ;Lab6p1.c: 120: PORTE = 0x01;
   801  0021CC  0E01               	movlw	1
   802  0021CE  6E84               	movwf	3972,c	;volatile
   803  0021D0  D000               	goto	l2871
   804  0021D2                     l2871:
   805                           
   806                           ;Lab6p1.c: 127: {
   807                           ;Lab6p1.c: 129: int step = get_full_ADC();
   808  0021D2  EC22  F016         	call	_get_full_ADC	;wreg free
   809  0021D6  C001  F062         	movff	?_get_full_ADC,main@step
   810  0021DA  C002  F063         	movff	?_get_full_ADC+1,main@step+1
   811                           
   812                           ;Lab6p1.c: 130: float volt = (step * 4.88)/1000.0;
   813  0021DE  0E29               	movlw	41
   814  0021E0  6E18               	movwf	___ftmul@f2,c
   815  0021E2  0E9C               	movlw	156
   816  0021E4  6E19               	movwf	___ftmul@f2+1,c
   817  0021E6  0E40               	movlw	64
   818  0021E8  6E1A               	movwf	___ftmul@f2+2,c
   819  0021EA  C062  F009         	movff	main@step,___awtoft@c
   820  0021EE  C063  F00A         	movff	main@step+1,___awtoft@c+1
   821  0021F2  EC6F  F015         	call	___awtoft	;wreg free
   822  0021F6  C009  F015         	movff	?___awtoft,___ftmul@f1
   823  0021FA  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
   824  0021FE  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
   825  002202  EC56  F010         	call	___ftmul	;wreg free
   826  002206  C015  F024         	movff	?___ftmul,___ftdiv@f1
   827  00220A  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
   828  00220E  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
   829  002212  0E00               	movlw	0
   830  002214  6E27               	movwf	___ftdiv@f2,c
   831  002216  0E7A               	movlw	122
   832  002218  6E28               	movwf	___ftdiv@f2+1,c
   833  00221A  0E44               	movlw	68
   834  00221C  6E29               	movwf	___ftdiv@f2+2,c
   835  00221E  ECC0  F011         	call	___ftdiv	;wreg free
   836  002222  C024  F064         	movff	?___ftdiv,main@volt
   837  002226  C025  F065         	movff	?___ftdiv+1,main@volt+1
   838  00222A  C026  F066         	movff	?___ftdiv+2,main@volt+2
   839                           
   840                           ;Lab6p1.c: 132: printf("VOLT = %f\r\n", volt);
   841  00222E  0E77               	movlw	low STR_1
   842  002230  6E40               	movwf	printf@f,c
   843  002232  0E10               	movlw	high STR_1
   844  002234  6E41               	movwf	printf@f+1,c
   845  002236  C064  F042         	movff	main@volt,?_printf+2
   846  00223A  C065  F043         	movff	main@volt+1,?_printf+3
   847  00223E  C066  F044         	movff	main@volt+2,?_printf+4
   848  002242  EC42  F008         	call	_printf	;wreg free
   849                           
   850                           ;Lab6p1.c: 134: if ( volt < 2.5 )
   851  002246  C064  F001         	movff	main@volt,___ftge@ff1
   852  00224A  C065  F002         	movff	main@volt+1,___ftge@ff1+1
   853  00224E  C066  F003         	movff	main@volt+2,___ftge@ff1+2
   854  002252  0E00               	movlw	0
   855  002254  6E04               	movwf	___ftge@ff2,c
   856  002256  0E20               	movlw	32
   857  002258  6E05               	movwf	___ftge@ff2+1,c
   858  00225A  0E40               	movlw	64
   859  00225C  6E06               	movwf	___ftge@ff2+2,c
   860  00225E  EC3A  F013         	call	___ftge	;wreg free
   861  002262  B0D8               	btfsc	status,0,c
   862  002264  D004               	goto	l2883
   863                           
   864                           ;Lab6p1.c: 135: { PORTBbits.RB7 = 1;
   865  002266  8E81               	bsf	3969,7,c	;volatile
   866                           
   867                           ;Lab6p1.c: 136: Day_Mode();
   868  002268  EC94  F012         	call	_Day_Mode	;wreg free
   869  00226C  D000               	goto	l2883
   870  00226E                     l2883:
   871                           
   872                           ;Lab6p1.c: 137: }
   873                           ;Lab6p1.c: 138: if ( volt > 2.5 )
   874  00226E  0E00               	movlw	0
   875  002270  6E01               	movwf	___ftge@ff1,c
   876  002272  0E20               	movlw	32
   877  002274  6E02               	movwf	___ftge@ff1+1,c
   878  002276  0E40               	movlw	64
   879  002278  6E03               	movwf	___ftge@ff1+2,c
   880  00227A  C064  F004         	movff	main@volt,___ftge@ff2
   881  00227E  C065  F005         	movff	main@volt+1,___ftge@ff2+1
   882  002282  C066  F006         	movff	main@volt+2,___ftge@ff2+2
   883  002286  EC3A  F013         	call	___ftge	;wreg free
   884  00228A  B0D8               	btfsc	status,0,c
   885  00228C  D7A2               	goto	l2871
   886                           
   887                           ;Lab6p1.c: 139: { PORTBbits.RB7 = 0;
   888  00228E  9E81               	bcf	3969,7,c	;volatile
   889                           
   890                           ;Lab6p1.c: 140: Night_Mode();
   891  002290  EC85  F013         	call	_Night_Mode	;wreg free
   892  002294  D79E               	goto	l2871
   893  002296  EF00  F000         	goto	start
   894  00229A                     __end_of_main:
   895                           	opt stack 0
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           postinc0	equ	0xFEE
   901                           postdec1	equ	0xFE5
   902                           fsr1l	equ	0xFE1
   903                           status	equ	0xFD8
   904                           
   905 ;; *************** function _printf *****************
   906 ;; Defined at:
   907 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  f               2   63[COMRAM] PTR const unsigned char 
   910 ;;		 -> STR_1(12), 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  tmpval          4   89[COMRAM] struct .
   913 ;;  val             4   83[COMRAM] unsigned long 
   914 ;;  fval            3   93[COMRAM] unsigned long 
   915 ;;  cp              3    0        PTR const unsigned char 
   916 ;;  exp             2   87[COMRAM] int 
   917 ;;  prec            2   81[COMRAM] int 
   918 ;;  flag            2   79[COMRAM] unsigned short 
   919 ;;  ap              2   77[COMRAM] PTR void [1]
   920 ;;		 -> ?_printf(2), 
   921 ;;  len             2    0        unsigned int 
   922 ;;  width           2    0        int 
   923 ;;  c               1   96[COMRAM] char 
   924 ;;  d               1    0        unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2   63[COMRAM] int 
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:       34 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    3
   941 ;; This function calls:
   942 ;;		___awdiv
   943 ;;		___ftadd
   944 ;;		___ftge
   945 ;;		___ftmul
   946 ;;		___ftneg
   947 ;;		___ftsub
   948 ;;		___fttol
   949 ;;		___lldiv
   950 ;;		___llmod
   951 ;;		___lltoft
   952 ;;		___wmul
   953 ;;		__div_to_l_
   954 ;;		__tdiv_to_l_
   955 ;;		_fround
   956 ;;		_putch
   957 ;;		_scale
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text1
   964  001084                     __ptext1:
   965                           	opt stack 0
   966  001084                     _printf:
   967                           	opt stack 27
   968                           
   969                           ;doprnt.c: 466: va_list ap;
   970                           ;doprnt.c: 499: signed char c;
   971                           ;doprnt.c: 501: int width;
   972                           ;doprnt.c: 504: int prec;
   973                           ;doprnt.c: 508: unsigned short flag;
   974                           ;doprnt.c: 515: char d;
   975                           ;doprnt.c: 516: double fval;
   976                           ;doprnt.c: 517: int exp;
   977                           ;doprnt.c: 523: union {
   978                           ;doprnt.c: 524: unsigned long vd;
   979                           ;doprnt.c: 525: double integ;
   980                           ;doprnt.c: 526: } tmpval;
   981                           ;doprnt.c: 528: unsigned long val;
   982                           ;doprnt.c: 529: unsigned len;
   983                           ;doprnt.c: 530: const char * cp;
   984                           ;doprnt.c: 533: *ap = __va_start();
   985                           
   986                           ;incstack = 0
   987  001084  0E42               	movlw	low (?_printf+2)
   988  001086  6E4E               	movwf	printf@ap,c
   989  001088  0E00               	movlw	high (?_printf+2)
   990  00108A  6E4F               	movwf	printf@ap+1,c
   991                           
   992                           ;doprnt.c: 536: while(c = *f++) {
   993  00108C  D2FF               	goto	l2755
   994  00108E                     l2607:
   995                           
   996                           ;doprnt.c: 538: if(c != '%')
   997  00108E  0E25               	movlw	37
   998  001090  1861               	xorwf	printf@c,w,c
   999  001092  B4D8               	btfsc	status,2,c
  1000  001094  D004               	goto	l2611
  1001                           
  1002                           ;doprnt.c: 540: {
  1003                           ;doprnt.c: 541: (putch(c) );
  1004  001096  5061               	movf	printf@c,w,c
  1005  001098  EC99  F016         	call	_putch
  1006                           
  1007                           ;doprnt.c: 542: continue;
  1008  00109C  D2F7               	goto	l2755
  1009  00109E                     l2611:
  1010                           
  1011                           ;doprnt.c: 543: }
  1012                           ;doprnt.c: 548: flag = 0;
  1013  00109E  0E00               	movlw	0
  1014  0010A0  6E51               	movwf	printf@flag+1,c
  1015  0010A2  0E00               	movlw	0
  1016  0010A4  6E50               	movwf	printf@flag,c
  1017                           
  1018                           ;doprnt.c: 635: switch(c = *f++) {
  1019  0010A6  D005               	goto	l2617
  1020                           
  1021                           ;doprnt.c: 638: goto alldone;
  1022                           
  1023                           ;doprnt.c: 637: case 0:
  1024  0010A8  D2FF               	goto	l278
  1025  0010AA                     l2613:
  1026                           
  1027                           ;doprnt.c: 663: flag |= 0x400;
  1028  0010AA  8451               	bsf	printf@flag+1,2,c
  1029                           
  1030                           ;doprnt.c: 664: break;
  1031  0010AC  D013               	goto	l2619
  1032                           
  1033                           ;doprnt.c: 813: continue;
  1034                           
  1035                           ;doprnt.c: 802: default:
  1036  0010AE  D2EE               	goto	l2755
  1037                           
  1038                           ;doprnt.c: 822: }
  1039  0010B0  D011               	goto	l2619
  1040  0010B2                     l2617:
  1041  0010B2  C040  FFF6         	movff	printf@f,tblptrl
  1042  0010B6  C041  FFF7         	movff	printf@f+1,tblptrh
  1043  0010BA  4A40               	infsnz	printf@f,f,c
  1044  0010BC  2A41               	incf	printf@f+1,f,c
  1045  0010BE                     	if	0	;tblptru may be non-zero
  1046  0010BE                     	endif
  1047  0010BE                     	if	0	;tblptru may be non-zero
  1048  0010BE                     	endif
  1049  0010BE  0008               	tblrd		*
  1050  0010C0  CFF5 F061          	movff	tablat,printf@c
  1051  0010C4  5061               	movf	printf@c,w,c
  1052                           
  1053                           ; Switch size 1, requested type "space"
  1054                           ; Number of cases is 2, Range of values is 0 to 102
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte            7     4 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059  0010C6  0A00               	xorlw	0	; case 0
  1060  0010C8  B4D8               	btfsc	status,2,c
  1061  0010CA  D2EE               	goto	l278
  1062  0010CC  0A66               	xorlw	102	; case 102
  1063  0010CE  B4D8               	btfsc	status,2,c
  1064  0010D0  D7EC               	goto	l2613
  1065  0010D2  D2DC               	goto	l2755
  1066  0010D4                     l2619:
  1067                           
  1068                           ;doprnt.c: 825: if(flag & (0x700)) {
  1069  0010D4  0E07               	movlw	7
  1070  0010D6  1451               	andwf	printf@flag+1,w,c
  1071  0010D8  B4D8               	btfsc	status,2,c
  1072  0010DA  D2CA               	goto	l2751
  1073                           
  1074                           ;doprnt.c: 829: prec = 6;
  1075  0010DC  0E00               	movlw	0
  1076  0010DE  6E53               	movwf	printf@prec+1,c
  1077  0010E0  0E06               	movlw	6
  1078  0010E2  6E52               	movwf	printf@prec,c
  1079                           
  1080                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1081  0010E4  C04E  FFD9         	movff	printf@ap,fsr2l
  1082  0010E8  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1083  0010EC  CFDE F05E          	movff	postinc2,printf@fval
  1084  0010F0  CFDE F05F          	movff	postinc2,printf@fval+1
  1085  0010F4  CFDD F060          	movff	postdec2,printf@fval+2
  1086  0010F8  0E03               	movlw	3
  1087  0010FA  264E               	addwf	printf@ap,f,c
  1088  0010FC  0E00               	movlw	0
  1089  0010FE  224F               	addwfc	printf@ap+1,f,c
  1090                           
  1091                           ;doprnt.c: 831: if(fval < 0.0) {
  1092  001100  AE60               	btfss	printf@fval+2,7,c
  1093  001102  D011               	goto	l2633
  1094                           
  1095                           ;doprnt.c: 832: fval = -fval;
  1096  001104  C05E  F001         	movff	printf@fval,___ftneg@f1
  1097  001108  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1098  00110C  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1099  001110  EC35  F016         	call	___ftneg	;wreg free
  1100  001114  C001  F05E         	movff	?___ftneg,printf@fval
  1101  001118  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1102  00111C  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1103                           
  1104                           ;doprnt.c: 833: flag |= 0x03;
  1105  001120  0E03               	movlw	3
  1106  001122  1250               	iorwf	printf@flag,f,c
  1107  001124  D000               	goto	l2633
  1108  001126                     l2633:
  1109                           
  1110                           ;doprnt.c: 834: }
  1111                           ;doprnt.c: 835: exp = 0;
  1112  001126  0E00               	movlw	0
  1113  001128  6E59               	movwf	printf@exp+1,c
  1114  00112A  0E00               	movlw	0
  1115  00112C  6E58               	movwf	printf@exp,c
  1116                           
  1117                           ;doprnt.c: 836: if( fval!=0) {
  1118  00112E  505E               	movf	printf@fval,w,c
  1119  001130  105F               	iorwf	printf@fval+1,w,c
  1120  001132  1060               	iorwf	printf@fval+2,w,c
  1121  001134  B4D8               	btfsc	status,2,c
  1122  001136  D085               	goto	l2661
  1123                           
  1124                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1125  001138  0E82               	movlw	130
  1126  00113A  6E45               	movwf	??_printf& (0+255),c
  1127  00113C  0EFF               	movlw	255
  1128  00113E  6E46               	movwf	(??_printf+1)& (0+255),c
  1129  001140  C05E  F047         	movff	printf@fval,??_printf+2
  1130  001144  C05F  F048         	movff	printf@fval+1,??_printf+3
  1131  001148  C060  F049         	movff	printf@fval+2,??_printf+4
  1132  00114C  C061  F04A         	movff	printf@fval+3,??_printf+5
  1133  001150  0E10               	movlw	16
  1134  001152  D005               	goto	u2600
  1135  001154                     u2605:
  1136  001154  90D8               	bcf	status,0,c
  1137  001156  324A               	rrcf	??_printf+5,f,c
  1138  001158  3249               	rrcf	??_printf+4,f,c
  1139  00115A  3248               	rrcf	??_printf+3,f,c
  1140  00115C  3247               	rrcf	??_printf+2,f,c
  1141  00115E                     u2600:
  1142  00115E  2EE8               	decfsz	wreg,f,c
  1143  001160  D7F9               	goto	u2605
  1144  001162  5047               	movf	??_printf+2,w,c
  1145  001164  2445               	addwf	??_printf,w,c
  1146  001166  6E58               	movwf	printf@exp,c
  1147  001168  0E00               	movlw	0
  1148  00116A  2046               	addwfc	??_printf+1,w,c
  1149  00116C  6E59               	movwf	printf@exp+1,c
  1150                           
  1151                           ;doprnt.c: 838: exp--;
  1152  00116E  0658               	decf	printf@exp,f,c
  1153  001170  A0D8               	btfss	status,0,c
  1154  001172  0659               	decf	printf@exp+1,f,c
  1155                           
  1156                           ;doprnt.c: 839: exp *= 3;
  1157  001174  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1158  001178  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1159  00117C  0E00               	movlw	0
  1160  00117E  6E12               	movwf	___wmul@multiplicand+1,c
  1161  001180  0E03               	movlw	3
  1162  001182  6E11               	movwf	___wmul@multiplicand,c
  1163  001184  EC0E  F016         	call	___wmul	;wreg free
  1164  001188  C00F  F058         	movff	?___wmul,printf@exp
  1165  00118C  C010  F059         	movff	?___wmul+1,printf@exp+1
  1166                           
  1167                           ;doprnt.c: 840: exp /= 10;
  1168  001190  C058  F007         	movff	printf@exp,___awdiv@dividend
  1169  001194  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1170  001198  0E00               	movlw	0
  1171  00119A  6E0A               	movwf	___awdiv@divisor+1,c
  1172  00119C  0E0A               	movlw	10
  1173  00119E  6E09               	movwf	___awdiv@divisor,c
  1174  0011A0  ECEF  F012         	call	___awdiv	;wreg free
  1175  0011A4  C007  F058         	movff	?___awdiv,printf@exp
  1176  0011A8  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1177                           
  1178                           ;doprnt.c: 841: if(exp < 0)
  1179  0011AC  AE59               	btfss	printf@exp+1,7,c
  1180  0011AE  D004               	goto	l2649
  1181                           
  1182                           ;doprnt.c: 842: exp--;
  1183  0011B0  0658               	decf	printf@exp,f,c
  1184  0011B2  A0D8               	btfss	status,0,c
  1185  0011B4  0659               	decf	printf@exp+1,f,c
  1186  0011B6  D000               	goto	l2649
  1187  0011B8                     l2649:
  1188                           
  1189                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1190  0011B8  5058               	movf	printf@exp,w,c
  1191  0011BA  0800               	sublw	0
  1192  0011BC  EC55  F00B         	call	_scale
  1193  0011C0  C024  F05A         	movff	?_scale,printf@tmpval
  1194  0011C4  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1195  0011C8  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1196                           
  1197                           ;doprnt.c: 847: tmpval.integ *= fval;
  1198  0011CC  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1199  0011D0  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1200  0011D4  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1201  0011D8  C05E  F018         	movff	printf@fval,___ftmul@f2
  1202  0011DC  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1203  0011E0  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1204  0011E4  EC56  F010         	call	___ftmul	;wreg free
  1205  0011E8  C015  F05A         	movff	?___ftmul,printf@tmpval
  1206  0011EC  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1207  0011F0  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1208                           
  1209                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1210  0011F4  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1211  0011F8  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1212  0011FC  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1213  001200  0E00               	movlw	0
  1214  001202  6E04               	movwf	___ftge@ff2,c
  1215  001204  0E80               	movlw	128
  1216  001206  6E05               	movwf	___ftge@ff2+1,c
  1217  001208  0E3F               	movlw	63
  1218  00120A  6E06               	movwf	___ftge@ff2+2,c
  1219  00120C  EC3A  F013         	call	___ftge	;wreg free
  1220  001210  B0D8               	btfsc	status,0,c
  1221  001212  D004               	goto	l2657
  1222                           
  1223                           ;doprnt.c: 849: exp--;
  1224  001214  0658               	decf	printf@exp,f,c
  1225  001216  A0D8               	btfss	status,0,c
  1226  001218  0659               	decf	printf@exp+1,f,c
  1227  00121A  D013               	goto	l2661
  1228  00121C                     l2657:
  1229                           
  1230                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1231  00121C  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1232  001220  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1233  001224  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1234  001228  0E00               	movlw	0
  1235  00122A  6E04               	movwf	___ftge@ff2,c
  1236  00122C  0E20               	movlw	32
  1237  00122E  6E05               	movwf	___ftge@ff2+1,c
  1238  001230  0E41               	movlw	65
  1239  001232  6E06               	movwf	___ftge@ff2+2,c
  1240  001234  EC3A  F013         	call	___ftge	;wreg free
  1241  001238  A0D8               	btfss	status,0,c
  1242  00123A  D003               	goto	l2661
  1243                           
  1244                           ;doprnt.c: 851: exp++;
  1245  00123C  4A58               	infsnz	printf@exp,f,c
  1246  00123E  2A59               	incf	printf@exp+1,f,c
  1247  001240  D000               	goto	l2661
  1248  001242                     l2661:
  1249                           
  1250                           ;doprnt.c: 852: }
  1251                           ;doprnt.c: 1112: if(prec <= 12)
  1252  001242  BE53               	btfsc	printf@prec+1,7,c
  1253  001244  D006               	goto	l2663
  1254  001246  5053               	movf	printf@prec+1,w,c
  1255  001248  E11C               	bnz	l2665
  1256  00124A  0E0D               	movlw	13
  1257  00124C  5C52               	subwf	printf@prec,w,c
  1258  00124E  B0D8               	btfsc	status,0,c
  1259  001250  D018               	goto	l2665
  1260  001252                     l2663:
  1261                           
  1262                           ;doprnt.c: 1113: fval += fround(prec);
  1263  001252  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1264  001256  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1265  00125A  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1266  00125E  5052               	movf	printf@prec,w,c
  1267  001260  EC45  F00D         	call	_fround
  1268  001264  C024  F031         	movff	?_fround,___ftadd@f2
  1269  001268  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1270  00126C  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1271  001270  EC67  F00E         	call	___ftadd	;wreg free
  1272  001274  C02E  F05E         	movff	?___ftadd,printf@fval
  1273  001278  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1274  00127C  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1275  001280  D000               	goto	l2665
  1276  001282                     l2665:
  1277                           
  1278                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1279  001282  BE59               	btfsc	printf@exp+1,7,c
  1280  001284  D006               	goto	l2667
  1281  001286  5059               	movf	printf@exp+1,w,c
  1282  001288  E120               	bnz	l2673
  1283  00128A  0E0A               	movlw	10
  1284  00128C  5C58               	subwf	printf@exp,w,c
  1285  00128E  B0D8               	btfsc	status,0,c
  1286  001290  D01C               	goto	l2673
  1287  001292                     l2667:
  1288  001292  505E               	movf	printf@fval,w,c
  1289  001294  105F               	iorwf	printf@fval+1,w,c
  1290  001296  1060               	iorwf	printf@fval+2,w,c
  1291  001298  B4D8               	btfsc	status,2,c
  1292  00129A  D06D               	goto	l2687
  1293  00129C  C05E  F02B         	movff	printf@fval,___fttol@f1
  1294  0012A0  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1295  0012A4  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1296  0012A8  EC4D  F011         	call	___fttol	;wreg free
  1297  0012AC  502B               	movf	?___fttol,w,c
  1298  0012AE  102C               	iorwf	?___fttol+1,w,c
  1299  0012B0  102D               	iorwf	?___fttol+2,w,c
  1300  0012B2  102E               	iorwf	?___fttol+3,w,c
  1301  0012B4  B4D8               	btfsc	status,2,c
  1302  0012B6  BE59               	btfsc	printf@exp+1,7,c
  1303  0012B8  D05E               	goto	l2687
  1304  0012BA  5059               	movf	printf@exp+1,w,c
  1305  0012BC  E106               	bnz	l2673
  1306  0012BE  0E02               	movlw	2
  1307  0012C0  5C58               	subwf	printf@exp,w,c
  1308  0012C2  B0D8               	btfsc	status,0,c
  1309  0012C4  D002               	goto	l2673
  1310  0012C6  D057               	goto	l2687
  1311  0012C8  D000               	goto	l2673
  1312  0012CA                     l2673:
  1313                           
  1314                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1315  0012CA  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1316  0012CE  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1317  0012D2  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1318  0012D6  0E70               	movlw	112
  1319  0012D8  6E04               	movwf	___ftge@ff2,c
  1320  0012DA  0E89               	movlw	137
  1321  0012DC  6E05               	movwf	___ftge@ff2+1,c
  1322  0012DE  0E40               	movlw	64
  1323  0012E0  6E06               	movwf	___ftge@ff2+2,c
  1324  0012E2  EC3A  F013         	call	___ftge	;wreg free
  1325  0012E6  B0D8               	btfsc	status,0,c
  1326  0012E8  D002               	goto	l2677
  1327                           
  1328                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1329  0012EA  0EF7               	movlw	247
  1330  0012EC  D001               	goto	L1
  1331  0012EE                     l2677:
  1332                           
  1333                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1334  0012EE  0EF8               	movlw	248
  1335  0012F0                     L1:
  1336  0012F0  2658               	addwf	printf@exp,f,c
  1337  0012F2  0EFF               	movlw	255
  1338  0012F4  2259               	addwfc	printf@exp+1,f,c
  1339  0012F6  D000               	goto	l2679
  1340  0012F8                     l2679:
  1341                           
  1342                           ;doprnt.c: 1124: }
  1343                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1344  0012F8  5058               	movf	printf@exp,w,c
  1345  0012FA  EC55  F00B         	call	_scale
  1346  0012FE  C024  F05A         	movff	?_scale,printf@tmpval
  1347  001302  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1348  001306  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1349                           
  1350                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1351  00130A  D017               	goto	l2683
  1352  00130C  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1353  001310  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1354  001314  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1355  001318  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1356  00131C  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1357  001320  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1358  001324  ECD1  F00F         	call	__div_to_l_	;wreg free
  1359  001328  C001  F054         	movff	?__div_to_l_,printf@val
  1360  00132C  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1361  001330  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1362  001334  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1363  001338  D017               	goto	l2685
  1364  00133A                     l2683:
  1365  00133A  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1366  00133E  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1367  001342  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1368  001346  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1369  00134A  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1370  00134E  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1371  001352  EC49  F00F         	call	__tdiv_to_l_	;wreg free
  1372  001356  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1373  00135A  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1374  00135E  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1375  001362  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1376  001366  D000               	goto	l2685
  1377  001368                     l2685:
  1378                           
  1379                           ;doprnt.c: 1129: fval = 0.0;
  1380  001368  0E00               	movlw	0
  1381  00136A  6E5E               	movwf	printf@fval,c
  1382  00136C  0E00               	movlw	0
  1383  00136E  6E5F               	movwf	printf@fval+1,c
  1384  001370  0E00               	movlw	0
  1385  001372  6E60               	movwf	printf@fval+2,c
  1386                           
  1387                           ;doprnt.c: 1130: } else {
  1388  001374  D033               	goto	l2691
  1389  001376                     l2687:
  1390                           
  1391                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1392  001376  C05E  F02B         	movff	printf@fval,___fttol@f1
  1393  00137A  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1394  00137E  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1395  001382  EC4D  F011         	call	___fttol	;wreg free
  1396  001386  C02B  F054         	movff	?___fttol,printf@val
  1397  00138A  C02C  F055         	movff	?___fttol+1,printf@val+1
  1398  00138E  C02D  F056         	movff	?___fttol+2,printf@val+2
  1399  001392  C02E  F057         	movff	?___fttol+3,printf@val+3
  1400                           
  1401                           ;doprnt.c: 1132: fval -= (double)val;
  1402  001396  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1403  00139A  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1404  00139E  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1405  0013A2  C054  F009         	movff	printf@val,___lltoft@c
  1406  0013A6  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1407  0013AA  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1408  0013AE  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1409  0013B2  ECFE  F014         	call	___lltoft	;wreg free
  1410  0013B6  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1411  0013BA  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1412  0013BE  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1413  0013C2  EC2E  F015         	call	___ftsub	;wreg free
  1414  0013C6  C03A  F05E         	movff	?___ftsub,printf@fval
  1415  0013CA  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1416  0013CE  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1417                           
  1418                           ;doprnt.c: 1133: exp = 0;
  1419  0013D2  0E00               	movlw	0
  1420  0013D4  6E59               	movwf	printf@exp+1,c
  1421  0013D6  0E00               	movlw	0
  1422  0013D8  6E58               	movwf	printf@exp,c
  1423  0013DA  D000               	goto	l2691
  1424  0013DC                     l2691:
  1425                           
  1426                           ;doprnt.c: 1134: }
  1427                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1428  0013DC  0E01               	movlw	1
  1429  0013DE  6E61               	movwf	printf@c,c
  1430  0013E0                     l2693:
  1431  0013E0  0E0A               	movlw	10
  1432  0013E2  1861               	xorwf	printf@c,w,c
  1433  0013E4  B4D8               	btfsc	status,2,c
  1434  0013E6  D01C               	goto	l2705
  1435  0013E8  D001               	goto	l2697
  1436  0013EA  D01A               	goto	l2705
  1437  0013EC                     l2697:
  1438                           
  1439                           ;doprnt.c: 1137: if(val < dpowers[c])
  1440  0013EC  5061               	movf	printf@c,w,c
  1441  0013EE  0D04               	mullw	4
  1442  0013F0  0E01               	movlw	low _dpowers
  1443  0013F2  24F3               	addwf	prodl,w,c
  1444  0013F4  6EF6               	movwf	tblptrl,c
  1445  0013F6  0E10               	movlw	high _dpowers
  1446  0013F8  20F4               	addwfc	prodh,w,c
  1447  0013FA  6EF7               	movwf	tblptrh,c
  1448  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  1449  0013FC                     	endif
  1450  0013FC  0009               	tblrd		*+
  1451  0013FE  50F5               	movf	tablat,w,c
  1452  001400  5C54               	subwf	printf@val,w,c
  1453  001402  0009               	tblrd		*+
  1454  001404  50F5               	movf	tablat,w,c
  1455  001406  5855               	subwfb	printf@val+1,w,c
  1456  001408  0009               	tblrd		*+
  1457  00140A  50F5               	movf	tablat,w,c
  1458  00140C  5856               	subwfb	printf@val+2,w,c
  1459  00140E  0009               	tblrd		*+
  1460  001410  50F5               	movf	tablat,w,c
  1461  001412  5857               	subwfb	printf@val+3,w,c
  1462  001414  A0D8               	btfss	status,0,c
  1463  001416  D004               	goto	l2705
  1464  001418  D001               	goto	l2701
  1465                           
  1466                           ;doprnt.c: 1138: break;
  1467  00141A  D002               	goto	l2705
  1468  00141C                     l2701:
  1469  00141C  2A61               	incf	printf@c,f,c
  1470  00141E  D7E0               	goto	l2693
  1471  001420                     l2705:
  1472                           
  1473                           ;doprnt.c: 1175: {
  1474                           ;doprnt.c: 1188: if(flag & 0x03)
  1475  001420  0E03               	movlw	3
  1476  001422  1450               	andwf	printf@flag,w,c
  1477  001424  6E45               	movwf	??_printf& (0+255),c
  1478  001426  0E00               	movlw	0
  1479  001428  1451               	andwf	printf@flag+1,w,c
  1480  00142A  6E46               	movwf	(??_printf+1)& (0+255),c
  1481  00142C  5045               	movf	??_printf,w,c
  1482  00142E  1046               	iorwf	??_printf+1,w,c
  1483  001430  B4D8               	btfsc	status,2,c
  1484  001432  D049               	goto	l2715
  1485                           
  1486                           ;doprnt.c: 1190: (putch('-') );
  1487  001434  0E2D               	movlw	45
  1488  001436  EC99  F016         	call	_putch
  1489                           
  1490                           ;doprnt.c: 1195: }
  1491                           ;doprnt.c: 1196: while(c--) {
  1492  00143A  D045               	goto	l2715
  1493  00143C                     l2709:
  1494                           
  1495                           ;doprnt.c: 1200: {
  1496                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1497  00143C  C054  F001         	movff	printf@val,___lldiv@dividend
  1498  001440  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1499  001444  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1500  001448  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1501  00144C  5061               	movf	printf@c,w,c
  1502  00144E  0D04               	mullw	4
  1503  001450  0E01               	movlw	low _dpowers
  1504  001452  24F3               	addwf	prodl,w,c
  1505  001454  6EF6               	movwf	tblptrl,c
  1506  001456  0E10               	movlw	high _dpowers
  1507  001458  20F4               	addwfc	prodh,w,c
  1508  00145A  6EF7               	movwf	tblptrh,c
  1509  00145C                     	if	0	;There are less than 3 active tblptr bytes
  1510  00145C                     	endif
  1511  00145C  0009               	tblrd		*+
  1512  00145E  CFF5 F005          	movff	tablat,___lldiv@divisor
  1513  001462  0009               	tblrd		*+
  1514  001464  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1515  001468  0009               	tblrd		*+
  1516  00146A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1517  00146E  000A               	tblrd		*-
  1518  001470  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1519  001474  ECD0  F013         	call	___lldiv	;wreg free
  1520  001478  C001  F05A         	movff	?___lldiv,printf@tmpval
  1521  00147C  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1522  001480  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1523  001484  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1524                           
  1525                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1526  001488  C05A  F001         	movff	printf@tmpval,___llmod@dividend
  1527  00148C  C05B  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1528  001490  C05C  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1529  001494  C05D  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1530  001498  0E0A               	movlw	10
  1531  00149A  6E05               	movwf	___llmod@divisor,c
  1532  00149C  0E00               	movlw	0
  1533  00149E  6E06               	movwf	___llmod@divisor+1,c
  1534  0014A0  0E00               	movlw	0
  1535  0014A2  6E07               	movwf	___llmod@divisor+2,c
  1536  0014A4  0E00               	movlw	0
  1537  0014A6  6E08               	movwf	___llmod@divisor+3,c
  1538  0014A8  EC57  F014         	call	___llmod	;wreg free
  1539  0014AC  C001  F05A         	movff	?___llmod,printf@tmpval
  1540  0014B0  C002  F05B         	movff	?___llmod+1,printf@tmpval+1
  1541  0014B4  C003  F05C         	movff	?___llmod+2,printf@tmpval+2
  1542  0014B8  C004  F05D         	movff	?___llmod+3,printf@tmpval+3
  1543                           
  1544                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1545  0014BC  505A               	movf	printf@tmpval,w,c
  1546  0014BE  0F30               	addlw	48
  1547  0014C0  EC99  F016         	call	_putch
  1548  0014C4  D000               	goto	l2715
  1549  0014C6                     l2715:
  1550  0014C6  0661               	decf	printf@c,f,c
  1551  0014C8  2861               	incf	printf@c,w,c
  1552  0014CA  B4D8               	btfsc	status,2,c
  1553  0014CC  D009               	goto	l2721
  1554  0014CE  D7B6               	goto	l2709
  1555                           
  1556                           ;doprnt.c: 1204: }
  1557                           ;doprnt.c: 1206: }
  1558                           ;doprnt.c: 1207: while(exp > 0) {
  1559  0014D0  D007               	goto	l2721
  1560  0014D2                     l2717:
  1561                           
  1562                           ;doprnt.c: 1208: (putch('0') );
  1563  0014D2  0E30               	movlw	48
  1564  0014D4  EC99  F016         	call	_putch
  1565                           
  1566                           ;doprnt.c: 1209: exp--;
  1567  0014D8  0658               	decf	printf@exp,f,c
  1568  0014DA  A0D8               	btfss	status,0,c
  1569  0014DC  0659               	decf	printf@exp+1,f,c
  1570  0014DE  D000               	goto	l2721
  1571  0014E0                     l2721:
  1572  0014E0  BE59               	btfsc	printf@exp+1,7,c
  1573  0014E2  D005               	goto	l2723
  1574  0014E4  5059               	movf	printf@exp+1,w,c
  1575  0014E6  E1F5               	bnz	l2717
  1576  0014E8  0458               	decf	printf@exp,w,c
  1577  0014EA  B0D8               	btfsc	status,0,c
  1578  0014EC  D7F2               	goto	l2717
  1579  0014EE                     l2723:
  1580                           
  1581                           ;doprnt.c: 1210: }
  1582                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1583  0014EE  BE53               	btfsc	printf@prec+1,7,c
  1584  0014F0  D009               	goto	l267
  1585  0014F2  5053               	movf	printf@prec+1,w,c
  1586  0014F4  E104               	bnz	u2760
  1587  0014F6  0E09               	movlw	9
  1588  0014F8  5C52               	subwf	printf@prec,w,c
  1589  0014FA  A0D8               	btfss	status,0,c
  1590  0014FC  D003               	goto	l267
  1591  0014FE                     u2760:
  1592                           
  1593                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1594  0014FE  0E08               	movlw	8
  1595  001500  6E61               	movwf	printf@c,c
  1596  001502  D003               	goto	l2727
  1597  001504                     l267:
  1598                           
  1599                           ;doprnt.c: 1213: else
  1600                           ;doprnt.c: 1214: c = prec;
  1601  001504  C052  F061         	movff	printf@prec,printf@c
  1602  001508  D000               	goto	l2727
  1603  00150A                     l2727:
  1604                           
  1605                           ;doprnt.c: 1215: prec -= c;
  1606  00150A  5061               	movf	printf@c,w,c
  1607  00150C  5E52               	subwf	printf@prec,f,c
  1608  00150E  0E00               	movlw	0
  1609  001510  BE61               	btfsc	printf@c,7,c
  1610  001512  0EFF               	movlw	255
  1611  001514  5A53               	subwfb	printf@prec+1,f,c
  1612                           
  1613                           ;doprnt.c: 1219: if(c)
  1614  001516  5061               	movf	printf@c,w,c
  1615  001518  B4D8               	btfsc	status,2,c
  1616  00151A  D004               	goto	l2733
  1617                           
  1618                           ;doprnt.c: 1221: (putch('.') );
  1619  00151C  0E2E               	movlw	46
  1620  00151E  EC99  F016         	call	_putch
  1621  001522  D000               	goto	l2733
  1622  001524                     l2733:
  1623                           
  1624                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1625  001524  5061               	movf	printf@c,w,c
  1626  001526  EC55  F00B         	call	_scale
  1627  00152A  C024  F04B         	movff	?_scale,_printf$1665
  1628  00152E  C025  F04C         	movff	?_scale+1,_printf$1665+1
  1629  001532  C026  F04D         	movff	?_scale+2,_printf$1665+2
  1630                           
  1631                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1632  001536  C05E  F018         	movff	printf@fval,___ftmul@f2
  1633  00153A  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1634  00153E  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1635  001542  C04B  F015         	movff	_printf$1665,___ftmul@f1
  1636  001546  C04C  F016         	movff	_printf$1665+1,___ftmul@f1+1
  1637  00154A  C04D  F017         	movff	_printf$1665+2,___ftmul@f1+2
  1638  00154E  EC56  F010         	call	___ftmul	;wreg free
  1639  001552  C015  F02B         	movff	?___ftmul,___fttol@f1
  1640  001556  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1641  00155A  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1642  00155E  EC4D  F011         	call	___fttol	;wreg free
  1643  001562  C02B  F054         	movff	?___fttol,printf@val
  1644  001566  C02C  F055         	movff	?___fttol+1,printf@val+1
  1645  00156A  C02D  F056         	movff	?___fttol+2,printf@val+2
  1646  00156E  C02E  F057         	movff	?___fttol+3,printf@val+3
  1647                           
  1648                           ;doprnt.c: 1228: while(c--) {
  1649  001572  D06B               	goto	l2743
  1650  001574                     l2737:
  1651                           
  1652                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1653  001574  C054  F001         	movff	printf@val,___lldiv@dividend
  1654  001578  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1655  00157C  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1656  001580  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1657  001584  5061               	movf	printf@c,w,c
  1658  001586  0D04               	mullw	4
  1659  001588  0E01               	movlw	low _dpowers
  1660  00158A  24F3               	addwf	prodl,w,c
  1661  00158C  6EF6               	movwf	tblptrl,c
  1662  00158E  0E10               	movlw	high _dpowers
  1663  001590  20F4               	addwfc	prodh,w,c
  1664  001592  6EF7               	movwf	tblptrh,c
  1665  001594                     	if	0	;There are less than 3 active tblptr bytes
  1666  001594                     	endif
  1667  001594  0009               	tblrd		*+
  1668  001596  CFF5 F005          	movff	tablat,___lldiv@divisor
  1669  00159A  0009               	tblrd		*+
  1670  00159C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1671  0015A0  0009               	tblrd		*+
  1672  0015A2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1673  0015A6  000A               	tblrd		*-
  1674  0015A8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1675  0015AC  ECD0  F013         	call	___lldiv	;wreg free
  1676  0015B0  C001  F05A         	movff	?___lldiv,printf@tmpval
  1677  0015B4  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1678  0015B8  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1679  0015BC  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1680                           
  1681                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1682  0015C0  C05A  F001         	movff	printf@tmpval,___llmod@dividend
  1683  0015C4  C05B  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1684  0015C8  C05C  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1685  0015CC  C05D  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1686  0015D0  0E0A               	movlw	10
  1687  0015D2  6E05               	movwf	___llmod@divisor,c
  1688  0015D4  0E00               	movlw	0
  1689  0015D6  6E06               	movwf	___llmod@divisor+1,c
  1690  0015D8  0E00               	movlw	0
  1691  0015DA  6E07               	movwf	___llmod@divisor+2,c
  1692  0015DC  0E00               	movlw	0
  1693  0015DE  6E08               	movwf	___llmod@divisor+3,c
  1694  0015E0  EC57  F014         	call	___llmod	;wreg free
  1695  0015E4  C001  F05A         	movff	?___llmod,printf@tmpval
  1696  0015E8  C002  F05B         	movff	?___llmod+1,printf@tmpval+1
  1697  0015EC  C003  F05C         	movff	?___llmod+2,printf@tmpval+2
  1698  0015F0  C004  F05D         	movff	?___llmod+3,printf@tmpval+3
  1699                           
  1700                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1701  0015F4  505A               	movf	printf@tmpval,w,c
  1702  0015F6  0F30               	addlw	48
  1703  0015F8  EC99  F016         	call	_putch
  1704                           
  1705                           ;doprnt.c: 1232: val %= dpowers[c];
  1706  0015FC  C054  F001         	movff	printf@val,___llmod@dividend
  1707  001600  C055  F002         	movff	printf@val+1,___llmod@dividend+1
  1708  001604  C056  F003         	movff	printf@val+2,___llmod@dividend+2
  1709  001608  C057  F004         	movff	printf@val+3,___llmod@dividend+3
  1710  00160C  5061               	movf	printf@c,w,c
  1711  00160E  0D04               	mullw	4
  1712  001610  0E01               	movlw	low _dpowers
  1713  001612  24F3               	addwf	prodl,w,c
  1714  001614  6EF6               	movwf	tblptrl,c
  1715  001616  0E10               	movlw	high _dpowers
  1716  001618  20F4               	addwfc	prodh,w,c
  1717  00161A  6EF7               	movwf	tblptrh,c
  1718  00161C                     	if	0	;There are less than 3 active tblptr bytes
  1719  00161C                     	endif
  1720  00161C  0009               	tblrd		*+
  1721  00161E  CFF5 F005          	movff	tablat,___llmod@divisor
  1722  001622  0009               	tblrd		*+
  1723  001624  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1724  001628  0009               	tblrd		*+
  1725  00162A  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1726  00162E  000A               	tblrd		*-
  1727  001630  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1728  001634  EC57  F014         	call	___llmod	;wreg free
  1729  001638  C001  F054         	movff	?___llmod,printf@val
  1730  00163C  C002  F055         	movff	?___llmod+1,printf@val+1
  1731  001640  C003  F056         	movff	?___llmod+2,printf@val+2
  1732  001644  C004  F057         	movff	?___llmod+3,printf@val+3
  1733  001648  D000               	goto	l2743
  1734  00164A                     l2743:
  1735  00164A  0661               	decf	printf@c,f,c
  1736  00164C  2861               	incf	printf@c,w,c
  1737  00164E  B4D8               	btfsc	status,2,c
  1738  001650  D009               	goto	l2749
  1739  001652  D790               	goto	l2737
  1740                           
  1741                           ;doprnt.c: 1233: }
  1742                           ;doprnt.c: 1235: while(prec) {
  1743  001654  D007               	goto	l2749
  1744  001656                     l2745:
  1745                           
  1746                           ;doprnt.c: 1236: (putch('0') );
  1747  001656  0E30               	movlw	48
  1748  001658  EC99  F016         	call	_putch
  1749                           
  1750                           ;doprnt.c: 1237: prec--;
  1751  00165C  0652               	decf	printf@prec,f,c
  1752  00165E  A0D8               	btfss	status,0,c
  1753  001660  0653               	decf	printf@prec+1,f,c
  1754  001662  D000               	goto	l2749
  1755  001664                     l2749:
  1756  001664  5052               	movf	printf@prec,w,c
  1757  001666  1053               	iorwf	printf@prec+1,w,c
  1758  001668  B4D8               	btfsc	status,2,c
  1759  00166A  D010               	goto	l2755
  1760  00166C  D7F4               	goto	l2745
  1761                           
  1762                           ;doprnt.c: 1238: }
  1763                           ;doprnt.c: 1245: continue;
  1764  00166E  D00E               	goto	l2755
  1765  001670                     l2751:
  1766                           
  1767                           ;doprnt.c: 1246: }
  1768                           ;doprnt.c: 1422: {
  1769                           ;doprnt.c: 1438: if(flag & 0x03)
  1770  001670  0E03               	movlw	3
  1771  001672  1450               	andwf	printf@flag,w,c
  1772  001674  6E45               	movwf	??_printf& (0+255),c
  1773  001676  0E00               	movlw	0
  1774  001678  1451               	andwf	printf@flag+1,w,c
  1775  00167A  6E46               	movwf	(??_printf+1)& (0+255),c
  1776  00167C  5045               	movf	??_printf,w,c
  1777  00167E  1046               	iorwf	??_printf+1,w,c
  1778  001680  B4D8               	btfsc	status,2,c
  1779  001682  D004               	goto	l2755
  1780                           
  1781                           ;doprnt.c: 1439: (putch('-') );
  1782  001684  0E2D               	movlw	45
  1783  001686  EC99  F016         	call	_putch
  1784  00168A  D000               	goto	l2755
  1785  00168C                     l2755:
  1786  00168C  C040  FFF6         	movff	printf@f,tblptrl
  1787  001690  C041  FFF7         	movff	printf@f+1,tblptrh
  1788  001694  4A40               	infsnz	printf@f,f,c
  1789  001696  2A41               	incf	printf@f+1,f,c
  1790  001698                     	if	0	;tblptru may be non-zero
  1791  001698                     	endif
  1792  001698                     	if	0	;tblptru may be non-zero
  1793  001698                     	endif
  1794  001698  0008               	tblrd		*
  1795  00169A  CFF5 F061          	movff	tablat,printf@c
  1796  00169E  5061               	movf	printf@c,w,c
  1797  0016A0  B4D8               	btfsc	status,2,c
  1798  0016A2  D002               	goto	l278
  1799  0016A4  D4F4               	goto	l2607
  1800  0016A6  D000               	goto	l278
  1801  0016A8                     l278:
  1802  0016A8  0012               	return		;funcret
  1803  0016AA                     __end_of_printf:
  1804                           	opt stack 0
  1805                           tblptru	equ	0xFF8
  1806                           tblptrh	equ	0xFF7
  1807                           tblptrl	equ	0xFF6
  1808                           tablat	equ	0xFF5
  1809                           prodh	equ	0xFF4
  1810                           prodl	equ	0xFF3
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           postdec1	equ	0xFE5
  1814                           fsr1l	equ	0xFE1
  1815                           postinc2	equ	0xFDE
  1816                           postdec2	equ	0xFDD
  1817                           fsr2h	equ	0xFDA
  1818                           fsr2l	equ	0xFD9
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _scale *****************
  1822 ;; Defined at:
  1823 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  scl             1    wreg     char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  scl             1   41[COMRAM] char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  3   35[COMRAM] char 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1837 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;Total ram usage:        7 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    2
  1844 ;; This function calls:
  1845 ;;		___awdiv
  1846 ;;		___awmod
  1847 ;;		___ftmul
  1848 ;;		___wmul
  1849 ;; This function is called by:
  1850 ;;		_printf
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text2
  1855  0016AA                     __ptext2:
  1856                           	opt stack 0
  1857  0016AA                     _scale:
  1858                           	opt stack 27
  1859                           
  1860                           ;incstack = 0
  1861                           ;scale@scl stored from wreg
  1862  0016AA  6E2A               	movwf	scale@scl,c
  1863                           
  1864                           ;doprnt.c: 428: if(scl < 0) {
  1865  0016AC  AE2A               	btfss	scale@scl,7,c
  1866  0016AE  D0EF               	goto	l2335
  1867                           
  1868                           ;doprnt.c: 429: scl = -scl;
  1869  0016B0  6C2A               	negf	scale@scl,c
  1870                           
  1871                           ;doprnt.c: 430: if(scl>=110)
  1872  0016B2  502A               	movf	scale@scl,w,c
  1873  0016B4  0A80               	xorlw	128
  1874  0016B6  0F12               	addlw	-238
  1875  0016B8  A0D8               	btfss	status,0,c
  1876  0016BA  D08D               	goto	l2325
  1877                           
  1878                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1879  0016BC  0E00               	movlw	0
  1880  0016BE  6E12               	movwf	___wmul@multiplicand+1,c
  1881  0016C0  0E03               	movlw	3
  1882  0016C2  6E11               	movwf	___wmul@multiplicand,c
  1883  0016C4  0E00               	movlw	0
  1884  0016C6  6E0A               	movwf	___awdiv@divisor+1,c
  1885  0016C8  0E0A               	movlw	10
  1886  0016CA  6E09               	movwf	___awdiv@divisor,c
  1887  0016CC  0E00               	movlw	0
  1888  0016CE  6E04               	movwf	___awmod@divisor+1,c
  1889  0016D0  0E64               	movlw	100
  1890  0016D2  6E03               	movwf	___awmod@divisor,c
  1891  0016D4  502A               	movf	scale@scl,w,c
  1892  0016D6  6E01               	movwf	___awmod@dividend,c
  1893  0016D8  6A02               	clrf	___awmod@dividend+1,c
  1894  0016DA  BE01               	btfsc	___awmod@dividend,7,c
  1895  0016DC  0602               	decf	___awmod@dividend+1,f,c
  1896  0016DE  EC16  F014         	call	___awmod	;wreg free
  1897  0016E2  C001  F007         	movff	?___awmod,___awdiv@dividend
  1898  0016E6  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  1899  0016EA  ECEF  F012         	call	___awdiv	;wreg free
  1900  0016EE  0E09               	movlw	9
  1901  0016F0  2407               	addwf	?___awdiv,w,c
  1902  0016F2  6E0F               	movwf	___wmul@multiplier,c
  1903  0016F4  0E00               	movlw	0
  1904  0016F6  2008               	addwfc	?___awdiv+1,w,c
  1905  0016F8  6E10               	movwf	___wmul@multiplier+1,c
  1906  0016FA  EC0E  F016         	call	___wmul	;wreg free
  1907  0016FE  0E29               	movlw	low __npowers_
  1908  001700  240F               	addwf	?___wmul,w,c
  1909  001702  6EF6               	movwf	tblptrl,c
  1910  001704  0E10               	movlw	high __npowers_
  1911  001706  2010               	addwfc	?___wmul+1,w,c
  1912  001708  6EF7               	movwf	tblptrh,c
  1913  00170A                     	if	0	;There are less than 3 active tblptr bytes
  1914  00170A                     	endif
  1915  00170A  0009               	tblrd		*+
  1916  00170C  CFF5 F018          	movff	tablat,___ftmul@f2
  1917  001710  0009               	tblrd		*+
  1918  001712  CFF5 F019          	movff	tablat,___ftmul@f2+1
  1919  001716  000A               	tblrd		*-
  1920  001718  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  1921  00171C  0E00               	movlw	0
  1922  00171E  6E0A               	movwf	___awdiv@divisor+1,c
  1923  001720  0E64               	movlw	100
  1924  001722  6E09               	movwf	___awdiv@divisor,c
  1925  001724  502A               	movf	scale@scl,w,c
  1926  001726  6E07               	movwf	___awdiv@dividend,c
  1927  001728  6A08               	clrf	___awdiv@dividend+1,c
  1928  00172A  BE07               	btfsc	___awdiv@dividend,7,c
  1929  00172C  0608               	decf	___awdiv@dividend+1,f,c
  1930  00172E  ECEF  F012         	call	___awdiv	;wreg free
  1931  001732  0E12               	movlw	18
  1932  001734  2407               	addwf	?___awdiv,w,c
  1933  001736  6E0F               	movwf	___wmul@multiplier,c
  1934  001738  0E00               	movlw	0
  1935  00173A  2008               	addwfc	?___awdiv+1,w,c
  1936  00173C  6E10               	movwf	___wmul@multiplier+1,c
  1937  00173E  0E00               	movlw	0
  1938  001740  6E12               	movwf	___wmul@multiplicand+1,c
  1939  001742  0E03               	movlw	3
  1940  001744  6E11               	movwf	___wmul@multiplicand,c
  1941  001746  EC0E  F016         	call	___wmul	;wreg free
  1942  00174A  0E29               	movlw	low __npowers_
  1943  00174C  240F               	addwf	?___wmul,w,c
  1944  00174E  6EF6               	movwf	tblptrl,c
  1945  001750  0E10               	movlw	high __npowers_
  1946  001752  2010               	addwfc	?___wmul+1,w,c
  1947  001754  6EF7               	movwf	tblptrh,c
  1948  001756                     	if	0	;There are less than 3 active tblptr bytes
  1949  001756                     	endif
  1950  001756  0009               	tblrd		*+
  1951  001758  CFF5 F015          	movff	tablat,___ftmul@f1
  1952  00175C  0009               	tblrd		*+
  1953  00175E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  1954  001762  000A               	tblrd		*-
  1955  001764  CFF5 F017          	movff	tablat,___ftmul@f1+2
  1956  001768  EC56  F010         	call	___ftmul	;wreg free
  1957  00176C  C015  F027         	movff	?___ftmul,_scale$1664
  1958  001770  C016  F028         	movff	?___ftmul+1,_scale$1664+1
  1959  001774  C017  F029         	movff	?___ftmul+2,_scale$1664+2
  1960                           
  1961                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1962  001778  C027  F015         	movff	_scale$1664,___ftmul@f1
  1963  00177C  C028  F016         	movff	_scale$1664+1,___ftmul@f1+1
  1964  001780  C029  F017         	movff	_scale$1664+2,___ftmul@f1+2
  1965  001784  0E00               	movlw	0
  1966  001786  6E12               	movwf	___wmul@multiplicand+1,c
  1967  001788  0E03               	movlw	3
  1968  00178A  6E11               	movwf	___wmul@multiplicand,c
  1969  00178C  0E00               	movlw	0
  1970  00178E  6E04               	movwf	___awmod@divisor+1,c
  1971  001790  0E0A               	movlw	10
  1972  001792  6E03               	movwf	___awmod@divisor,c
  1973  001794  502A               	movf	scale@scl,w,c
  1974  001796  6E01               	movwf	___awmod@dividend,c
  1975  001798  6A02               	clrf	___awmod@dividend+1,c
  1976  00179A  BE01               	btfsc	___awmod@dividend,7,c
  1977  00179C  0602               	decf	___awmod@dividend+1,f,c
  1978  00179E  EC16  F014         	call	___awmod	;wreg free
  1979  0017A2  C001  F00F         	movff	?___awmod,___wmul@multiplier
  1980  0017A6  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  1981  0017AA  EC0E  F016         	call	___wmul	;wreg free
  1982  0017AE  0E29               	movlw	low __npowers_
  1983  0017B0  240F               	addwf	?___wmul,w,c
  1984  0017B2  6EF6               	movwf	tblptrl,c
  1985  0017B4  0E10               	movlw	high __npowers_
  1986  0017B6  2010               	addwfc	?___wmul+1,w,c
  1987  0017B8  6EF7               	movwf	tblptrh,c
  1988  0017BA                     	if	0	;There are less than 3 active tblptr bytes
  1989  0017BA                     	endif
  1990  0017BA  0009               	tblrd		*+
  1991  0017BC  CFF5 F018          	movff	tablat,___ftmul@f2
  1992  0017C0  0009               	tblrd		*+
  1993  0017C2  CFF5 F019          	movff	tablat,___ftmul@f2+1
  1994  0017C6  000A               	tblrd		*-
  1995  0017C8  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  1996  0017CC  EC56  F010         	call	___ftmul	;wreg free
  1997  0017D0  D141               	goto	L5
  1998  0017D2  D15A               	goto	l222
  1999  0017D4  D054               	goto	l2331
  2000  0017D6                     l2325:
  2001                           
  2002                           ;doprnt.c: 432: else if(scl > 10)
  2003  0017D6  502A               	movf	scale@scl,w,c
  2004  0017D8  0A80               	xorlw	128
  2005  0017DA  0F75               	addlw	-139
  2006  0017DC  A0D8               	btfss	status,0,c
  2007  0017DE  D04F               	goto	l2331
  2008                           
  2009                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2010  0017E0  0E00               	movlw	0
  2011  0017E2  6E0A               	movwf	___awdiv@divisor+1,c
  2012  0017E4  0E0A               	movlw	10
  2013  0017E6  6E09               	movwf	___awdiv@divisor,c
  2014  0017E8  502A               	movf	scale@scl,w,c
  2015  0017EA  6E07               	movwf	___awdiv@dividend,c
  2016  0017EC  6A08               	clrf	___awdiv@dividend+1,c
  2017  0017EE  BE07               	btfsc	___awdiv@dividend,7,c
  2018  0017F0  0608               	decf	___awdiv@dividend+1,f,c
  2019  0017F2  ECEF  F012         	call	___awdiv	;wreg free
  2020  0017F6  0E09               	movlw	9
  2021  0017F8  2407               	addwf	?___awdiv,w,c
  2022  0017FA  6E0F               	movwf	___wmul@multiplier,c
  2023  0017FC  0E00               	movlw	0
  2024  0017FE  2008               	addwfc	?___awdiv+1,w,c
  2025  001800  6E10               	movwf	___wmul@multiplier+1,c
  2026  001802  0E00               	movlw	0
  2027  001804  6E12               	movwf	___wmul@multiplicand+1,c
  2028  001806  0E03               	movlw	3
  2029  001808  6E11               	movwf	___wmul@multiplicand,c
  2030  00180A  EC0E  F016         	call	___wmul	;wreg free
  2031  00180E  0E29               	movlw	low __npowers_
  2032  001810  240F               	addwf	?___wmul,w,c
  2033  001812  6EF6               	movwf	tblptrl,c
  2034  001814  0E10               	movlw	high __npowers_
  2035  001816  2010               	addwfc	?___wmul+1,w,c
  2036  001818  6EF7               	movwf	tblptrh,c
  2037  00181A                     	if	0	;There are less than 3 active tblptr bytes
  2038  00181A                     	endif
  2039  00181A  0009               	tblrd		*+
  2040  00181C  CFF5 F015          	movff	tablat,___ftmul@f1
  2041  001820  0009               	tblrd		*+
  2042  001822  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2043  001826  000A               	tblrd		*-
  2044  001828  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2045  00182C  0E00               	movlw	0
  2046  00182E  6E12               	movwf	___wmul@multiplicand+1,c
  2047  001830  0E03               	movlw	3
  2048  001832  6E11               	movwf	___wmul@multiplicand,c
  2049  001834  0E00               	movlw	0
  2050  001836  6E04               	movwf	___awmod@divisor+1,c
  2051  001838  0E0A               	movlw	10
  2052  00183A  6E03               	movwf	___awmod@divisor,c
  2053  00183C  502A               	movf	scale@scl,w,c
  2054  00183E  6E01               	movwf	___awmod@dividend,c
  2055  001840  6A02               	clrf	___awmod@dividend+1,c
  2056  001842  BE01               	btfsc	___awmod@dividend,7,c
  2057  001844  0602               	decf	___awmod@dividend+1,f,c
  2058  001846  EC16  F014         	call	___awmod	;wreg free
  2059  00184A  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2060  00184E  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2061  001852  EC0E  F016         	call	___wmul	;wreg free
  2062  001856  0E29               	movlw	low __npowers_
  2063  001858  240F               	addwf	?___wmul,w,c
  2064  00185A  6EF6               	movwf	tblptrl,c
  2065  00185C  0E10               	movlw	high __npowers_
  2066  00185E  2010               	addwfc	?___wmul+1,w,c
  2067  001860  6EF7               	movwf	tblptrh,c
  2068  001862                     	if	0	;There are less than 3 active tblptr bytes
  2069  001862                     	endif
  2070  001862  0009               	tblrd		*+
  2071  001864  CFF5 F018          	movff	tablat,___ftmul@f2
  2072  001868  0009               	tblrd		*+
  2073  00186A  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2074  00186E  000A               	tblrd		*-
  2075  001870  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2076  001874  EC56  F010         	call	___ftmul	;wreg free
  2077  001878  D0ED               	goto	L5
  2078  00187A  D106               	goto	l222
  2079  00187C  D000               	goto	l2331
  2080  00187E                     l2331:
  2081                           
  2082                           ;doprnt.c: 434: return _npowers_[scl];
  2083  00187E  502A               	movf	scale@scl,w,c
  2084  001880  0D03               	mullw	3
  2085  001882  0E29               	movlw	low __npowers_
  2086  001884  24F3               	addwf	prodl,w,c
  2087  001886  6EF6               	movwf	tblptrl,c
  2088  001888  0E10               	movlw	high __npowers_
  2089  00188A  D0F2               	goto	L4
  2090  00188C  D0FD               	goto	l222
  2091  00188E                     l2335:
  2092                           
  2093                           ;doprnt.c: 435: }
  2094                           ;doprnt.c: 436: if(scl>=110)
  2095  00188E  502A               	movf	scale@scl,w,c
  2096  001890  0A80               	xorlw	128
  2097  001892  0F12               	addlw	-238
  2098  001894  A0D8               	btfss	status,0,c
  2099  001896  D08D               	goto	l2343
  2100                           
  2101                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2102  001898  0E00               	movlw	0
  2103  00189A  6E12               	movwf	___wmul@multiplicand+1,c
  2104  00189C  0E03               	movlw	3
  2105  00189E  6E11               	movwf	___wmul@multiplicand,c
  2106  0018A0  0E00               	movlw	0
  2107  0018A2  6E0A               	movwf	___awdiv@divisor+1,c
  2108  0018A4  0E0A               	movlw	10
  2109  0018A6  6E09               	movwf	___awdiv@divisor,c
  2110  0018A8  0E00               	movlw	0
  2111  0018AA  6E04               	movwf	___awmod@divisor+1,c
  2112  0018AC  0E64               	movlw	100
  2113  0018AE  6E03               	movwf	___awmod@divisor,c
  2114  0018B0  502A               	movf	scale@scl,w,c
  2115  0018B2  6E01               	movwf	___awmod@dividend,c
  2116  0018B4  6A02               	clrf	___awmod@dividend+1,c
  2117  0018B6  BE01               	btfsc	___awmod@dividend,7,c
  2118  0018B8  0602               	decf	___awmod@dividend+1,f,c
  2119  0018BA  EC16  F014         	call	___awmod	;wreg free
  2120  0018BE  C001  F007         	movff	?___awmod,___awdiv@dividend
  2121  0018C2  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2122  0018C6  ECEF  F012         	call	___awdiv	;wreg free
  2123  0018CA  0E09               	movlw	9
  2124  0018CC  2407               	addwf	?___awdiv,w,c
  2125  0018CE  6E0F               	movwf	___wmul@multiplier,c
  2126  0018D0  0E00               	movlw	0
  2127  0018D2  2008               	addwfc	?___awdiv+1,w,c
  2128  0018D4  6E10               	movwf	___wmul@multiplier+1,c
  2129  0018D6  EC0E  F016         	call	___wmul	;wreg free
  2130  0018DA  0E50               	movlw	low __powers_
  2131  0018DC  240F               	addwf	?___wmul,w,c
  2132  0018DE  6EF6               	movwf	tblptrl,c
  2133  0018E0  0E10               	movlw	high __powers_
  2134  0018E2  2010               	addwfc	?___wmul+1,w,c
  2135  0018E4  6EF7               	movwf	tblptrh,c
  2136  0018E6                     	if	0	;There are less than 3 active tblptr bytes
  2137  0018E6                     	endif
  2138  0018E6  0009               	tblrd		*+
  2139  0018E8  CFF5 F018          	movff	tablat,___ftmul@f2
  2140  0018EC  0009               	tblrd		*+
  2141  0018EE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2142  0018F2  000A               	tblrd		*-
  2143  0018F4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2144  0018F8  0E00               	movlw	0
  2145  0018FA  6E0A               	movwf	___awdiv@divisor+1,c
  2146  0018FC  0E64               	movlw	100
  2147  0018FE  6E09               	movwf	___awdiv@divisor,c
  2148  001900  502A               	movf	scale@scl,w,c
  2149  001902  6E07               	movwf	___awdiv@dividend,c
  2150  001904  6A08               	clrf	___awdiv@dividend+1,c
  2151  001906  BE07               	btfsc	___awdiv@dividend,7,c
  2152  001908  0608               	decf	___awdiv@dividend+1,f,c
  2153  00190A  ECEF  F012         	call	___awdiv	;wreg free
  2154  00190E  0E12               	movlw	18
  2155  001910  2407               	addwf	?___awdiv,w,c
  2156  001912  6E0F               	movwf	___wmul@multiplier,c
  2157  001914  0E00               	movlw	0
  2158  001916  2008               	addwfc	?___awdiv+1,w,c
  2159  001918  6E10               	movwf	___wmul@multiplier+1,c
  2160  00191A  0E00               	movlw	0
  2161  00191C  6E12               	movwf	___wmul@multiplicand+1,c
  2162  00191E  0E03               	movlw	3
  2163  001920  6E11               	movwf	___wmul@multiplicand,c
  2164  001922  EC0E  F016         	call	___wmul	;wreg free
  2165  001926  0E50               	movlw	low __powers_
  2166  001928  240F               	addwf	?___wmul,w,c
  2167  00192A  6EF6               	movwf	tblptrl,c
  2168  00192C  0E10               	movlw	high __powers_
  2169  00192E  2010               	addwfc	?___wmul+1,w,c
  2170  001930  6EF7               	movwf	tblptrh,c
  2171  001932                     	if	0	;There are less than 3 active tblptr bytes
  2172  001932                     	endif
  2173  001932  0009               	tblrd		*+
  2174  001934  CFF5 F015          	movff	tablat,___ftmul@f1
  2175  001938  0009               	tblrd		*+
  2176  00193A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2177  00193E  000A               	tblrd		*-
  2178  001940  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2179  001944  EC56  F010         	call	___ftmul	;wreg free
  2180  001948  C015  F027         	movff	?___ftmul,_scale$1664
  2181  00194C  C016  F028         	movff	?___ftmul+1,_scale$1664+1
  2182  001950  C017  F029         	movff	?___ftmul+2,_scale$1664+2
  2183                           
  2184                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2185  001954  C027  F015         	movff	_scale$1664,___ftmul@f1
  2186  001958  C028  F016         	movff	_scale$1664+1,___ftmul@f1+1
  2187  00195C  C029  F017         	movff	_scale$1664+2,___ftmul@f1+2
  2188  001960  0E00               	movlw	0
  2189  001962  6E12               	movwf	___wmul@multiplicand+1,c
  2190  001964  0E03               	movlw	3
  2191  001966  6E11               	movwf	___wmul@multiplicand,c
  2192  001968  0E00               	movlw	0
  2193  00196A  6E04               	movwf	___awmod@divisor+1,c
  2194  00196C  0E0A               	movlw	10
  2195  00196E  6E03               	movwf	___awmod@divisor,c
  2196  001970  502A               	movf	scale@scl,w,c
  2197  001972  6E01               	movwf	___awmod@dividend,c
  2198  001974  6A02               	clrf	___awmod@dividend+1,c
  2199  001976  BE01               	btfsc	___awmod@dividend,7,c
  2200  001978  0602               	decf	___awmod@dividend+1,f,c
  2201  00197A  EC16  F014         	call	___awmod	;wreg free
  2202  00197E  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2203  001982  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2204  001986  EC0E  F016         	call	___wmul	;wreg free
  2205  00198A  0E50               	movlw	low __powers_
  2206  00198C  240F               	addwf	?___wmul,w,c
  2207  00198E  6EF6               	movwf	tblptrl,c
  2208  001990  0E10               	movlw	high __powers_
  2209  001992  2010               	addwfc	?___wmul+1,w,c
  2210  001994  6EF7               	movwf	tblptrh,c
  2211  001996                     	if	0	;There are less than 3 active tblptr bytes
  2212  001996                     	endif
  2213  001996  0009               	tblrd		*+
  2214  001998  CFF5 F018          	movff	tablat,___ftmul@f2
  2215  00199C  0009               	tblrd		*+
  2216  00199E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2217  0019A2  000A               	tblrd		*-
  2218  0019A4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2219  0019A8  EC56  F010         	call	___ftmul	;wreg free
  2220  0019AC  D053               	goto	L5
  2221  0019AE  D06C               	goto	l222
  2222  0019B0  D059               	goto	l2349
  2223  0019B2                     l2343:
  2224                           
  2225                           ;doprnt.c: 438: else if(scl > 10)
  2226  0019B2  502A               	movf	scale@scl,w,c
  2227  0019B4  0A80               	xorlw	128
  2228  0019B6  0F75               	addlw	-139
  2229  0019B8  A0D8               	btfss	status,0,c
  2230  0019BA  D054               	goto	l2349
  2231                           
  2232                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2233  0019BC  0E00               	movlw	0
  2234  0019BE  6E0A               	movwf	___awdiv@divisor+1,c
  2235  0019C0  0E0A               	movlw	10
  2236  0019C2  6E09               	movwf	___awdiv@divisor,c
  2237  0019C4  502A               	movf	scale@scl,w,c
  2238  0019C6  6E07               	movwf	___awdiv@dividend,c
  2239  0019C8  6A08               	clrf	___awdiv@dividend+1,c
  2240  0019CA  BE07               	btfsc	___awdiv@dividend,7,c
  2241  0019CC  0608               	decf	___awdiv@dividend+1,f,c
  2242  0019CE  ECEF  F012         	call	___awdiv	;wreg free
  2243  0019D2  0E09               	movlw	9
  2244  0019D4  2407               	addwf	?___awdiv,w,c
  2245  0019D6  6E0F               	movwf	___wmul@multiplier,c
  2246  0019D8  0E00               	movlw	0
  2247  0019DA  2008               	addwfc	?___awdiv+1,w,c
  2248  0019DC  6E10               	movwf	___wmul@multiplier+1,c
  2249  0019DE  0E00               	movlw	0
  2250  0019E0  6E12               	movwf	___wmul@multiplicand+1,c
  2251  0019E2  0E03               	movlw	3
  2252  0019E4  6E11               	movwf	___wmul@multiplicand,c
  2253  0019E6  EC0E  F016         	call	___wmul	;wreg free
  2254  0019EA  0E50               	movlw	low __powers_
  2255  0019EC  240F               	addwf	?___wmul,w,c
  2256  0019EE  6EF6               	movwf	tblptrl,c
  2257  0019F0  0E10               	movlw	high __powers_
  2258  0019F2  2010               	addwfc	?___wmul+1,w,c
  2259  0019F4  6EF7               	movwf	tblptrh,c
  2260  0019F6                     	if	0	;There are less than 3 active tblptr bytes
  2261  0019F6                     	endif
  2262  0019F6  0009               	tblrd		*+
  2263  0019F8  CFF5 F015          	movff	tablat,___ftmul@f1
  2264  0019FC  0009               	tblrd		*+
  2265  0019FE  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2266  001A02  000A               	tblrd		*-
  2267  001A04  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2268  001A08  0E00               	movlw	0
  2269  001A0A  6E12               	movwf	___wmul@multiplicand+1,c
  2270  001A0C  0E03               	movlw	3
  2271  001A0E  6E11               	movwf	___wmul@multiplicand,c
  2272  001A10  0E00               	movlw	0
  2273  001A12  6E04               	movwf	___awmod@divisor+1,c
  2274  001A14  0E0A               	movlw	10
  2275  001A16  6E03               	movwf	___awmod@divisor,c
  2276  001A18  502A               	movf	scale@scl,w,c
  2277  001A1A  6E01               	movwf	___awmod@dividend,c
  2278  001A1C  6A02               	clrf	___awmod@dividend+1,c
  2279  001A1E  BE01               	btfsc	___awmod@dividend,7,c
  2280  001A20  0602               	decf	___awmod@dividend+1,f,c
  2281  001A22  EC16  F014         	call	___awmod	;wreg free
  2282  001A26  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2283  001A2A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2284  001A2E  EC0E  F016         	call	___wmul	;wreg free
  2285  001A32  0E50               	movlw	low __powers_
  2286  001A34  240F               	addwf	?___wmul,w,c
  2287  001A36  6EF6               	movwf	tblptrl,c
  2288  001A38  0E10               	movlw	high __powers_
  2289  001A3A  2010               	addwfc	?___wmul+1,w,c
  2290  001A3C  6EF7               	movwf	tblptrh,c
  2291  001A3E                     	if	0	;There are less than 3 active tblptr bytes
  2292  001A3E                     	endif
  2293  001A3E  0009               	tblrd		*+
  2294  001A40  CFF5 F018          	movff	tablat,___ftmul@f2
  2295  001A44  0009               	tblrd		*+
  2296  001A46  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2297  001A4A  000A               	tblrd		*-
  2298  001A4C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2299  001A50  EC56  F010         	call	___ftmul	;wreg free
  2300  001A54                     L5:
  2301  001A54  C015  F024         	movff	?___ftmul,?_scale
  2302  001A58  C016  F025         	movff	?___ftmul+1,?_scale+1
  2303  001A5C  C017  F026         	movff	?___ftmul+2,?_scale+2
  2304  001A60  D013               	goto	l222
  2305  001A62  D000               	goto	l2349
  2306  001A64                     l2349:
  2307                           
  2308                           ;doprnt.c: 440: return _powers_[scl];
  2309  001A64  502A               	movf	scale@scl,w,c
  2310  001A66  0D03               	mullw	3
  2311  001A68  0E50               	movlw	low __powers_
  2312  001A6A  24F3               	addwf	prodl,w,c
  2313  001A6C  6EF6               	movwf	tblptrl,c
  2314  001A6E  0E10               	movlw	high __powers_
  2315  001A70                     L4:
  2316  001A70  20F4               	addwfc	prodh,w,c
  2317  001A72  6EF7               	movwf	tblptrh,c
  2318  001A74                     	if	0	;There are less than 3 active tblptr bytes
  2319  001A74                     	endif
  2320  001A74  0009               	tblrd		*+
  2321  001A76  CFF5 F024          	movff	tablat,?_scale
  2322  001A7A  0009               	tblrd		*+
  2323  001A7C  CFF5 F025          	movff	tablat,?_scale+1
  2324  001A80  000A               	tblrd		*-
  2325  001A82  CFF5 F026          	movff	tablat,?_scale+2
  2326  001A86  D000               	goto	l222
  2327  001A88                     l222:
  2328  001A88  0012               	return		;funcret
  2329  001A8A                     __end_of_scale:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           prodh	equ	0xFF4
  2336                           prodl	equ	0xFF3
  2337                           postinc0	equ	0xFEE
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           fsr1l	equ	0xFE1
  2341                           postinc2	equ	0xFDE
  2342                           postdec2	equ	0xFDD
  2343                           fsr2h	equ	0xFDA
  2344                           fsr2l	equ	0xFD9
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _putch *****************
  2348 ;; Defined at:
  2349 ;;		line 46 in file "Lab6p1.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  c               1    wreg     unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  c               1    0[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;		None               void
  2356 ;; Registers used:
  2357 ;;		wreg
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;Total ram usage:        1 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_printf
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text3
  2377  002D32                     __ptext3:
  2378                           	opt stack 0
  2379  002D32                     _putch:
  2380                           	opt stack 29
  2381                           
  2382                           ;incstack = 0
  2383                           ;putch@c stored from wreg
  2384  002D32  6E01               	movwf	putch@c,c
  2385                           
  2386                           ;Lab6p1.c: 48: while (!TRMT);
  2387  002D34  D000               	goto	l82
  2388  002D36                     l82:
  2389  002D36  A2AC               	btfss	4012,1,c	;volatile
  2390  002D38  D7FE               	goto	l82
  2391                           
  2392                           ;Lab6p1.c: 49: TXREG = c;
  2393  002D3A  C001  FFAD         	movff	putch@c,4013	;volatile
  2394  002D3E  0012               	return		;funcret
  2395  002D40                     __end_of_putch:
  2396                           	opt stack 0
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           prodh	equ	0xFF4
  2402                           prodl	equ	0xFF3
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           postdec1	equ	0xFE5
  2406                           fsr1l	equ	0xFE1
  2407                           postinc2	equ	0xFDE
  2408                           postdec2	equ	0xFDD
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _fround *****************
  2414 ;; Defined at:
  2415 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  prec            1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  prec            1   44[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  3   35[COMRAM] unsigned char 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:       10 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    2
  2436 ;; This function calls:
  2437 ;;		___awdiv
  2438 ;;		___awmod
  2439 ;;		___ftmul
  2440 ;;		___wmul
  2441 ;; This function is called by:
  2442 ;;		_printf
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text4
  2447  001A8A                     __ptext4:
  2448                           	opt stack 0
  2449  001A8A                     _fround:
  2450                           	opt stack 27
  2451                           
  2452                           ;incstack = 0
  2453                           ;fround@prec stored from wreg
  2454  001A8A  6E2D               	movwf	fround@prec,c
  2455                           
  2456                           ;doprnt.c: 413: if(prec>=110)
  2457  001A8C  0E6D               	movlw	109
  2458  001A8E  642D               	cpfsgt	fround@prec,c
  2459  001A90  D09B               	goto	l2303
  2460                           
  2461                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2462  001A92  0E00               	movlw	0
  2463  001A94  6E12               	movwf	___wmul@multiplicand+1,c
  2464  001A96  0E03               	movlw	3
  2465  001A98  6E11               	movwf	___wmul@multiplicand,c
  2466  001A9A  0E00               	movlw	0
  2467  001A9C  6E0A               	movwf	___awdiv@divisor+1,c
  2468  001A9E  0E0A               	movlw	10
  2469  001AA0  6E09               	movwf	___awdiv@divisor,c
  2470  001AA2  0E00               	movlw	0
  2471  001AA4  6E04               	movwf	___awmod@divisor+1,c
  2472  001AA6  0E64               	movlw	100
  2473  001AA8  6E03               	movwf	___awmod@divisor,c
  2474  001AAA  C02D  F001         	movff	fround@prec,___awmod@dividend
  2475  001AAE  6A02               	clrf	___awmod@dividend+1,c
  2476  001AB0  EC16  F014         	call	___awmod	;wreg free
  2477  001AB4  C001  F007         	movff	?___awmod,___awdiv@dividend
  2478  001AB8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2479  001ABC  ECEF  F012         	call	___awdiv	;wreg free
  2480  001AC0  0E09               	movlw	9
  2481  001AC2  2407               	addwf	?___awdiv,w,c
  2482  001AC4  6E0F               	movwf	___wmul@multiplier,c
  2483  001AC6  0E00               	movlw	0
  2484  001AC8  2008               	addwfc	?___awdiv+1,w,c
  2485  001ACA  6E10               	movwf	___wmul@multiplier+1,c
  2486  001ACC  EC0E  F016         	call	___wmul	;wreg free
  2487  001AD0  0E29               	movlw	low __npowers_
  2488  001AD2  240F               	addwf	?___wmul,w,c
  2489  001AD4  6EF6               	movwf	tblptrl,c
  2490  001AD6  0E10               	movlw	high __npowers_
  2491  001AD8  2010               	addwfc	?___wmul+1,w,c
  2492  001ADA  6EF7               	movwf	tblptrh,c
  2493  001ADC                     	if	0	;There are less than 3 active tblptr bytes
  2494  001ADC                     	endif
  2495  001ADC  0009               	tblrd		*+
  2496  001ADE  CFF5 F018          	movff	tablat,___ftmul@f2
  2497  001AE2  0009               	tblrd		*+
  2498  001AE4  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2499  001AE8  000A               	tblrd		*-
  2500  001AEA  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2501  001AEE  0E00               	movlw	0
  2502  001AF0  6E0A               	movwf	___awdiv@divisor+1,c
  2503  001AF2  0E64               	movlw	100
  2504  001AF4  6E09               	movwf	___awdiv@divisor,c
  2505  001AF6  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2506  001AFA  6A08               	clrf	___awdiv@dividend+1,c
  2507  001AFC  ECEF  F012         	call	___awdiv	;wreg free
  2508  001B00  0E12               	movlw	18
  2509  001B02  2407               	addwf	?___awdiv,w,c
  2510  001B04  6E0F               	movwf	___wmul@multiplier,c
  2511  001B06  0E00               	movlw	0
  2512  001B08  2008               	addwfc	?___awdiv+1,w,c
  2513  001B0A  6E10               	movwf	___wmul@multiplier+1,c
  2514  001B0C  0E00               	movlw	0
  2515  001B0E  6E12               	movwf	___wmul@multiplicand+1,c
  2516  001B10  0E03               	movlw	3
  2517  001B12  6E11               	movwf	___wmul@multiplicand,c
  2518  001B14  EC0E  F016         	call	___wmul	;wreg free
  2519  001B18  0E29               	movlw	low __npowers_
  2520  001B1A  240F               	addwf	?___wmul,w,c
  2521  001B1C  6EF6               	movwf	tblptrl,c
  2522  001B1E  0E10               	movlw	high __npowers_
  2523  001B20  2010               	addwfc	?___wmul+1,w,c
  2524  001B22  6EF7               	movwf	tblptrh,c
  2525  001B24                     	if	0	;There are less than 3 active tblptr bytes
  2526  001B24                     	endif
  2527  001B24  0009               	tblrd		*+
  2528  001B26  CFF5 F015          	movff	tablat,___ftmul@f1
  2529  001B2A  0009               	tblrd		*+
  2530  001B2C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2531  001B30  000A               	tblrd		*-
  2532  001B32  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2533  001B36  EC56  F010         	call	___ftmul	;wreg free
  2534  001B3A  C015  F02A         	movff	?___ftmul,_fround$1662
  2535  001B3E  C016  F02B         	movff	?___ftmul+1,_fround$1662+1
  2536  001B42  C017  F02C         	movff	?___ftmul+2,_fround$1662+2
  2537                           
  2538                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2539  001B46  0E00               	movlw	0
  2540  001B48  6E12               	movwf	___wmul@multiplicand+1,c
  2541  001B4A  0E03               	movlw	3
  2542  001B4C  6E11               	movwf	___wmul@multiplicand,c
  2543  001B4E  0E00               	movlw	0
  2544  001B50  6E04               	movwf	___awmod@divisor+1,c
  2545  001B52  0E0A               	movlw	10
  2546  001B54  6E03               	movwf	___awmod@divisor,c
  2547  001B56  C02D  F001         	movff	fround@prec,___awmod@dividend
  2548  001B5A  6A02               	clrf	___awmod@dividend+1,c
  2549  001B5C  EC16  F014         	call	___awmod	;wreg free
  2550  001B60  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2551  001B64  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2552  001B68  EC0E  F016         	call	___wmul	;wreg free
  2553  001B6C  0E29               	movlw	low __npowers_
  2554  001B6E  240F               	addwf	?___wmul,w,c
  2555  001B70  6EF6               	movwf	tblptrl,c
  2556  001B72  0E10               	movlw	high __npowers_
  2557  001B74  2010               	addwfc	?___wmul+1,w,c
  2558  001B76  6EF7               	movwf	tblptrh,c
  2559  001B78                     	if	0	;There are less than 3 active tblptr bytes
  2560  001B78                     	endif
  2561  001B78  0009               	tblrd		*+
  2562  001B7A  CFF5 F018          	movff	tablat,___ftmul@f2
  2563  001B7E  0009               	tblrd		*+
  2564  001B80  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2565  001B84  000A               	tblrd		*-
  2566  001B86  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2567  001B8A  C02A  F015         	movff	_fround$1662,___ftmul@f1
  2568  001B8E  C02B  F016         	movff	_fround$1662+1,___ftmul@f1+1
  2569  001B92  C02C  F017         	movff	_fround$1662+2,___ftmul@f1+2
  2570  001B96  EC56  F010         	call	___ftmul	;wreg free
  2571  001B9A  C015  F027         	movff	?___ftmul,_fround$1663
  2572  001B9E  C016  F028         	movff	?___ftmul+1,_fround$1663+1
  2573  001BA2  C017  F029         	movff	?___ftmul+2,_fround$1663+2
  2574                           
  2575                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2576  001BA6  C027  F015         	movff	_fround$1663,___ftmul@f1
  2577  001BAA  C028  F016         	movff	_fround$1663+1,___ftmul@f1+1
  2578  001BAE  C029  F017         	movff	_fround$1663+2,___ftmul@f1+2
  2579  001BB2  0E00               	movlw	0
  2580  001BB4  6E18               	movwf	___ftmul@f2,c
  2581  001BB6  0E00               	movlw	0
  2582  001BB8  6E19               	movwf	___ftmul@f2+1,c
  2583  001BBA  0E3F               	movlw	63
  2584  001BBC  6E1A               	movwf	___ftmul@f2+2,c
  2585  001BBE  EC56  F010         	call	___ftmul	;wreg free
  2586  001BC2  D07D               	goto	L7
  2587  001BC4  D083               	goto	l215
  2588  001BC6  D062               	goto	l2311
  2589  001BC8                     l2303:
  2590                           
  2591                           ;doprnt.c: 415: else if(prec > 10)
  2592  001BC8  0E0A               	movlw	10
  2593  001BCA  642D               	cpfsgt	fround@prec,c
  2594  001BCC  D05F               	goto	l2311
  2595                           
  2596                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2597  001BCE  0E00               	movlw	0
  2598  001BD0  6E12               	movwf	___wmul@multiplicand+1,c
  2599  001BD2  0E03               	movlw	3
  2600  001BD4  6E11               	movwf	___wmul@multiplicand,c
  2601  001BD6  0E00               	movlw	0
  2602  001BD8  6E04               	movwf	___awmod@divisor+1,c
  2603  001BDA  0E0A               	movlw	10
  2604  001BDC  6E03               	movwf	___awmod@divisor,c
  2605  001BDE  C02D  F001         	movff	fround@prec,___awmod@dividend
  2606  001BE2  6A02               	clrf	___awmod@dividend+1,c
  2607  001BE4  EC16  F014         	call	___awmod	;wreg free
  2608  001BE8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2609  001BEC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2610  001BF0  EC0E  F016         	call	___wmul	;wreg free
  2611  001BF4  0E29               	movlw	low __npowers_
  2612  001BF6  240F               	addwf	?___wmul,w,c
  2613  001BF8  6EF6               	movwf	tblptrl,c
  2614  001BFA  0E10               	movlw	high __npowers_
  2615  001BFC  2010               	addwfc	?___wmul+1,w,c
  2616  001BFE  6EF7               	movwf	tblptrh,c
  2617  001C00                     	if	0	;There are less than 3 active tblptr bytes
  2618  001C00                     	endif
  2619  001C00  0009               	tblrd		*+
  2620  001C02  CFF5 F018          	movff	tablat,___ftmul@f2
  2621  001C06  0009               	tblrd		*+
  2622  001C08  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2623  001C0C  000A               	tblrd		*-
  2624  001C0E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2625  001C12  0E00               	movlw	0
  2626  001C14  6E0A               	movwf	___awdiv@divisor+1,c
  2627  001C16  0E0A               	movlw	10
  2628  001C18  6E09               	movwf	___awdiv@divisor,c
  2629  001C1A  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2630  001C1E  6A08               	clrf	___awdiv@dividend+1,c
  2631  001C20  ECEF  F012         	call	___awdiv	;wreg free
  2632  001C24  0E09               	movlw	9
  2633  001C26  2407               	addwf	?___awdiv,w,c
  2634  001C28  6E0F               	movwf	___wmul@multiplier,c
  2635  001C2A  0E00               	movlw	0
  2636  001C2C  2008               	addwfc	?___awdiv+1,w,c
  2637  001C2E  6E10               	movwf	___wmul@multiplier+1,c
  2638  001C30  0E00               	movlw	0
  2639  001C32  6E12               	movwf	___wmul@multiplicand+1,c
  2640  001C34  0E03               	movlw	3
  2641  001C36  6E11               	movwf	___wmul@multiplicand,c
  2642  001C38  EC0E  F016         	call	___wmul	;wreg free
  2643  001C3C  0E29               	movlw	low __npowers_
  2644  001C3E  240F               	addwf	?___wmul,w,c
  2645  001C40  6EF6               	movwf	tblptrl,c
  2646  001C42  0E10               	movlw	high __npowers_
  2647  001C44  2010               	addwfc	?___wmul+1,w,c
  2648  001C46  6EF7               	movwf	tblptrh,c
  2649  001C48                     	if	0	;There are less than 3 active tblptr bytes
  2650  001C48                     	endif
  2651  001C48  0009               	tblrd		*+
  2652  001C4A  CFF5 F015          	movff	tablat,___ftmul@f1
  2653  001C4E  0009               	tblrd		*+
  2654  001C50  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2655  001C54  000A               	tblrd		*-
  2656  001C56  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2657  001C5A  EC56  F010         	call	___ftmul	;wreg free
  2658  001C5E  C015  F02A         	movff	?___ftmul,_fround$1662
  2659  001C62  C016  F02B         	movff	?___ftmul+1,_fround$1662+1
  2660  001C66  C017  F02C         	movff	?___ftmul+2,_fround$1662+2
  2661                           
  2662                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2663  001C6A  C02A  F015         	movff	_fround$1662,___ftmul@f1
  2664  001C6E  C02B  F016         	movff	_fround$1662+1,___ftmul@f1+1
  2665  001C72  C02C  F017         	movff	_fround$1662+2,___ftmul@f1+2
  2666  001C76  0E00               	movlw	0
  2667  001C78  6E18               	movwf	___ftmul@f2,c
  2668  001C7A  0E00               	movlw	0
  2669  001C7C  6E19               	movwf	___ftmul@f2+1,c
  2670  001C7E  0E3F               	movlw	63
  2671  001C80  6E1A               	movwf	___ftmul@f2+2,c
  2672  001C82  EC56  F010         	call	___ftmul	;wreg free
  2673  001C86  D01B               	goto	L7
  2674  001C88  D021               	goto	l215
  2675  001C8A  D000               	goto	l2311
  2676  001C8C                     l2311:
  2677                           
  2678                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2679  001C8C  502D               	movf	fround@prec,w,c
  2680  001C8E  0D03               	mullw	3
  2681  001C90  0E29               	movlw	low __npowers_
  2682  001C92  24F3               	addwf	prodl,w,c
  2683  001C94  6EF6               	movwf	tblptrl,c
  2684  001C96  0E10               	movlw	high __npowers_
  2685  001C98  20F4               	addwfc	prodh,w,c
  2686  001C9A  6EF7               	movwf	tblptrh,c
  2687  001C9C                     	if	0	;There are less than 3 active tblptr bytes
  2688  001C9C                     	endif
  2689  001C9C  0009               	tblrd		*+
  2690  001C9E  CFF5 F015          	movff	tablat,___ftmul@f1
  2691  001CA2  0009               	tblrd		*+
  2692  001CA4  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2693  001CA8  000A               	tblrd		*-
  2694  001CAA  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2695  001CAE  0E00               	movlw	0
  2696  001CB0  6E18               	movwf	___ftmul@f2,c
  2697  001CB2  0E00               	movlw	0
  2698  001CB4  6E19               	movwf	___ftmul@f2+1,c
  2699  001CB6  0E3F               	movlw	63
  2700  001CB8  6E1A               	movwf	___ftmul@f2+2,c
  2701  001CBA  EC56  F010         	call	___ftmul	;wreg free
  2702  001CBE                     L7:
  2703  001CBE  C015  F024         	movff	?___ftmul,?_fround
  2704  001CC2  C016  F025         	movff	?___ftmul+1,?_fround+1
  2705  001CC6  C017  F026         	movff	?___ftmul+2,?_fround+2
  2706  001CCA  D000               	goto	l215
  2707  001CCC                     l215:
  2708  001CCC  0012               	return		;funcret
  2709  001CCE                     __end_of_fround:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           postinc0	equ	0xFEE
  2718                           wreg	equ	0xFE8
  2719                           postdec1	equ	0xFE5
  2720                           fsr1l	equ	0xFE1
  2721                           postinc2	equ	0xFDE
  2722                           postdec2	equ	0xFDD
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function ___wmul *****************
  2728 ;; Defined at:
  2729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  multiplier      2   14[COMRAM] unsigned int 
  2732 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  product         2   18[COMRAM] unsigned int 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2   14[COMRAM] unsigned int 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, prodl, prodh
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:        6 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_fround
  2754 ;;		_scale
  2755 ;;		_printf
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text5
  2760  002C1C                     __ptext5:
  2761                           	opt stack 0
  2762  002C1C                     ___wmul:
  2763                           	opt stack 28
  2764                           
  2765                           ;incstack = 0
  2766  002C1C  500F               	movf	___wmul@multiplier,w,c
  2767  002C1E  0211               	mulwf	___wmul@multiplicand,c
  2768  002C20  CFF3 F013          	movff	prodl,___wmul@product
  2769  002C24  CFF4 F014          	movff	prodh,___wmul@product+1
  2770  002C28  500F               	movf	___wmul@multiplier,w,c
  2771  002C2A  0212               	mulwf	___wmul@multiplicand+1,c
  2772  002C2C  50F3               	movf	prodl,w,c
  2773  002C2E  2614               	addwf	___wmul@product+1,f,c
  2774  002C30  5010               	movf	___wmul@multiplier+1,w,c
  2775  002C32  0211               	mulwf	___wmul@multiplicand,c
  2776  002C34  50F3               	movf	prodl,w,c
  2777  002C36  2614               	addwf	___wmul@product+1,f,c
  2778  002C38  C013  F00F         	movff	___wmul@product,?___wmul
  2779  002C3C  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2780  002C40  D000               	goto	l314
  2781  002C42                     l314:
  2782  002C42  0012               	return		;funcret
  2783  002C44                     __end_of___wmul:
  2784                           	opt stack 0
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           prodh	equ	0xFF4
  2790                           prodl	equ	0xFF3
  2791                           postinc0	equ	0xFEE
  2792                           wreg	equ	0xFE8
  2793                           postdec1	equ	0xFE5
  2794                           fsr1l	equ	0xFE1
  2795                           postinc2	equ	0xFDE
  2796                           postdec2	equ	0xFDD
  2797                           fsr2h	equ	0xFDA
  2798                           fsr2l	equ	0xFD9
  2799                           status	equ	0xFD8
  2800                           
  2801 ;; *************** function ___ftmul *****************
  2802 ;; Defined at:
  2803 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  f1              3   20[COMRAM] float 
  2806 ;;  f2              3   23[COMRAM] float 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  2809 ;;  sign            1   34[COMRAM] unsigned char 
  2810 ;;  cntr            1   33[COMRAM] unsigned char 
  2811 ;;  exp             1   29[COMRAM] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  3   20[COMRAM] float 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2821 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;Total ram usage:       15 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    1
  2828 ;; This function calls:
  2829 ;;		___ftpack
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;;		_fround
  2833 ;;		_scale
  2834 ;;		_printf
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text6
  2839  0020AC                     __ptext6:
  2840                           	opt stack 0
  2841  0020AC                     ___ftmul:
  2842                           	opt stack 27
  2843                           
  2844                           ;incstack = 0
  2845  0020AC  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  2846  0020B0  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  2847  0020B2  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  2848  0020B4  3416               	rlcf	___ftmul@f1+1,w,c
  2849  0020B6  361B               	rlcf	??___ftmul& (0+255),f,c
  2850  0020B8  E301               	bnc	u1791
  2851  0020BA  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  2852  0020BC                     u1791:
  2853  0020BC  501B               	movf	??___ftmul,w,c
  2854  0020BE  6E1E               	movwf	___ftmul@exp,c
  2855  0020C0  501E               	movf	___ftmul@exp,w,c
  2856  0020C2  A4D8               	btfss	status,2,c
  2857  0020C4  D002               	goto	l2079
  2858  0020C6  D00E               	goto	l2081
  2859  0020C8  D06C               	goto	l743
  2860  0020CA                     l2079:
  2861  0020CA  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  2862  0020CE  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  2863  0020D0  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  2864  0020D2  3419               	rlcf	___ftmul@f2+1,w,c
  2865  0020D4  361B               	rlcf	??___ftmul& (0+255),f,c
  2866  0020D6  E301               	bnc	u1811
  2867  0020D8  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  2868  0020DA                     u1811:
  2869  0020DA  501B               	movf	??___ftmul,w,c
  2870  0020DC  6E23               	movwf	___ftmul@sign,c
  2871  0020DE  5023               	movf	___ftmul@sign,w,c
  2872  0020E0  A4D8               	btfss	status,2,c
  2873  0020E2  D007               	goto	l2085
  2874  0020E4                     l2081:
  2875  0020E4  0E00               	movlw	0
  2876  0020E6  6E15               	movwf	?___ftmul,c
  2877  0020E8  0E00               	movlw	0
  2878  0020EA  6E16               	movwf	?___ftmul+1,c
  2879  0020EC  0E00               	movlw	0
  2880  0020EE  6E17               	movwf	?___ftmul+2,c
  2881  0020F0  D058               	goto	l743
  2882  0020F2                     l2085:
  2883  0020F2  5023               	movf	___ftmul@sign,w,c
  2884  0020F4  0F7B               	addlw	123
  2885  0020F6  261E               	addwf	___ftmul@exp,f,c
  2886  0020F8  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  2887  0020FC  501A               	movf	___ftmul@f2+2,w,c
  2888  0020FE  1A23               	xorwf	___ftmul@sign,f,c
  2889  002100  0E80               	movlw	128
  2890  002102  1623               	andwf	___ftmul@sign,f,c
  2891  002104  8E16               	bsf	___ftmul@f1+1,7,c
  2892  002106  8E19               	bsf	___ftmul@f2+1,7,c
  2893  002108  0EFF               	movlw	255
  2894  00210A  1618               	andwf	___ftmul@f2,f,c
  2895  00210C  0EFF               	movlw	255
  2896  00210E  1619               	andwf	___ftmul@f2+1,f,c
  2897  002110  0E00               	movlw	0
  2898  002112  161A               	andwf	___ftmul@f2+2,f,c
  2899  002114  0E00               	movlw	0
  2900  002116  6E1F               	movwf	___ftmul@f3_as_product,c
  2901  002118  0E00               	movlw	0
  2902  00211A  6E20               	movwf	___ftmul@f3_as_product+1,c
  2903  00211C  0E00               	movlw	0
  2904  00211E  6E21               	movwf	___ftmul@f3_as_product+2,c
  2905  002120  0E07               	movlw	7
  2906  002122  6E22               	movwf	___ftmul@cntr,c
  2907  002124  D000               	goto	l2099
  2908  002126                     l2099:
  2909  002126  A015               	btfss	___ftmul@f1,0,c
  2910  002128  D007               	goto	l2103
  2911  00212A  5018               	movf	___ftmul@f2,w,c
  2912  00212C  261F               	addwf	___ftmul@f3_as_product,f,c
  2913  00212E  5019               	movf	___ftmul@f2+1,w,c
  2914  002130  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  2915  002132  501A               	movf	___ftmul@f2+2,w,c
  2916  002134  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  2917  002136  D000               	goto	l2103
  2918  002138                     l2103:
  2919  002138  90D8               	bcf	status,0,c
  2920  00213A  3217               	rrcf	___ftmul@f1+2,f,c
  2921  00213C  3216               	rrcf	___ftmul@f1+1,f,c
  2922  00213E  3215               	rrcf	___ftmul@f1,f,c
  2923  002140  90D8               	bcf	status,0,c
  2924  002142  3618               	rlcf	___ftmul@f2,f,c
  2925  002144  3619               	rlcf	___ftmul@f2+1,f,c
  2926  002146  361A               	rlcf	___ftmul@f2+2,f,c
  2927  002148  2E22               	decfsz	___ftmul@cntr,f,c
  2928  00214A  D7ED               	goto	l2099
  2929  00214C  D000               	goto	l2107
  2930  00214E                     l2107:
  2931  00214E  0E09               	movlw	9
  2932  002150  6E22               	movwf	___ftmul@cntr,c
  2933  002152  D000               	goto	l2109
  2934  002154                     l2109:
  2935  002154  A015               	btfss	___ftmul@f1,0,c
  2936  002156  D007               	goto	l2113
  2937  002158  5018               	movf	___ftmul@f2,w,c
  2938  00215A  261F               	addwf	___ftmul@f3_as_product,f,c
  2939  00215C  5019               	movf	___ftmul@f2+1,w,c
  2940  00215E  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  2941  002160  501A               	movf	___ftmul@f2+2,w,c
  2942  002162  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  2943  002164  D000               	goto	l2113
  2944  002166                     l2113:
  2945  002166  90D8               	bcf	status,0,c
  2946  002168  3217               	rrcf	___ftmul@f1+2,f,c
  2947  00216A  3216               	rrcf	___ftmul@f1+1,f,c
  2948  00216C  3215               	rrcf	___ftmul@f1,f,c
  2949  00216E  90D8               	bcf	status,0,c
  2950  002170  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  2951  002172  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  2952  002174  321F               	rrcf	___ftmul@f3_as_product,f,c
  2953  002176  2E22               	decfsz	___ftmul@cntr,f,c
  2954  002178  D7ED               	goto	l2109
  2955  00217A  D000               	goto	l2117
  2956  00217C                     l2117:
  2957  00217C  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2958  002180  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2959  002184  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2960  002188  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  2961  00218C  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  2962  002190  EC31  F012         	call	___ftpack	;wreg free
  2963  002194  C001  F015         	movff	?___ftpack,?___ftmul
  2964  002198  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  2965  00219C  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  2966  0021A0  D000               	goto	l743
  2967  0021A2                     l743:
  2968  0021A2  0012               	return		;funcret
  2969  0021A4                     __end_of___ftmul:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           prodh	equ	0xFF4
  2976                           prodl	equ	0xFF3
  2977                           postinc0	equ	0xFEE
  2978                           wreg	equ	0xFE8
  2979                           postdec1	equ	0xFE5
  2980                           fsr1l	equ	0xFE1
  2981                           postinc2	equ	0xFDE
  2982                           postdec2	equ	0xFDD
  2983                           fsr2h	equ	0xFDA
  2984                           fsr2l	equ	0xFD9
  2985                           status	equ	0xFD8
  2986                           
  2987 ;; *************** function ___awmod *****************
  2988 ;; Defined at:
  2989 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  dividend        2    0[COMRAM] int 
  2992 ;;  divisor         2    2[COMRAM] int 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  sign            1    5[COMRAM] unsigned char 
  2995 ;;  counter         1    4[COMRAM] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    0[COMRAM] int 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_fround
  3015 ;;		_scale
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text7
  3020  00282C                     __ptext7:
  3021                           	opt stack 0
  3022  00282C                     ___awmod:
  3023                           	opt stack 28
  3024                           
  3025                           ;incstack = 0
  3026  00282C  0E00               	movlw	0
  3027  00282E  6E06               	movwf	___awmod@sign,c
  3028  002830  AE02               	btfss	___awmod@dividend+1,7,c
  3029  002832  D007               	goto	l2173
  3030  002834  6C01               	negf	___awmod@dividend,c
  3031  002836  1E02               	comf	___awmod@dividend+1,f,c
  3032  002838  B0D8               	btfsc	status,0,c
  3033  00283A  2A02               	incf	___awmod@dividend+1,f,c
  3034  00283C  0E01               	movlw	1
  3035  00283E  6E06               	movwf	___awmod@sign,c
  3036  002840  D000               	goto	l2173
  3037  002842                     l2173:
  3038  002842  AE04               	btfss	___awmod@divisor+1,7,c
  3039  002844  D005               	goto	l2177
  3040  002846  6C03               	negf	___awmod@divisor,c
  3041  002848  1E04               	comf	___awmod@divisor+1,f,c
  3042  00284A  B0D8               	btfsc	status,0,c
  3043  00284C  2A04               	incf	___awmod@divisor+1,f,c
  3044  00284E  D000               	goto	l2177
  3045  002850                     l2177:
  3046  002850  5003               	movf	___awmod@divisor,w,c
  3047  002852  1004               	iorwf	___awmod@divisor+1,w,c
  3048  002854  B4D8               	btfsc	status,2,c
  3049  002856  D01D               	goto	l2193
  3050  002858  0E01               	movlw	1
  3051  00285A  6E05               	movwf	___awmod@counter,c
  3052  00285C  D005               	goto	l2183
  3053  00285E                     l2181:
  3054  00285E  90D8               	bcf	status,0,c
  3055  002860  3603               	rlcf	___awmod@divisor,f,c
  3056  002862  3604               	rlcf	___awmod@divisor+1,f,c
  3057  002864  2A05               	incf	___awmod@counter,f,c
  3058  002866  D000               	goto	l2183
  3059  002868                     l2183:
  3060  002868  BE04               	btfsc	___awmod@divisor+1,7,c
  3061  00286A  D002               	goto	l2185
  3062  00286C  D7F8               	goto	l2181
  3063  00286E  D000               	goto	l2185
  3064  002870                     l2185:
  3065  002870  5003               	movf	___awmod@divisor,w,c
  3066  002872  5C01               	subwf	___awmod@dividend,w,c
  3067  002874  5004               	movf	___awmod@divisor+1,w,c
  3068  002876  5802               	subwfb	___awmod@dividend+1,w,c
  3069  002878  A0D8               	btfss	status,0,c
  3070  00287A  D005               	goto	l2189
  3071  00287C  5003               	movf	___awmod@divisor,w,c
  3072  00287E  5E01               	subwf	___awmod@dividend,f,c
  3073  002880  5004               	movf	___awmod@divisor+1,w,c
  3074  002882  5A02               	subwfb	___awmod@dividend+1,f,c
  3075  002884  D000               	goto	l2189
  3076  002886                     l2189:
  3077  002886  90D8               	bcf	status,0,c
  3078  002888  3204               	rrcf	___awmod@divisor+1,f,c
  3079  00288A  3203               	rrcf	___awmod@divisor,f,c
  3080  00288C  2E05               	decfsz	___awmod@counter,f,c
  3081  00288E  D7F0               	goto	l2185
  3082  002890  D000               	goto	l2193
  3083  002892                     l2193:
  3084  002892  5006               	movf	___awmod@sign,w,c
  3085  002894  B4D8               	btfsc	status,2,c
  3086  002896  D005               	goto	l2197
  3087  002898  6C01               	negf	___awmod@dividend,c
  3088  00289A  1E02               	comf	___awmod@dividend+1,f,c
  3089  00289C  B0D8               	btfsc	status,0,c
  3090  00289E  2A02               	incf	___awmod@dividend+1,f,c
  3091  0028A0  D000               	goto	l2197
  3092  0028A2                     l2197:
  3093  0028A2  C001  F001         	movff	___awmod@dividend,?___awmod
  3094  0028A6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3095  0028AA  D000               	goto	l520
  3096  0028AC                     l520:
  3097  0028AC  0012               	return		;funcret
  3098  0028AE                     __end_of___awmod:
  3099                           	opt stack 0
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           prodh	equ	0xFF4
  3105                           prodl	equ	0xFF3
  3106                           postinc0	equ	0xFEE
  3107                           wreg	equ	0xFE8
  3108                           postdec1	equ	0xFE5
  3109                           fsr1l	equ	0xFE1
  3110                           postinc2	equ	0xFDE
  3111                           postdec2	equ	0xFDD
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function ___awdiv *****************
  3117 ;; Defined at:
  3118 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  dividend        2    6[COMRAM] int 
  3121 ;;  divisor         2    8[COMRAM] int 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  quotient        2   12[COMRAM] int 
  3124 ;;  sign            1   11[COMRAM] unsigned char 
  3125 ;;  counter         1   10[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  2    6[COMRAM] int 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;Total ram usage:        8 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_fround
  3145 ;;		_scale
  3146 ;;		_printf
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text8
  3151  0025DE                     __ptext8:
  3152                           	opt stack 0
  3153  0025DE                     ___awdiv:
  3154                           	opt stack 28
  3155                           
  3156                           ;incstack = 0
  3157  0025DE  0E00               	movlw	0
  3158  0025E0  6E0C               	movwf	___awdiv@sign,c
  3159  0025E2  AE0A               	btfss	___awdiv@divisor+1,7,c
  3160  0025E4  D007               	goto	l2129
  3161  0025E6  6C09               	negf	___awdiv@divisor,c
  3162  0025E8  1E0A               	comf	___awdiv@divisor+1,f,c
  3163  0025EA  B0D8               	btfsc	status,0,c
  3164  0025EC  2A0A               	incf	___awdiv@divisor+1,f,c
  3165  0025EE  0E01               	movlw	1
  3166  0025F0  6E0C               	movwf	___awdiv@sign,c
  3167  0025F2  D000               	goto	l2129
  3168  0025F4                     l2129:
  3169  0025F4  AE08               	btfss	___awdiv@dividend+1,7,c
  3170  0025F6  D007               	goto	l2135
  3171  0025F8  6C07               	negf	___awdiv@dividend,c
  3172  0025FA  1E08               	comf	___awdiv@dividend+1,f,c
  3173  0025FC  B0D8               	btfsc	status,0,c
  3174  0025FE  2A08               	incf	___awdiv@dividend+1,f,c
  3175  002600  0E01               	movlw	1
  3176  002602  1A0C               	xorwf	___awdiv@sign,f,c
  3177  002604  D000               	goto	l2135
  3178  002606                     l2135:
  3179  002606  0E00               	movlw	0
  3180  002608  6E0E               	movwf	___awdiv@quotient+1,c
  3181  00260A  0E00               	movlw	0
  3182  00260C  6E0D               	movwf	___awdiv@quotient,c
  3183  00260E  5009               	movf	___awdiv@divisor,w,c
  3184  002610  100A               	iorwf	___awdiv@divisor+1,w,c
  3185  002612  B4D8               	btfsc	status,2,c
  3186  002614  D021               	goto	l2157
  3187  002616  0E01               	movlw	1
  3188  002618  6E0B               	movwf	___awdiv@counter,c
  3189  00261A  D005               	goto	l2143
  3190  00261C                     l2141:
  3191  00261C  90D8               	bcf	status,0,c
  3192  00261E  3609               	rlcf	___awdiv@divisor,f,c
  3193  002620  360A               	rlcf	___awdiv@divisor+1,f,c
  3194  002622  2A0B               	incf	___awdiv@counter,f,c
  3195  002624  D000               	goto	l2143
  3196  002626                     l2143:
  3197  002626  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3198  002628  D002               	goto	l2145
  3199  00262A  D7F8               	goto	l2141
  3200  00262C  D000               	goto	l2145
  3201  00262E                     l2145:
  3202  00262E  90D8               	bcf	status,0,c
  3203  002630  360D               	rlcf	___awdiv@quotient,f,c
  3204  002632  360E               	rlcf	___awdiv@quotient+1,f,c
  3205  002634  5009               	movf	___awdiv@divisor,w,c
  3206  002636  5C07               	subwf	___awdiv@dividend,w,c
  3207  002638  500A               	movf	___awdiv@divisor+1,w,c
  3208  00263A  5808               	subwfb	___awdiv@dividend+1,w,c
  3209  00263C  A0D8               	btfss	status,0,c
  3210  00263E  D006               	goto	l2153
  3211  002640  5009               	movf	___awdiv@divisor,w,c
  3212  002642  5E07               	subwf	___awdiv@dividend,f,c
  3213  002644  500A               	movf	___awdiv@divisor+1,w,c
  3214  002646  5A08               	subwfb	___awdiv@dividend+1,f,c
  3215  002648  800D               	bsf	___awdiv@quotient,0,c
  3216  00264A  D000               	goto	l2153
  3217  00264C                     l2153:
  3218  00264C  90D8               	bcf	status,0,c
  3219  00264E  320A               	rrcf	___awdiv@divisor+1,f,c
  3220  002650  3209               	rrcf	___awdiv@divisor,f,c
  3221  002652  2E0B               	decfsz	___awdiv@counter,f,c
  3222  002654  D7EC               	goto	l2145
  3223  002656  D000               	goto	l2157
  3224  002658                     l2157:
  3225  002658  500C               	movf	___awdiv@sign,w,c
  3226  00265A  B4D8               	btfsc	status,2,c
  3227  00265C  D005               	goto	l2161
  3228  00265E  6C0D               	negf	___awdiv@quotient,c
  3229  002660  1E0E               	comf	___awdiv@quotient+1,f,c
  3230  002662  B0D8               	btfsc	status,0,c
  3231  002664  2A0E               	incf	___awdiv@quotient+1,f,c
  3232  002666  D000               	goto	l2161
  3233  002668                     l2161:
  3234  002668  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3235  00266C  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3236  002670  D000               	goto	l507
  3237  002672                     l507:
  3238  002672  0012               	return		;funcret
  3239  002674                     __end_of___awdiv:
  3240                           	opt stack 0
  3241                           tblptru	equ	0xFF8
  3242                           tblptrh	equ	0xFF7
  3243                           tblptrl	equ	0xFF6
  3244                           tablat	equ	0xFF5
  3245                           prodh	equ	0xFF4
  3246                           prodl	equ	0xFF3
  3247                           postinc0	equ	0xFEE
  3248                           wreg	equ	0xFE8
  3249                           postdec1	equ	0xFE5
  3250                           fsr1l	equ	0xFE1
  3251                           postinc2	equ	0xFDE
  3252                           postdec2	equ	0xFDD
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function __tdiv_to_l_ *****************
  3258 ;; Defined at:
  3259 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  f1              3    0[COMRAM] float 
  3262 ;;  f2              3    3[COMRAM] float 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  quot            4    9[COMRAM] unsigned long 
  3265 ;;  exp1            1   14[COMRAM] unsigned char 
  3266 ;;  cntr            1   13[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  4    0[COMRAM] unsigned long 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3276 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;Total ram usage:       15 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_printf
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text9
  3290  001E92                     __ptext9:
  3291                           	opt stack 0
  3292  001E92                     __tdiv_to_l_:
  3293                           	opt stack 29
  3294                           
  3295                           ;incstack = 0
  3296  001E92  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3297  001E96  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3298  001E98  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3299  001E9A  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3300  001E9C  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3301  001E9E  E301               	bnc	u2191
  3302  001EA0  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3303  001EA2                     u2191:
  3304  001EA2  5007               	movf	??__tdiv_to_l_,w,c
  3305  001EA4  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3306  001EA6  500F               	movf	__tdiv_to_l_@exp1,w,c
  3307  001EA8  A4D8               	btfss	status,2,c
  3308  001EAA  D002               	goto	l2359
  3309  001EAC  D05D               	goto	l2401
  3310  001EAE  D078               	goto	l719
  3311  001EB0                     l2359:
  3312  001EB0  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3313  001EB4  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3314  001EB6  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3315  001EB8  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3316  001EBA  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3317  001EBC  E301               	bnc	u2211
  3318  001EBE  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3319  001EC0                     u2211:
  3320  001EC0  5007               	movf	??__tdiv_to_l_,w,c
  3321  001EC2  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3322  001EC4  500E               	movf	__tdiv_to_l_@cntr,w,c
  3323  001EC6  A4D8               	btfss	status,2,c
  3324  001EC8  D002               	goto	l2365
  3325  001ECA  D04E               	goto	l2401
  3326  001ECC  D069               	goto	l719
  3327  001ECE                     l2365:
  3328  001ECE  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3329  001ED0  0EFF               	movlw	255
  3330  001ED2  1601               	andwf	__tdiv_to_l_@f1,f,c
  3331  001ED4  0EFF               	movlw	255
  3332  001ED6  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3333  001ED8  0E00               	movlw	0
  3334  001EDA  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3335  001EDC  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3336  001EDE  0EFF               	movlw	255
  3337  001EE0  1604               	andwf	__tdiv_to_l_@f2,f,c
  3338  001EE2  0EFF               	movlw	255
  3339  001EE4  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3340  001EE6  0E00               	movlw	0
  3341  001EE8  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3342  001EEA  0E00               	movlw	0
  3343  001EEC  6E0A               	movwf	__tdiv_to_l_@quot,c
  3344  001EEE  0E00               	movlw	0
  3345  001EF0  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3346  001EF2  0E00               	movlw	0
  3347  001EF4  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3348  001EF6  0E00               	movlw	0
  3349  001EF8  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3350  001EFA  0E7F               	movlw	127
  3351  001EFC  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3352  001EFE  500E               	movf	__tdiv_to_l_@cntr,w,c
  3353  001F00  0F98               	addlw	152
  3354  001F02  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3355  001F04  0E18               	movlw	24
  3356  001F06  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3357  001F08                     l721:
  3358  001F08  90D8               	bcf	status,0,c
  3359  001F0A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3360  001F0C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3361  001F0E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3362  001F10  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3363  001F12  5004               	movf	__tdiv_to_l_@f2,w,c
  3364  001F14  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3365  001F16  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3366  001F18  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3367  001F1A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3368  001F1C  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3369  001F1E  A0D8               	btfss	status,0,c
  3370  001F20  D007               	goto	l722
  3371  001F22  5004               	movf	__tdiv_to_l_@f2,w,c
  3372  001F24  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3373  001F26  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3374  001F28  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3375  001F2A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3376  001F2C  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3377  001F2E  800A               	bsf	__tdiv_to_l_@quot,0,c
  3378  001F30                     l722:
  3379  001F30  90D8               	bcf	status,0,c
  3380  001F32  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3381  001F34  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3382  001F36  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3383  001F38  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3384  001F3A  D7E6               	goto	l721
  3385  001F3C  D000               	goto	l2387
  3386  001F3E                     l2387:
  3387  001F3E  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3388  001F40  D010               	goto	l2399
  3389  001F42  500F               	movf	__tdiv_to_l_@exp1,w,c
  3390  001F44  0A80               	xorlw	128
  3391  001F46  0F97               	addlw	151
  3392  001F48  B0D8               	btfsc	status,0,c
  3393  001F4A  D003               	goto	l2395
  3394  001F4C  D00D               	goto	l2401
  3395  001F4E  D028               	goto	l719
  3396  001F50  D000               	goto	l2395
  3397  001F52                     l2395:
  3398  001F52  90D8               	bcf	status,0,c
  3399  001F54  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3400  001F56  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3401  001F58  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3402  001F5A  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3403  001F5C  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3404  001F5E  D7F9               	goto	l2395
  3405  001F60  D017               	goto	l728
  3406  001F62                     l2399:
  3407  001F62  0E17               	movlw	23
  3408  001F64  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3409  001F66  D011               	goto	l2407
  3410  001F68                     l2401:
  3411  001F68  0E00               	movlw	0
  3412  001F6A  6E01               	movwf	?__tdiv_to_l_,c
  3413  001F6C  0E00               	movlw	0
  3414  001F6E  6E02               	movwf	?__tdiv_to_l_+1,c
  3415  001F70  0E00               	movlw	0
  3416  001F72  6E03               	movwf	?__tdiv_to_l_+2,c
  3417  001F74  0E00               	movlw	0
  3418  001F76  6E04               	movwf	?__tdiv_to_l_+3,c
  3419  001F78  D013               	goto	l719
  3420  001F7A  D007               	goto	l2407
  3421  001F7C                     l2405:
  3422  001F7C  90D8               	bcf	status,0,c
  3423  001F7E  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3424  001F80  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3425  001F82  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3426  001F84  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3427  001F86  060F               	decf	__tdiv_to_l_@exp1,f,c
  3428  001F88  D000               	goto	l2407
  3429  001F8A                     l2407:
  3430  001F8A  500F               	movf	__tdiv_to_l_@exp1,w,c
  3431  001F8C  A4D8               	btfss	status,2,c
  3432  001F8E  D7F6               	goto	l2405
  3433  001F90                     l728:
  3434  001F90  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3435  001F94  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3436  001F98  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3437  001F9C  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3438  001FA0                     l719:
  3439  001FA0  0012               	return		;funcret
  3440  001FA2                     __end_of__tdiv_to_l_:
  3441                           	opt stack 0
  3442                           tblptru	equ	0xFF8
  3443                           tblptrh	equ	0xFF7
  3444                           tblptrl	equ	0xFF6
  3445                           tablat	equ	0xFF5
  3446                           prodh	equ	0xFF4
  3447                           prodl	equ	0xFF3
  3448                           postinc0	equ	0xFEE
  3449                           wreg	equ	0xFE8
  3450                           postdec1	equ	0xFE5
  3451                           fsr1l	equ	0xFE1
  3452                           postinc2	equ	0xFDE
  3453                           postdec2	equ	0xFDD
  3454                           fsr2h	equ	0xFDA
  3455                           fsr2l	equ	0xFD9
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function __div_to_l_ *****************
  3459 ;; Defined at:
  3460 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  f1              3    0[COMRAM] unsigned long 
  3463 ;;  f2              3    3[COMRAM] unsigned long 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  quot            4    6[COMRAM] unsigned long 
  3466 ;;  exp1            1   11[COMRAM] unsigned char 
  3467 ;;  cntr            1   10[COMRAM] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  4    0[COMRAM] unsigned long 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3477 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;Total ram usage:       12 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_printf
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text10
  3491  001FA2                     __ptext10:
  3492                           	opt stack 0
  3493  001FA2                     __div_to_l_:
  3494                           	opt stack 29
  3495                           
  3496                           ;incstack = 0
  3497  001FA2  3403               	rlcf	__div_to_l_@f1+2,w,c
  3498  001FA4  3404               	rlcf	__div_to_l_@f1+3,w,c
  3499  001FA6  6E0C               	movwf	__div_to_l_@exp1,c
  3500  001FA8  500C               	movf	__div_to_l_@exp1,w,c
  3501  001FAA  A4D8               	btfss	status,2,c
  3502  001FAC  D002               	goto	l2415
  3503  001FAE  D061               	goto	l2461
  3504  001FB0  D07C               	goto	l598
  3505  001FB2                     l2415:
  3506  001FB2  3406               	rlcf	__div_to_l_@f2+2,w,c
  3507  001FB4  3407               	rlcf	__div_to_l_@f2+3,w,c
  3508  001FB6  6E0B               	movwf	__div_to_l_@cntr,c
  3509  001FB8  500B               	movf	__div_to_l_@cntr,w,c
  3510  001FBA  A4D8               	btfss	status,2,c
  3511  001FBC  D002               	goto	l2421
  3512  001FBE  D059               	goto	l2461
  3513  001FC0  D074               	goto	l598
  3514  001FC2                     l2421:
  3515  001FC2  8E03               	bsf	__div_to_l_@f1+2,7,c
  3516  001FC4  0EFF               	movlw	255
  3517  001FC6  1601               	andwf	__div_to_l_@f1,f,c
  3518  001FC8  0EFF               	movlw	255
  3519  001FCA  1602               	andwf	__div_to_l_@f1+1,f,c
  3520  001FCC  0EFF               	movlw	255
  3521  001FCE  1603               	andwf	__div_to_l_@f1+2,f,c
  3522  001FD0  0E00               	movlw	0
  3523  001FD2  1604               	andwf	__div_to_l_@f1+3,f,c
  3524  001FD4  8E06               	bsf	__div_to_l_@f2+2,7,c
  3525  001FD6  0EFF               	movlw	255
  3526  001FD8  1604               	andwf	__div_to_l_@f2,f,c
  3527  001FDA  0EFF               	movlw	255
  3528  001FDC  1605               	andwf	__div_to_l_@f2+1,f,c
  3529  001FDE  0EFF               	movlw	255
  3530  001FE0  1606               	andwf	__div_to_l_@f2+2,f,c
  3531  001FE2  0E00               	movlw	0
  3532  001FE4  1607               	andwf	__div_to_l_@f2+3,f,c
  3533  001FE6  0E00               	movlw	0
  3534  001FE8  6E07               	movwf	__div_to_l_@quot,c
  3535  001FEA  0E00               	movlw	0
  3536  001FEC  6E08               	movwf	__div_to_l_@quot+1,c
  3537  001FEE  0E00               	movlw	0
  3538  001FF0  6E09               	movwf	__div_to_l_@quot+2,c
  3539  001FF2  0E00               	movlw	0
  3540  001FF4  6E0A               	movwf	__div_to_l_@quot+3,c
  3541  001FF6  0E7F               	movlw	127
  3542  001FF8  5E0C               	subwf	__div_to_l_@exp1,f,c
  3543  001FFA  500B               	movf	__div_to_l_@cntr,w,c
  3544  001FFC  0FA0               	addlw	160
  3545  001FFE  5E0C               	subwf	__div_to_l_@exp1,f,c
  3546  002000  0E20               	movlw	32
  3547  002002  6E0B               	movwf	__div_to_l_@cntr,c
  3548  002004  D000               	goto	l2435
  3549  002006                     l2435:
  3550  002006  90D8               	bcf	status,0,c
  3551  002008  3607               	rlcf	__div_to_l_@quot,f,c
  3552  00200A  3608               	rlcf	__div_to_l_@quot+1,f,c
  3553  00200C  3609               	rlcf	__div_to_l_@quot+2,f,c
  3554  00200E  360A               	rlcf	__div_to_l_@quot+3,f,c
  3555  002010  5004               	movf	__div_to_l_@f2,w,c
  3556  002012  5C01               	subwf	__div_to_l_@f1,w,c
  3557  002014  5005               	movf	__div_to_l_@f2+1,w,c
  3558  002016  5802               	subwfb	__div_to_l_@f1+1,w,c
  3559  002018  5006               	movf	__div_to_l_@f2+2,w,c
  3560  00201A  5803               	subwfb	__div_to_l_@f1+2,w,c
  3561  00201C  5007               	movf	__div_to_l_@f2+3,w,c
  3562  00201E  5804               	subwfb	__div_to_l_@f1+3,w,c
  3563  002020  A0D8               	btfss	status,0,c
  3564  002022  D00A               	goto	l2443
  3565  002024  5004               	movf	__div_to_l_@f2,w,c
  3566  002026  5E01               	subwf	__div_to_l_@f1,f,c
  3567  002028  5005               	movf	__div_to_l_@f2+1,w,c
  3568  00202A  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3569  00202C  5006               	movf	__div_to_l_@f2+2,w,c
  3570  00202E  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3571  002030  5007               	movf	__div_to_l_@f2+3,w,c
  3572  002032  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3573  002034  8007               	bsf	__div_to_l_@quot,0,c
  3574  002036  D000               	goto	l2443
  3575  002038                     l2443:
  3576  002038  90D8               	bcf	status,0,c
  3577  00203A  3601               	rlcf	__div_to_l_@f1,f,c
  3578  00203C  3602               	rlcf	__div_to_l_@f1+1,f,c
  3579  00203E  3603               	rlcf	__div_to_l_@f1+2,f,c
  3580  002040  3604               	rlcf	__div_to_l_@f1+3,f,c
  3581  002042  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3582  002044  D7E0               	goto	l2435
  3583  002046  D000               	goto	l2447
  3584  002048                     l2447:
  3585  002048  AE0C               	btfss	__div_to_l_@exp1,7,c
  3586  00204A  D010               	goto	l2459
  3587  00204C  500C               	movf	__div_to_l_@exp1,w,c
  3588  00204E  0A80               	xorlw	128
  3589  002050  0F9F               	addlw	159
  3590  002052  B0D8               	btfsc	status,0,c
  3591  002054  D003               	goto	l2455
  3592  002056  D00D               	goto	l2461
  3593  002058  D028               	goto	l598
  3594  00205A  D000               	goto	l2455
  3595  00205C                     l2455:
  3596  00205C  90D8               	bcf	status,0,c
  3597  00205E  320A               	rrcf	__div_to_l_@quot+3,f,c
  3598  002060  3209               	rrcf	__div_to_l_@quot+2,f,c
  3599  002062  3208               	rrcf	__div_to_l_@quot+1,f,c
  3600  002064  3207               	rrcf	__div_to_l_@quot,f,c
  3601  002066  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3602  002068  D7F9               	goto	l2455
  3603  00206A  D017               	goto	l607
  3604  00206C                     l2459:
  3605  00206C  0E1F               	movlw	31
  3606  00206E  640C               	cpfsgt	__div_to_l_@exp1,c
  3607  002070  D011               	goto	l2467
  3608  002072                     l2461:
  3609  002072  0E00               	movlw	0
  3610  002074  6E01               	movwf	?__div_to_l_,c
  3611  002076  0E00               	movlw	0
  3612  002078  6E02               	movwf	?__div_to_l_+1,c
  3613  00207A  0E00               	movlw	0
  3614  00207C  6E03               	movwf	?__div_to_l_+2,c
  3615  00207E  0E00               	movlw	0
  3616  002080  6E04               	movwf	?__div_to_l_+3,c
  3617  002082  D013               	goto	l598
  3618  002084  D007               	goto	l2467
  3619  002086                     l2465:
  3620  002086  90D8               	bcf	status,0,c
  3621  002088  3607               	rlcf	__div_to_l_@quot,f,c
  3622  00208A  3608               	rlcf	__div_to_l_@quot+1,f,c
  3623  00208C  3609               	rlcf	__div_to_l_@quot+2,f,c
  3624  00208E  360A               	rlcf	__div_to_l_@quot+3,f,c
  3625  002090  060C               	decf	__div_to_l_@exp1,f,c
  3626  002092  D000               	goto	l2467
  3627  002094                     l2467:
  3628  002094  500C               	movf	__div_to_l_@exp1,w,c
  3629  002096  A4D8               	btfss	status,2,c
  3630  002098  D7F6               	goto	l2465
  3631  00209A                     l607:
  3632  00209A  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3633  00209E  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3634  0020A2  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3635  0020A6  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3636  0020AA                     l598:
  3637  0020AA  0012               	return		;funcret
  3638  0020AC                     __end_of__div_to_l_:
  3639                           	opt stack 0
  3640                           tblptru	equ	0xFF8
  3641                           tblptrh	equ	0xFF7
  3642                           tblptrl	equ	0xFF6
  3643                           tablat	equ	0xFF5
  3644                           prodh	equ	0xFF4
  3645                           prodl	equ	0xFF3
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           postdec1	equ	0xFE5
  3649                           fsr1l	equ	0xFE1
  3650                           postinc2	equ	0xFDE
  3651                           postdec2	equ	0xFDD
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function ___lltoft *****************
  3657 ;; Defined at:
  3658 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  c               4    8[COMRAM] unsigned long 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  exp             1   16[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  3    8[COMRAM] float 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        9 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    1
  3679 ;; This function calls:
  3680 ;;		___ftpack
  3681 ;; This function is called by:
  3682 ;;		_printf
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text11
  3687  0029FC                     __ptext11:
  3688                           	opt stack 0
  3689  0029FC                     ___lltoft:
  3690                           	opt stack 28
  3691                           
  3692                           ;incstack = 0
  3693  0029FC  0E8E               	movlw	142
  3694  0029FE  6E11               	movwf	___lltoft@exp,c
  3695  002A00  D007               	goto	l2587
  3696  002A02                     l2585:
  3697  002A02  90D8               	bcf	status,0,c
  3698  002A04  320C               	rrcf	___lltoft@c+3,f,c
  3699  002A06  320B               	rrcf	___lltoft@c+2,f,c
  3700  002A08  320A               	rrcf	___lltoft@c+1,f,c
  3701  002A0A  3209               	rrcf	___lltoft@c,f,c
  3702  002A0C  2A11               	incf	___lltoft@exp,f,c
  3703  002A0E  D000               	goto	l2587
  3704  002A10                     l2587:
  3705  002A10  0E00               	movlw	0
  3706  002A12  1409               	andwf	___lltoft@c,w,c
  3707  002A14  6E0D               	movwf	??___lltoft& (0+255),c
  3708  002A16  0E00               	movlw	0
  3709  002A18  140A               	andwf	___lltoft@c+1,w,c
  3710  002A1A  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3711  002A1C  0E00               	movlw	0
  3712  002A1E  140B               	andwf	___lltoft@c+2,w,c
  3713  002A20  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3714  002A22  0EFF               	movlw	255
  3715  002A24  140C               	andwf	___lltoft@c+3,w,c
  3716  002A26  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3717  002A28  500D               	movf	??___lltoft,w,c
  3718  002A2A  100E               	iorwf	??___lltoft+1,w,c
  3719  002A2C  100F               	iorwf	??___lltoft+2,w,c
  3720  002A2E  1010               	iorwf	??___lltoft+3,w,c
  3721  002A30  A4D8               	btfss	status,2,c
  3722  002A32  D7E7               	goto	l2585
  3723  002A34  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3724  002A38  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3725  002A3C  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3726  002A40  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3727  002A44  0E00               	movlw	0
  3728  002A46  6E05               	movwf	___ftpack@sign,c
  3729  002A48  EC31  F012         	call	___ftpack	;wreg free
  3730  002A4C  C001  F009         	movff	?___ftpack,?___lltoft
  3731  002A50  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3732  002A54  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3733  002A58  D000               	goto	l833
  3734  002A5A                     l833:
  3735  002A5A  0012               	return		;funcret
  3736  002A5C                     __end_of___lltoft:
  3737                           	opt stack 0
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postdec1	equ	0xFE5
  3747                           fsr1l	equ	0xFE1
  3748                           postinc2	equ	0xFDE
  3749                           postdec2	equ	0xFDD
  3750                           fsr2h	equ	0xFDA
  3751                           fsr2l	equ	0xFD9
  3752                           status	equ	0xFD8
  3753                           
  3754 ;; *************** function ___llmod *****************
  3755 ;; Defined at:
  3756 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  dividend        4    0[COMRAM] unsigned long 
  3759 ;;  divisor         4    4[COMRAM] unsigned long 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  counter         1    8[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  4    0[COMRAM] unsigned long 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3771 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;Total ram usage:        9 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_printf
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text12
  3785  0028AE                     __ptext12:
  3786                           	opt stack 0
  3787  0028AE                     ___llmod:
  3788                           	opt stack 29
  3789                           
  3790                           ;incstack = 0
  3791  0028AE  5005               	movf	___llmod@divisor,w,c
  3792  0028B0  1006               	iorwf	___llmod@divisor+1,w,c
  3793  0028B2  1007               	iorwf	___llmod@divisor+2,w,c
  3794  0028B4  1008               	iorwf	___llmod@divisor+3,w,c
  3795  0028B6  B4D8               	btfsc	status,2,c
  3796  0028B8  D029               	goto	l813
  3797  0028BA  0E01               	movlw	1
  3798  0028BC  6E09               	movwf	___llmod@counter,c
  3799  0028BE  D007               	goto	l2573
  3800  0028C0                     l2571:
  3801  0028C0  90D8               	bcf	status,0,c
  3802  0028C2  3605               	rlcf	___llmod@divisor,f,c
  3803  0028C4  3606               	rlcf	___llmod@divisor+1,f,c
  3804  0028C6  3607               	rlcf	___llmod@divisor+2,f,c
  3805  0028C8  3608               	rlcf	___llmod@divisor+3,f,c
  3806  0028CA  2A09               	incf	___llmod@counter,f,c
  3807  0028CC  D000               	goto	l2573
  3808  0028CE                     l2573:
  3809  0028CE  BE08               	btfsc	___llmod@divisor+3,7,c
  3810  0028D0  D002               	goto	l2575
  3811  0028D2  D7F6               	goto	l2571
  3812  0028D4  D000               	goto	l2575
  3813  0028D6                     l2575:
  3814  0028D6  5005               	movf	___llmod@divisor,w,c
  3815  0028D8  5C01               	subwf	___llmod@dividend,w,c
  3816  0028DA  5006               	movf	___llmod@divisor+1,w,c
  3817  0028DC  5802               	subwfb	___llmod@dividend+1,w,c
  3818  0028DE  5007               	movf	___llmod@divisor+2,w,c
  3819  0028E0  5803               	subwfb	___llmod@dividend+2,w,c
  3820  0028E2  5008               	movf	___llmod@divisor+3,w,c
  3821  0028E4  5804               	subwfb	___llmod@dividend+3,w,c
  3822  0028E6  A0D8               	btfss	status,0,c
  3823  0028E8  D009               	goto	l2579
  3824  0028EA  5005               	movf	___llmod@divisor,w,c
  3825  0028EC  5E01               	subwf	___llmod@dividend,f,c
  3826  0028EE  5006               	movf	___llmod@divisor+1,w,c
  3827  0028F0  5A02               	subwfb	___llmod@dividend+1,f,c
  3828  0028F2  5007               	movf	___llmod@divisor+2,w,c
  3829  0028F4  5A03               	subwfb	___llmod@dividend+2,f,c
  3830  0028F6  5008               	movf	___llmod@divisor+3,w,c
  3831  0028F8  5A04               	subwfb	___llmod@dividend+3,f,c
  3832  0028FA  D000               	goto	l2579
  3833  0028FC                     l2579:
  3834  0028FC  90D8               	bcf	status,0,c
  3835  0028FE  3208               	rrcf	___llmod@divisor+3,f,c
  3836  002900  3207               	rrcf	___llmod@divisor+2,f,c
  3837  002902  3206               	rrcf	___llmod@divisor+1,f,c
  3838  002904  3205               	rrcf	___llmod@divisor,f,c
  3839  002906  2E09               	decfsz	___llmod@counter,f,c
  3840  002908  D7E6               	goto	l2575
  3841  00290A  D000               	goto	l813
  3842  00290C                     l813:
  3843  00290C  C001  F001         	movff	___llmod@dividend,?___llmod
  3844  002910  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3845  002914  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3846  002918  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3847  00291C  0012               	return		;funcret
  3848  00291E                     __end_of___llmod:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           postinc0	equ	0xFEE
  3857                           wreg	equ	0xFE8
  3858                           postdec1	equ	0xFE5
  3859                           fsr1l	equ	0xFE1
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           fsr2h	equ	0xFDA
  3863                           fsr2l	equ	0xFD9
  3864                           status	equ	0xFD8
  3865                           
  3866 ;; *************** function ___lldiv *****************
  3867 ;; Defined at:
  3868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  dividend        4    0[COMRAM] unsigned long 
  3871 ;;  divisor         4    4[COMRAM] unsigned long 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  quotient        4    8[COMRAM] unsigned long 
  3874 ;;  counter         1   12[COMRAM] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  4    0[COMRAM] unsigned long 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3884 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;Total ram usage:       13 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_printf
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text13
  3898  0027A0                     __ptext13:
  3899                           	opt stack 0
  3900  0027A0                     ___lldiv:
  3901                           	opt stack 29
  3902                           
  3903                           ;incstack = 0
  3904  0027A0  0E00               	movlw	0
  3905  0027A2  6E09               	movwf	___lldiv@quotient,c
  3906  0027A4  0E00               	movlw	0
  3907  0027A6  6E0A               	movwf	___lldiv@quotient+1,c
  3908  0027A8  0E00               	movlw	0
  3909  0027AA  6E0B               	movwf	___lldiv@quotient+2,c
  3910  0027AC  0E00               	movlw	0
  3911  0027AE  6E0C               	movwf	___lldiv@quotient+3,c
  3912  0027B0  5005               	movf	___lldiv@divisor,w,c
  3913  0027B2  1006               	iorwf	___lldiv@divisor+1,w,c
  3914  0027B4  1007               	iorwf	___lldiv@divisor+2,w,c
  3915  0027B6  1008               	iorwf	___lldiv@divisor+3,w,c
  3916  0027B8  B4D8               	btfsc	status,2,c
  3917  0027BA  D02F               	goto	l803
  3918  0027BC  0E01               	movlw	1
  3919  0027BE  6E0D               	movwf	___lldiv@counter,c
  3920  0027C0  D007               	goto	l2553
  3921  0027C2                     l2551:
  3922  0027C2  90D8               	bcf	status,0,c
  3923  0027C4  3605               	rlcf	___lldiv@divisor,f,c
  3924  0027C6  3606               	rlcf	___lldiv@divisor+1,f,c
  3925  0027C8  3607               	rlcf	___lldiv@divisor+2,f,c
  3926  0027CA  3608               	rlcf	___lldiv@divisor+3,f,c
  3927  0027CC  2A0D               	incf	___lldiv@counter,f,c
  3928  0027CE  D000               	goto	l2553
  3929  0027D0                     l2553:
  3930  0027D0  BE08               	btfsc	___lldiv@divisor+3,7,c
  3931  0027D2  D002               	goto	l2555
  3932  0027D4  D7F6               	goto	l2551
  3933  0027D6  D000               	goto	l2555
  3934  0027D8                     l2555:
  3935  0027D8  90D8               	bcf	status,0,c
  3936  0027DA  3609               	rlcf	___lldiv@quotient,f,c
  3937  0027DC  360A               	rlcf	___lldiv@quotient+1,f,c
  3938  0027DE  360B               	rlcf	___lldiv@quotient+2,f,c
  3939  0027E0  360C               	rlcf	___lldiv@quotient+3,f,c
  3940  0027E2  5005               	movf	___lldiv@divisor,w,c
  3941  0027E4  5C01               	subwf	___lldiv@dividend,w,c
  3942  0027E6  5006               	movf	___lldiv@divisor+1,w,c
  3943  0027E8  5802               	subwfb	___lldiv@dividend+1,w,c
  3944  0027EA  5007               	movf	___lldiv@divisor+2,w,c
  3945  0027EC  5803               	subwfb	___lldiv@dividend+2,w,c
  3946  0027EE  5008               	movf	___lldiv@divisor+3,w,c
  3947  0027F0  5804               	subwfb	___lldiv@dividend+3,w,c
  3948  0027F2  A0D8               	btfss	status,0,c
  3949  0027F4  D00A               	goto	l2563
  3950  0027F6  5005               	movf	___lldiv@divisor,w,c
  3951  0027F8  5E01               	subwf	___lldiv@dividend,f,c
  3952  0027FA  5006               	movf	___lldiv@divisor+1,w,c
  3953  0027FC  5A02               	subwfb	___lldiv@dividend+1,f,c
  3954  0027FE  5007               	movf	___lldiv@divisor+2,w,c
  3955  002800  5A03               	subwfb	___lldiv@dividend+2,f,c
  3956  002802  5008               	movf	___lldiv@divisor+3,w,c
  3957  002804  5A04               	subwfb	___lldiv@dividend+3,f,c
  3958  002806  8009               	bsf	___lldiv@quotient,0,c
  3959  002808  D000               	goto	l2563
  3960  00280A                     l2563:
  3961  00280A  90D8               	bcf	status,0,c
  3962  00280C  3208               	rrcf	___lldiv@divisor+3,f,c
  3963  00280E  3207               	rrcf	___lldiv@divisor+2,f,c
  3964  002810  3206               	rrcf	___lldiv@divisor+1,f,c
  3965  002812  3205               	rrcf	___lldiv@divisor,f,c
  3966  002814  2E0D               	decfsz	___lldiv@counter,f,c
  3967  002816  D7E0               	goto	l2555
  3968  002818  D000               	goto	l803
  3969  00281A                     l803:
  3970  00281A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3971  00281E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3972  002822  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3973  002826  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3974  00282A  0012               	return		;funcret
  3975  00282C                     __end_of___lldiv:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           prodh	equ	0xFF4
  3982                           prodl	equ	0xFF3
  3983                           postinc0	equ	0xFEE
  3984                           wreg	equ	0xFE8
  3985                           postdec1	equ	0xFE5
  3986                           fsr1l	equ	0xFE1
  3987                           postinc2	equ	0xFDE
  3988                           postdec2	equ	0xFDD
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function ___fttol *****************
  3994 ;; Defined at:
  3995 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  f1              3   42[COMRAM] float 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  lval            4   52[COMRAM] unsigned long 
  4000 ;;  exp1            1   56[COMRAM] unsigned char 
  4001 ;;  sign1           1   51[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  4   42[COMRAM] long 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;Total ram usage:       15 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_printf
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text14
  4025  00229A                     __ptext14:
  4026                           	opt stack 0
  4027  00229A                     ___fttol:
  4028                           	opt stack 29
  4029                           
  4030                           ;incstack = 0
  4031  00229A  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4032  00229E  6A30               	clrf	(??___fttol+1)& (0+255),c
  4033  0022A0  6A31               	clrf	(??___fttol+2)& (0+255),c
  4034  0022A2  342C               	rlcf	___fttol@f1+1,w,c
  4035  0022A4  362F               	rlcf	??___fttol& (0+255),f,c
  4036  0022A6  E301               	bnc	u2401
  4037  0022A8  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4038  0022AA                     u2401:
  4039  0022AA  502F               	movf	??___fttol,w,c
  4040  0022AC  6E39               	movwf	___fttol@exp1,c
  4041  0022AE  5039               	movf	___fttol@exp1,w,c
  4042  0022B0  A4D8               	btfss	status,2,c
  4043  0022B2  D002               	goto	l2505
  4044  0022B4  D039               	goto	l2529
  4045  0022B6  D063               	goto	l764
  4046  0022B8                     l2505:
  4047  0022B8  0E17               	movlw	23
  4048  0022BA  6E2F               	movwf	??___fttol& (0+255),c
  4049  0022BC  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4050  0022C0  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4051  0022C4  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4052  0022C8  282F               	incf	??___fttol,w,c
  4053  0022CA  6E33               	movwf	(??___fttol+4)& (0+255),c
  4054  0022CC  D004               	goto	u2420
  4055  0022CE                     u2425:
  4056  0022CE  90D8               	bcf	status,0,c
  4057  0022D0  3232               	rrcf	??___fttol+3,f,c
  4058  0022D2  3231               	rrcf	??___fttol+2,f,c
  4059  0022D4  3230               	rrcf	??___fttol+1,f,c
  4060  0022D6                     u2420:
  4061  0022D6  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4062  0022D8  D7FA               	goto	u2425
  4063  0022DA  5030               	movf	??___fttol+1,w,c
  4064  0022DC  6E34               	movwf	___fttol@sign1,c
  4065  0022DE  8E2C               	bsf	___fttol@f1+1,7,c
  4066  0022E0  0EFF               	movlw	255
  4067  0022E2  162B               	andwf	___fttol@f1,f,c
  4068  0022E4  0EFF               	movlw	255
  4069  0022E6  162C               	andwf	___fttol@f1+1,f,c
  4070  0022E8  0E00               	movlw	0
  4071  0022EA  162D               	andwf	___fttol@f1+2,f,c
  4072  0022EC  502B               	movf	___fttol@f1,w,c
  4073  0022EE  6E35               	movwf	___fttol@lval,c
  4074  0022F0  502C               	movf	___fttol@f1+1,w,c
  4075  0022F2  6E36               	movwf	___fttol@lval+1,c
  4076  0022F4  502D               	movf	___fttol@f1+2,w,c
  4077  0022F6  6E37               	movwf	___fttol@lval+2,c
  4078  0022F8  6A38               	clrf	___fttol@lval+3,c
  4079  0022FA  0E8E               	movlw	142
  4080  0022FC  5E39               	subwf	___fttol@exp1,f,c
  4081  0022FE  AE39               	btfss	___fttol@exp1,7,c
  4082  002300  D010               	goto	l2527
  4083  002302  5039               	movf	___fttol@exp1,w,c
  4084  002304  0A80               	xorlw	128
  4085  002306  0F8F               	addlw	143
  4086  002308  B0D8               	btfsc	status,0,c
  4087  00230A  D003               	goto	l2523
  4088  00230C  D00D               	goto	l2529
  4089  00230E  D037               	goto	l764
  4090  002310  D000               	goto	l2523
  4091  002312                     l2523:
  4092  002312  90D8               	bcf	status,0,c
  4093  002314  3238               	rrcf	___fttol@lval+3,f,c
  4094  002316  3237               	rrcf	___fttol@lval+2,f,c
  4095  002318  3236               	rrcf	___fttol@lval+1,f,c
  4096  00231A  3235               	rrcf	___fttol@lval,f,c
  4097  00231C  3E39               	incfsz	___fttol@exp1,f,c
  4098  00231E  D7F9               	goto	l2523
  4099  002320  D019               	goto	l2537
  4100  002322                     l2527:
  4101  002322  0E17               	movlw	23
  4102  002324  6439               	cpfsgt	___fttol@exp1,c
  4103  002326  D011               	goto	l2535
  4104  002328                     l2529:
  4105  002328  0E00               	movlw	0
  4106  00232A  6E2B               	movwf	?___fttol,c
  4107  00232C  0E00               	movlw	0
  4108  00232E  6E2C               	movwf	?___fttol+1,c
  4109  002330  0E00               	movlw	0
  4110  002332  6E2D               	movwf	?___fttol+2,c
  4111  002334  0E00               	movlw	0
  4112  002336  6E2E               	movwf	?___fttol+3,c
  4113  002338  D022               	goto	l764
  4114  00233A  D007               	goto	l2535
  4115  00233C                     l2533:
  4116  00233C  90D8               	bcf	status,0,c
  4117  00233E  3635               	rlcf	___fttol@lval,f,c
  4118  002340  3636               	rlcf	___fttol@lval+1,f,c
  4119  002342  3637               	rlcf	___fttol@lval+2,f,c
  4120  002344  3638               	rlcf	___fttol@lval+3,f,c
  4121  002346  0639               	decf	___fttol@exp1,f,c
  4122  002348  D000               	goto	l2535
  4123  00234A                     l2535:
  4124  00234A  5039               	movf	___fttol@exp1,w,c
  4125  00234C  B4D8               	btfsc	status,2,c
  4126  00234E  D002               	goto	l2537
  4127  002350  D7F5               	goto	l2533
  4128  002352  D000               	goto	l2537
  4129  002354                     l2537:
  4130  002354  5034               	movf	___fttol@sign1,w,c
  4131  002356  B4D8               	btfsc	status,2,c
  4132  002358  D009               	goto	l2541
  4133  00235A  1E38               	comf	___fttol@lval+3,f,c
  4134  00235C  1E37               	comf	___fttol@lval+2,f,c
  4135  00235E  1E36               	comf	___fttol@lval+1,f,c
  4136  002360  6C35               	negf	___fttol@lval,c
  4137  002362  0E00               	movlw	0
  4138  002364  2236               	addwfc	___fttol@lval+1,f,c
  4139  002366  2237               	addwfc	___fttol@lval+2,f,c
  4140  002368  2238               	addwfc	___fttol@lval+3,f,c
  4141  00236A  D000               	goto	l2541
  4142  00236C                     l2541:
  4143  00236C  C035  F02B         	movff	___fttol@lval,?___fttol
  4144  002370  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4145  002374  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4146  002378  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4147  00237C  D000               	goto	l764
  4148  00237E                     l764:
  4149  00237E  0012               	return		;funcret
  4150  002380                     __end_of___fttol:
  4151                           	opt stack 0
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           postinc0	equ	0xFEE
  4159                           wreg	equ	0xFE8
  4160                           postdec1	equ	0xFE5
  4161                           fsr1l	equ	0xFE1
  4162                           postinc2	equ	0xFDE
  4163                           postdec2	equ	0xFDD
  4164                           fsr2h	equ	0xFDA
  4165                           fsr2l	equ	0xFD9
  4166                           status	equ	0xFD8
  4167                           
  4168 ;; *************** function ___ftsub *****************
  4169 ;; Defined at:
  4170 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  f1              3   57[COMRAM] float 
  4173 ;;  f2              3   60[COMRAM] float 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  3   57[COMRAM] float 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4185 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;Total ram usage:        6 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    2
  4192 ;; This function calls:
  4193 ;;		___ftadd
  4194 ;; This function is called by:
  4195 ;;		_printf
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text15
  4200  002A5C                     __ptext15:
  4201                           	opt stack 0
  4202  002A5C                     ___ftsub:
  4203                           	opt stack 27
  4204                           
  4205                           ;incstack = 0
  4206  002A5C  503D               	movf	___ftsub@f2,w,c
  4207  002A5E  103E               	iorwf	___ftsub@f2+1,w,c
  4208  002A60  103F               	iorwf	___ftsub@f2+2,w,c
  4209  002A62  B4D8               	btfsc	status,2,c
  4210  002A64  D007               	goto	l2473
  4211  002A66  0E00               	movlw	0
  4212  002A68  1A3D               	xorwf	___ftsub@f2,f,c
  4213  002A6A  0E00               	movlw	0
  4214  002A6C  1A3E               	xorwf	___ftsub@f2+1,f,c
  4215  002A6E  0E80               	movlw	128
  4216  002A70  1A3F               	xorwf	___ftsub@f2+2,f,c
  4217  002A72  D000               	goto	l2473
  4218  002A74                     l2473:
  4219  002A74  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4220  002A78  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4221  002A7C  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4222  002A80  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4223  002A84  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4224  002A88  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4225  002A8C  EC67  F00E         	call	___ftadd	;wreg free
  4226  002A90  C02E  F03A         	movff	?___ftadd,?___ftsub
  4227  002A94  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4228  002A98  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4229  002A9C  D000               	goto	l760
  4230  002A9E                     l760:
  4231  002A9E  0012               	return		;funcret
  4232  002AA0                     __end_of___ftsub:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           postdec1	equ	0xFE5
  4243                           fsr1l	equ	0xFE1
  4244                           postinc2	equ	0xFDE
  4245                           postdec2	equ	0xFDD
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function ___ftadd *****************
  4251 ;; Defined at:
  4252 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  f1              3   45[COMRAM] float 
  4255 ;;  f2              3   48[COMRAM] float 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  exp1            1   56[COMRAM] unsigned char 
  4258 ;;  exp2            1   55[COMRAM] unsigned char 
  4259 ;;  sign            1   54[COMRAM] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  3   45[COMRAM] float 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:       12 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    1
  4276 ;; This function calls:
  4277 ;;		___ftpack
  4278 ;; This function is called by:
  4279 ;;		_printf
  4280 ;;		___ftsub
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text16
  4285  001CCE                     __ptext16:
  4286                           	opt stack 0
  4287  001CCE                     ___ftadd:
  4288                           	opt stack 27
  4289                           
  4290                           ;incstack = 0
  4291  001CCE  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4292  001CD2  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4293  001CD4  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4294  001CD6  342F               	rlcf	___ftadd@f1+1,w,c
  4295  001CD8  3634               	rlcf	??___ftadd& (0+255),f,c
  4296  001CDA  E301               	bnc	u1581
  4297  001CDC  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4298  001CDE                     u1581:
  4299  001CDE  5034               	movf	??___ftadd,w,c
  4300  001CE0  6E39               	movwf	___ftadd@exp1,c
  4301  001CE2  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4302  001CE6  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4303  001CE8  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4304  001CEA  3432               	rlcf	___ftadd@f2+1,w,c
  4305  001CEC  3634               	rlcf	??___ftadd& (0+255),f,c
  4306  001CEE  E301               	bnc	u1591
  4307  001CF0  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4308  001CF2                     u1591:
  4309  001CF2  5034               	movf	??___ftadd,w,c
  4310  001CF4  6E38               	movwf	___ftadd@exp2,c
  4311  001CF6  5039               	movf	___ftadd@exp1,w,c
  4312  001CF8  B4D8               	btfsc	status,2,c
  4313  001CFA  D00B               	goto	l679
  4314  001CFC  5038               	movf	___ftadd@exp2,w,c
  4315  001CFE  5C39               	subwf	___ftadd@exp1,w,c
  4316  001D00  B0D8               	btfsc	status,0,c
  4317  001D02  D00E               	goto	l2011
  4318  001D04  5039               	movf	___ftadd@exp1,w,c
  4319  001D06  0800               	sublw	0
  4320  001D08  2438               	addwf	___ftadd@exp2,w,c
  4321  001D0A  6E34               	movwf	??___ftadd& (0+255),c
  4322  001D0C  0E18               	movlw	24
  4323  001D0E  6434               	cpfsgt	??___ftadd,c
  4324  001D10  D007               	goto	l2011
  4325  001D12                     l679:
  4326  001D12  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4327  001D16  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4328  001D1A  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4329  001D1E  D0B8               	goto	l680
  4330  001D20                     l2011:
  4331  001D20  5038               	movf	___ftadd@exp2,w,c
  4332  001D22  B4D8               	btfsc	status,2,c
  4333  001D24  D00B               	goto	l683
  4334  001D26  5039               	movf	___ftadd@exp1,w,c
  4335  001D28  5C38               	subwf	___ftadd@exp2,w,c
  4336  001D2A  B0D8               	btfsc	status,0,c
  4337  001D2C  D00E               	goto	l2017
  4338  001D2E  5038               	movf	___ftadd@exp2,w,c
  4339  001D30  0800               	sublw	0
  4340  001D32  2439               	addwf	___ftadd@exp1,w,c
  4341  001D34  6E34               	movwf	??___ftadd& (0+255),c
  4342  001D36  0E18               	movlw	24
  4343  001D38  6434               	cpfsgt	??___ftadd,c
  4344  001D3A  D007               	goto	l2017
  4345  001D3C                     l683:
  4346  001D3C  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4347  001D40  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4348  001D44  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4349  001D48  D0A3               	goto	l680
  4350  001D4A                     l2017:
  4351  001D4A  0E06               	movlw	6
  4352  001D4C  6E37               	movwf	___ftadd@sign,c
  4353  001D4E  AE30               	btfss	___ftadd@f1+2,7,c
  4354  001D50  D002               	goto	l2023
  4355  001D52  8E37               	bsf	___ftadd@sign,7,c
  4356  001D54  D000               	goto	l2023
  4357  001D56                     l2023:
  4358  001D56  BE33               	btfsc	___ftadd@f2+2,7,c
  4359  001D58  8C37               	bsf	___ftadd@sign,6,c
  4360  001D5A  8E2F               	bsf	___ftadd@f1+1,7,c
  4361  001D5C  0EFF               	movlw	255
  4362  001D5E  162E               	andwf	___ftadd@f1,f,c
  4363  001D60  0EFF               	movlw	255
  4364  001D62  162F               	andwf	___ftadd@f1+1,f,c
  4365  001D64  0E00               	movlw	0
  4366  001D66  1630               	andwf	___ftadd@f1+2,f,c
  4367  001D68  8E32               	bsf	___ftadd@f2+1,7,c
  4368  001D6A  0EFF               	movlw	255
  4369  001D6C  1631               	andwf	___ftadd@f2,f,c
  4370  001D6E  0EFF               	movlw	255
  4371  001D70  1632               	andwf	___ftadd@f2+1,f,c
  4372  001D72  0E00               	movlw	0
  4373  001D74  1633               	andwf	___ftadd@f2+2,f,c
  4374  001D76  5038               	movf	___ftadd@exp2,w,c
  4375  001D78  5C39               	subwf	___ftadd@exp1,w,c
  4376  001D7A  B0D8               	btfsc	status,0,c
  4377  001D7C  D01E               	goto	l2043
  4378  001D7E                     l2033:
  4379  001D7E  90D8               	bcf	status,0,c
  4380  001D80  3631               	rlcf	___ftadd@f2,f,c
  4381  001D82  3632               	rlcf	___ftadd@f2+1,f,c
  4382  001D84  3633               	rlcf	___ftadd@f2+2,f,c
  4383  001D86  0638               	decf	___ftadd@exp2,f,c
  4384  001D88  5039               	movf	___ftadd@exp1,w,c
  4385  001D8A  1838               	xorwf	___ftadd@exp2,w,c
  4386  001D8C  B4D8               	btfsc	status,2,c
  4387  001D8E  D00F               	goto	l2041
  4388  001D90  0637               	decf	___ftadd@sign,f,c
  4389  001D92  C037  F034         	movff	___ftadd@sign,??___ftadd
  4390  001D96  0E07               	movlw	7
  4391  001D98  1634               	andwf	??___ftadd,f,c
  4392  001D9A  B4D8               	btfsc	status,2,c
  4393  001D9C  D008               	goto	l2041
  4394  001D9E  D7EF               	goto	l2033
  4395  001DA0  D006               	goto	l2041
  4396  001DA2                     l2039:
  4397  001DA2  90D8               	bcf	status,0,c
  4398  001DA4  3230               	rrcf	___ftadd@f1+2,f,c
  4399  001DA6  322F               	rrcf	___ftadd@f1+1,f,c
  4400  001DA8  322E               	rrcf	___ftadd@f1,f,c
  4401  001DAA  2A39               	incf	___ftadd@exp1,f,c
  4402  001DAC  D000               	goto	l2041
  4403  001DAE                     l2041:
  4404  001DAE  5038               	movf	___ftadd@exp2,w,c
  4405  001DB0  1839               	xorwf	___ftadd@exp1,w,c
  4406  001DB2  B4D8               	btfsc	status,2,c
  4407  001DB4  D024               	goto	l694
  4408  001DB6  D7F5               	goto	l2039
  4409  001DB8  D022               	goto	l694
  4410  001DBA                     l2043:
  4411  001DBA  5039               	movf	___ftadd@exp1,w,c
  4412  001DBC  5C38               	subwf	___ftadd@exp2,w,c
  4413  001DBE  B0D8               	btfsc	status,0,c
  4414  001DC0  D01E               	goto	l694
  4415  001DC2                     l2045:
  4416  001DC2  90D8               	bcf	status,0,c
  4417  001DC4  362E               	rlcf	___ftadd@f1,f,c
  4418  001DC6  362F               	rlcf	___ftadd@f1+1,f,c
  4419  001DC8  3630               	rlcf	___ftadd@f1+2,f,c
  4420  001DCA  0639               	decf	___ftadd@exp1,f,c
  4421  001DCC  5039               	movf	___ftadd@exp1,w,c
  4422  001DCE  1838               	xorwf	___ftadd@exp2,w,c
  4423  001DD0  B4D8               	btfsc	status,2,c
  4424  001DD2  D00F               	goto	l2053
  4425  001DD4  0637               	decf	___ftadd@sign,f,c
  4426  001DD6  C037  F034         	movff	___ftadd@sign,??___ftadd
  4427  001DDA  0E07               	movlw	7
  4428  001DDC  1634               	andwf	??___ftadd,f,c
  4429  001DDE  B4D8               	btfsc	status,2,c
  4430  001DE0  D008               	goto	l2053
  4431  001DE2  D7EF               	goto	l2045
  4432  001DE4  D006               	goto	l2053
  4433  001DE6                     l2051:
  4434  001DE6  90D8               	bcf	status,0,c
  4435  001DE8  3233               	rrcf	___ftadd@f2+2,f,c
  4436  001DEA  3232               	rrcf	___ftadd@f2+1,f,c
  4437  001DEC  3231               	rrcf	___ftadd@f2,f,c
  4438  001DEE  2A38               	incf	___ftadd@exp2,f,c
  4439  001DF0  D000               	goto	l2053
  4440  001DF2                     l2053:
  4441  001DF2  5038               	movf	___ftadd@exp2,w,c
  4442  001DF4  1839               	xorwf	___ftadd@exp1,w,c
  4443  001DF6  B4D8               	btfsc	status,2,c
  4444  001DF8  D002               	goto	l694
  4445  001DFA  D7F5               	goto	l2051
  4446  001DFC  D000               	goto	l694
  4447  001DFE                     l694:
  4448  001DFE  AE37               	btfss	___ftadd@sign,7,c
  4449  001E00  D00C               	goto	l703
  4450  001E02  0EFF               	movlw	255
  4451  001E04  1A2E               	xorwf	___ftadd@f1,f,c
  4452  001E06  0EFF               	movlw	255
  4453  001E08  1A2F               	xorwf	___ftadd@f1+1,f,c
  4454  001E0A  0EFF               	movlw	255
  4455  001E0C  1A30               	xorwf	___ftadd@f1+2,f,c
  4456  001E0E  0E01               	movlw	1
  4457  001E10  262E               	addwf	___ftadd@f1,f,c
  4458  001E12  0E00               	movlw	0
  4459  001E14  222F               	addwfc	___ftadd@f1+1,f,c
  4460  001E16  0E00               	movlw	0
  4461  001E18  2230               	addwfc	___ftadd@f1+2,f,c
  4462  001E1A                     l703:
  4463  001E1A  AC37               	btfss	___ftadd@sign,6,c
  4464  001E1C  D00D               	goto	l2059
  4465  001E1E  0EFF               	movlw	255
  4466  001E20  1A31               	xorwf	___ftadd@f2,f,c
  4467  001E22  0EFF               	movlw	255
  4468  001E24  1A32               	xorwf	___ftadd@f2+1,f,c
  4469  001E26  0EFF               	movlw	255
  4470  001E28  1A33               	xorwf	___ftadd@f2+2,f,c
  4471  001E2A  0E01               	movlw	1
  4472  001E2C  2631               	addwf	___ftadd@f2,f,c
  4473  001E2E  0E00               	movlw	0
  4474  001E30  2232               	addwfc	___ftadd@f2+1,f,c
  4475  001E32  0E00               	movlw	0
  4476  001E34  2233               	addwfc	___ftadd@f2+2,f,c
  4477  001E36  D000               	goto	l2059
  4478  001E38                     l2059:
  4479  001E38  0E00               	movlw	0
  4480  001E3A  6E37               	movwf	___ftadd@sign,c
  4481  001E3C  502E               	movf	___ftadd@f1,w,c
  4482  001E3E  2631               	addwf	___ftadd@f2,f,c
  4483  001E40  502F               	movf	___ftadd@f1+1,w,c
  4484  001E42  2232               	addwfc	___ftadd@f2+1,f,c
  4485  001E44  5030               	movf	___ftadd@f1+2,w,c
  4486  001E46  2233               	addwfc	___ftadd@f2+2,f,c
  4487  001E48  AE33               	btfss	___ftadd@f2+2,7,c
  4488  001E4A  D00F               	goto	l2069
  4489  001E4C  0EFF               	movlw	255
  4490  001E4E  1A31               	xorwf	___ftadd@f2,f,c
  4491  001E50  0EFF               	movlw	255
  4492  001E52  1A32               	xorwf	___ftadd@f2+1,f,c
  4493  001E54  0EFF               	movlw	255
  4494  001E56  1A33               	xorwf	___ftadd@f2+2,f,c
  4495  001E58  0E01               	movlw	1
  4496  001E5A  2631               	addwf	___ftadd@f2,f,c
  4497  001E5C  0E00               	movlw	0
  4498  001E5E  2232               	addwfc	___ftadd@f2+1,f,c
  4499  001E60  0E00               	movlw	0
  4500  001E62  2233               	addwfc	___ftadd@f2+2,f,c
  4501  001E64  0E01               	movlw	1
  4502  001E66  6E37               	movwf	___ftadd@sign,c
  4503  001E68  D000               	goto	l2069
  4504  001E6A                     l2069:
  4505  001E6A  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  4506  001E6E  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4507  001E72  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4508  001E76  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  4509  001E7A  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  4510  001E7E  EC31  F012         	call	___ftpack	;wreg free
  4511  001E82  C001  F02E         	movff	?___ftpack,?___ftadd
  4512  001E86  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  4513  001E8A  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  4514  001E8E  D000               	goto	l680
  4515  001E90                     l680:
  4516  001E90  0012               	return		;funcret
  4517  001E92                     __end_of___ftadd:
  4518                           	opt stack 0
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           prodh	equ	0xFF4
  4524                           prodl	equ	0xFF3
  4525                           postinc0	equ	0xFEE
  4526                           wreg	equ	0xFE8
  4527                           postdec1	equ	0xFE5
  4528                           fsr1l	equ	0xFE1
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function ___ftneg *****************
  4536 ;; Defined at:
  4537 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  f1              3    0[COMRAM] float 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  3    0[COMRAM] float 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4551 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;Total ram usage:        3 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_printf
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text17
  4565  002C6A                     __ptext17:
  4566                           	opt stack 0
  4567  002C6A                     ___ftneg:
  4568                           	opt stack 29
  4569                           
  4570                           ;incstack = 0
  4571  002C6A  5001               	movf	___ftneg@f1,w,c
  4572  002C6C  1002               	iorwf	___ftneg@f1+1,w,c
  4573  002C6E  1003               	iorwf	___ftneg@f1+2,w,c
  4574  002C70  B4D8               	btfsc	status,2,c
  4575  002C72  D006               	goto	l753
  4576  002C74  0E00               	movlw	0
  4577  002C76  1A01               	xorwf	___ftneg@f1,f,c
  4578  002C78  0E00               	movlw	0
  4579  002C7A  1A02               	xorwf	___ftneg@f1+1,f,c
  4580  002C7C  0E80               	movlw	128
  4581  002C7E  1A03               	xorwf	___ftneg@f1+2,f,c
  4582  002C80                     l753:
  4583  002C80  C001  F001         	movff	___ftneg@f1,?___ftneg
  4584  002C84  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4585  002C88  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4586  002C8C  0012               	return		;funcret
  4587  002C8E                     __end_of___ftneg:
  4588                           	opt stack 0
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           prodh	equ	0xFF4
  4594                           prodl	equ	0xFF3
  4595                           postinc0	equ	0xFEE
  4596                           wreg	equ	0xFE8
  4597                           postdec1	equ	0xFE5
  4598                           fsr1l	equ	0xFE1
  4599                           postinc2	equ	0xFDE
  4600                           postdec2	equ	0xFDD
  4601                           fsr2h	equ	0xFDA
  4602                           fsr2l	equ	0xFD9
  4603                           status	equ	0xFD8
  4604                           
  4605 ;; *************** function ___ftge *****************
  4606 ;; Defined at:
  4607 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  ff1             3    0[COMRAM] float 
  4610 ;;  ff2             3    3[COMRAM] float 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;		None               void
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4622 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;Total ram usage:        9 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_main
  4632 ;;		_printf
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text18
  4637  002674                     __ptext18:
  4638                           	opt stack 0
  4639  002674                     ___ftge:
  4640                           	opt stack 29
  4641                           
  4642                           ;incstack = 0
  4643  002674  AE03               	btfss	___ftge@ff1+2,7,c
  4644  002676  D017               	goto	l2481
  4645  002678  C001  F007         	movff	___ftge@ff1,??___ftge
  4646  00267C  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4647  002680  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4648  002684  1E07               	comf	??___ftge,f,c
  4649  002686  1E08               	comf	??___ftge+1,f,c
  4650  002688  1E09               	comf	??___ftge+2,f,c
  4651  00268A  2A07               	incf	??___ftge,f,c
  4652  00268C  0E00               	movlw	0
  4653  00268E  2208               	addwfc	??___ftge+1,f,c
  4654  002690  2209               	addwfc	??___ftge+2,f,c
  4655  002692  0E00               	movlw	0
  4656  002694  2407               	addwf	??___ftge,w,c
  4657  002696  6E01               	movwf	___ftge@ff1,c
  4658  002698  0E00               	movlw	0
  4659  00269A  2008               	addwfc	??___ftge+1,w,c
  4660  00269C  6E02               	movwf	___ftge@ff1+1,c
  4661  00269E  0E80               	movlw	128
  4662  0026A0  2009               	addwfc	??___ftge+2,w,c
  4663  0026A2  6E03               	movwf	___ftge@ff1+2,c
  4664  0026A4  D000               	goto	l2481
  4665  0026A6                     l2481:
  4666  0026A6  AE06               	btfss	___ftge@ff2+2,7,c
  4667  0026A8  D017               	goto	l2485
  4668  0026AA  C004  F007         	movff	___ftge@ff2,??___ftge
  4669  0026AE  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4670  0026B2  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4671  0026B6  1E07               	comf	??___ftge,f,c
  4672  0026B8  1E08               	comf	??___ftge+1,f,c
  4673  0026BA  1E09               	comf	??___ftge+2,f,c
  4674  0026BC  2A07               	incf	??___ftge,f,c
  4675  0026BE  0E00               	movlw	0
  4676  0026C0  2208               	addwfc	??___ftge+1,f,c
  4677  0026C2  2209               	addwfc	??___ftge+2,f,c
  4678  0026C4  0E00               	movlw	0
  4679  0026C6  2407               	addwf	??___ftge,w,c
  4680  0026C8  6E04               	movwf	___ftge@ff2,c
  4681  0026CA  0E00               	movlw	0
  4682  0026CC  2008               	addwfc	??___ftge+1,w,c
  4683  0026CE  6E05               	movwf	___ftge@ff2+1,c
  4684  0026D0  0E80               	movlw	128
  4685  0026D2  2009               	addwfc	??___ftge+2,w,c
  4686  0026D4  6E06               	movwf	___ftge@ff2+2,c
  4687  0026D6  D000               	goto	l2485
  4688  0026D8                     l2485:
  4689  0026D8  0E00               	movlw	0
  4690  0026DA  1A01               	xorwf	___ftge@ff1,f,c
  4691  0026DC  0E00               	movlw	0
  4692  0026DE  1A02               	xorwf	___ftge@ff1+1,f,c
  4693  0026E0  0E80               	movlw	128
  4694  0026E2  1A03               	xorwf	___ftge@ff1+2,f,c
  4695  0026E4  0E00               	movlw	0
  4696  0026E6  1A04               	xorwf	___ftge@ff2,f,c
  4697  0026E8  0E00               	movlw	0
  4698  0026EA  1A05               	xorwf	___ftge@ff2+1,f,c
  4699  0026EC  0E80               	movlw	128
  4700  0026EE  1A06               	xorwf	___ftge@ff2+2,f,c
  4701  0026F0  5004               	movf	___ftge@ff2,w,c
  4702  0026F2  5C01               	subwf	___ftge@ff1,w,c
  4703  0026F4  5005               	movf	___ftge@ff2+1,w,c
  4704  0026F6  5802               	subwfb	___ftge@ff1+1,w,c
  4705  0026F8  5006               	movf	___ftge@ff2+2,w,c
  4706  0026FA  5803               	subwfb	___ftge@ff1+2,w,c
  4707  0026FC  B0D8               	btfsc	status,0,c
  4708  0026FE  D002               	goto	l2491
  4709  002700  90D8               	bcf	status,0,c
  4710  002702  D002               	goto	l737
  4711  002704                     l2491:
  4712  002704  80D8               	bsf	status,0,c
  4713  002706  D000               	goto	l737
  4714  002708                     l737:
  4715  002708  0012               	return		;funcret
  4716  00270A                     __end_of___ftge:
  4717                           	opt stack 0
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           postinc0	equ	0xFEE
  4725                           wreg	equ	0xFE8
  4726                           postdec1	equ	0xFE5
  4727                           fsr1l	equ	0xFE1
  4728                           postinc2	equ	0xFDE
  4729                           postdec2	equ	0xFDD
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _init_UART *****************
  4735 ;; Defined at:
  4736 ;;		line 37 in file "Lab6p1.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;		None               void
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;Total ram usage:        0 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    1
  4757 ;; This function calls:
  4758 ;;		_OpenUSART
  4759 ;; This function is called by:
  4760 ;;		_main
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text19
  4765  002D0C                     __ptext19:
  4766                           	opt stack 0
  4767  002D0C                     _init_UART:
  4768                           	opt stack 29
  4769                           
  4770                           ;Lab6p1.c: 39: OpenUSART (0b01111111 & 0b10111111 &
  4771                           ;Lab6p1.c: 40: 0b11111110 & 0b11111101 & 0b11111111 &
  4772                           ;Lab6p1.c: 41: 0b11111111, 25);
  4773                           
  4774                           ;incstack = 0
  4775  002D0C  0E00               	movlw	0
  4776  002D0E  6E02               	movwf	OpenUSART@spbrg+1,c
  4777  002D10  0E19               	movlw	25
  4778  002D12  6E01               	movwf	OpenUSART@spbrg,c
  4779  002D14  0E3C               	movlw	60
  4780  002D16  EC8F  F014         	call	_OpenUSART
  4781                           
  4782                           ;Lab6p1.c: 43: OSCCON = 0x60;
  4783  002D1A  0E60               	movlw	96
  4784  002D1C  6ED3               	movwf	4051,c	;volatile
  4785  002D1E  0012               	return		;funcret
  4786  002D20                     __end_of_init_UART:
  4787                           	opt stack 0
  4788                           tblptru	equ	0xFF8
  4789                           tblptrh	equ	0xFF7
  4790                           tblptrl	equ	0xFF6
  4791                           tablat	equ	0xFF5
  4792                           prodh	equ	0xFF4
  4793                           prodl	equ	0xFF3
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           postdec1	equ	0xFE5
  4797                           fsr1l	equ	0xFE1
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _OpenUSART *****************
  4805 ;; Defined at:
  4806 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  config          1    wreg     unsigned char 
  4809 ;;  spbrg           2    0[COMRAM] unsigned int 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  config          1    2[COMRAM] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;		None               void
  4814 ;; Registers used:
  4815 ;;		wreg, status,2
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;Total ram usage:        3 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_init_UART
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text20
  4835  00291E                     __ptext20:
  4836                           	opt stack 0
  4837  00291E                     _OpenUSART:
  4838                           	opt stack 29
  4839                           
  4840                           ;incstack = 0
  4841                           ;OpenUSART@config stored from wreg
  4842  00291E  6E03               	movwf	OpenUSART@config,c
  4843  002920  0E00               	movlw	0
  4844  002922  6EAC               	movwf	4012,c	;volatile
  4845  002924  0E00               	movlw	0
  4846  002926  6EAB               	movwf	4011,c	;volatile
  4847  002928  A003               	btfss	OpenUSART@config,0,c
  4848  00292A  D002               	goto	l2207
  4849  00292C  88AC               	bsf	4012,4,c	;volatile
  4850  00292E  D000               	goto	l2207
  4851  002930                     l2207:
  4852  002930  A203               	btfss	OpenUSART@config,1,c
  4853  002932  D003               	goto	l2211
  4854  002934  8CAC               	bsf	4012,6,c	;volatile
  4855  002936  8CAB               	bsf	4011,6,c	;volatile
  4856  002938  D000               	goto	l2211
  4857  00293A                     l2211:
  4858  00293A  A403               	btfss	OpenUSART@config,2,c
  4859  00293C  D002               	goto	l2215
  4860  00293E  8EAC               	bsf	4012,7,c	;volatile
  4861  002940  D000               	goto	l2215
  4862  002942                     l2215:
  4863  002942  A603               	btfss	OpenUSART@config,3,c
  4864  002944  D002               	goto	l302
  4865  002946  88AB               	bsf	4011,4,c	;volatile
  4866  002948  D002               	goto	l2219
  4867  00294A                     l302:
  4868  00294A  8AAB               	bsf	4011,5,c	;volatile
  4869  00294C  D000               	goto	l2219
  4870  00294E                     l2219:
  4871  00294E  B803               	btfsc	OpenUSART@config,4,c
  4872  002950  84AC               	bsf	4012,2,c	;volatile
  4873  002952  989E               	bcf	3998,4,c	;volatile
  4874  002954  AA03               	btfss	OpenUSART@config,5,c
  4875  002956  D002               	goto	l2227
  4876  002958  86AB               	bsf	4011,3,c	;volatile
  4877  00295A  D000               	goto	l2227
  4878  00295C                     l2227:
  4879  00295C  AC03               	btfss	OpenUSART@config,6,c
  4880  00295E  D002               	goto	l306
  4881  002960  8A9D               	bsf	3997,5,c	;volatile
  4882  002962  D001               	goto	l307
  4883  002964                     l306:
  4884  002964  9A9D               	bcf	3997,5,c	;volatile
  4885  002966                     l307:
  4886  002966  9A9E               	bcf	3998,5,c	;volatile
  4887  002968  AE03               	btfss	OpenUSART@config,7,c
  4888  00296A  D002               	goto	l308
  4889  00296C  889D               	bsf	3997,4,c	;volatile
  4890  00296E  D001               	goto	l309
  4891  002970                     l308:
  4892  002970  989D               	bcf	3997,4,c	;volatile
  4893  002972                     l309:
  4894  002972  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4895  002976  5002               	movf	OpenUSART@spbrg+1,w,c
  4896  002978  6EB0               	movwf	4016,c	;volatile
  4897  00297A  8AAC               	bsf	4012,5,c	;volatile
  4898  00297C  8EAB               	bsf	4011,7,c	;volatile
  4899  00297E  9C94               	bcf	3988,6,c	;volatile
  4900  002980  8E94               	bsf	3988,7,c	;volatile
  4901  002982  B8AC               	btfsc	4012,4,c	;volatile
  4902  002984  BEAC               	btfsc	4012,7,c	;volatile
  4903  002986  D002               	goto	l311
  4904  002988  8C94               	bsf	3988,6,c	;volatile
  4905  00298A  D000               	goto	l311
  4906  00298C                     l311:
  4907  00298C  0012               	return		;funcret
  4908  00298E                     __end_of_OpenUSART:
  4909                           	opt stack 0
  4910                           tblptru	equ	0xFF8
  4911                           tblptrh	equ	0xFF7
  4912                           tblptrl	equ	0xFF6
  4913                           tablat	equ	0xFF5
  4914                           prodh	equ	0xFF4
  4915                           prodl	equ	0xFF3
  4916                           postinc0	equ	0xFEE
  4917                           wreg	equ	0xFE8
  4918                           postdec1	equ	0xFE5
  4919                           fsr1l	equ	0xFE1
  4920                           postinc2	equ	0xFDE
  4921                           postdec2	equ	0xFDD
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _init_ADC *****************
  4927 ;; Defined at:
  4928 ;;		line 74 in file "Lab6p1.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;		None               void
  4935 ;; Registers used:
  4936 ;;		wreg, status,2
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;Total ram usage:        0 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text21
  4956  002D40                     __ptext21:
  4957                           	opt stack 0
  4958  002D40                     _init_ADC:
  4959                           	opt stack 30
  4960                           
  4961                           ;Lab6p1.c: 76: ADCON0 = 0x01;
  4962                           
  4963                           ;incstack = 0
  4964  002D40  0E01               	movlw	1
  4965  002D42  6EC2               	movwf	4034,c	;volatile
  4966                           
  4967                           ;Lab6p1.c: 77: ADCON1=0x0E;
  4968  002D44  0E0E               	movlw	14
  4969  002D46  6EC1               	movwf	4033,c	;volatile
  4970                           
  4971                           ;Lab6p1.c: 79: ADCON2=0xA9;
  4972  002D48  0EA9               	movlw	169
  4973  002D4A  6EC0               	movwf	4032,c	;volatile
  4974  002D4C  0012               	return		;funcret
  4975  002D4E                     __end_of_init_ADC:
  4976                           	opt stack 0
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           prodh	equ	0xFF4
  4982                           prodl	equ	0xFF3
  4983                           postinc0	equ	0xFEE
  4984                           wreg	equ	0xFE8
  4985                           postdec1	equ	0xFE5
  4986                           fsr1l	equ	0xFE1
  4987                           postinc2	equ	0xFDE
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _get_full_ADC *****************
  4994 ;; Defined at:
  4995 ;;		line 83 in file "Lab6p1.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  result          2    4[COMRAM] int 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  2    0[COMRAM] unsigned int 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;Total ram usage:        6 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text22
  5023  002C44                     __ptext22:
  5024                           	opt stack 0
  5025  002C44                     _get_full_ADC:
  5026                           	opt stack 30
  5027                           
  5028                           ;Lab6p1.c: 85: int result;
  5029                           ;Lab6p1.c: 86: ADCON0bits.GO=1;
  5030                           
  5031                           ;incstack = 0
  5032  002C44  82C2               	bsf	4034,1,c	;volatile
  5033                           
  5034                           ;Lab6p1.c: 87: while(ADCON0bits.DONE==1);
  5035  002C46  D000               	goto	l91
  5036  002C48                     l91:
  5037  002C48  B2C2               	btfsc	4034,1,c	;volatile
  5038  002C4A  D7FE               	goto	l91
  5039                           
  5040                           ;Lab6p1.c: 88: result = (ADRESH * 0x100) + ADRESL;
  5041  002C4C  50C4               	movf	4036,w,c	;volatile
  5042  002C4E  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5043  002C50  6A03               	clrf	??_get_full_ADC& (0+255),c
  5044  002C52  50C3               	movf	4035,w,c	;volatile
  5045  002C54  2403               	addwf	??_get_full_ADC,w,c
  5046  002C56  6E05               	movwf	get_full_ADC@result,c
  5047  002C58  0E00               	movlw	0
  5048  002C5A  2004               	addwfc	??_get_full_ADC+1,w,c
  5049  002C5C  6E06               	movwf	get_full_ADC@result+1,c
  5050                           
  5051                           ;Lab6p1.c: 90: return result;
  5052  002C5E  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5053  002C62  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5054  002C66  D000               	goto	l94
  5055  002C68                     l94:
  5056  002C68  0012               	return		;funcret
  5057  002C6A                     __end_of_get_full_ADC:
  5058                           	opt stack 0
  5059                           tblptru	equ	0xFF8
  5060                           tblptrh	equ	0xFF7
  5061                           tblptrl	equ	0xFF6
  5062                           tablat	equ	0xFF5
  5063                           prodh	equ	0xFF4
  5064                           prodl	equ	0xFF3
  5065                           postinc0	equ	0xFEE
  5066                           wreg	equ	0xFE8
  5067                           postdec1	equ	0xFE5
  5068                           fsr1l	equ	0xFE1
  5069                           postinc2	equ	0xFDE
  5070                           postdec2	equ	0xFDD
  5071                           fsr2h	equ	0xFDA
  5072                           fsr2l	equ	0xFD9
  5073                           status	equ	0xFD8
  5074                           
  5075 ;; *************** function ___ftdiv *****************
  5076 ;; Defined at:
  5077 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  f1              3   35[COMRAM] float 
  5080 ;;  f2              3   38[COMRAM] float 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  f3              3   45[COMRAM] float 
  5083 ;;  sign            1   49[COMRAM] unsigned char 
  5084 ;;  exp             1   48[COMRAM] unsigned char 
  5085 ;;  cntr            1   44[COMRAM] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  3   35[COMRAM] float 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5095 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;Total ram usage:       15 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    1
  5102 ;; This function calls:
  5103 ;;		___ftpack
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text23
  5110  002380                     __ptext23:
  5111                           	opt stack 0
  5112  002380                     ___ftdiv:
  5113                           	opt stack 29
  5114                           
  5115                           ;incstack = 0
  5116  002380  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  5117  002384  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  5118  002386  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  5119  002388  3425               	rlcf	___ftdiv@f1+1,w,c
  5120  00238A  362A               	rlcf	??___ftdiv& (0+255),f,c
  5121  00238C  E301               	bnc	u2861
  5122  00238E  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  5123  002390                     u2861:
  5124  002390  502A               	movf	??___ftdiv,w,c
  5125  002392  6E31               	movwf	___ftdiv@exp,c
  5126  002394  5031               	movf	___ftdiv@exp,w,c
  5127  002396  A4D8               	btfss	status,2,c
  5128  002398  D002               	goto	l2797
  5129  00239A  D00E               	goto	l2799
  5130  00239C  D061               	goto	l711
  5131  00239E                     l2797:
  5132  00239E  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  5133  0023A2  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  5134  0023A4  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  5135  0023A6  3428               	rlcf	___ftdiv@f2+1,w,c
  5136  0023A8  362A               	rlcf	??___ftdiv& (0+255),f,c
  5137  0023AA  E301               	bnc	u2881
  5138  0023AC  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  5139  0023AE                     u2881:
  5140  0023AE  502A               	movf	??___ftdiv,w,c
  5141  0023B0  6E32               	movwf	___ftdiv@sign,c
  5142  0023B2  5032               	movf	___ftdiv@sign,w,c
  5143  0023B4  A4D8               	btfss	status,2,c
  5144  0023B6  D007               	goto	l2803
  5145  0023B8                     l2799:
  5146  0023B8  0E00               	movlw	0
  5147  0023BA  6E24               	movwf	?___ftdiv,c
  5148  0023BC  0E00               	movlw	0
  5149  0023BE  6E25               	movwf	?___ftdiv+1,c
  5150  0023C0  0E00               	movlw	0
  5151  0023C2  6E26               	movwf	?___ftdiv+2,c
  5152  0023C4  D04D               	goto	l711
  5153  0023C6                     l2803:
  5154  0023C6  0E00               	movlw	0
  5155  0023C8  6E2E               	movwf	___ftdiv@f3,c
  5156  0023CA  0E00               	movlw	0
  5157  0023CC  6E2F               	movwf	___ftdiv@f3+1,c
  5158  0023CE  0E00               	movlw	0
  5159  0023D0  6E30               	movwf	___ftdiv@f3+2,c
  5160  0023D2  5032               	movf	___ftdiv@sign,w,c
  5161  0023D4  0F89               	addlw	137
  5162  0023D6  5E31               	subwf	___ftdiv@exp,f,c
  5163  0023D8  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
  5164  0023DC  5029               	movf	___ftdiv@f2+2,w,c
  5165  0023DE  1A32               	xorwf	___ftdiv@sign,f,c
  5166  0023E0  0E80               	movlw	128
  5167  0023E2  1632               	andwf	___ftdiv@sign,f,c
  5168  0023E4  8E25               	bsf	___ftdiv@f1+1,7,c
  5169  0023E6  0EFF               	movlw	255
  5170  0023E8  1624               	andwf	___ftdiv@f1,f,c
  5171  0023EA  0EFF               	movlw	255
  5172  0023EC  1625               	andwf	___ftdiv@f1+1,f,c
  5173  0023EE  0E00               	movlw	0
  5174  0023F0  1626               	andwf	___ftdiv@f1+2,f,c
  5175  0023F2  8E28               	bsf	___ftdiv@f2+1,7,c
  5176  0023F4  0EFF               	movlw	255
  5177  0023F6  1627               	andwf	___ftdiv@f2,f,c
  5178  0023F8  0EFF               	movlw	255
  5179  0023FA  1628               	andwf	___ftdiv@f2+1,f,c
  5180  0023FC  0E00               	movlw	0
  5181  0023FE  1629               	andwf	___ftdiv@f2+2,f,c
  5182  002400  0E18               	movlw	24
  5183  002402  6E2D               	movwf	___ftdiv@cntr,c
  5184  002404  D000               	goto	l2823
  5185  002406                     l2823:
  5186  002406  90D8               	bcf	status,0,c
  5187  002408  362E               	rlcf	___ftdiv@f3,f,c
  5188  00240A  362F               	rlcf	___ftdiv@f3+1,f,c
  5189  00240C  3630               	rlcf	___ftdiv@f3+2,f,c
  5190  00240E  5027               	movf	___ftdiv@f2,w,c
  5191  002410  5C24               	subwf	___ftdiv@f1,w,c
  5192  002412  5028               	movf	___ftdiv@f2+1,w,c
  5193  002414  5825               	subwfb	___ftdiv@f1+1,w,c
  5194  002416  5029               	movf	___ftdiv@f2+2,w,c
  5195  002418  5826               	subwfb	___ftdiv@f1+2,w,c
  5196  00241A  A0D8               	btfss	status,0,c
  5197  00241C  D007               	goto	l714
  5198  00241E  5027               	movf	___ftdiv@f2,w,c
  5199  002420  5E24               	subwf	___ftdiv@f1,f,c
  5200  002422  5028               	movf	___ftdiv@f2+1,w,c
  5201  002424  5A25               	subwfb	___ftdiv@f1+1,f,c
  5202  002426  5029               	movf	___ftdiv@f2+2,w,c
  5203  002428  5A26               	subwfb	___ftdiv@f1+2,f,c
  5204  00242A  802E               	bsf	___ftdiv@f3,0,c
  5205  00242C                     l714:
  5206  00242C  90D8               	bcf	status,0,c
  5207  00242E  3624               	rlcf	___ftdiv@f1,f,c
  5208  002430  3625               	rlcf	___ftdiv@f1+1,f,c
  5209  002432  3626               	rlcf	___ftdiv@f1+2,f,c
  5210  002434  2E2D               	decfsz	___ftdiv@cntr,f,c
  5211  002436  D7E7               	goto	l2823
  5212  002438  D000               	goto	l2833
  5213  00243A                     l2833:
  5214  00243A  C02E  F001         	movff	___ftdiv@f3,___ftpack@arg
  5215  00243E  C02F  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5216  002442  C030  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5217  002446  C031  F004         	movff	___ftdiv@exp,___ftpack@exp
  5218  00244A  C032  F005         	movff	___ftdiv@sign,___ftpack@sign
  5219  00244E  EC31  F012         	call	___ftpack	;wreg free
  5220  002452  C001  F024         	movff	?___ftpack,?___ftdiv
  5221  002456  C002  F025         	movff	?___ftpack+1,?___ftdiv+1
  5222  00245A  C003  F026         	movff	?___ftpack+2,?___ftdiv+2
  5223  00245E  D000               	goto	l711
  5224  002460                     l711:
  5225  002460  0012               	return		;funcret
  5226  002462                     __end_of___ftdiv:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           postinc0	equ	0xFEE
  5235                           wreg	equ	0xFE8
  5236                           postdec1	equ	0xFE5
  5237                           fsr1l	equ	0xFE1
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function ___awtoft *****************
  5245 ;; Defined at:
  5246 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  c               2    8[COMRAM] int 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  sign            1   11[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  3    8[COMRAM] float 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5260 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;Total ram usage:        4 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    1
  5267 ;; This function calls:
  5268 ;;		___ftpack
  5269 ;; This function is called by:
  5270 ;;		_main
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text24
  5275  002ADE                     __ptext24:
  5276                           	opt stack 0
  5277  002ADE                     ___awtoft:
  5278                           	opt stack 29
  5279                           
  5280                           ;incstack = 0
  5281  002ADE  0E00               	movlw	0
  5282  002AE0  6E0C               	movwf	___awtoft@sign,c
  5283  002AE2  AE0A               	btfss	___awtoft@c+1,7,c
  5284  002AE4  D007               	goto	l2845
  5285  002AE6  6C09               	negf	___awtoft@c,c
  5286  002AE8  1E0A               	comf	___awtoft@c+1,f,c
  5287  002AEA  B0D8               	btfsc	status,0,c
  5288  002AEC  2A0A               	incf	___awtoft@c+1,f,c
  5289  002AEE  0E01               	movlw	1
  5290  002AF0  6E0C               	movwf	___awtoft@sign,c
  5291  002AF2  D000               	goto	l2845
  5292  002AF4                     l2845:
  5293  002AF4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5294  002AF8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5295  002AFC  6A03               	clrf	___ftpack@arg+2,c
  5296  002AFE  0E8E               	movlw	142
  5297  002B00  6E04               	movwf	___ftpack@exp,c
  5298  002B02  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5299  002B06  EC31  F012         	call	___ftpack	;wreg free
  5300  002B0A  C001  F009         	movff	?___ftpack,?___awtoft
  5301  002B0E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5302  002B12  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5303  002B16  D000               	goto	l532
  5304  002B18                     l532:
  5305  002B18  0012               	return		;funcret
  5306  002B1A                     __end_of___awtoft:
  5307                           	opt stack 0
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           postinc0	equ	0xFEE
  5315                           wreg	equ	0xFE8
  5316                           postdec1	equ	0xFE5
  5317                           fsr1l	equ	0xFE1
  5318                           postinc2	equ	0xFDE
  5319                           postdec2	equ	0xFDD
  5320                           fsr2h	equ	0xFDA
  5321                           fsr2l	equ	0xFD9
  5322                           status	equ	0xFD8
  5323                           
  5324 ;; *************** function ___ftpack *****************
  5325 ;; Defined at:
  5326 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  arg             3    0[COMRAM] unsigned um
  5329 ;;  exp             1    3[COMRAM] unsigned char 
  5330 ;;  sign            1    4[COMRAM] unsigned char 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  3    0[COMRAM] float 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5342 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;Total ram usage:        8 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		___awtoft
  5352 ;;		___ftadd
  5353 ;;		___ftdiv
  5354 ;;		___ftmul
  5355 ;;		___lltoft
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text25
  5360  002462                     __ptext25:
  5361                           	opt stack 0
  5362  002462                     ___ftpack:
  5363                           	opt stack 27
  5364                           
  5365                           ;incstack = 0
  5366  002462  5004               	movf	___ftpack@exp,w,c
  5367  002464  B4D8               	btfsc	status,2,c
  5368  002466  D005               	goto	l1965
  5369  002468  5001               	movf	___ftpack@arg,w,c
  5370  00246A  1002               	iorwf	___ftpack@arg+1,w,c
  5371  00246C  1003               	iorwf	___ftpack@arg+2,w,c
  5372  00246E  A4D8               	btfss	status,2,c
  5373  002470  D00E               	goto	l1971
  5374  002472                     l1965:
  5375  002472  0E00               	movlw	0
  5376  002474  6E01               	movwf	?___ftpack,c
  5377  002476  0E00               	movlw	0
  5378  002478  6E02               	movwf	?___ftpack+1,c
  5379  00247A  0E00               	movlw	0
  5380  00247C  6E03               	movwf	?___ftpack+2,c
  5381  00247E  D053               	goto	l639
  5382  002480  D006               	goto	l1971
  5383  002482                     l1969:
  5384  002482  2A04               	incf	___ftpack@exp,f,c
  5385  002484  90D8               	bcf	status,0,c
  5386  002486  3203               	rrcf	___ftpack@arg+2,f,c
  5387  002488  3202               	rrcf	___ftpack@arg+1,f,c
  5388  00248A  3201               	rrcf	___ftpack@arg,f,c
  5389  00248C  D000               	goto	l1971
  5390  00248E                     l1971:
  5391  00248E  0E00               	movlw	0
  5392  002490  1401               	andwf	___ftpack@arg,w,c
  5393  002492  6E06               	movwf	??___ftpack& (0+255),c
  5394  002494  0E00               	movlw	0
  5395  002496  1402               	andwf	___ftpack@arg+1,w,c
  5396  002498  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5397  00249A  0EFE               	movlw	254
  5398  00249C  1403               	andwf	___ftpack@arg+2,w,c
  5399  00249E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5400  0024A0  5006               	movf	??___ftpack,w,c
  5401  0024A2  1007               	iorwf	??___ftpack+1,w,c
  5402  0024A4  1008               	iorwf	??___ftpack+2,w,c
  5403  0024A6  B4D8               	btfsc	status,2,c
  5404  0024A8  D00E               	goto	l1977
  5405  0024AA  D7EB               	goto	l1969
  5406  0024AC  D00C               	goto	l1977
  5407  0024AE                     l1973:
  5408  0024AE  2A04               	incf	___ftpack@exp,f,c
  5409  0024B0  0E01               	movlw	1
  5410  0024B2  2601               	addwf	___ftpack@arg,f,c
  5411  0024B4  0E00               	movlw	0
  5412  0024B6  2202               	addwfc	___ftpack@arg+1,f,c
  5413  0024B8  0E00               	movlw	0
  5414  0024BA  2203               	addwfc	___ftpack@arg+2,f,c
  5415  0024BC  90D8               	bcf	status,0,c
  5416  0024BE  3203               	rrcf	___ftpack@arg+2,f,c
  5417  0024C0  3202               	rrcf	___ftpack@arg+1,f,c
  5418  0024C2  3201               	rrcf	___ftpack@arg,f,c
  5419  0024C4  D000               	goto	l1977
  5420  0024C6                     l1977:
  5421  0024C6  0E00               	movlw	0
  5422  0024C8  1401               	andwf	___ftpack@arg,w,c
  5423  0024CA  6E06               	movwf	??___ftpack& (0+255),c
  5424  0024CC  0E00               	movlw	0
  5425  0024CE  1402               	andwf	___ftpack@arg+1,w,c
  5426  0024D0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5427  0024D2  0EFF               	movlw	255
  5428  0024D4  1403               	andwf	___ftpack@arg+2,w,c
  5429  0024D6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5430  0024D8  5006               	movf	??___ftpack,w,c
  5431  0024DA  1007               	iorwf	??___ftpack+1,w,c
  5432  0024DC  1008               	iorwf	??___ftpack+2,w,c
  5433  0024DE  B4D8               	btfsc	status,2,c
  5434  0024E0  D008               	goto	l1981
  5435  0024E2  D7E5               	goto	l1973
  5436  0024E4  D006               	goto	l1981
  5437  0024E6                     l1979:
  5438  0024E6  0604               	decf	___ftpack@exp,f,c
  5439  0024E8  90D8               	bcf	status,0,c
  5440  0024EA  3601               	rlcf	___ftpack@arg,f,c
  5441  0024EC  3602               	rlcf	___ftpack@arg+1,f,c
  5442  0024EE  3603               	rlcf	___ftpack@arg+2,f,c
  5443  0024F0  D000               	goto	l1981
  5444  0024F2                     l1981:
  5445  0024F2  BE02               	btfsc	___ftpack@arg+1,7,c
  5446  0024F4  D004               	goto	l650
  5447  0024F6  0E02               	movlw	2
  5448  0024F8  6004               	cpfslt	___ftpack@exp,c
  5449  0024FA  D7F5               	goto	l1979
  5450  0024FC  D000               	goto	l650
  5451  0024FE                     l650:
  5452  0024FE  B004               	btfsc	___ftpack@exp,0,c
  5453  002500  D002               	goto	l1987
  5454  002502  9E02               	bcf	___ftpack@arg+1,7,c
  5455  002504  D000               	goto	l1987
  5456  002506                     l1987:
  5457  002506  90D8               	bcf	status,0,c
  5458  002508  3204               	rrcf	___ftpack@exp,f,c
  5459  00250A  5004               	movf	___ftpack@exp,w,c
  5460  00250C  1203               	iorwf	___ftpack@arg+2,f,c
  5461  00250E  5005               	movf	___ftpack@sign,w,c
  5462  002510  B4D8               	btfsc	status,2,c
  5463  002512  D002               	goto	l1993
  5464  002514  8E03               	bsf	___ftpack@arg+2,7,c
  5465  002516  D000               	goto	l1993
  5466  002518                     l1993:
  5467  002518  C001  F001         	movff	___ftpack@arg,?___ftpack
  5468  00251C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5469  002520  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5470  002524  D000               	goto	l639
  5471  002526                     l639:
  5472  002526  0012               	return		;funcret
  5473  002528                     __end_of___ftpack:
  5474                           	opt stack 0
  5475                           tblptru	equ	0xFF8
  5476                           tblptrh	equ	0xFF7
  5477                           tblptrl	equ	0xFF6
  5478                           tablat	equ	0xFF5
  5479                           prodh	equ	0xFF4
  5480                           prodl	equ	0xFF3
  5481                           postinc0	equ	0xFEE
  5482                           wreg	equ	0xFE8
  5483                           postdec1	equ	0xFE5
  5484                           fsr1l	equ	0xFE1
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function _Night_Mode *****************
  5492 ;; Defined at:
  5493 ;;		line 362 in file "Lab6p1.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;		None               void
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    3
  5514 ;; This function calls:
  5515 ;;		_Set_EW
  5516 ;;		_Set_EWLT
  5517 ;;		_Set_NS
  5518 ;;		_Set_NSLT
  5519 ;;		_Wait_N_Seconds
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text26
  5526  00270A                     __ptext26:
  5527                           	opt stack 0
  5528  00270A                     _Night_Mode:
  5529                           	opt stack 27
  5530                           
  5531                           ;Lab6p1.c: 365: Set_NS(2);
  5532                           
  5533                           ;incstack = 0
  5534  00270A  0E02               	movlw	2
  5535  00270C  ECA8  F015         	call	_Set_NS
  5536                           
  5537                           ;Lab6p1.c: 367: Set_EW(1);
  5538  002710  0E01               	movlw	1
  5539  002712  ECDE  F015         	call	_Set_EW
  5540                           
  5541                           ;Lab6p1.c: 368: Set_NSLT(1);
  5542  002716  0E01               	movlw	1
  5543  002718  EC8D  F015         	call	_Set_NSLT
  5544                           
  5545                           ;Lab6p1.c: 369: Set_EWLT(1);
  5546  00271C  0E01               	movlw	1
  5547  00271E  ECC3  F015         	call	_Set_EWLT
  5548                           
  5549                           ;Lab6p1.c: 371: Wait_N_Seconds(6);
  5550  002722  0E06               	movlw	6
  5551  002724  EC57  F016         	call	_Wait_N_Seconds
  5552                           
  5553                           ;Lab6p1.c: 373: Set_NS(3);
  5554  002728  0E03               	movlw	3
  5555  00272A  ECA8  F015         	call	_Set_NS
  5556                           
  5557                           ;Lab6p1.c: 374: Wait_N_Seconds(3);
  5558  00272E  0E03               	movlw	3
  5559  002730  EC57  F016         	call	_Wait_N_Seconds
  5560                           
  5561                           ;Lab6p1.c: 376: Set_NS(1);
  5562  002734  0E01               	movlw	1
  5563  002736  ECA8  F015         	call	_Set_NS
  5564                           
  5565                           ;Lab6p1.c: 379: if (PORTAbits.RA4 == 1)
  5566  00273A  A880               	btfss	3968,4,c	;volatile
  5567  00273C  D00F               	goto	l185
  5568                           
  5569                           ;Lab6p1.c: 381: {
  5570                           ;Lab6p1.c: 382: Set_EWLT(2);
  5571  00273E  0E02               	movlw	2
  5572  002740  ECC3  F015         	call	_Set_EWLT
  5573                           
  5574                           ;Lab6p1.c: 383: Wait_N_Seconds(6);
  5575  002744  0E06               	movlw	6
  5576  002746  EC57  F016         	call	_Wait_N_Seconds
  5577                           
  5578                           ;Lab6p1.c: 385: Set_EWLT(3);
  5579  00274A  0E03               	movlw	3
  5580  00274C  ECC3  F015         	call	_Set_EWLT
  5581                           
  5582                           ;Lab6p1.c: 386: Wait_N_Seconds(3);
  5583  002750  0E03               	movlw	3
  5584  002752  EC57  F016         	call	_Wait_N_Seconds
  5585                           
  5586                           ;Lab6p1.c: 388: Set_EWLT(1);
  5587  002756  0E01               	movlw	1
  5588  002758  ECC3  F015         	call	_Set_EWLT
  5589  00275C                     l185:
  5590                           
  5591                           ;Lab6p1.c: 390: }
  5592                           ;Lab6p1.c: 392: Set_EW(2);
  5593  00275C  0E02               	movlw	2
  5594  00275E  ECDE  F015         	call	_Set_EW
  5595                           
  5596                           ;Lab6p1.c: 393: Wait_N_Seconds(6);
  5597  002762  0E06               	movlw	6
  5598  002764  EC57  F016         	call	_Wait_N_Seconds
  5599                           
  5600                           ;Lab6p1.c: 395: Set_EW(3);
  5601  002768  0E03               	movlw	3
  5602  00276A  ECDE  F015         	call	_Set_EW
  5603                           
  5604                           ;Lab6p1.c: 396: Wait_N_Seconds(3);
  5605  00276E  0E03               	movlw	3
  5606  002770  EC57  F016         	call	_Wait_N_Seconds
  5607                           
  5608                           ;Lab6p1.c: 398: Set_EW(1);
  5609  002774  0E01               	movlw	1
  5610  002776  ECDE  F015         	call	_Set_EW
  5611                           
  5612                           ;Lab6p1.c: 402: if ( PORTAbits.RA2 == 1 )
  5613  00277A  A480               	btfss	3968,2,c	;volatile
  5614  00277C  D010               	goto	l187
  5615                           
  5616                           ;Lab6p1.c: 404: {
  5617                           ;Lab6p1.c: 405: Set_NSLT(2);
  5618  00277E  0E02               	movlw	2
  5619  002780  EC8D  F015         	call	_Set_NSLT
  5620                           
  5621                           ;Lab6p1.c: 406: Wait_N_Seconds(8);
  5622  002784  0E08               	movlw	8
  5623  002786  EC57  F016         	call	_Wait_N_Seconds
  5624                           
  5625                           ;Lab6p1.c: 408: Set_NSLT(3);
  5626  00278A  0E03               	movlw	3
  5627  00278C  EC8D  F015         	call	_Set_NSLT
  5628                           
  5629                           ;Lab6p1.c: 409: Wait_N_Seconds(3);
  5630  002790  0E03               	movlw	3
  5631  002792  EC57  F016         	call	_Wait_N_Seconds
  5632                           
  5633                           ;Lab6p1.c: 411: Set_NSLT(1);
  5634  002796  0E01               	movlw	1
  5635  002798  EC8D  F015         	call	_Set_NSLT
  5636  00279C  D000               	goto	l187
  5637  00279E                     l187:
  5638  00279E  0012               	return		;funcret
  5639  0027A0                     __end_of_Night_Mode:
  5640                           	opt stack 0
  5641                           tblptru	equ	0xFF8
  5642                           tblptrh	equ	0xFF7
  5643                           tblptrl	equ	0xFF6
  5644                           tablat	equ	0xFF5
  5645                           prodh	equ	0xFF4
  5646                           prodl	equ	0xFF3
  5647                           postinc0	equ	0xFEE
  5648                           wreg	equ	0xFE8
  5649                           postdec1	equ	0xFE5
  5650                           fsr1l	equ	0xFE1
  5651                           postinc2	equ	0xFDE
  5652                           postdec2	equ	0xFDD
  5653                           fsr2h	equ	0xFDA
  5654                           fsr2l	equ	0xFD9
  5655                           status	equ	0xFD8
  5656                           
  5657 ;; *************** function _Day_Mode *****************
  5658 ;; Defined at:
  5659 ;;		line 288 in file "Lab6p1.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;		None               void
  5666 ;; Registers used:
  5667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    3
  5680 ;; This function calls:
  5681 ;;		_PED_Control
  5682 ;;		_Set_EW
  5683 ;;		_Set_EWLT
  5684 ;;		_Set_NS
  5685 ;;		_Set_NSLT
  5686 ;;		_Wait_N_Seconds
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text27
  5693  002528                     __ptext27:
  5694                           	opt stack 0
  5695  002528                     _Day_Mode:
  5696                           	opt stack 27
  5697                           
  5698                           ;Lab6p1.c: 292: Set_NS(2);
  5699                           
  5700                           ;incstack = 0
  5701  002528  0E02               	movlw	2
  5702  00252A  ECA8  F015         	call	_Set_NS
  5703                           
  5704                           ;Lab6p1.c: 294: Set_EW(1);
  5705  00252E  0E01               	movlw	1
  5706  002530  ECDE  F015         	call	_Set_EW
  5707                           
  5708                           ;Lab6p1.c: 295: Set_NSLT(1);
  5709  002534  0E01               	movlw	1
  5710  002536  EC8D  F015         	call	_Set_NSLT
  5711                           
  5712                           ;Lab6p1.c: 296: Set_EWLT(1);
  5713  00253A  0E01               	movlw	1
  5714  00253C  ECC3  F015         	call	_Set_EWLT
  5715                           
  5716                           ;Lab6p1.c: 298: if(PORTAbits.RA1 == 1)
  5717  002540  A280               	btfss	3968,1,c	;volatile
  5718  002542  D006               	goto	l2763
  5719                           
  5720                           ;Lab6p1.c: 299: {
  5721                           ;Lab6p1.c: 300: PED_Control(0,8);
  5722  002544  0E08               	movlw	8
  5723  002546  6E04               	movwf	PED_Control@Num_Sec,c
  5724  002548  0E00               	movlw	0
  5725  00254A  ECC7  F014         	call	_PED_Control
  5726  00254E  D000               	goto	l2763
  5727  002550                     l2763:
  5728                           
  5729                           ;Lab6p1.c: 302: }
  5730                           ;Lab6p1.c: 306: Wait_N_Seconds(7);
  5731  002550  0E07               	movlw	7
  5732  002552  EC57  F016         	call	_Wait_N_Seconds
  5733                           
  5734                           ;Lab6p1.c: 308: Set_NS(3);
  5735  002556  0E03               	movlw	3
  5736  002558  ECA8  F015         	call	_Set_NS
  5737                           
  5738                           ;Lab6p1.c: 309: Wait_N_Seconds(3);
  5739  00255C  0E03               	movlw	3
  5740  00255E  EC57  F016         	call	_Wait_N_Seconds
  5741                           
  5742                           ;Lab6p1.c: 311: Set_NS(1);
  5743  002562  0E01               	movlw	1
  5744  002564  ECA8  F015         	call	_Set_NS
  5745                           
  5746                           ;Lab6p1.c: 315: if(PORTAbits.RA4 == 1)
  5747  002568  A880               	btfss	3968,4,c	;volatile
  5748  00256A  D00F               	goto	l179
  5749                           
  5750                           ;Lab6p1.c: 316: {
  5751                           ;Lab6p1.c: 317: Set_EWLT(2);
  5752  00256C  0E02               	movlw	2
  5753  00256E  ECC3  F015         	call	_Set_EWLT
  5754                           
  5755                           ;Lab6p1.c: 318: Wait_N_Seconds(8);
  5756  002572  0E08               	movlw	8
  5757  002574  EC57  F016         	call	_Wait_N_Seconds
  5758                           
  5759                           ;Lab6p1.c: 320: Set_EWLT(3);
  5760  002578  0E03               	movlw	3
  5761  00257A  ECC3  F015         	call	_Set_EWLT
  5762                           
  5763                           ;Lab6p1.c: 321: Wait_N_Seconds(3);
  5764  00257E  0E03               	movlw	3
  5765  002580  EC57  F016         	call	_Wait_N_Seconds
  5766                           
  5767                           ;Lab6p1.c: 323: Set_EWLT(1);
  5768  002584  0E01               	movlw	1
  5769  002586  ECC3  F015         	call	_Set_EWLT
  5770  00258A                     l179:
  5771                           
  5772                           ;Lab6p1.c: 325: }
  5773                           ;Lab6p1.c: 327: Set_EW(2);
  5774  00258A  0E02               	movlw	2
  5775  00258C  ECDE  F015         	call	_Set_EW
  5776                           
  5777                           ;Lab6p1.c: 329: if( PORTAbits.RA3 == 1 )
  5778  002590  A680               	btfss	3968,3,c	;volatile
  5779  002592  D006               	goto	l2779
  5780                           
  5781                           ;Lab6p1.c: 330: {
  5782                           ;Lab6p1.c: 331: PED_Control(1,9);
  5783  002594  0E09               	movlw	9
  5784  002596  6E04               	movwf	PED_Control@Num_Sec,c
  5785  002598  0E01               	movlw	1
  5786  00259A  ECC7  F014         	call	_PED_Control
  5787  00259E  D000               	goto	l2779
  5788  0025A0                     l2779:
  5789                           
  5790                           ;Lab6p1.c: 332: }
  5791                           ;Lab6p1.c: 336: Wait_N_Seconds(9);
  5792  0025A0  0E09               	movlw	9
  5793  0025A2  EC57  F016         	call	_Wait_N_Seconds
  5794                           
  5795                           ;Lab6p1.c: 338: Set_EW(3);
  5796  0025A6  0E03               	movlw	3
  5797  0025A8  ECDE  F015         	call	_Set_EW
  5798                           
  5799                           ;Lab6p1.c: 339: Wait_N_Seconds(3);
  5800  0025AC  0E03               	movlw	3
  5801  0025AE  EC57  F016         	call	_Wait_N_Seconds
  5802                           
  5803                           ;Lab6p1.c: 341: Set_EW(1);
  5804  0025B2  0E01               	movlw	1
  5805  0025B4  ECDE  F015         	call	_Set_EW
  5806                           
  5807                           ;Lab6p1.c: 345: if(PORTAbits.RA2 == 1)
  5808  0025B8  A480               	btfss	3968,2,c	;volatile
  5809  0025BA  D010               	goto	l182
  5810                           
  5811                           ;Lab6p1.c: 347: {
  5812                           ;Lab6p1.c: 348: Set_NSLT(2);
  5813  0025BC  0E02               	movlw	2
  5814  0025BE  EC8D  F015         	call	_Set_NSLT
  5815                           
  5816                           ;Lab6p1.c: 349: Wait_N_Seconds(8);
  5817  0025C2  0E08               	movlw	8
  5818  0025C4  EC57  F016         	call	_Wait_N_Seconds
  5819                           
  5820                           ;Lab6p1.c: 351: Set_NSLT(3);
  5821  0025C8  0E03               	movlw	3
  5822  0025CA  EC8D  F015         	call	_Set_NSLT
  5823                           
  5824                           ;Lab6p1.c: 352: Wait_N_Seconds(3);
  5825  0025CE  0E03               	movlw	3
  5826  0025D0  EC57  F016         	call	_Wait_N_Seconds
  5827                           
  5828                           ;Lab6p1.c: 354: Set_NSLT(1);
  5829  0025D4  0E01               	movlw	1
  5830  0025D6  EC8D  F015         	call	_Set_NSLT
  5831  0025DA  D000               	goto	l182
  5832  0025DC                     l182:
  5833  0025DC  0012               	return		;funcret
  5834  0025DE                     __end_of_Day_Mode:
  5835                           	opt stack 0
  5836                           tblptru	equ	0xFF8
  5837                           tblptrh	equ	0xFF7
  5838                           tblptrl	equ	0xFF6
  5839                           tablat	equ	0xFF5
  5840                           prodh	equ	0xFF4
  5841                           prodl	equ	0xFF3
  5842                           postinc0	equ	0xFEE
  5843                           wreg	equ	0xFE8
  5844                           postdec1	equ	0xFE5
  5845                           fsr1l	equ	0xFE1
  5846                           postinc2	equ	0xFDE
  5847                           postdec2	equ	0xFDD
  5848                           fsr2h	equ	0xFDA
  5849                           fsr2l	equ	0xFD9
  5850                           status	equ	0xFD8
  5851                           
  5852 ;; *************** function _Wait_N_Seconds *****************
  5853 ;; Defined at:
  5854 ;;		line 166 in file "Lab6p1.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  seconds         1    wreg     unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  seconds         1    0[COMRAM] unsigned char 
  5859 ;;  I               1    1[COMRAM] unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;		None               void
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;Total ram usage:        2 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    2
  5876 ;; This function calls:
  5877 ;;		_Wait_One_Second
  5878 ;; This function is called by:
  5879 ;;		_Day_Mode
  5880 ;;		_Night_Mode
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text28
  5885  002CAE                     __ptext28:
  5886                           	opt stack 0
  5887  002CAE                     _Wait_N_Seconds:
  5888                           	opt stack 27
  5889                           
  5890                           ;incstack = 0
  5891                           ;Wait_N_Seconds@seconds stored from wreg
  5892  002CAE  6E01               	movwf	Wait_N_Seconds@seconds,c
  5893                           
  5894                           ;Lab6p1.c: 168: char I;
  5895                           ;Lab6p1.c: 170: for( I = 0; I < seconds; I++)
  5896  002CB0  0E00               	movlw	0
  5897  002CB2  6E02               	movwf	Wait_N_Seconds@I,c
  5898  002CB4  D004               	goto	l1285
  5899  002CB6                     l1281:
  5900                           
  5901                           ;Lab6p1.c: 171: {
  5902                           ;Lab6p1.c: 172: Wait_One_Second();
  5903  002CB6  ECA7  F016         	call	_Wait_One_Second	;wreg free
  5904  002CBA  2A02               	incf	Wait_N_Seconds@I,f,c
  5905  002CBC  D000               	goto	l1285
  5906  002CBE                     l1285:
  5907  002CBE  5001               	movf	Wait_N_Seconds@seconds,w,c
  5908  002CC0  5C02               	subwf	Wait_N_Seconds@I,w,c
  5909  002CC2  A0D8               	btfss	status,0,c
  5910  002CC4  D7F8               	goto	l1281
  5911  002CC6  0012               	return		;funcret
  5912  002CC8                     __end_of_Wait_N_Seconds:
  5913                           	opt stack 0
  5914                           tblptru	equ	0xFF8
  5915                           tblptrh	equ	0xFF7
  5916                           tblptrl	equ	0xFF6
  5917                           tablat	equ	0xFF5
  5918                           prodh	equ	0xFF4
  5919                           prodl	equ	0xFF3
  5920                           postinc0	equ	0xFEE
  5921                           wreg	equ	0xFE8
  5922                           postdec1	equ	0xFE5
  5923                           fsr1l	equ	0xFE1
  5924                           postinc2	equ	0xFDE
  5925                           postdec2	equ	0xFDD
  5926                           fsr2h	equ	0xFDA
  5927                           fsr2l	equ	0xFD9
  5928                           status	equ	0xFD8
  5929                           
  5930 ;; *************** function _Wait_One_Second *****************
  5931 ;; Defined at:
  5932 ;;		line 158 in file "Lab6p1.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;		None               void
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;Total ram usage:        0 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    1
  5953 ;; This function calls:
  5954 ;;		_Wait_Half_Second
  5955 ;; This function is called by:
  5956 ;;		_Wait_N_Seconds
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text29
  5961  002D4E                     __ptext29:
  5962                           	opt stack 0
  5963  002D4E                     _Wait_One_Second:
  5964                           	opt stack 27
  5965                           
  5966                           ;Lab6p1.c: 160: PORTDbits.RD7 = 0;
  5967                           
  5968                           ;incstack = 0
  5969  002D4E  9E83               	bcf	3971,7,c	;volatile
  5970                           
  5971                           ;Lab6p1.c: 161: Wait_Half_Second();
  5972  002D50  EC64  F016         	call	_Wait_Half_Second	;wreg free
  5973                           
  5974                           ;Lab6p1.c: 162: PORTDbits.RD7 = 1;
  5975  002D54  8E83               	bsf	3971,7,c	;volatile
  5976                           
  5977                           ;Lab6p1.c: 163: Wait_Half_Second();
  5978  002D56  EC64  F016         	call	_Wait_Half_Second	;wreg free
  5979  002D5A  0012               	return		;funcret
  5980  002D5C                     __end_of_Wait_One_Second:
  5981                           	opt stack 0
  5982                           tblptru	equ	0xFF8
  5983                           tblptrh	equ	0xFF7
  5984                           tblptrl	equ	0xFF6
  5985                           tablat	equ	0xFF5
  5986                           prodh	equ	0xFF4
  5987                           prodl	equ	0xFF3
  5988                           postinc0	equ	0xFEE
  5989                           wreg	equ	0xFE8
  5990                           postdec1	equ	0xFE5
  5991                           fsr1l	equ	0xFE1
  5992                           postinc2	equ	0xFDE
  5993                           postdec2	equ	0xFDD
  5994                           fsr2h	equ	0xFDA
  5995                           fsr2l	equ	0xFD9
  5996                           status	equ	0xFD8
  5997                           
  5998 ;; *************** function _Set_NSLT *****************
  5999 ;; Defined at:
  6000 ;;		line 212 in file "Lab6p1.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  color           1    wreg     unsigned char 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  color           1    0[COMRAM] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;		None               void
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;Total ram usage:        1 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_Day_Mode
  6024 ;;		_Night_Mode
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text30
  6029  002B1A                     __ptext30:
  6030                           	opt stack 0
  6031  002B1A                     _Set_NSLT:
  6032                           	opt stack 29
  6033                           
  6034                           ;incstack = 0
  6035                           ;Set_NSLT@color stored from wreg
  6036  002B1A  6E01               	movwf	Set_NSLT@color,c
  6037                           
  6038                           ;Lab6p1.c: 214: switch (color)
  6039  002B1C  D00A               	goto	l1297
  6040  002B1E                     l141:
  6041  002B1E  9281               	bcf	3969,1,c	;volatile
  6042  002B20  D001               	goto	L8
  6043  002B22                     l143:
  6044  002B22  8281               	bsf	3969,1,c	;volatile
  6045  002B24                     L8:
  6046  002B24  9481               	bcf	3969,2,c	;volatile
  6047  002B26  D013               	goto	l146
  6048  002B28                     l144:
  6049  002B28  9281               	bcf	3969,1,c	;volatile
  6050  002B2A  D001               	goto	L9
  6051  002B2C                     l145:
  6052  002B2C  8281               	bsf	3969,1,c	;volatile
  6053  002B2E                     L9:
  6054  002B2E  8481               	bsf	3969,2,c	;volatile
  6055                           
  6056                           ;Lab6p1.c: 220: }
  6057  002B30  D00E               	goto	l146
  6058  002B32                     l1297:
  6059  002B32  5001               	movf	Set_NSLT@color,w,c
  6060                           
  6061                           ; Switch size 1, requested type "space"
  6062                           ; Number of cases is 4, Range of values is 0 to 3
  6063                           ; switch strategies available:
  6064                           ; Name         Instructions Cycles
  6065                           ; simple_byte           13     7 (average)
  6066                           ;	Chosen strategy is simple_byte
  6067  002B34  0A00               	xorlw	0	; case 0
  6068  002B36  B4D8               	btfsc	status,2,c
  6069  002B38  D7F2               	goto	l141
  6070  002B3A  0A01               	xorlw	1	; case 1
  6071  002B3C  B4D8               	btfsc	status,2,c
  6072  002B3E  D7F1               	goto	l143
  6073  002B40  0A03               	xorlw	3	; case 2
  6074  002B42  B4D8               	btfsc	status,2,c
  6075  002B44  D7F1               	goto	l144
  6076  002B46  0A01               	xorlw	1	; case 3
  6077  002B48  B4D8               	btfsc	status,2,c
  6078  002B4A  D7F0               	goto	l145
  6079  002B4C  D000               	goto	l146
  6080  002B4E                     l146:
  6081  002B4E  0012               	return		;funcret
  6082  002B50                     __end_of_Set_NSLT:
  6083                           	opt stack 0
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           prodh	equ	0xFF4
  6089                           prodl	equ	0xFF3
  6090                           postinc0	equ	0xFEE
  6091                           wreg	equ	0xFE8
  6092                           postdec1	equ	0xFE5
  6093                           fsr1l	equ	0xFE1
  6094                           postinc2	equ	0xFDE
  6095                           postdec2	equ	0xFDD
  6096                           fsr2h	equ	0xFDA
  6097                           fsr2l	equ	0xFD9
  6098                           status	equ	0xFD8
  6099                           
  6100 ;; *************** function _Set_NS *****************
  6101 ;; Defined at:
  6102 ;;		line 201 in file "Lab6p1.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  color           1    wreg     unsigned char 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  color           1    0[COMRAM] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;		None               void
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:        1 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_Day_Mode
  6126 ;;		_Night_Mode
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text31
  6131  002B50                     __ptext31:
  6132                           	opt stack 0
  6133  002B50                     _Set_NS:
  6134                           	opt stack 29
  6135                           
  6136                           ;incstack = 0
  6137                           ;Set_NS@color stored from wreg
  6138  002B50  6E01               	movwf	Set_NS@color,c
  6139                           
  6140                           ;Lab6p1.c: 203: switch (color)
  6141  002B52  D00A               	goto	l1291
  6142  002B54                     l132:
  6143  002B54  9A80               	bcf	3968,5,c	;volatile
  6144  002B56  D001               	goto	L10
  6145  002B58                     l134:
  6146  002B58  8A80               	bsf	3968,5,c	;volatile
  6147  002B5A                     L10:
  6148  002B5A  9081               	bcf	3969,0,c	;volatile
  6149  002B5C  D013               	goto	l137
  6150  002B5E                     l135:
  6151  002B5E  9A80               	bcf	3968,5,c	;volatile
  6152  002B60  D001               	goto	L11
  6153  002B62                     l136:
  6154  002B62  8A80               	bsf	3968,5,c	;volatile
  6155  002B64                     L11:
  6156  002B64  8081               	bsf	3969,0,c	;volatile
  6157                           
  6158                           ;Lab6p1.c: 209: }
  6159  002B66  D00E               	goto	l137
  6160  002B68                     l1291:
  6161  002B68  5001               	movf	Set_NS@color,w,c
  6162                           
  6163                           ; Switch size 1, requested type "space"
  6164                           ; Number of cases is 4, Range of values is 0 to 3
  6165                           ; switch strategies available:
  6166                           ; Name         Instructions Cycles
  6167                           ; simple_byte           13     7 (average)
  6168                           ;	Chosen strategy is simple_byte
  6169  002B6A  0A00               	xorlw	0	; case 0
  6170  002B6C  B4D8               	btfsc	status,2,c
  6171  002B6E  D7F2               	goto	l132
  6172  002B70  0A01               	xorlw	1	; case 1
  6173  002B72  B4D8               	btfsc	status,2,c
  6174  002B74  D7F1               	goto	l134
  6175  002B76  0A03               	xorlw	3	; case 2
  6176  002B78  B4D8               	btfsc	status,2,c
  6177  002B7A  D7F1               	goto	l135
  6178  002B7C  0A01               	xorlw	1	; case 3
  6179  002B7E  B4D8               	btfsc	status,2,c
  6180  002B80  D7F0               	goto	l136
  6181  002B82  D000               	goto	l137
  6182  002B84                     l137:
  6183  002B84  0012               	return		;funcret
  6184  002B86                     __end_of_Set_NS:
  6185                           	opt stack 0
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           postinc0	equ	0xFEE
  6193                           wreg	equ	0xFE8
  6194                           postdec1	equ	0xFE5
  6195                           fsr1l	equ	0xFE1
  6196                           postinc2	equ	0xFDE
  6197                           postdec2	equ	0xFDD
  6198                           fsr2h	equ	0xFDA
  6199                           fsr2l	equ	0xFD9
  6200                           status	equ	0xFD8
  6201                           
  6202 ;; *************** function _Set_EWLT *****************
  6203 ;; Defined at:
  6204 ;;		line 234 in file "Lab6p1.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  color           1    wreg     unsigned char 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  color           1    0[COMRAM] unsigned char 
  6209 ;; Return value:  Size  Location     Type
  6210 ;;		None               void
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;Total ram usage:        1 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_Day_Mode
  6228 ;;		_Night_Mode
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text32
  6233  002B86                     __ptext32:
  6234                           	opt stack 0
  6235  002B86                     _Set_EWLT:
  6236                           	opt stack 29
  6237                           
  6238                           ;incstack = 0
  6239                           ;Set_EWLT@color stored from wreg
  6240  002B86  6E01               	movwf	Set_EWLT@color,c
  6241                           
  6242                           ;Lab6p1.c: 236: switch (color)
  6243  002B88  D00A               	goto	l1309
  6244  002B8A                     l159:
  6245  002B8A  9284               	bcf	3972,1,c	;volatile
  6246  002B8C  D001               	goto	L12
  6247  002B8E                     l161:
  6248  002B8E  8284               	bsf	3972,1,c	;volatile
  6249  002B90                     L12:
  6250  002B90  9484               	bcf	3972,2,c	;volatile
  6251  002B92  D013               	goto	l164
  6252  002B94                     l162:
  6253  002B94  9284               	bcf	3972,1,c	;volatile
  6254  002B96  D001               	goto	L13
  6255  002B98                     l163:
  6256  002B98  8284               	bsf	3972,1,c	;volatile
  6257  002B9A                     L13:
  6258  002B9A  8484               	bsf	3972,2,c	;volatile
  6259                           
  6260                           ;Lab6p1.c: 242: }
  6261  002B9C  D00E               	goto	l164
  6262  002B9E                     l1309:
  6263  002B9E  5001               	movf	Set_EWLT@color,w,c
  6264                           
  6265                           ; Switch size 1, requested type "space"
  6266                           ; Number of cases is 4, Range of values is 0 to 3
  6267                           ; switch strategies available:
  6268                           ; Name         Instructions Cycles
  6269                           ; simple_byte           13     7 (average)
  6270                           ;	Chosen strategy is simple_byte
  6271  002BA0  0A00               	xorlw	0	; case 0
  6272  002BA2  B4D8               	btfsc	status,2,c
  6273  002BA4  D7F2               	goto	l159
  6274  002BA6  0A01               	xorlw	1	; case 1
  6275  002BA8  B4D8               	btfsc	status,2,c
  6276  002BAA  D7F1               	goto	l161
  6277  002BAC  0A03               	xorlw	3	; case 2
  6278  002BAE  B4D8               	btfsc	status,2,c
  6279  002BB0  D7F1               	goto	l162
  6280  002BB2  0A01               	xorlw	1	; case 3
  6281  002BB4  B4D8               	btfsc	status,2,c
  6282  002BB6  D7F0               	goto	l163
  6283  002BB8  D000               	goto	l164
  6284  002BBA                     l164:
  6285  002BBA  0012               	return		;funcret
  6286  002BBC                     __end_of_Set_EWLT:
  6287                           	opt stack 0
  6288                           tblptru	equ	0xFF8
  6289                           tblptrh	equ	0xFF7
  6290                           tblptrl	equ	0xFF6
  6291                           tablat	equ	0xFF5
  6292                           prodh	equ	0xFF4
  6293                           prodl	equ	0xFF3
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           postdec1	equ	0xFE5
  6297                           fsr1l	equ	0xFE1
  6298                           postinc2	equ	0xFDE
  6299                           postdec2	equ	0xFDD
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function _Set_EW *****************
  6305 ;; Defined at:
  6306 ;;		line 223 in file "Lab6p1.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  color           1    wreg     unsigned char 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  color           1    0[COMRAM] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;		None               void
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;Total ram usage:        1 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_Day_Mode
  6330 ;;		_Night_Mode
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text33
  6335  002BBC                     __ptext33:
  6336                           	opt stack 0
  6337  002BBC                     _Set_EW:
  6338                           	opt stack 29
  6339                           
  6340                           ;incstack = 0
  6341                           ;Set_EW@color stored from wreg
  6342  002BBC  6E01               	movwf	Set_EW@color,c
  6343                           
  6344                           ;Lab6p1.c: 225: switch (color)
  6345  002BBE  D00A               	goto	l1303
  6346  002BC0                     l150:
  6347  002BC0  9881               	bcf	3969,4,c	;volatile
  6348  002BC2  D001               	goto	L14
  6349  002BC4                     l152:
  6350  002BC4  8881               	bsf	3969,4,c	;volatile
  6351  002BC6                     L14:
  6352  002BC6  9A81               	bcf	3969,5,c	;volatile
  6353  002BC8  D013               	goto	l155
  6354  002BCA                     l153:
  6355  002BCA  9881               	bcf	3969,4,c	;volatile
  6356  002BCC  D001               	goto	L15
  6357  002BCE                     l154:
  6358  002BCE  8881               	bsf	3969,4,c	;volatile
  6359  002BD0                     L15:
  6360  002BD0  8A81               	bsf	3969,5,c	;volatile
  6361                           
  6362                           ;Lab6p1.c: 231: }
  6363  002BD2  D00E               	goto	l155
  6364  002BD4                     l1303:
  6365  002BD4  5001               	movf	Set_EW@color,w,c
  6366                           
  6367                           ; Switch size 1, requested type "space"
  6368                           ; Number of cases is 4, Range of values is 0 to 3
  6369                           ; switch strategies available:
  6370                           ; Name         Instructions Cycles
  6371                           ; simple_byte           13     7 (average)
  6372                           ;	Chosen strategy is simple_byte
  6373  002BD6  0A00               	xorlw	0	; case 0
  6374  002BD8  B4D8               	btfsc	status,2,c
  6375  002BDA  D7F2               	goto	l150
  6376  002BDC  0A01               	xorlw	1	; case 1
  6377  002BDE  B4D8               	btfsc	status,2,c
  6378  002BE0  D7F1               	goto	l152
  6379  002BE2  0A03               	xorlw	3	; case 2
  6380  002BE4  B4D8               	btfsc	status,2,c
  6381  002BE6  D7F1               	goto	l153
  6382  002BE8  0A01               	xorlw	1	; case 3
  6383  002BEA  B4D8               	btfsc	status,2,c
  6384  002BEC  D7F0               	goto	l154
  6385  002BEE  D000               	goto	l155
  6386  002BF0                     l155:
  6387  002BF0  0012               	return		;funcret
  6388  002BF2                     __end_of_Set_EW:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           postinc0	equ	0xFEE
  6397                           wreg	equ	0xFE8
  6398                           postdec1	equ	0xFE5
  6399                           fsr1l	equ	0xFE1
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _PED_Control *****************
  6407 ;; Defined at:
  6408 ;;		line 245 in file "Lab6p1.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  Direction       1    wreg     unsigned char 
  6411 ;;  Num_Sec         1    3[COMRAM] unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  Direction       1    4[COMRAM] unsigned char 
  6414 ;;  i               1    6[COMRAM] unsigned char 
  6415 ;;  i               1    5[COMRAM] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;		None               void
  6418 ;; Registers used:
  6419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6426 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;Total ram usage:        4 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    2
  6432 ;; This function calls:
  6433 ;;		_DISPLAY_LOWER_7SEG
  6434 ;;		_DISPLAY_UPPER_7SEG
  6435 ;;		_Wait_One_Second_With_Beep
  6436 ;; This function is called by:
  6437 ;;		_Day_Mode
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text34
  6442  00298E                     __ptext34:
  6443                           	opt stack 0
  6444  00298E                     _PED_Control:
  6445                           	opt stack 27
  6446                           
  6447                           ;incstack = 0
  6448                           ;PED_Control@Direction stored from wreg
  6449  00298E  6E05               	movwf	PED_Control@Direction,c
  6450                           
  6451                           ;Lab6p1.c: 249: if(Direction == 0)
  6452  002990  5005               	movf	PED_Control@Direction,w,c
  6453  002992  A4D8               	btfss	status,2,c
  6454  002994  D016               	goto	l2271
  6455                           
  6456                           ;Lab6p1.c: 250: { PORTD = 0xFF;
  6457  002996  6883               	setf	3971,c	;volatile
  6458                           
  6459                           ;Lab6p1.c: 252: for(char i = 1; i < Num_Sec; i++ )
  6460  002998  0E01               	movlw	1
  6461  00299A  6E06               	movwf	PED_Control@i,c
  6462  00299C  D009               	goto	l2267
  6463  00299E                     l2261:
  6464                           
  6465                           ;Lab6p1.c: 253: {
  6466                           ;Lab6p1.c: 254: DISPLAY_UPPER_7SEG(Num_Sec - i);
  6467  00299E  5006               	movf	PED_Control@i,w,c
  6468  0029A0  0800               	sublw	0
  6469  0029A2  2404               	addwf	PED_Control@Num_Sec,w,c
  6470  0029A4  EC50  F015         	call	_DISPLAY_UPPER_7SEG
  6471                           
  6472                           ;Lab6p1.c: 255: Wait_One_Second_With_Beep();
  6473  0029A8  EC71  F016         	call	_Wait_One_Second_With_Beep	;wreg free
  6474  0029AC  2A06               	incf	PED_Control@i,f,c
  6475  0029AE  D000               	goto	l2267
  6476  0029B0                     l2267:
  6477  0029B0  5004               	movf	PED_Control@Num_Sec,w,c
  6478  0029B2  5C06               	subwf	PED_Control@i,w,c
  6479  0029B4  A0D8               	btfss	status,0,c
  6480  0029B6  D7F3               	goto	l2261
  6481                           
  6482                           ;Lab6p1.c: 256: }
  6483                           ;Lab6p1.c: 260: PORTC = 0xFF;
  6484  0029B8  6882               	setf	3970,c	;volatile
  6485                           
  6486                           ;Lab6p1.c: 261: PORTEbits.RE0 = 1;
  6487  0029BA  8084               	bsf	3972,0,c	;volatile
  6488                           
  6489                           ;Lab6p1.c: 262: Wait_One_Second_With_Beep();
  6490  0029BC  EC71  F016         	call	_Wait_One_Second_With_Beep	;wreg free
  6491  0029C0  D000               	goto	l2271
  6492  0029C2                     l2271:
  6493                           
  6494                           ;Lab6p1.c: 263: }
  6495                           ;Lab6p1.c: 265: if(Direction == 1)
  6496  0029C2  0405               	decf	PED_Control@Direction,w,c
  6497  0029C4  A4D8               	btfss	status,2,c
  6498  0029C6  D016               	goto	l2287
  6499                           
  6500                           ;Lab6p1.c: 266: { PORTC = 0xFF;
  6501  0029C8  6882               	setf	3970,c	;volatile
  6502                           
  6503                           ;Lab6p1.c: 267: PORTEbits.RE0 = 1;
  6504  0029CA  8084               	bsf	3972,0,c	;volatile
  6505                           
  6506                           ;Lab6p1.c: 269: for(char i = 1; i < Num_Sec; i++ )
  6507  0029CC  0E01               	movlw	1
  6508  0029CE  6E07               	movwf	PED_Control@i_765,c
  6509  0029D0  D009               	goto	l2283
  6510  0029D2                     l2277:
  6511                           
  6512                           ;Lab6p1.c: 270: {
  6513                           ;Lab6p1.c: 271: DISPLAY_LOWER_7SEG( Num_Sec - i);
  6514  0029D2  5007               	movf	PED_Control@i_765,w,c
  6515  0029D4  0800               	sublw	0
  6516  0029D6  2404               	addwf	PED_Control@Num_Sec,w,c
  6517  0029D8  EC47  F016         	call	_DISPLAY_LOWER_7SEG
  6518                           
  6519                           ;Lab6p1.c: 272: Wait_One_Second_With_Beep();
  6520  0029DC  EC71  F016         	call	_Wait_One_Second_With_Beep	;wreg free
  6521  0029E0  2A07               	incf	PED_Control@i_765,f,c
  6522  0029E2  D000               	goto	l2283
  6523  0029E4                     l2283:
  6524  0029E4  5004               	movf	PED_Control@Num_Sec,w,c
  6525  0029E6  5C07               	subwf	PED_Control@i_765,w,c
  6526  0029E8  A0D8               	btfss	status,0,c
  6527  0029EA  D7F3               	goto	l2277
  6528                           
  6529                           ;Lab6p1.c: 274: }
  6530                           ;Lab6p1.c: 278: PORTD = 0xFF;
  6531  0029EC  6883               	setf	3971,c	;volatile
  6532                           
  6533                           ;Lab6p1.c: 279: Wait_One_Second_With_Beep();
  6534  0029EE  EC71  F016         	call	_Wait_One_Second_With_Beep	;wreg free
  6535  0029F2  D000               	goto	l2287
  6536  0029F4                     l2287:
  6537                           
  6538                           ;Lab6p1.c: 281: }
  6539                           ;Lab6p1.c: 283: PORTC = 0xFF;
  6540  0029F4  6882               	setf	3970,c	;volatile
  6541                           
  6542                           ;Lab6p1.c: 284: PORTEbits.RE0 = 1;
  6543  0029F6  8084               	bsf	3972,0,c	;volatile
  6544                           
  6545                           ;Lab6p1.c: 285: PORTD = 0xFF;
  6546  0029F8  6883               	setf	3971,c	;volatile
  6547  0029FA  0012               	return		;funcret
  6548  0029FC                     __end_of_PED_Control:
  6549                           	opt stack 0
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           postinc0	equ	0xFEE
  6557                           wreg	equ	0xFE8
  6558                           postdec1	equ	0xFE5
  6559                           fsr1l	equ	0xFE1
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _Wait_One_Second_With_Beep *****************
  6567 ;; Defined at:
  6568 ;;		line 191 in file "Lab6p1.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    1
  6589 ;; This function calls:
  6590 ;;		_Activate_Buzzer
  6591 ;;		_Deactivate_Buzzer
  6592 ;;		_Wait_Half_Second
  6593 ;; This function is called by:
  6594 ;;		_PED_Control
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text35
  6599  002CE2                     __ptext35:
  6600                           	opt stack 0
  6601  002CE2                     _Wait_One_Second_With_Beep:
  6602                           	opt stack 27
  6603                           
  6604                           ;Lab6p1.c: 193: PORTDbits.RD7 = 1;
  6605                           
  6606                           ;incstack = 0
  6607  002CE2  8E83               	bsf	3971,7,c	;volatile
  6608                           
  6609                           ;Lab6p1.c: 194: Activate_Buzzer();
  6610  002CE4  EC90  F016         	call	_Activate_Buzzer	;wreg free
  6611                           
  6612                           ;Lab6p1.c: 195: Wait_Half_Second();
  6613  002CE8  EC64  F016         	call	_Wait_Half_Second	;wreg free
  6614                           
  6615                           ;Lab6p1.c: 196: PORTDbits.RD7 = 0;
  6616  002CEC  9E83               	bcf	3971,7,c	;volatile
  6617                           
  6618                           ;Lab6p1.c: 197: Deactivate_Buzzer();
  6619  002CEE  ECAE  F016         	call	_Deactivate_Buzzer	;wreg free
  6620                           
  6621                           ;Lab6p1.c: 198: Wait_Half_Second();
  6622  002CF2  EC64  F016         	call	_Wait_Half_Second	;wreg free
  6623  002CF6  0012               	return		;funcret
  6624  002CF8                     __end_of_Wait_One_Second_With_Beep:
  6625                           	opt stack 0
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           postinc0	equ	0xFEE
  6633                           wreg	equ	0xFE8
  6634                           postdec1	equ	0xFE5
  6635                           fsr1l	equ	0xFE1
  6636                           postinc2	equ	0xFDE
  6637                           postdec2	equ	0xFDD
  6638                           fsr2h	equ	0xFDA
  6639                           fsr2l	equ	0xFD9
  6640                           status	equ	0xFD8
  6641                           
  6642 ;; *************** function _Wait_Half_Second *****************
  6643 ;; Defined at:
  6644 ;;		line 148 in file "Lab6p1.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;		None               void
  6651 ;; Registers used:
  6652 ;;		wreg, status,2
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_Wait_One_Second
  6668 ;;		_Wait_One_Second_With_Beep
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text36
  6673  002CC8                     __ptext36:
  6674                           	opt stack 0
  6675  002CC8                     _Wait_Half_Second:
  6676                           	opt stack 27
  6677                           
  6678                           ;Lab6p1.c: 150: T0CON = 0x02;
  6679                           
  6680                           ;incstack = 0
  6681  002CC8  0E02               	movlw	2
  6682  002CCA  6ED5               	movwf	4053,c	;volatile
  6683                           
  6684                           ;Lab6p1.c: 151: TMR0L = 0xDB;
  6685  002CCC  0EDB               	movlw	219
  6686  002CCE  6ED6               	movwf	4054,c	;volatile
  6687                           
  6688                           ;Lab6p1.c: 152: TMR0H = 0x0B;
  6689  002CD0  0E0B               	movlw	11
  6690  002CD2  6ED7               	movwf	4055,c	;volatile
  6691                           
  6692                           ;Lab6p1.c: 153: INTCONbits.TMR0IF = 0;
  6693  002CD4  94F2               	bcf	intcon,2,c	;volatile
  6694                           
  6695                           ;Lab6p1.c: 154: T0CONbits.TMR0ON = 1;
  6696  002CD6  8ED5               	bsf	4053,7,c	;volatile
  6697                           
  6698                           ;Lab6p1.c: 155: while (INTCONbits.TMR0IF == 0);
  6699  002CD8  D000               	goto	l107
  6700  002CDA                     l107:
  6701  002CDA  A4F2               	btfss	intcon,2,c	;volatile
  6702  002CDC  D7FE               	goto	l107
  6703                           
  6704                           ;Lab6p1.c: 156: T0CONbits.TMR0ON = 0;
  6705  002CDE  9ED5               	bcf	4053,7,c	;volatile
  6706  002CE0  0012               	return		;funcret
  6707  002CE2                     __end_of_Wait_Half_Second:
  6708                           	opt stack 0
  6709                           tblptru	equ	0xFF8
  6710                           tblptrh	equ	0xFF7
  6711                           tblptrl	equ	0xFF6
  6712                           tablat	equ	0xFF5
  6713                           prodh	equ	0xFF4
  6714                           prodl	equ	0xFF3
  6715                           intcon	equ	0xFF2
  6716                           postinc0	equ	0xFEE
  6717                           wreg	equ	0xFE8
  6718                           postdec1	equ	0xFE5
  6719                           fsr1l	equ	0xFE1
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function _Deactivate_Buzzer *****************
  6727 ;; Defined at:
  6728 ;;		line 185 in file "Lab6p1.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;		None
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;		None
  6733 ;; Return value:  Size  Location     Type
  6734 ;;		None               void
  6735 ;; Registers used:
  6736 ;;		wreg, status,2
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;Total ram usage:        0 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; This function calls:
  6749 ;;		Nothing
  6750 ;; This function is called by:
  6751 ;;		_Wait_One_Second_With_Beep
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text37
  6756  002D5C                     __ptext37:
  6757                           	opt stack 0
  6758  002D5C                     _Deactivate_Buzzer:
  6759                           	opt stack 27
  6760                           
  6761                           ;Lab6p1.c: 187: CCP2CON = 0x0;
  6762                           
  6763                           ;incstack = 0
  6764  002D5C  0E00               	movlw	0
  6765  002D5E  6EBA               	movwf	4026,c	;volatile
  6766                           
  6767                           ;Lab6p1.c: 188: PORTBbits.RB3 = 0;
  6768  002D60  9681               	bcf	3969,3,c	;volatile
  6769  002D62  0012               	return		;funcret
  6770  002D64                     __end_of_Deactivate_Buzzer:
  6771                           	opt stack 0
  6772                           tblptru	equ	0xFF8
  6773                           tblptrh	equ	0xFF7
  6774                           tblptrl	equ	0xFF6
  6775                           tablat	equ	0xFF5
  6776                           prodh	equ	0xFF4
  6777                           prodl	equ	0xFF3
  6778                           intcon	equ	0xFF2
  6779                           postinc0	equ	0xFEE
  6780                           wreg	equ	0xFE8
  6781                           postdec1	equ	0xFE5
  6782                           fsr1l	equ	0xFE1
  6783                           postinc2	equ	0xFDE
  6784                           postdec2	equ	0xFDD
  6785                           fsr2h	equ	0xFDA
  6786                           fsr2l	equ	0xFD9
  6787                           status	equ	0xFD8
  6788                           
  6789 ;; *************** function _Activate_Buzzer *****************
  6790 ;; Defined at:
  6791 ;;		line 177 in file "Lab6p1.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;		None               void
  6798 ;; Registers used:
  6799 ;;		wreg, status,2
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;Total ram usage:        0 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_Wait_One_Second_With_Beep
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text38
  6819  002D20                     __ptext38:
  6820                           	opt stack 0
  6821  002D20                     _Activate_Buzzer:
  6822                           	opt stack 27
  6823                           
  6824                           ;Lab6p1.c: 179: PR2 = 0b11111001;
  6825                           
  6826                           ;incstack = 0
  6827  002D20  0EF9               	movlw	249
  6828  002D22  6ECB               	movwf	4043,c	;volatile
  6829                           
  6830                           ;Lab6p1.c: 180: T2CON = 0b00000101;
  6831  002D24  0E05               	movlw	5
  6832  002D26  6ECA               	movwf	4042,c	;volatile
  6833                           
  6834                           ;Lab6p1.c: 181: CCPR2L = 0b01001010;
  6835  002D28  0E4A               	movlw	74
  6836  002D2A  6EBB               	movwf	4027,c	;volatile
  6837                           
  6838                           ;Lab6p1.c: 182: CCP2CON = 0b00111100;
  6839  002D2C  0E3C               	movlw	60
  6840  002D2E  6EBA               	movwf	4026,c	;volatile
  6841  002D30  0012               	return		;funcret
  6842  002D32                     __end_of_Activate_Buzzer:
  6843                           	opt stack 0
  6844                           tblptru	equ	0xFF8
  6845                           tblptrh	equ	0xFF7
  6846                           tblptrl	equ	0xFF6
  6847                           tablat	equ	0xFF5
  6848                           prodh	equ	0xFF4
  6849                           prodl	equ	0xFF3
  6850                           intcon	equ	0xFF2
  6851                           postinc0	equ	0xFEE
  6852                           wreg	equ	0xFE8
  6853                           postdec1	equ	0xFE5
  6854                           fsr1l	equ	0xFE1
  6855                           postinc2	equ	0xFDE
  6856                           postdec2	equ	0xFDD
  6857                           fsr2h	equ	0xFDA
  6858                           fsr2l	equ	0xFD9
  6859                           status	equ	0xFD8
  6860                           
  6861 ;; *************** function _DISPLAY_UPPER_7SEG *****************
  6862 ;; Defined at:
  6863 ;;		line 420 in file "Lab6p1.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  Upper           1    wreg     unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  Upper           1    1[COMRAM] unsigned char 
  6868 ;;  testbit         1    0[COMRAM] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;		None               void
  6871 ;; Registers used:
  6872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;Total ram usage:        2 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_PED_Control
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text39
  6892  002AA0                     __ptext39:
  6893                           	opt stack 0
  6894  002AA0                     _DISPLAY_UPPER_7SEG:
  6895                           	opt stack 28
  6896                           
  6897                           ;incstack = 0
  6898                           ;DISPLAY_UPPER_7SEG@Upper stored from wreg
  6899  002AA0  6E02               	movwf	DISPLAY_UPPER_7SEG@Upper,c
  6900                           
  6901                           ;Lab6p1.c: 422: PORTC = segDisplay[Upper] & 0x3F;
  6902  002AA2  5002               	movf	DISPLAY_UPPER_7SEG@Upper,w,c
  6903  002AA4  0D02               	mullw	2
  6904  002AA6  0E67               	movlw	low _segDisplay
  6905  002AA8  24F3               	addwf	prodl,w,c
  6906  002AAA  6ED9               	movwf	fsr2l,c
  6907  002AAC  0E00               	movlw	high _segDisplay
  6908  002AAE  20F4               	addwfc	prodh,w,c
  6909  002AB0  6EDA               	movwf	fsr2h,c
  6910  002AB2  50DF               	movf	indf2,w,c
  6911  002AB4  0B3F               	andlw	63
  6912  002AB6  6E82               	movwf	3970,c	;volatile
  6913                           
  6914                           ;Lab6p1.c: 423: char testbit = segDisplay[Upper] & 0x40;
  6915  002AB8  5002               	movf	DISPLAY_UPPER_7SEG@Upper,w,c
  6916  002ABA  0D02               	mullw	2
  6917  002ABC  0E67               	movlw	low _segDisplay
  6918  002ABE  24F3               	addwf	prodl,w,c
  6919  002AC0  6ED9               	movwf	fsr2l,c
  6920  002AC2  0E00               	movlw	high _segDisplay
  6921  002AC4  20F4               	addwfc	prodh,w,c
  6922  002AC6  6EDA               	movwf	fsr2h,c
  6923  002AC8  50DF               	movf	indf2,w,c
  6924  002ACA  0B40               	andlw	64
  6925  002ACC  6E01               	movwf	DISPLAY_UPPER_7SEG@testbit,c
  6926                           
  6927                           ;Lab6p1.c: 424: if( testbit == 0 ) PORTEbits.RE0 = 0;
  6928  002ACE  5001               	movf	DISPLAY_UPPER_7SEG@testbit,w,c
  6929  002AD0  A4D8               	btfss	status,2,c
  6930  002AD2  D002               	goto	l190
  6931  002AD4  9084               	bcf	3972,0,c	;volatile
  6932  002AD6  D002               	goto	l192
  6933  002AD8                     l190:
  6934                           
  6935                           ;Lab6p1.c: 425: else PORTEbits.RE0 = 1;
  6936  002AD8  8084               	bsf	3972,0,c	;volatile
  6937  002ADA  D000               	goto	l192
  6938  002ADC                     l192:
  6939  002ADC  0012               	return		;funcret
  6940  002ADE                     __end_of_DISPLAY_UPPER_7SEG:
  6941                           	opt stack 0
  6942                           tblptru	equ	0xFF8
  6943                           tblptrh	equ	0xFF7
  6944                           tblptrl	equ	0xFF6
  6945                           tablat	equ	0xFF5
  6946                           prodh	equ	0xFF4
  6947                           prodl	equ	0xFF3
  6948                           intcon	equ	0xFF2
  6949                           postinc0	equ	0xFEE
  6950                           wreg	equ	0xFE8
  6951                           postdec1	equ	0xFE5
  6952                           fsr1l	equ	0xFE1
  6953                           indf2	equ	0xFDF
  6954                           postinc2	equ	0xFDE
  6955                           postdec2	equ	0xFDD
  6956                           fsr2h	equ	0xFDA
  6957                           fsr2l	equ	0xFD9
  6958                           status	equ	0xFD8
  6959                           
  6960 ;; *************** function _DISPLAY_LOWER_7SEG *****************
  6961 ;; Defined at:
  6962 ;;		line 436 in file "Lab6p1.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  Lower           1    wreg     unsigned char 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  Lower           1    2[COMRAM] unsigned char 
  6967 ;;  LED2            2    0[COMRAM] int 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;		None               void
  6970 ;; Registers used:
  6971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6980 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;Total ram usage:        3 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_PED_Control
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text40
  6991  002C8E                     __ptext40:
  6992                           	opt stack 0
  6993  002C8E                     _DISPLAY_LOWER_7SEG:
  6994                           	opt stack 28
  6995                           
  6996                           ;incstack = 0
  6997                           ;DISPLAY_LOWER_7SEG@Lower stored from wreg
  6998  002C8E  6E03               	movwf	DISPLAY_LOWER_7SEG@Lower,c
  6999                           
  7000                           ;Lab6p1.c: 439: int LED2 = segDisplay[Lower];
  7001  002C90  5003               	movf	DISPLAY_LOWER_7SEG@Lower,w,c
  7002  002C92  0D02               	mullw	2
  7003  002C94  0E67               	movlw	low _segDisplay
  7004  002C96  24F3               	addwf	prodl,w,c
  7005  002C98  6ED9               	movwf	fsr2l,c
  7006  002C9A  0E00               	movlw	high _segDisplay
  7007  002C9C  20F4               	addwfc	prodh,w,c
  7008  002C9E  6EDA               	movwf	fsr2h,c
  7009  002CA0  CFDE F001          	movff	postinc2,DISPLAY_LOWER_7SEG@LED2
  7010  002CA4  CFDD F002          	movff	postdec2,DISPLAY_LOWER_7SEG@LED2+1
  7011                           
  7012                           ;Lab6p1.c: 441: PORTD = LED2;
  7013  002CA8  C001  FF83         	movff	DISPLAY_LOWER_7SEG@LED2,3971	;volatile
  7014  002CAC  0012               	return		;funcret
  7015  002CAE                     __end_of_DISPLAY_LOWER_7SEG:
  7016                           	opt stack 0
  7017                           tblptru	equ	0xFF8
  7018                           tblptrh	equ	0xFF7
  7019                           tblptrl	equ	0xFF6
  7020                           tablat	equ	0xFF5
  7021                           prodh	equ	0xFF4
  7022                           prodl	equ	0xFF3
  7023                           intcon	equ	0xFF2
  7024                           postinc0	equ	0xFEE
  7025                           wreg	equ	0xFE8
  7026                           postdec1	equ	0xFE5
  7027                           fsr1l	equ	0xFE1
  7028                           indf2	equ	0xFDF
  7029                           postinc2	equ	0xFDE
  7030                           postdec2	equ	0xFDD
  7031                           fsr2h	equ	0xFDA
  7032                           fsr2l	equ	0xFD9
  7033                           status	equ	0xFD8
  7034                           tblptru	equ	0xFF8
  7035                           tblptrh	equ	0xFF7
  7036                           tblptrl	equ	0xFF6
  7037                           tablat	equ	0xFF5
  7038                           prodh	equ	0xFF4
  7039                           prodl	equ	0xFF3
  7040                           intcon	equ	0xFF2
  7041                           postinc0	equ	0xFEE
  7042                           wreg	equ	0xFE8
  7043                           postdec1	equ	0xFE5
  7044                           fsr1l	equ	0xFE1
  7045                           indf2	equ	0xFDF
  7046                           postinc2	equ	0xFDE
  7047                           postdec2	equ	0xFDD
  7048                           fsr2h	equ	0xFDA
  7049                           fsr2l	equ	0xFD9
  7050                           status	equ	0xFD8
  7051                           
  7052                           	psect	rparam
  7053  0000                     tblptru	equ	0xFF8
  7054                           tblptrh	equ	0xFF7
  7055                           tblptrl	equ	0xFF6
  7056                           tablat	equ	0xFF5
  7057                           prodh	equ	0xFF4
  7058                           prodl	equ	0xFF3
  7059                           intcon	equ	0xFF2
  7060                           postinc0	equ	0xFEE
  7061                           wreg	equ	0xFE8
  7062                           postdec1	equ	0xFE5
  7063                           fsr1l	equ	0xFE1
  7064                           indf2	equ	0xFDF
  7065                           postinc2	equ	0xFDE
  7066                           postdec2	equ	0xFDD
  7067                           fsr2h	equ	0xFDA
  7068                           fsr2l	equ	0xFD9
  7069                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    118
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    102     122
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Night_Mode->_Wait_N_Seconds
    _Day_Mode->_PED_Control
    _PED_Control->_DISPLAY_LOWER_7SEG

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   45958
                                             97 COMRAM     5     5      0
                           _Day_Mode
                         _Night_Mode
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                       _get_full_ADC
                           _init_ADC
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   36477
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8696
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8498
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3742
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1250
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     411
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3131
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2878
                                             45 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     666
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             35 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Night_Mode                                           0     0      0      90
                             _Set_EW
                           _Set_EWLT
                             _Set_NS
                           _Set_NSLT
                     _Wait_N_Seconds
 ---------------------------------------------------------------------------------
 (1) _Day_Mode                                             0     0      0     495
                        _PED_Control
                             _Set_EW
                           _Set_EWLT
                             _Set_NS
                           _Set_NSLT
                     _Wait_N_Seconds
 ---------------------------------------------------------------------------------
 (2) _Wait_N_Seconds                                       2     2      0      30
                                              0 COMRAM     2     2      0
                    _Wait_One_Second
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second                                      0     0      0       0
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (2) _Set_NSLT                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Set_NS                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Set_EWLT                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Set_EW                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PED_Control                                          4     3      1     405
                                              3 COMRAM     4     3      1
                 _DISPLAY_LOWER_7SEG
                 _DISPLAY_UPPER_7SEG
          _Wait_One_Second_With_Beep
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second_With_Beep                            0     0      0       0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (4) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DISPLAY_UPPER_7SEG                                   2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DISPLAY_LOWER_7SEG                                   3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Day_Mode
     _PED_Control
       _DISPLAY_LOWER_7SEG
       _DISPLAY_UPPER_7SEG
       _Wait_One_Second_With_Beep
         _Activate_Buzzer
         _Deactivate_Buzzer
         _Wait_Half_Second
     _Set_EW
     _Set_EWLT
     _Set_NS
     _Set_NSLT
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
   _Night_Mode
     _Set_EW
     _Set_EWLT
     _Set_NS
     _Set_NSLT
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _get_full_ADC
   _init_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     66      7A       1       96.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A      34        0.0%
DATA                 0      0      7A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Oct 15 15:51:19 2021

         _Wait_One_Second_With_Beep 2CE2                                  l82 2D36  
                                l91 2C48                                  l94 2C68  
                      ___awdiv@sign 000C                 ___wmul@multiplicand 0011  
                      ___ftadd@exp1 0039                        ___ftadd@exp2 0038  
                      ___ftadd@sign 0037                                 l107 2CDA  
                               l132 2B54                                 l141 2B1E  
                               l150 2BC0                                 l134 2B58  
                               l302 294A                                 l222 1A88  
                               l135 2B5E                                 l143 2B22  
                               l311 298C                                 l215 1CCC  
                               l152 2BC4                                 l136 2B62  
                               l144 2B28                                 l153 2BCA  
                               l161 2B8E                                 l137 2B84  
                               l145 2B2C                                 l154 2BCE  
                               l162 2B94                                 l146 2B4E  
                               l306 2964                                 l314 2C42  
                               l155 2BF0                                 l163 2B98  
                               l307 2966                                 l164 2BBA  
                               l308 2970                                 l309 2972  
                               l190 2AD8                                 l182 25DC  
                               l159 2B8A                                 l192 2ADC  
                               l520 28AC                                 l185 275C  
                               l179 258A                                 l187 279E  
                               l507 2672                                 l267 1504  
                               l532 2B18                                 l278 16A8  
                               l711 2460                                 l703 1E1A  
                               l607 209A                                 l721 1F08  
                               l650 24FE                                 l714 242C  
                               l722 1F30                                 l803 281A  
                               l813 290C                                 l639 2526  
                               l719 1FA0                                 l743 21A2  
                               l680 1E90                                 l760 2A9E  
                               l728 1F90                                 l737 2708  
                               l753 2C80                                 l833 2A5A  
                               l683 1D3C                                 l764 237E  
                               l694 1DFE                                 l598 20AA  
                               l679 1D12                   ?_Wait_Half_Second 0001  
                               _PR2 000FCB                   _Deactivate_Buzzer 2D5C  
                      ___awmod@sign 0006                                 prod 000FF3  
                               wreg 000FE8                  ??_Wait_Half_Second 0001  
                ?_Deactivate_Buzzer 0001                        __CFG_LVP$OFF 000000  
              PED_Control@Direction 0005                        ___ftdiv@cntr 002D  
                      ___ftdiv@sign 0032                        __CFG_WDT$OFF 000000  
                              l2011 1D20                                l1303 2BD4  
                              l2023 1D56                                l2103 2138  
                              l2041 1DAE                                l2033 1D7E  
                              l2017 1D4A                                l2113 2166  
                              l2211 293A                                l2051 1DE6  
                              l2043 1DBA                                l2107 214E  
                              l1309 2B9E                                l2053 1DF2  
                              l2045 1DC2                                l2141 261C  
                              l2117 217C                                l2109 2154  
                              l2215 2942                                l2207 2930  
                              l2039 1DA2                                l2143 2626  
                              l2135 2606                                l2311 1C8C  
                              l2303 1BC8                                l1281 2CB6  
                              l2401 1F68                                l2161 2668  
                              l2153 264C                                l2145 262E  
                              l2129 25F4                                l2081 20E4  
                              l1291 2B68                                l2227 295C  
                              l2219 294E                                l2059 1E38  
                              l2331 187E                                l2261 299E  
                              l1285 2CBE                                l2069 1E6A  
                              l2421 1FC2                                l2405 1F7C  
                              l2157 2658                                l2181 285E  
                              l2173 2842                                l2085 20F2  
                              l2325 17D6                                l2271 29C2  
                              l2415 1FB2                                l2407 1F8A  
                              l2183 2868                                l2079 20CA  
                              l2343 19B2                                l2335 188E  
                              l1297 2B32                                l2505 22B8  
                              l2185 2870                                l2193 2892  
                              l2177 2850                                l2283 29E4  
                              l2267 29B0                                l2523 2312  
                              l2443 2038                                l2435 2006  
                              l2099 2126                                l2611 109E  
                              l2277 29D2                                l2541 236C  
                              l2533 233C                                l2461 2072  
                              l2365 1ECE                                l2197 28A2  
                              l2189 2886                                l2349 1A64  
                              l2701 141C                                l2613 10AA  
                              l2287 29F4                                l2535 234A  
                              l2527 2322                                l2551 27C2  
                              l2455 205C                                l2447 2048  
                              l2359 1EB0                                l2607 108E  
                              l2481 26A6                                l2473 2A74  
                              l2529 2328                                l2537 2354  
                              l2553 27D0                                l2465 2086  
                              l2721 14E0                                l2705 1420  
                              l2633 1126                                l2617 10B2  
                              l2803 23C6                                l2491 2704  
                              l2563 280A                                l2555 27D8  
                              l2571 28C0                                l2467 2094  
                              l2459 206C                                l2395 1F52  
                              l2387 1F3E                                l2723 14EE  
                              l2715 14C6                                l2619 10D4  
                              l2485 26D8                                l2573 28CE  
                              l2733 1524                                l2717 14D2  
                              l2709 143C                                l2661 1242  
                              l2823 2406                                l2575 28D6  
                              l2399 1F62                                l2743 164A  
                              l2727 150A                                l2663 1252  
                              l2751 1670                                l2833 243A  
                              l2585 2A02                                l2745 1656  
                              l2737 1574                                l2673 12CA  
                              l2665 1282                                l2657 121C  
                              l2649 11B8                                l2763 2550  
                              l1971 248E                                l2579 28FC  
                              l2587 2A10                                l2691 13DC  
                              l2683 133A                                l2667 1292  
                              l2755 168C                                l1981 24F2  
                              l1973 24AE                                l1965 2472  
                              l2845 2AF4                                l2749 1664  
                              l2693 13E0                                l2685 1368  
                              l2677 12EE                                l2679 12F8  
                              l2687 1376                                l2871 21D2  
                              l1993 2518                                l1977 24C6  
                              l1969 2482                                l2697 13EC  
                              l2779 25A0                                l1987 2506  
                              l1979 24E6                                l2883 226E  
                              l2797 239E                                l2799 23B8  
                              STR_1 1077                                u2211 1EC0  
                              u2401 22AA                                u2420 22D6  
                              u2191 1EA2                                u2600 115E  
                              u2425 22CE                                u1811 20DA  
                              u1581 1CDE                                u2605 1154  
                              u1591 1CF2                        printf@tmpval 005A  
                              u1791 20BC                                u2760 14FE  
                              u2861 2390                                u2881 23AE  
                              _TRMT 007D61                 ??_Deactivate_Buzzer 0001  
                              _main 21A4                        ___ftpack@arg 0001  
                      ___ftpack@exp 0004                      ??_get_full_ADC 0003  
                              fsr2h 000FDA                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
           DISPLAY_UPPER_7SEG@Upper 0002                                prodh 000FF4  
                              prodl 000FF3                                start 0000  
                      ___ftmul@cntr 0022                        ___param_bank 000010  
                      ___ftmul@sign 0023          __end_of_DISPLAY_LOWER_7SEG 2CAE  
                      ___fttol@exp1 0039                        ___fttol@lval 0035  
         __end_of_Deactivate_Buzzer 2D64                               ?_main 0001  
                   __end_of___awdiv 2674                     __end_of___ftadd 1E92  
                   __end_of___awmod 28AE                     __end_of___ftdiv 2462  
                   __end_of___ftneg 2C8E                     __end_of___lldiv 282C  
                   __end_of___ftmul 21A4                               _T0CON 000FD5  
                   ___awdiv@divisor 0009                     __end_of___llmod 291E  
                   __end_of___ftsub 2AA0                     __end_of___fttol 2380  
                             _T2CON 000FCA                     ___awdiv@counter 000B  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR0L 000FD6                               _SPBRG 000FAF  
                             _PORTA 000F80                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _PORTE 000F84                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                      ?_PED_Control 0004                        ___lltoft@exp 0011  
                     ___awtoft@sign 000C                     __end_of_dpowers 1029  
                 ??_Wait_One_Second 0001                               _scale 16AA  
                     ___ftpack@sign 0005                               _putch 2D32  
                    __CFG_BOREN$OFF 000000                               tablat 000FF5  
                             status 000FD8                    __end_of_Day_Mode 25DE  
                    _Wait_N_Seconds 2CAE                     __initialization 2BF2  
        __end_of_DISPLAY_UPPER_7SEG 2ADE                        __end_of_main 229A  
                        _Night_Mode 270A                    __end_of_Set_EWLT 2BBC  
                  __end_of_Set_NSLT 2B50                              ??_main 0062  
                     ___fttol@sign1 0034                       __activetblptr 000002  
             Wait_N_Seconds@seconds 0001                __size_of__tdiv_to_l_ 0110  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                    ___llmod@dividend 0001  
                            ?_scale 0024                              _ADRESH 000FC4  
                            _ADRESL 000FC3                              _CCPR2L 000FBB  
                  ___awdiv@dividend 0007                    __end_of___awtoft 2B1A  
                            ?_putch 0001                    __end_of___ftpack 2528  
                  __end_of___lltoft 2A5C                              _OSCCON 000FD3  
                            _SPBRGH 000FB0              __end_of_Wait_N_Seconds 2CC8  
                            _Set_EW 2BBC                              _Set_NS 2B50  
                  __end_of__powers_ 1077                  __size_of_OpenUSART 0070  
                            ___ftge 2674            __size_of_Activate_Buzzer 0012  
                            ___wmul 2C1C                           ??___awdiv 000B  
                         ??___ftadd 0034                           ??___awmod 0005  
                         ??___ftdiv 002A                           ??___ftneg 0004  
                         ??___lldiv 0009                           ??___ftmul 001B  
                         ??___llmod 0009                           ??___ftsub 0040  
                         ??___fttol 002F                    __end_of_init_ADC 2D4E  
                            _fround 1A8A                    ___awdiv@quotient 000D  
                   ___awmod@divisor 0003          __size_of_Deactivate_Buzzer 0008  
                   ___awmod@counter 0005                              _printf 1084  
             ___ftmul@f3_as_product 001F                __end_of_get_full_ADC 2C6A  
                      __pdataCOMRAM 0067  __size_of_Wait_One_Second_With_Beep 0016  
                       Set_EW@color 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                              putch@c 0001  
                       Set_NS@color 0001                          __accesstop 0080  
           __end_of__initialization 2C12                          ___ftadd@f1 002E  
                        ___ftadd@f2 0031                          ___ftge@ff1 0001  
                        ___ftge@ff2 0004                     ?_Wait_N_Seconds 0001  
                     ___rparam_used 000001                          ___ftdiv@f1 0024  
                        ___ftdiv@f2 0027                          ___ftdiv@f3 002E  
                        ___ftneg@f1 0001                          ___awtoft@c 0009  
                        ___ftmul@f1 0015                          ___ftmul@f2 0018  
                        ___ftsub@f1 003A                          ___ftsub@f2 003D  
                        ___fttol@f1 002B                      __pcstackCOMRAM 0001  
                        ___lltoft@c 0009                       __end_of_scale 1A8A  
                     __end_of_putch 2D40                         ?_Night_Mode 0001  
                        __div_to_l_ 1FA2                           ?_Day_Mode 0001  
                 __end_of_OpenUSART 298E                     __div_to_l_@exp1 000C  
                   __div_to_l_@cntr 000B                             ??_scale 0027  
              __size_of_PED_Control 006E                     __div_to_l_@quot 0007  
                           ??_putch 0001                  __size_of_init_UART 0014  
         __size_of_Wait_Half_Second 001A                           ?_Set_EWLT 0001  
                     __div_to_l_@f1 0001                       __div_to_l_@f2 0004  
                         ?_Set_NSLT 0001                             ?_Set_EW 0001  
                           ?_Set_NS 0001                  __CFG_CCP2MX$PORTBE 000000  
                           ?___ftge 0001                             ?___wmul 000F  
                           _CCP2CON 000FBA                             ?_fround 0024  
                         ?___awtoft 0009                           ?___ftpack 0001  
                   _Wait_One_Second 2D4E                             ?_printf 0040  
                         ?___lltoft 0009                   ??_Activate_Buzzer 0001  
                        ??_Day_Mode 0008                  _DISPLAY_LOWER_7SEG 2C8E  
                  PED_Control@i_765 0007                 ?_DISPLAY_LOWER_7SEG 0001  
                         ?_init_ADC 0001                 __size_of_Night_Mode 0096  
                        ??_Set_EWLT 0001                          ??_Set_NSLT 0001  
                 __end_of__npowers_ 1050                             __Hparam 0000  
                        _scale$1664 0027                             __Lparam 0000  
                   __size_of_Set_EW 0036                     __size_of_Set_NS 0036  
                   __size_of___ftge 0096                             ___awdiv 25DE  
                           ___ftadd 1CCE                             ___awmod 282C  
                           ___ftdiv 2380                             ___ftneg 2C6A  
                           ___lldiv 27A0                     __size_of___wmul 0028  
                           ___ftmul 20AC                             ___llmod 28AE  
                           ___ftsub 2A5C                             ___fttol 229A  
             __size_of_get_full_ADC 0026                        __psmallconst 1000  
              ??_DISPLAY_LOWER_7SEG 0001                          _segDisplay 0067  
                           __pcinit 2BF2                          ??___awtoft 000C  
                        ??___ftpack 0006                     __size_of_fround 0244  
                           __ramtop 1000                          ??___lltoft 000D  
                           __ptext0 21A4                             __ptext1 1084  
                           __ptext2 16AA                             __ptext3 2D32  
                           __ptext4 1A8A                             __ptext5 2C1C  
                           __ptext6 20AC                             __ptext7 282C  
                           __ptext8 25DE                             __ptext9 1E92  
                   __size_of_printf 0626                   __end_of_init_UART 2D20  
                         _T0CONbits 000FD5                         ?__div_to_l_ 0001  
                           _dpowers 1001                    ___awmod@dividend 0001  
                _DISPLAY_UPPER_7SEG 2AA0                end_of_initialization 2C12  
               ?_DISPLAY_UPPER_7SEG 0001                          ??_init_ADC 0001  
                     __Lmediumconst 0000                        _get_full_ADC 2C44  
                   ___lldiv@divisor 0005                        PED_Control@i 0006  
                   ___lldiv@counter 000D             __end_of_Wait_One_Second 2D5C  
                         _RCSTAbits 000FAB                             printf@c 0061  
                           printf@f 0040                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE                      __tdiv_to_l_@f1 0001  
                    __tdiv_to_l_@f2 0004                ??_DISPLAY_UPPER_7SEG 0001  
                     ??__tdiv_to_l_ 0007                           _PORTAbits 000F80  
                         _PORTBbits 000F81                           _PORTDbits 000F83  
                         _PORTEbits 000F84                           _TRISCbits 000F94  
                  ??_Wait_N_Seconds 0001                    _Wait_Half_Second 2CC8  
                       ___ftdiv@exp 0031                           _TXSTAbits 000FAC  
                PED_Control@Num_Sec 0004                  get_full_ADC@result 0005  
               __size_of__div_to_l_ 010A                         ___ftmul@exp 001E  
                    __end_of_Set_EW 2BF2                      __end_of_Set_NS 2B86  
                    __end_of___ftge 270A                      __end_of___wmul 2C44  
                     __pidataCOMRAM 2CF8                        ??_Night_Mode 0003  
                    __end_of_fround 1CCE                      __end_of_printf 16AA  
               start_initialization 2BF2                 __end_of__tdiv_to_l_ 1FA2  
                 __size_of_Day_Mode 00B6                           _OpenUSART 291E  
                   ___llmod@divisor 0005                    __CFG_OSC$INTIO67 000000  
                   ___llmod@counter 0009                  __end_of_Night_Mode 27A0  
                   Wait_N_Seconds@I 0002                            ??_Set_EW 0001  
                          ??_Set_NS 0001                   __size_of_Set_EWLT 0036  
                   _Activate_Buzzer 2D20                   __size_of_Set_NSLT 0036  
                  ?_Wait_One_Second 0001                            ??___ftge 0007  
                          ??___wmul 0013                            ??_fround 0027  
                          ??_printf 0045                          fround@prec 002D  
                 __size_of___awtoft 003C                   __size_of___ftpack 00C6  
                 __size_of___lltoft 0060                       ??_PED_Control 0005  
        ?_Wait_One_Second_With_Beep 0001                          ?_OpenUSART 0001  
                 __size_of_init_ADC 000E                            ?___awdiv 0007  
                          ?___ftadd 002E                            ?___awmod 0001  
                          ?___ftdiv 0024                            ?___ftneg 0001  
                          ?___lldiv 0001                            ?___ftmul 0015  
                          ?___llmod 0001                            ?___ftsub 003A  
                         __npowers_ 1029                            ?___fttol 002B  
                       __tdiv_to_l_ 1E92                        ??__div_to_l_ 0007  
                       __smallconst 1000                           _init_UART 2D0C  
                    __size_of_scale 03E0                      __size_of_putch 000E  
 __end_of_Wait_One_Second_With_Beep 2CF8                 __end_of_PED_Control 29FC  
           __end_of_Activate_Buzzer 2D32                      ___wmul@product 0013  
                          _PIE1bits 000F9D                            _PIR1bits 000F9E  
                __end_of__div_to_l_ 20AC         __size_of_DISPLAY_LOWER_7SEG 0020  
                        _ADCON0bits 000FC2            __end_of_Wait_Half_Second 2CE2  
                 ___wmul@multiplier 000F                          printf@flag 0050  
                        printf@fval 005E                          printf@prec 0052  
                          _Day_Mode 2528                          ?_init_UART 0001  
                         copy_data0 2C06                         ??_OpenUSART 0003  
                   OpenUSART@config 0003                            _Set_EWLT 2B86  
                          _Set_NSLT 2B1A                            __Hrparam 0000  
                          __Lrparam 0000                    __size_of___awdiv 0096  
                  __size_of___ftadd 01C4                    __size_of___awmod 0082  
                  __size_of___ftdiv 00E2                    __size_of___ftneg 0024  
                  __size_of___lldiv 008C         __size_of_DISPLAY_UPPER_7SEG 003E  
                  __size_of___ftmul 00F8                    __size_of___llmod 0070  
                  __size_of___ftsub 0044                    __size_of___fttol 00E6  
                          ___awtoft 2ADE                            ___ftpack 2462  
                       _fround$1662 002A                         _fround$1663 0027  
                          ___lltoft 29FC                         _PED_Control 298E  
                          __ptext10 1FA2                            __ptext11 29FC  
                          __ptext20 291E                            __ptext12 28AE  
                          __ptext21 2D40                            __ptext13 27A0  
                          __ptext30 2B1A                            __ptext22 2C44  
                          __ptext14 229A                            __ptext31 2B50  
                          __ptext23 2380                            __ptext15 2A5C  
                          __ptext40 2C8E                            __ptext32 2B86  
                          __ptext24 2ADE                            __ptext16 1CCE  
                          __ptext33 2BBC                            __ptext25 2462  
                          __ptext17 2C6A                            __ptext34 298E  
                          __ptext26 270A                            __ptext18 2674  
                          __ptext35 2CE2                            __ptext27 2528  
                          __ptext19 2D0C                            __ptext36 2CC8  
                          __ptext28 2CAE                            __ptext37 2D5C  
                          __ptext29 2D4E                            __ptext38 2D20  
                          __ptext39 2AA0                            __powers_ 1050  
                          _init_ADC 2D40           DISPLAY_UPPER_7SEG@testbit 0001  
                  ?_Activate_Buzzer 0001                       __size_of_main 00F6  
           DISPLAY_LOWER_7SEG@Lower 0003                           printf@exp 0058  
                         printf@val 0054                            main@step 0062  
                          main@volt 0064                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 0001                         ??_init_UART 0004  
                     Set_EWLT@color 0001                            scale@scl 002A  
       ??_Wait_One_Second_With_Beep 0001                    __tdiv_to_l_@exp1 000F  
                  __tdiv_to_l_@cntr 000E                    __tdiv_to_l_@quot 000A  
                  ___lldiv@dividend 0001              DISPLAY_LOWER_7SEG@LED2 0001  
           __size_of_Wait_N_Seconds 001A                            printf@ap 004E  
                      ?__tdiv_to_l_ 0001                         _printf$1665 004B  
          __size_of_Wait_One_Second 000E                    ___lldiv@quotient 0009  
                     Set_NSLT@color 0001                       ?_get_full_ADC 0001  
