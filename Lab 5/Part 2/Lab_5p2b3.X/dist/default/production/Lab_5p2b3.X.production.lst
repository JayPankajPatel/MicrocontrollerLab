

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep 30 11:03:05 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  002F7C                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _segDisplay
    58  002F7C  0001               	dw	1
    59  002F7E  004F               	dw	79
    60  002F80  0012               	dw	18
    61  002F82  0006               	dw	6
    62  002F84  004C               	dw	76
    63  002F86  0024               	dw	36
    64  002F88  0020               	dw	32
    65  002F8A  000F               	dw	15
    66  002F8C  0000               	dw	0
    67  002F8E  0004               	dw	4
    68                           
    69                           	psect	smallconst
    70  001000                     __psmallconst:
    71                           	opt stack 0
    72  001000  00                 	db	0
    73  001001                     _dpowers:
    74                           	opt stack 0
    75  001001  0001               	dw	1
    76  001003  0000               	dw	0
    77  001005  000A               	dw	10
    78  001007  0000               	dw	0
    79  001009  0064               	dw	100
    80  00100B  0000               	dw	0
    81  00100D  03E8               	dw	1000
    82  00100F  0000               	dw	0
    83  001011  2710               	dw	10000
    84  001013  0000               	dw	0
    85  001015  86A0               	dw	34464
    86  001017  0001               	dw	1
    87  001019  4240               	dw	16960
    88  00101B  000F               	dw	15
    89  00101D  9680               	dw	38528
    90  00101F  0098               	dw	152
    91  001021  E100               	dw	57600
    92  001023  05F5               	dw	1525
    93  001025  CA00               	dw	51712
    94  001027  3B9A               	dw	15258
    95  001029                     __end_of_dpowers:
    96                           	opt stack 0
    97  001029                     __npowers_:
    98                           	opt stack 0
    99  001029  00                 	db	0
   100  00102A  80                 	db	128
   101  00102B  3F                 	db	63
   102  00102C  CD                 	db	205
   103  00102D  CC                 	db	204
   104  00102E  3D                 	db	61
   105  00102F  D7                 	db	215
   106  001030  23                 	db	35
   107  001031  3C                 	db	60
   108  001032  12                 	db	18
   109  001033  83                 	db	131
   110  001034  3A                 	db	58
   111  001035  B7                 	db	183
   112  001036  D1                 	db	209
   113  001037  38                 	db	56
   114  001038  C6                 	db	198
   115  001039  27                 	db	39
   116  00103A  37                 	db	55
   117  00103B  38                 	db	56
   118  00103C  86                 	db	134
   119  00103D  35                 	db	53
   120  00103E  C0                 	db	192
   121  00103F  D6                 	db	214
   122  001040  33                 	db	51
   123  001041  CC                 	db	204
   124  001042  2B                 	db	43
   125  001043  32                 	db	50
   126  001044  70                 	db	112
   127  001045  89                 	db	137
   128  001046  30                 	db	48
   129  001047  E7                 	db	231
   130  001048  DB                 	db	219
   131  001049  2E                 	db	46
   132  00104A  E5                 	db	229
   133  00104B  3C                 	db	60
   134  00104C  1E                 	db	30
   135  00104D  42                 	db	66
   136  00104E  A2                 	db	162
   137  00104F  0D                 	db	13
   138  001050                     __end_of__npowers_:
   139                           	opt stack 0
   140  001050                     __powers_:
   141                           	opt stack 0
   142  001050  00                 	db	0
   143  001051  80                 	db	128
   144  001052  3F                 	db	63
   145  001053  00                 	db	0
   146  001054  20                 	db	32
   147  001055  41                 	db	65
   148  001056  00                 	db	0
   149  001057  C8                 	db	200
   150  001058  42                 	db	66
   151  001059  00                 	db	0
   152  00105A  7A                 	db	122
   153  00105B  44                 	db	68
   154  00105C  40                 	db	64
   155  00105D  1C                 	db	28
   156  00105E  46                 	db	70
   157  00105F  50                 	db	80
   158  001060  C3                 	db	195
   159  001061  47                 	db	71
   160  001062  24                 	db	36
   161  001063  74                 	db	116
   162  001064  49                 	db	73
   163  001065  97                 	db	151
   164  001066  18                 	db	24
   165  001067  4B                 	db	75
   166  001068  BC                 	db	188
   167  001069  BE                 	db	190
   168  00106A  4C                 	db	76
   169  00106B  6B                 	db	107
   170  00106C  6E                 	db	110
   171  00106D  4E                 	db	78
   172  00106E  03                 	db	3
   173  00106F  15                 	db	21
   174  001070  50                 	db	80
   175  001071  79                 	db	121
   176  001072  AD                 	db	173
   177  001073  60                 	db	96
   178  001074  F3                 	db	243
   179  001075  49                 	db	73
   180  001076  71                 	db	113
   181  001077                     __end_of__powers_:
   182                           	opt stack 0
   183  0000                     _ADCON0	set	4034
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADCON1	set	4033
   186  0000                     _ADCON2	set	4032
   187  0000                     _ADRESH	set	4036
   188  0000                     _ADRESL	set	4035
   189  0000                     _CCP2CON	set	4026
   190  0000                     _CCPR2L	set	4027
   191  0000                     _OSCCON	set	4051
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIR1bits	set	3998
   194  0000                     _PORTB	set	3969
   195  0000                     _PORTBbits	set	3969
   196  0000                     _PORTC	set	3970
   197  0000                     _PORTD	set	3971
   198  0000                     _PORTDbits	set	3971
   199  0000                     _PORTE	set	3972
   200  0000                     _PORTEbits	set	3972
   201  0000                     _PR2	set	4043
   202  0000                     _RCSTA	set	4011
   203  0000                     _RCSTAbits	set	4011
   204  0000                     _SPBRG	set	4015
   205  0000                     _SPBRGH	set	4016
   206  0000                     _T2CON	set	4042
   207  0000                     _TRISA	set	3986
   208  0000                     _TRISB	set	3987
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISCbits	set	3988
   211  0000                     _TRISD	set	3989
   212  0000                     _TRISE	set	3990
   213  0000                     _TXREG	set	4013
   214  0000                     _TXSTA	set	4012
   215  0000                     _TXSTAbits	set	4012
   216  0000                     _TRMT	set	32097
   217  001077                     STR_1:
   218  001077  52                 	db	82	;'R'
   219  001078  4C                 	db	76	;'L'
   220  001079  20                 	db	32
   221  00107A  3D                 	db	61	;'='
   222  00107B  20                 	db	32
   223  00107C  25                 	db	37
   224  00107D  66                 	db	102	;'f'
   225  00107E  0D                 	db	13
   226  00107F  0A                 	db	10
   227  001080  0A                 	db	10
   228  001081  0A                 	db	10
   229  001082  00                 	db	0
   230                           
   231                           ; #config settings
   232  001083  00                 	db	0	; dummy byte at the end
   233  0000                     
   234                           	psect	cinit
   235  002E76                     __pcinit:
   236                           	opt stack 0
   237  002E76                     start_initialization:
   238                           	opt stack 0
   239  002E76                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Clear objects allocated to COMRAM (2 bytes)
   243  002E76  6A7B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   244  002E78  6A7A               	clrf	__pbssCOMRAM& (0+255),c
   245                           
   246                           ; Initialize objects allocated to BANK0 (20 bytes)
   247                           ; load TBLPTR registers with __pidataBANK0
   248  002E7A  0E7C               	movlw	low __pidataBANK0
   249  002E7C  6EF6               	movwf	tblptrl,c
   250  002E7E  0E2F               	movlw	high __pidataBANK0
   251  002E80  6EF7               	movwf	tblptrh,c
   252  002E82  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   253  002E84  6EF8               	movwf	tblptru,c
   254  002E86  EE00  F080         	lfsr	0,__pdataBANK0
   255  002E8A  EE10 F014          	lfsr	1,20
   256  002E8E                     copy_data0:
   257  002E8E  0009               	tblrd		*+
   258  002E90  CFF5 FFEE          	movff	tablat,postinc0
   259  002E94  50E5               	movf	postdec1,w,c
   260  002E96  50E1               	movf	fsr1l,w,c
   261  002E98  E1FA               	bnz	copy_data0
   262  002E9A                     end_of_initialization:
   263                           	opt stack 0
   264  002E9A                     __end_of__initialization:
   265                           	opt stack 0
   266  002E9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   267  002E9C  6EF8               	movwf	tblptru,c
   268  002E9E  0100               	movlb	0
   269  002EA0  EF45  F00D         	goto	_main	;jump to C main() function
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssCOMRAM
   279  00007A                     __pbssCOMRAM:
   280                           	opt stack 0
   281  00007A                     _errno:
   282                           	opt stack 0
   283  00007A                     	ds	2
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	dataBANK0
   293  000080                     __pdataBANK0:
   294                           	opt stack 0
   295  000080                     _segDisplay:
   296                           	opt stack 0
   297  000080                     	ds	20
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	cstackBANK0
   307  000094                     __pcstackBANK0:
   308                           	opt stack 0
   309  000094                     main@ON:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x0
   313  000094                     	ds	1
   314  000095                     main@OFF:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x1
   318  000095                     	ds	1
   319  000096                     main@RREF:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x2
   323  000096                     	ds	3
   324  000099                     main@VREF:
   325                           	opt stack 0
   326                           
   327                           ; 3 bytes @ 0x5
   328  000099                     	ds	3
   329  00009C                     main@STEP:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x8
   333  00009C                     	ds	2
   334  00009E                     main@L:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0xA
   338  00009E                     	ds	1
   339  00009F                     main@VOLT:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0xB
   343  00009F                     	ds	3
   344  0000A2                     main@U:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0xE
   348  0000A2                     	ds	1
   349  0000A3                     main@RL:
   350                           	opt stack 0
   351                           
   352                           ; 3 bytes @ 0xF
   353  0000A3                     	ds	3
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	cstackCOMRAM
   363  000001                     __pcstackCOMRAM:
   364                           	opt stack 0
   365  000001                     ??_DISPLAY_UPPER_7SEG:
   366  000001                     ?_get_full_ADC:
   367                           	opt stack 0
   368  000001                     ?___ftpack:
   369                           	opt stack 0
   370  000001                     ?__tdiv_to_l_:
   371                           	opt stack 0
   372  000001                     ?__div_to_l_:
   373                           	opt stack 0
   374  000001                     ?___lldiv:
   375                           	opt stack 0
   376  000001                     ?___llmod:
   377                           	opt stack 0
   378  000001                     putch@c:
   379                           	opt stack 0
   380  000001                     Select_ADC_Channel@channel:
   381                           	opt stack 0
   382  000001                     WAIT_ONE_SEC@i:
   383                           	opt stack 0
   384  000001                     DISPLAY_LOWER_7SEG@LED2:
   385                           	opt stack 0
   386  000001                     OpenUSART@spbrg:
   387                           	opt stack 0
   388  000001                     __div_to_l_@f1:
   389                           	opt stack 0
   390  000001                     ___ftpack@arg:
   391                           	opt stack 0
   392  000001                     __tdiv_to_l_@f1:
   393                           	opt stack 0
   394  000001                     ___ftge@ff1:
   395                           	opt stack 0
   396  000001                     frexp@value:
   397                           	opt stack 0
   398  000001                     ___lldiv@dividend:
   399                           	opt stack 0
   400  000001                     ___llmod@dividend:
   401                           	opt stack 0
   402                           
   403                           ; 4 bytes @ 0x0
   404  000001                     	ds	2
   405  000003                     ??_get_full_ADC:
   406  000003                     DISPLAY_LOWER_7SEG@Lower:
   407                           	opt stack 0
   408  000003                     OpenUSART@config:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x2
   412  000003                     	ds	1
   413  000004                     ___ftpack@exp:
   414                           	opt stack 0
   415  000004                     DISPLAY_UPPER_7SEG@testbit:
   416                           	opt stack 0
   417  000004                     frexp@eptr:
   418                           	opt stack 0
   419  000004                     __div_to_l_@f2:
   420                           	opt stack 0
   421  000004                     __tdiv_to_l_@f2:
   422                           	opt stack 0
   423  000004                     ___ftge@ff2:
   424                           	opt stack 0
   425                           
   426                           ; 3 bytes @ 0x3
   427  000004                     	ds	1
   428  000005                     ___ftpack@sign:
   429                           	opt stack 0
   430  000005                     get_full_ADC@result:
   431                           	opt stack 0
   432  000005                     ___lldiv@divisor:
   433                           	opt stack 0
   434  000005                     ___llmod@divisor:
   435                           	opt stack 0
   436                           
   437                           ; 4 bytes @ 0x4
   438  000005                     	ds	1
   439  000006                     ??___ftpack:
   440  000006                     ??_frexp:
   441  000006                     DISPLAY_UPPER_7SEG@Upper:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x5
   445  000006                     	ds	1
   446  000007                     ??__tdiv_to_l_:
   447  000007                     ??___ftge:
   448  000007                     DISPLAY_UPPER_7SEG@LED1:
   449                           	opt stack 0
   450  000007                     __div_to_l_@quot:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x6
   454  000007                     	ds	2
   455  000009                     ?___awtoft:
   456                           	opt stack 0
   457  000009                     ?___lbtoft:
   458                           	opt stack 0
   459  000009                     ?___lltoft:
   460                           	opt stack 0
   461  000009                     ___llmod@counter:
   462                           	opt stack 0
   463  000009                     ___awtoft@c:
   464                           	opt stack 0
   465  000009                     ___lldiv@quotient:
   466                           	opt stack 0
   467  000009                     ___lltoft@c:
   468                           	opt stack 0
   469                           
   470                           ; 4 bytes @ 0x8
   471  000009                     	ds	1
   472  00000A                     __tdiv_to_l_@quot:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0x9
   476  00000A                     	ds	1
   477  00000B                     __div_to_l_@cntr:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0xA
   481  00000B                     	ds	1
   482  00000C                     ___awtoft@sign:
   483                           	opt stack 0
   484  00000C                     __div_to_l_@exp1:
   485                           	opt stack 0
   486  00000C                     ___lbtoft@c:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0xB
   490  00000C                     	ds	1
   491  00000D                     ??___lltoft:
   492  00000D                     ?___ftneg:
   493                           	opt stack 0
   494  00000D                     ___lldiv@counter:
   495                           	opt stack 0
   496  00000D                     ___ftneg@f1:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0xC
   500  00000D                     	ds	1
   501  00000E                     __tdiv_to_l_@cntr:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0xD
   505  00000E                     	ds	1
   506  00000F                     __tdiv_to_l_@exp1:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0xE
   510  00000F                     	ds	1
   511  000010                     ?___ftadd:
   512                           	opt stack 0
   513  000010                     ___ftadd@f1:
   514                           	opt stack 0
   515                           
   516                           ; 3 bytes @ 0xF
   517  000010                     	ds	1
   518  000011                     ___lltoft@exp:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x10
   522  000011                     	ds	2
   523  000013                     ___ftadd@f2:
   524                           	opt stack 0
   525                           
   526                           ; 3 bytes @ 0x12
   527  000013                     	ds	3
   528  000016                     ??___ftadd:
   529                           
   530                           ; 0 bytes @ 0x15
   531  000016                     	ds	3
   532  000019                     ___ftadd@sign:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x18
   536  000019                     	ds	1
   537  00001A                     ___ftadd@exp2:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x19
   541  00001A                     	ds	1
   542  00001B                     ___ftadd@exp1:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x1A
   546  00001B                     	ds	1
   547  00001C                     ?___ftmul:
   548                           	opt stack 0
   549  00001C                     ?___ftsub:
   550                           	opt stack 0
   551  00001C                     ___ftmul@f1:
   552                           	opt stack 0
   553  00001C                     ___ftsub@f1:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x1B
   557  00001C                     	ds	3
   558  00001F                     ___ftmul@f2:
   559                           	opt stack 0
   560  00001F                     ___ftsub@f2:
   561                           	opt stack 0
   562                           
   563                           ; 3 bytes @ 0x1E
   564  00001F                     	ds	3
   565  000022                     ??___ftmul:
   566  000022                     
   567                           ; 0 bytes @ 0x21
   568  000022                     	ds	3
   569  000025                     ___ftmul@exp:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x24
   573  000025                     	ds	1
   574  000026                     ___ftmul@f3_as_product:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x25
   578  000026                     	ds	3
   579  000029                     ___ftmul@cntr:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x28
   583  000029                     	ds	1
   584  00002A                     ___ftmul@sign:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x29
   588  00002A                     	ds	1
   589  00002B                     ?___fttol:
   590                           	opt stack 0
   591  00002B                     ___fttol@f1:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x2A
   595  00002B                     	ds	4
   596  00002F                     ??___fttol:
   597                           
   598                           ; 0 bytes @ 0x2E
   599  00002F                     	ds	5
   600  000034                     ___fttol@sign1:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x33
   604  000034                     	ds	1
   605  000035                     ___fttol@lval:
   606                           	opt stack 0
   607                           
   608                           ; 4 bytes @ 0x34
   609  000035                     	ds	4
   610  000039                     ___fttol@exp1:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x38
   614  000039                     	ds	1
   615  00003A                     ?___awmod:
   616                           	opt stack 0
   617  00003A                     ?___altoft:
   618                           	opt stack 0
   619  00003A                     ___awmod@dividend:
   620                           	opt stack 0
   621  00003A                     ___altoft@c:
   622                           	opt stack 0
   623                           
   624                           ; 4 bytes @ 0x39
   625  00003A                     	ds	2
   626  00003C                     ___awmod@divisor:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x3B
   630  00003C                     	ds	2
   631  00003E                     ??___altoft:
   632  00003E                     ___awmod@counter:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x3D
   636  00003E                     	ds	1
   637  00003F                     ___awmod@sign:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x3E
   641  00003F                     	ds	1
   642  000040                     ?___awdiv:
   643                           	opt stack 0
   644  000040                     ___awdiv@dividend:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x3F
   648  000040                     	ds	2
   649  000042                     ___altoft@exp:
   650                           	opt stack 0
   651  000042                     ___awdiv@divisor:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x41
   655  000042                     	ds	1
   656  000043                     ___altoft@sign:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x42
   660  000043                     	ds	1
   661  000044                     ?_trunc:
   662                           	opt stack 0
   663  000044                     ___awdiv@counter:
   664                           	opt stack 0
   665  000044                     trunc@x:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x43
   669  000044                     	ds	1
   670  000045                     ___awdiv@sign:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x44
   674  000045                     	ds	1
   675  000046                     ___awdiv@quotient:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x45
   679  000046                     	ds	1
   680  000047                     trunc@i:
   681                           	opt stack 0
   682                           
   683                           ; 3 bytes @ 0x46
   684  000047                     	ds	1
   685  000048                     ?___wmul:
   686                           	opt stack 0
   687  000048                     DO_DISPLAY_D2@RL:
   688                           	opt stack 0
   689  000048                     ___wmul@multiplier:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x47
   693  000048                     	ds	2
   694  00004A                     _DO_DISPLAY_D2$549:
   695                           	opt stack 0
   696  00004A                     ___wmul@multiplicand:
   697                           	opt stack 0
   698  00004A                     trunc@expon:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x49
   702  00004A                     	ds	2
   703  00004C                     ?_round:
   704                           	opt stack 0
   705  00004C                     ___wmul@product:
   706                           	opt stack 0
   707  00004C                     round@x:
   708                           	opt stack 0
   709                           
   710                           ; 3 bytes @ 0x4B
   711  00004C                     	ds	2
   712  00004E                     ?_fround:
   713                           	opt stack 0
   714  00004E                     ?_scale:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x4D
   718  00004E                     	ds	1
   719  00004F                     round@f:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x4E
   723  00004F                     	ds	2
   724  000051                     _fround$1503:
   725                           	opt stack 0
   726  000051                     _scale$1504:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x50
   730  000051                     	ds	1
   731  000052                     ?___ftdiv:
   732                           	opt stack 0
   733  000052                     ___ftdiv@f1:
   734                           	opt stack 0
   735                           
   736                           ; 3 bytes @ 0x51
   737  000052                     	ds	2
   738  000054                     scale@scl:
   739                           	opt stack 0
   740  000054                     _fround$1502:
   741                           	opt stack 0
   742                           
   743                           ; 3 bytes @ 0x53
   744  000054                     	ds	1
   745  000055                     ___ftdiv@f2:
   746                           	opt stack 0
   747                           
   748                           ; 3 bytes @ 0x54
   749  000055                     	ds	2
   750  000057                     fround@prec:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x56
   754  000057                     	ds	1
   755  000058                     ??___ftdiv:
   756  000058                     ?_printf:
   757                           	opt stack 0
   758  000058                     printf@f:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x57
   762  000058                     	ds	3
   763  00005B                     ___ftdiv@cntr:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x5A
   767  00005B                     	ds	1
   768  00005C                     ___ftdiv@f3:
   769                           	opt stack 0
   770                           
   771                           ; 3 bytes @ 0x5B
   772  00005C                     	ds	1
   773  00005D                     ??_printf:
   774                           
   775                           ; 0 bytes @ 0x5C
   776  00005D                     	ds	2
   777  00005F                     ___ftdiv@exp:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x5E
   781  00005F                     	ds	1
   782  000060                     ___ftdiv@sign:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x5F
   786  000060                     	ds	3
   787  000063                     _printf$1505:
   788                           	opt stack 0
   789                           
   790                           ; 3 bytes @ 0x62
   791  000063                     	ds	3
   792  000066                     printf@ap:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x65
   796  000066                     	ds	2
   797  000068                     printf@flag:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x67
   801  000068                     	ds	2
   802  00006A                     printf@prec:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x69
   806  00006A                     	ds	2
   807  00006C                     printf@val:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x6B
   811  00006C                     	ds	4
   812  000070                     printf@exp:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x6F
   816  000070                     	ds	2
   817  000072                     printf@tmpval:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x71
   821  000072                     	ds	4
   822  000076                     printf@fval:
   823                           	opt stack 0
   824                           
   825                           ; 3 bytes @ 0x75
   826  000076                     	ds	3
   827  000079                     printf@c:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x78
   831  000079                     	ds	1
   832  00007A                     tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           postdec1	equ	0xFE5
   838                           fsr1l	equ	0xFE1
   839                           
   840                           ; 0 bytes @ 0x79
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 79 in file "Lab5p2b3.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  RL              3   15[BANK0 ] float 
   851 ;;  VOLT            3   11[BANK0 ] float 
   852 ;;  STEP            2    8[BANK0 ] int 
   853 ;;  VREF            3    5[BANK0 ] float 
   854 ;;  RREF            3    2[BANK0 ] float 
   855 ;;  U               1   14[BANK0 ] unsigned char 
   856 ;;  L               1   10[BANK0 ] unsigned char 
   857 ;;  OFF             1    1[BANK0 ] unsigned char 
   858 ;;  ON              1    0[BANK0 ] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;Total ram usage:       18 bytes
   873 ;; Hardware stack levels required when called:    4
   874 ;; This function calls:
   875 ;;		_Activate_Buzzer
   876 ;;		_DISPLAY_LOWER_7SEG
   877 ;;		_DISPLAY_UPPER_7SEG
   878 ;;		_DO_DISPLAY_D2
   879 ;;		_Deactivate_Buzzer
   880 ;;		_Select_ADC_Channel
   881 ;;		_WAIT_ONE_SEC
   882 ;;		___awdiv
   883 ;;		___awmod
   884 ;;		___awtoft
   885 ;;		___ftadd
   886 ;;		___ftdiv
   887 ;;		___ftge
   888 ;;		___ftmul
   889 ;;		___ftneg
   890 ;;		___fttol
   891 ;;		___lbtoft
   892 ;;		_get_full_ADC
   893 ;;		_init_ADC
   894 ;;		_init_UART
   895 ;;		_printf
   896 ;;		_round
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text0
   903  001A8A                     __ptext0:
   904                           	opt stack 0
   905  001A8A                     _main:
   906                           	opt stack 27
   907                           
   908                           ;Lab5p2b3.c: 81: init_ADC();
   909                           
   910                           ;incstack = 0
   911  001A8A  ECE8  F017         	call	_init_ADC	;wreg free
   912                           
   913                           ;Lab5p2b3.c: 82: init_UART();
   914  001A8E  ECC8  F017         	call	_init_UART	;wreg free
   915                           
   916                           ;Lab5p2b3.c: 84: TRISA = 0xFF;
   917  001A92  6892               	setf	3986,c	;volatile
   918                           
   919                           ;Lab5p2b3.c: 85: TRISB = 0x00;
   920  001A94  0E00               	movlw	0
   921  001A96  6E93               	movwf	3987,c	;volatile
   922                           
   923                           ;Lab5p2b3.c: 86: TRISC = 0x00;
   924  001A98  0E00               	movlw	0
   925  001A9A  6E94               	movwf	3988,c	;volatile
   926                           
   927                           ;Lab5p2b3.c: 87: TRISD = 0x00;
   928  001A9C  0E00               	movlw	0
   929  001A9E  6E95               	movwf	3989,c	;volatile
   930                           
   931                           ;Lab5p2b3.c: 88: TRISE = 0x00;
   932  001AA0  0E00               	movlw	0
   933  001AA2  6E96               	movwf	3990,c	;volatile
   934                           
   935                           ;Lab5p2b3.c: 90: PORTB = 0x00;
   936  001AA4  0E00               	movlw	0
   937  001AA6  6E81               	movwf	3969,c	;volatile
   938                           
   939                           ;Lab5p2b3.c: 92: PORTC = 0xFF;
   940  001AA8  6882               	setf	3970,c	;volatile
   941                           
   942                           ;Lab5p2b3.c: 93: PORTD = 0xFF;
   943  001AAA  6883               	setf	3971,c	;volatile
   944                           
   945                           ;Lab5p2b3.c: 94: PORTE = 0xFF;
   946  001AAC  6884               	setf	3972,c	;volatile
   947                           
   948                           ;Lab5p2b3.c: 97: char U;
   949                           ;Lab5p2b3.c: 99: char L;
   950                           ;Lab5p2b3.c: 100: char ON = PORTDbits.RD7= 0;
   951  001AAE  9E83               	bcf	3971,7,c	;volatile
   952  001AB0  0E00               	movlw	0
   953  001AB2  BE83               	btfsc	3971,7,c	;volatile
   954  001AB4  0E01               	movlw	1
   955  001AB6  0100               	movlb	0	; () banked
   956  001AB8  6F94               	movwf	main@ON& (0+255),b
   957                           
   958                           ; BSR set to: 0
   959                           ;Lab5p2b3.c: 101: char OFF = PORTDbits.RD7 = 1;
   960  001ABA  8E83               	bsf	3971,7,c	;volatile
   961  001ABC  0E00               	movlw	0
   962  001ABE  BE83               	btfsc	3971,7,c	;volatile
   963  001AC0  0E01               	movlw	1
   964  001AC2  0100               	movlb	0	; () banked
   965  001AC4  6F95               	movwf	main@OFF& (0+255),b
   966                           
   967                           ; BSR set to: 0
   968                           ;Lab5p2b3.c: 102: float RREF = 10;
   969  001AC6  0E00               	movlw	0
   970  001AC8  0100               	movlb	0	; () banked
   971  001ACA  6F96               	movwf	main@RREF& (0+255),b
   972  001ACC  0E20               	movlw	32
   973  001ACE  0100               	movlb	0	; () banked
   974  001AD0  6F97               	movwf	(main@RREF+1)& (0+255),b
   975  001AD2  0E41               	movlw	65
   976  001AD4  0100               	movlb	0	; () banked
   977  001AD6  6F98               	movwf	(main@RREF+2)& (0+255),b
   978                           
   979                           ; BSR set to: 0
   980                           ;Lab5p2b3.c: 103: float VREF = 4.096;
   981  001AD8  0E12               	movlw	18
   982  001ADA  0100               	movlb	0	; () banked
   983  001ADC  6F99               	movwf	main@VREF& (0+255),b
   984  001ADE  0E83               	movlw	131
   985  001AE0  0100               	movlb	0	; () banked
   986  001AE2  6F9A               	movwf	(main@VREF+1)& (0+255),b
   987  001AE4  0E40               	movlw	64
   988  001AE6  0100               	movlb	0	; () banked
   989  001AE8  6F9B               	movwf	(main@VREF+2)& (0+255),b
   990  001AEA  D000               	goto	l2897
   991  001AEC                     l2897:
   992                           
   993                           ;Lab5p2b3.c: 106: {
   994                           ;Lab5p2b3.c: 107: Select_ADC_Channel(4);
   995  001AEC  0E04               	movlw	4
   996  001AEE  ECE2  F017         	call	_Select_ADC_Channel
   997                           
   998                           ;Lab5p2b3.c: 108: int STEP = get_full_ADC();
   999  001AF2  EC66  F017         	call	_get_full_ADC	;wreg free
  1000  001AF6  C001  F09C         	movff	?_get_full_ADC,main@STEP
  1001  001AFA  C002  F09D         	movff	?_get_full_ADC+1,main@STEP+1
  1002                           
  1003                           ;Lab5p2b3.c: 109: float VOLT = (round((STEP * 4.0)))/1000;
  1004  001AFE  0E00               	movlw	0
  1005  001B00  6E1F               	movwf	___ftmul@f2,c
  1006  001B02  0E80               	movlw	128
  1007  001B04  6E20               	movwf	___ftmul@f2+1,c
  1008  001B06  0E40               	movlw	64
  1009  001B08  6E21               	movwf	___ftmul@f2+2,c
  1010  001B0A  C09C  F009         	movff	main@STEP,___awtoft@c
  1011  001B0E  C09D  F00A         	movff	main@STEP+1,___awtoft@c+1
  1012  001B12  EC1D  F017         	call	___awtoft	;wreg free
  1013  001B16  C009  F01C         	movff	?___awtoft,___ftmul@f1
  1014  001B1A  C00A  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  1015  001B1E  C00B  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  1016  001B22  EC32  F012         	call	___ftmul	;wreg free
  1017  001B26  C01C  F04C         	movff	?___ftmul,round@x
  1018  001B2A  C01D  F04D         	movff	?___ftmul+1,round@x+1
  1019  001B2E  C01E  F04E         	movff	?___ftmul+2,round@x+2
  1020  001B32  EC8B  F014         	call	_round	;wreg free
  1021  001B36  C04C  F052         	movff	?_round,___ftdiv@f1
  1022  001B3A  C04D  F053         	movff	?_round+1,___ftdiv@f1+1
  1023  001B3E  C04E  F054         	movff	?_round+2,___ftdiv@f1+2
  1024  001B42  0E00               	movlw	0
  1025  001B44  6E55               	movwf	___ftdiv@f2,c
  1026  001B46  0E7A               	movlw	122
  1027  001B48  6E56               	movwf	___ftdiv@f2+1,c
  1028  001B4A  0E44               	movlw	68
  1029  001B4C  6E57               	movwf	___ftdiv@f2+2,c
  1030  001B4E  EC21  F013         	call	___ftdiv	;wreg free
  1031  001B52  C052  F09F         	movff	?___ftdiv,main@VOLT
  1032  001B56  C053  F0A0         	movff	?___ftdiv+1,main@VOLT+1
  1033  001B5A  C054  F0A1         	movff	?___ftdiv+2,main@VOLT+2
  1034                           
  1035                           ;Lab5p2b3.c: 110: float RL = (RREF * VOLT) / (VREF - VOLT);
  1036  001B5E  C09F  F01F         	movff	main@VOLT,___ftmul@f2
  1037  001B62  C0A0  F020         	movff	main@VOLT+1,___ftmul@f2+1
  1038  001B66  C0A1  F021         	movff	main@VOLT+2,___ftmul@f2+2
  1039  001B6A  C096  F01C         	movff	main@RREF,___ftmul@f1
  1040  001B6E  C097  F01D         	movff	main@RREF+1,___ftmul@f1+1
  1041  001B72  C098  F01E         	movff	main@RREF+2,___ftmul@f1+2
  1042  001B76  EC32  F012         	call	___ftmul	;wreg free
  1043  001B7A  C01C  F052         	movff	?___ftmul,___ftdiv@f1
  1044  001B7E  C01D  F053         	movff	?___ftmul+1,___ftdiv@f1+1
  1045  001B82  C01E  F054         	movff	?___ftmul+2,___ftdiv@f1+2
  1046  001B86  C099  F013         	movff	main@VREF,___ftadd@f2
  1047  001B8A  C09A  F014         	movff	main@VREF+1,___ftadd@f2+1
  1048  001B8E  C09B  F015         	movff	main@VREF+2,___ftadd@f2+2
  1049  001B92  C09F  F00D         	movff	main@VOLT,___ftneg@f1
  1050  001B96  C0A0  F00E         	movff	main@VOLT+1,___ftneg@f1+1
  1051  001B9A  C0A1  F00F         	movff	main@VOLT+2,___ftneg@f1+2
  1052  001B9E  EC8C  F017         	call	___ftneg	;wreg free
  1053  001BA2  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1054  001BA6  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1055  001BAA  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1056  001BAE  EC43  F010         	call	___ftadd	;wreg free
  1057  001BB2  C010  F055         	movff	?___ftadd,___ftdiv@f2
  1058  001BB6  C011  F056         	movff	?___ftadd+1,___ftdiv@f2+1
  1059  001BBA  C012  F057         	movff	?___ftadd+2,___ftdiv@f2+2
  1060  001BBE  EC21  F013         	call	___ftdiv	;wreg free
  1061  001BC2  C052  F0A3         	movff	?___ftdiv,main@RL
  1062  001BC6  C053  F0A4         	movff	?___ftdiv+1,main@RL+1
  1063  001BCA  C054  F0A5         	movff	?___ftdiv+2,main@RL+2
  1064                           
  1065                           ;Lab5p2b3.c: 111: U = (int) VOLT;
  1066  001BCE  C09F  F02B         	movff	main@VOLT,___fttol@f1
  1067  001BD2  C0A0  F02C         	movff	main@VOLT+1,___fttol@f1+1
  1068  001BD6  C0A1  F02D         	movff	main@VOLT+2,___fttol@f1+2
  1069  001BDA  ECAE  F012         	call	___fttol	;wreg free
  1070  001BDE  502B               	movf	?___fttol,w,c
  1071  001BE0  0100               	movlb	0	; () banked
  1072  001BE2  6FA2               	movwf	main@U& (0+255),b
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;Lab5p2b3.c: 112: L = ((int)((VOLT - U) * 10) % 10);
  1076  001BE4  0E00               	movlw	0
  1077  001BE6  6E1F               	movwf	___ftmul@f2,c
  1078  001BE8  0E20               	movlw	32
  1079  001BEA  6E20               	movwf	___ftmul@f2+1,c
  1080  001BEC  0E41               	movlw	65
  1081  001BEE  6E21               	movwf	___ftmul@f2+2,c
  1082  001BF0  C09F  F013         	movff	main@VOLT,___ftadd@f2
  1083  001BF4  C0A0  F014         	movff	main@VOLT+1,___ftadd@f2+1
  1084  001BF8  C0A1  F015         	movff	main@VOLT+2,___ftadd@f2+2
  1085  001BFC  0100               	movlb	0	; () banked
  1086  001BFE  51A2               	movf	main@U& (0+255),w,b
  1087  001C00  EC79  F017         	call	___lbtoft
  1088  001C04  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1089  001C08  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1090  001C0C  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1091  001C10  EC8C  F017         	call	___ftneg	;wreg free
  1092  001C14  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1093  001C18  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1094  001C1C  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1095  001C20  EC43  F010         	call	___ftadd	;wreg free
  1096  001C24  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1097  001C28  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1098  001C2C  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1099  001C30  EC32  F012         	call	___ftmul	;wreg free
  1100  001C34  C01C  F02B         	movff	?___ftmul,___fttol@f1
  1101  001C38  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1102  001C3C  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1103  001C40  ECAE  F012         	call	___fttol	;wreg free
  1104  001C44  C02B  F03A         	movff	?___fttol,___awmod@dividend
  1105  001C48  C02C  F03B         	movff	?___fttol+1,___awmod@dividend+1
  1106  001C4C  0E00               	movlw	0
  1107  001C4E  6E3D               	movwf	___awmod@divisor+1,c
  1108  001C50  0E0A               	movlw	10
  1109  001C52  6E3C               	movwf	___awmod@divisor,c
  1110  001C54  EC5B  F015         	call	___awmod	;wreg free
  1111  001C58  503A               	movf	?___awmod,w,c
  1112  001C5A  0100               	movlb	0	; () banked
  1113  001C5C  6F9E               	movwf	main@L& (0+255),b
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;Lab5p2b3.c: 115: if(RL < 10)
  1117  001C5E  C0A3  F001         	movff	main@RL,___ftge@ff1
  1118  001C62  C0A4  F002         	movff	main@RL+1,___ftge@ff1+1
  1119  001C66  C0A5  F003         	movff	main@RL+2,___ftge@ff1+2
  1120  001C6A  0E00               	movlw	0
  1121  001C6C  6E04               	movwf	___ftge@ff2,c
  1122  001C6E  0E20               	movlw	32
  1123  001C70  6E05               	movwf	___ftge@ff2+1,c
  1124  001C72  0E41               	movlw	65
  1125  001C74  6E06               	movwf	___ftge@ff2+2,c
  1126  001C76  ECF5  F013         	call	___ftge	;wreg free
  1127  001C7A  B0D8               	btfsc	status,0,c
  1128  001C7C  D052               	goto	l2919
  1129                           
  1130                           ;Lab5p2b3.c: 116: {
  1131                           ;Lab5p2b3.c: 117: U = (int) RL;
  1132  001C7E  C0A3  F02B         	movff	main@RL,___fttol@f1
  1133  001C82  C0A4  F02C         	movff	main@RL+1,___fttol@f1+1
  1134  001C86  C0A5  F02D         	movff	main@RL+2,___fttol@f1+2
  1135  001C8A  ECAE  F012         	call	___fttol	;wreg free
  1136  001C8E  502B               	movf	?___fttol,w,c
  1137  001C90  0100               	movlb	0	; () banked
  1138  001C92  6FA2               	movwf	main@U& (0+255),b
  1139                           
  1140                           ;Lab5p2b3.c: 118: L = ((int)((RL - U) * 10) % 10);
  1141  001C94  0E00               	movlw	0
  1142  001C96  6E1F               	movwf	___ftmul@f2,c
  1143  001C98  0E20               	movlw	32
  1144  001C9A  6E20               	movwf	___ftmul@f2+1,c
  1145  001C9C  0E41               	movlw	65
  1146  001C9E  6E21               	movwf	___ftmul@f2+2,c
  1147  001CA0  C0A3  F013         	movff	main@RL,___ftadd@f2
  1148  001CA4  C0A4  F014         	movff	main@RL+1,___ftadd@f2+1
  1149  001CA8  C0A5  F015         	movff	main@RL+2,___ftadd@f2+2
  1150  001CAC  0100               	movlb	0	; () banked
  1151  001CAE  51A2               	movf	main@U& (0+255),w,b
  1152  001CB0  EC79  F017         	call	___lbtoft
  1153  001CB4  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1154  001CB8  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1155  001CBC  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1156  001CC0  EC8C  F017         	call	___ftneg	;wreg free
  1157  001CC4  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1158  001CC8  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1159  001CCC  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1160  001CD0  EC43  F010         	call	___ftadd	;wreg free
  1161  001CD4  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1162  001CD8  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1163  001CDC  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1164  001CE0  EC32  F012         	call	___ftmul	;wreg free
  1165  001CE4  C01C  F02B         	movff	?___ftmul,___fttol@f1
  1166  001CE8  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1167  001CEC  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1168  001CF0  ECAE  F012         	call	___fttol	;wreg free
  1169  001CF4  C02B  F03A         	movff	?___fttol,___awmod@dividend
  1170  001CF8  C02C  F03B         	movff	?___fttol+1,___awmod@dividend+1
  1171  001CFC  0E00               	movlw	0
  1172  001CFE  6E3D               	movwf	___awmod@divisor+1,c
  1173  001D00  0E0A               	movlw	10
  1174  001D02  6E3C               	movwf	___awmod@divisor,c
  1175  001D04  EC5B  F015         	call	___awmod	;wreg free
  1176  001D08  503A               	movf	?___awmod,w,c
  1177  001D0A  0100               	movlb	0	; () banked
  1178  001D0C  6F9E               	movwf	main@L& (0+255),b
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;Lab5p2b3.c: 120: DISPLAY_UPPER_7SEG(U);
  1182  001D0E  0100               	movlb	0	; () banked
  1183  001D10  51A2               	movf	main@U& (0+255),w,b
  1184  001D12  ECB7  F016         	call	_DISPLAY_UPPER_7SEG
  1185                           
  1186                           ;Lab5p2b3.c: 122: DISPLAY_LOWER_7SEG(L);
  1187  001D16  0100               	movlb	0	; () banked
  1188  001D18  519E               	movf	main@L& (0+255),w,b
  1189  001D1A  ECAE  F017         	call	_DISPLAY_LOWER_7SEG
  1190                           
  1191                           ;Lab5p2b3.c: 124: PORTDbits.RD7= 0;
  1192  001D1E  9E83               	bcf	3971,7,c	;volatile
  1193                           
  1194                           ;Lab5p2b3.c: 125: }
  1195  001D20  D05B               	goto	l95
  1196  001D22                     l2919:
  1197                           
  1198                           ;Lab5p2b3.c: 127: else
  1199                           ;Lab5p2b3.c: 128: {
  1200                           ;Lab5p2b3.c: 129: U = (int) RL/10;
  1201  001D22  C0A3  F02B         	movff	main@RL,___fttol@f1
  1202  001D26  C0A4  F02C         	movff	main@RL+1,___fttol@f1+1
  1203  001D2A  C0A5  F02D         	movff	main@RL+2,___fttol@f1+2
  1204  001D2E  ECAE  F012         	call	___fttol	;wreg free
  1205  001D32  C02B  F040         	movff	?___fttol,___awdiv@dividend
  1206  001D36  C02C  F041         	movff	?___fttol+1,___awdiv@dividend+1
  1207  001D3A  0E00               	movlw	0
  1208  001D3C  6E43               	movwf	___awdiv@divisor+1,c
  1209  001D3E  0E0A               	movlw	10
  1210  001D40  6E42               	movwf	___awdiv@divisor,c
  1211  001D42  EC40  F014         	call	___awdiv	;wreg free
  1212  001D46  5040               	movf	?___awdiv,w,c
  1213  001D48  0100               	movlb	0	; () banked
  1214  001D4A  6FA2               	movwf	main@U& (0+255),b
  1215                           
  1216                           ;Lab5p2b3.c: 130: L = ((int)((RL - U) * 10) % 10);
  1217  001D4C  0E00               	movlw	0
  1218  001D4E  6E1F               	movwf	___ftmul@f2,c
  1219  001D50  0E20               	movlw	32
  1220  001D52  6E20               	movwf	___ftmul@f2+1,c
  1221  001D54  0E41               	movlw	65
  1222  001D56  6E21               	movwf	___ftmul@f2+2,c
  1223  001D58  C0A3  F013         	movff	main@RL,___ftadd@f2
  1224  001D5C  C0A4  F014         	movff	main@RL+1,___ftadd@f2+1
  1225  001D60  C0A5  F015         	movff	main@RL+2,___ftadd@f2+2
  1226  001D64  0100               	movlb	0	; () banked
  1227  001D66  51A2               	movf	main@U& (0+255),w,b
  1228  001D68  EC79  F017         	call	___lbtoft
  1229  001D6C  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1230  001D70  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1231  001D74  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1232  001D78  EC8C  F017         	call	___ftneg	;wreg free
  1233  001D7C  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1234  001D80  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1235  001D84  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1236  001D88  EC43  F010         	call	___ftadd	;wreg free
  1237  001D8C  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1238  001D90  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1239  001D94  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1240  001D98  EC32  F012         	call	___ftmul	;wreg free
  1241  001D9C  C01C  F02B         	movff	?___ftmul,___fttol@f1
  1242  001DA0  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1243  001DA4  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1244  001DA8  ECAE  F012         	call	___fttol	;wreg free
  1245  001DAC  C02B  F03A         	movff	?___fttol,___awmod@dividend
  1246  001DB0  C02C  F03B         	movff	?___fttol+1,___awmod@dividend+1
  1247  001DB4  0E00               	movlw	0
  1248  001DB6  6E3D               	movwf	___awmod@divisor+1,c
  1249  001DB8  0E0A               	movlw	10
  1250  001DBA  6E3C               	movwf	___awmod@divisor,c
  1251  001DBC  EC5B  F015         	call	___awmod	;wreg free
  1252  001DC0  503A               	movf	?___awmod,w,c
  1253  001DC2  0100               	movlb	0	; () banked
  1254  001DC4  6F9E               	movwf	main@L& (0+255),b
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;Lab5p2b3.c: 131: DISPLAY_UPPER_7SEG(U);
  1258  001DC6  0100               	movlb	0	; () banked
  1259  001DC8  51A2               	movf	main@U& (0+255),w,b
  1260  001DCA  ECB7  F016         	call	_DISPLAY_UPPER_7SEG
  1261                           
  1262                           ;Lab5p2b3.c: 133: DISPLAY_LOWER_7SEG(L);
  1263  001DCE  0100               	movlb	0	; () banked
  1264  001DD0  519E               	movf	main@L& (0+255),w,b
  1265  001DD2  ECAE  F017         	call	_DISPLAY_LOWER_7SEG
  1266                           
  1267                           ;Lab5p2b3.c: 135: PORTDbits.RD7= 1;
  1268  001DD6  8E83               	bsf	3971,7,c	;volatile
  1269  001DD8                     l95:
  1270                           
  1271                           ;Lab5p2b3.c: 137: }
  1272                           ;Lab5p2b3.c: 139: if(RL < 70)
  1273  001DD8  C0A3  F001         	movff	main@RL,___ftge@ff1
  1274  001DDC  C0A4  F002         	movff	main@RL+1,___ftge@ff1+1
  1275  001DE0  C0A5  F003         	movff	main@RL+2,___ftge@ff1+2
  1276  001DE4  0E00               	movlw	0
  1277  001DE6  6E04               	movwf	___ftge@ff2,c
  1278  001DE8  0E8C               	movlw	140
  1279  001DEA  6E05               	movwf	___ftge@ff2+1,c
  1280  001DEC  0E42               	movlw	66
  1281  001DEE  6E06               	movwf	___ftge@ff2+2,c
  1282  001DF0  ECF5  F013         	call	___ftge	;wreg free
  1283  001DF4  B0D8               	btfsc	status,0,c
  1284  001DF6  D003               	goto	l2929
  1285                           
  1286                           ;Lab5p2b3.c: 140: {
  1287                           ;Lab5p2b3.c: 141: Activate_Buzzer();
  1288  001DF8  ECD2  F017         	call	_Activate_Buzzer	;wreg free
  1289                           
  1290                           ;Lab5p2b3.c: 142: }
  1291  001DFC  D003               	goto	l2931
  1292  001DFE                     l2929:
  1293                           
  1294                           ;Lab5p2b3.c: 143: else
  1295                           ;Lab5p2b3.c: 144: {
  1296                           ;Lab5p2b3.c: 145: Deactivate_Buzzer();
  1297  001DFE  ECED  F017         	call	_Deactivate_Buzzer	;wreg free
  1298  001E02  D000               	goto	l2931
  1299  001E04                     l2931:
  1300                           
  1301                           ;Lab5p2b3.c: 146: }
  1302                           ;Lab5p2b3.c: 147: DO_DISPLAY_D2(RL);
  1303  001E04  C0A3  F02B         	movff	main@RL,___fttol@f1
  1304  001E08  C0A4  F02C         	movff	main@RL+1,___fttol@f1+1
  1305  001E0C  C0A5  F02D         	movff	main@RL+2,___fttol@f1+2
  1306  001E10  ECAE  F012         	call	___fttol	;wreg free
  1307  001E14  C02B  F048         	movff	?___fttol,DO_DISPLAY_D2@RL
  1308  001E18  C02C  F049         	movff	?___fttol+1,DO_DISPLAY_D2@RL+1
  1309  001E1C  ECFE  F016         	call	_DO_DISPLAY_D2	;wreg free
  1310                           
  1311                           ;Lab5p2b3.c: 148: printf("RL = %f\r\n\n\n", RL );
  1312  001E20  0E77               	movlw	low STR_1
  1313  001E22  6E58               	movwf	printf@f,c
  1314  001E24  0E10               	movlw	high STR_1
  1315  001E26  6E59               	movwf	printf@f+1,c
  1316  001E28  C0A3  F05A         	movff	main@RL,?_printf+2
  1317  001E2C  C0A4  F05B         	movff	main@RL+1,?_printf+3
  1318  001E30  C0A5  F05C         	movff	main@RL+2,?_printf+4
  1319  001E34  EC42  F008         	call	_printf	;wreg free
  1320                           
  1321                           ;Lab5p2b3.c: 149: WAIT_ONE_SEC();
  1322  001E38  EC9E  F017         	call	_WAIT_ONE_SEC	;wreg free
  1323  001E3C  D657               	goto	l2897
  1324  001E3E  EF00  F000         	goto	start
  1325  001E42                     __end_of_main:
  1326                           	opt stack 0
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           postinc0	equ	0xFEE
  1332                           postdec1	equ	0xFE5
  1333                           fsr1l	equ	0xFE1
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function _round *****************
  1337 ;; Defined at:
  1338 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\round.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  x               3   75[COMRAM] unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  f               3   78[COMRAM] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  3   75[COMRAM] unsigned char 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1352 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;Total ram usage:        6 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    3
  1359 ;; This function calls:
  1360 ;;		___ftadd
  1361 ;;		___ftneg
  1362 ;;		_trunc
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text1
  1369  002916                     __ptext1:
  1370                           	opt stack 0
  1371  002916                     _round:
  1372                           	opt stack 27
  1373                           
  1374                           ;incstack = 0
  1375  002916  C04C  F044         	movff	round@x,trunc@x
  1376  00291A  C04D  F045         	movff	round@x+1,trunc@x+1
  1377  00291E  C04E  F046         	movff	round@x+2,trunc@x+2
  1378  002922  EC19  F015         	call	_trunc	;wreg free
  1379  002926  C044  F00D         	movff	?_trunc,___ftneg@f1
  1380  00292A  C045  F00E         	movff	?_trunc+1,___ftneg@f1+1
  1381  00292E  C046  F00F         	movff	?_trunc+2,___ftneg@f1+2
  1382  002932  EC8C  F017         	call	___ftneg	;wreg free
  1383  002936  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1384  00293A  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1385  00293E  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1386  002942  C04C  F013         	movff	round@x,___ftadd@f2
  1387  002946  C04D  F014         	movff	round@x+1,___ftadd@f2+1
  1388  00294A  C04E  F015         	movff	round@x+2,___ftadd@f2+2
  1389  00294E  EC43  F010         	call	___ftadd	;wreg free
  1390  002952  C010  F04F         	movff	?___ftadd,round@f
  1391  002956  C011  F050         	movff	?___ftadd+1,round@f+1
  1392  00295A  C012  F051         	movff	?___ftadd+2,round@f+2
  1393  00295E  C04C  F010         	movff	round@x,___ftadd@f1
  1394  002962  C04D  F011         	movff	round@x+1,___ftadd@f1+1
  1395  002966  C04E  F012         	movff	round@x+2,___ftadd@f1+2
  1396  00296A  C04F  F013         	movff	round@f,___ftadd@f2
  1397  00296E  C050  F014         	movff	round@f+1,___ftadd@f2+1
  1398  002972  C051  F015         	movff	round@f+2,___ftadd@f2+2
  1399  002976  EC43  F010         	call	___ftadd	;wreg free
  1400  00297A  C010  F04C         	movff	?___ftadd,round@x
  1401  00297E  C011  F04D         	movff	?___ftadd+1,round@x+1
  1402  002982  C012  F04E         	movff	?___ftadd+2,round@x+2
  1403  002986  C04C  F044         	movff	round@x,trunc@x
  1404  00298A  C04D  F045         	movff	round@x+1,trunc@x+1
  1405  00298E  C04E  F046         	movff	round@x+2,trunc@x+2
  1406  002992  EC19  F015         	call	_trunc	;wreg free
  1407  002996  C044  F04C         	movff	?_trunc,?_round
  1408  00299A  C045  F04D         	movff	?_trunc+1,?_round+1
  1409  00299E  C046  F04E         	movff	?_trunc+2,?_round+2
  1410  0029A2  D000               	goto	l858
  1411  0029A4                     l858:
  1412  0029A4  0012               	return		;funcret
  1413  0029A6                     __end_of_round:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           postinc0	equ	0xFEE
  1420                           postdec1	equ	0xFE5
  1421                           fsr1l	equ	0xFE1
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _trunc *****************
  1425 ;; Defined at:
  1426 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\trunc.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  x               3   67[COMRAM] unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  i               3   70[COMRAM] unsigned char 
  1431 ;;  expon           2   73[COMRAM] int 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  3   67[COMRAM] int 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        8 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    2
  1448 ;; This function calls:
  1449 ;;		___altoft
  1450 ;;		___fttol
  1451 ;;		_frexp
  1452 ;; This function is called by:
  1453 ;;		_round
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text2
  1458  002A32                     __ptext2:
  1459                           	opt stack 0
  1460  002A32                     _trunc:
  1461                           	opt stack 27
  1462                           
  1463                           ;incstack = 0
  1464  002A32  C044  F001         	movff	trunc@x,frexp@value
  1465  002A36  C045  F002         	movff	trunc@x+1,frexp@value+1
  1466  002A3A  C046  F003         	movff	trunc@x+2,frexp@value+2
  1467  002A3E  0E4A               	movlw	low trunc@expon
  1468  002A40  6E04               	movwf	frexp@eptr,c
  1469  002A42  0E00               	movlw	high trunc@expon
  1470  002A44  6E05               	movwf	frexp@eptr+1,c
  1471  002A46  ECDA  F015         	call	_frexp	;wreg free
  1472  002A4A  AE4B               	btfss	trunc@expon+1,7,c
  1473  002A4C  D007               	goto	l2585
  1474  002A4E  0E00               	movlw	0
  1475  002A50  6E44               	movwf	?_trunc,c
  1476  002A52  0E00               	movlw	0
  1477  002A54  6E45               	movwf	?_trunc+1,c
  1478  002A56  0E00               	movlw	0
  1479  002A58  6E46               	movwf	?_trunc+2,c
  1480  002A5A  D02C               	goto	l864
  1481  002A5C                     l2585:
  1482  002A5C  504B               	movf	trunc@expon+1,w,c
  1483  002A5E  E104               	bnz	u2540
  1484  002A60  0E15               	movlw	21
  1485  002A62  5C4A               	subwf	trunc@expon,w,c
  1486  002A64  A0D8               	btfss	status,0,c
  1487  002A66  D007               	goto	l2589
  1488  002A68                     u2540:
  1489  002A68  C044  F044         	movff	trunc@x,?_trunc
  1490  002A6C  C045  F045         	movff	trunc@x+1,?_trunc+1
  1491  002A70  C046  F046         	movff	trunc@x+2,?_trunc+2
  1492  002A74  D01F               	goto	l864
  1493  002A76                     l2589:
  1494  002A76  C044  F02B         	movff	trunc@x,___fttol@f1
  1495  002A7A  C045  F02C         	movff	trunc@x+1,___fttol@f1+1
  1496  002A7E  C046  F02D         	movff	trunc@x+2,___fttol@f1+2
  1497  002A82  ECAE  F012         	call	___fttol	;wreg free
  1498  002A86  C02B  F03A         	movff	?___fttol,___altoft@c
  1499  002A8A  C02C  F03B         	movff	?___fttol+1,___altoft@c+1
  1500  002A8E  C02D  F03C         	movff	?___fttol+2,___altoft@c+2
  1501  002A92  C02E  F03D         	movff	?___fttol+3,___altoft@c+3
  1502  002A96  EC9C  F015         	call	___altoft	;wreg free
  1503  002A9A  C03A  F047         	movff	?___altoft,trunc@i
  1504  002A9E  C03B  F048         	movff	?___altoft+1,trunc@i+1
  1505  002AA2  C03C  F049         	movff	?___altoft+2,trunc@i+2
  1506  002AA6  C047  F044         	movff	trunc@i,?_trunc
  1507  002AAA  C048  F045         	movff	trunc@i+1,?_trunc+1
  1508  002AAE  C049  F046         	movff	trunc@i+2,?_trunc+2
  1509  002AB2  D000               	goto	l864
  1510  002AB4                     l864:
  1511  002AB4  0012               	return		;funcret
  1512  002AB6                     __end_of_trunc:
  1513                           	opt stack 0
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           postinc0	equ	0xFEE
  1519                           postdec1	equ	0xFE5
  1520                           fsr1l	equ	0xFE1
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function _frexp *****************
  1524 ;; Defined at:
  1525 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  value           3    0[COMRAM] int 
  1528 ;;  eptr            2    3[COMRAM] PTR int 
  1529 ;;		 -> trunc@expon(2), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  3    0[COMRAM] PTR int 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1541 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;Total ram usage:        7 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_trunc
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text3
  1555  002BB4                     __ptext3:
  1556                           	opt stack 0
  1557  002BB4                     _frexp:
  1558                           	opt stack 28
  1559                           
  1560                           ;incstack = 0
  1561  002BB4  5001               	movf	frexp@value,w,c
  1562  002BB6  1002               	iorwf	frexp@value+1,w,c
  1563  002BB8  1003               	iorwf	frexp@value+2,w,c
  1564  002BBA  A4D8               	btfss	status,2,c
  1565  002BBC  D009               	goto	l2259
  1566  002BBE  C004  FFD9         	movff	frexp@eptr,fsr2l
  1567  002BC2  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1568  002BC6  0E00               	movlw	0
  1569  002BC8  6EDE               	movwf	postinc2,c
  1570  002BCA  0E00               	movlw	0
  1571  002BCC  6EDD               	movwf	postdec2,c
  1572                           
  1573                           ;	Return value of _frexp is never used
  1574  002BCE  D02E               	goto	l871
  1575  002BD0                     l2259:
  1576  002BD0  5003               	movf	frexp@value+2,w,c
  1577  002BD2  0B7F               	andlw	127
  1578  002BD4  6E06               	movwf	??_frexp& (0+255),c
  1579  002BD6  6A07               	clrf	(??_frexp+1)& (0+255),c
  1580  002BD8  90D8               	bcf	status,0,c
  1581  002BDA  3606               	rlcf	??_frexp,f,c
  1582  002BDC  3607               	rlcf	??_frexp+1,f,c
  1583  002BDE  C004  FFD9         	movff	frexp@eptr,fsr2l
  1584  002BE2  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1585  002BE6  C006  FFDE         	movff	??_frexp,postinc2
  1586  002BEA  C007  FFDD         	movff	??_frexp+1,postdec2
  1587  002BEE  AE02               	btfss	frexp@value+1,7,c
  1588  002BF0  D003               	goto	u2060
  1589  002BF2  6A06               	clrf	??_frexp& (0+255),c
  1590  002BF4  2A06               	incf	??_frexp& (0+255),f,c
  1591  002BF6  D001               	goto	u2068
  1592  002BF8                     u2060:
  1593  002BF8  6A06               	clrf	??_frexp& (0+255),c
  1594  002BFA                     u2068:
  1595  002BFA  5006               	movf	??_frexp,w,c
  1596  002BFC  C004  FFD9         	movff	frexp@eptr,fsr2l
  1597  002C00  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1598  002C04  12DE               	iorwf	postinc2,f,c
  1599  002C06  0E00               	movlw	0
  1600  002C08  12DD               	iorwf	postdec2,f,c
  1601  002C0A  C004  FFD9         	movff	frexp@eptr,fsr2l
  1602  002C0E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1603  002C12  0E82               	movlw	130
  1604  002C14  26DE               	addwf	postinc2,f,c
  1605  002C16  0EFF               	movlw	255
  1606  002C18  22DD               	addwfc	postdec2,f,c
  1607  002C1A  8003               	bsf	frexp@value+2,0,c
  1608  002C1C  8203               	bsf	frexp@value+2,1,c
  1609  002C1E  8403               	bsf	frexp@value+2,2,c
  1610  002C20  8603               	bsf	frexp@value+2,3,c
  1611  002C22  8803               	bsf	frexp@value+2,4,c
  1612  002C24  8A03               	bsf	frexp@value+2,5,c
  1613  002C26  9C03               	bcf	frexp@value+2,6,c
  1614  002C28  9E02               	bcf	frexp@value+1,7,c
  1615  002C2A  D000               	goto	l871
  1616  002C2C                     l871:
  1617  002C2C  0012               	return		;funcret
  1618  002C2E                     __end_of_frexp:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           postinc0	equ	0xFEE
  1625                           postdec1	equ	0xFE5
  1626                           fsr1l	equ	0xFE1
  1627                           postinc2	equ	0xFDE
  1628                           postdec2	equ	0xFDD
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function ___altoft *****************
  1634 ;; Defined at:
  1635 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  c               4   57[COMRAM] long 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  sign            1   66[COMRAM] unsigned char 
  1640 ;;  exp             1   65[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  3   57[COMRAM] float 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;Total ram usage:       10 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    1
  1657 ;; This function calls:
  1658 ;;		___ftpack
  1659 ;; This function is called by:
  1660 ;;		_trunc
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text4
  1665  002B38                     __ptext4:
  1666                           	opt stack 0
  1667  002B38                     ___altoft:
  1668                           	opt stack 27
  1669                           
  1670                           ;incstack = 0
  1671  002B38  0E00               	movlw	0
  1672  002B3A  6E43               	movwf	___altoft@sign,c
  1673  002B3C  0E8E               	movlw	142
  1674  002B3E  6E42               	movwf	___altoft@exp,c
  1675  002B40  AE3D               	btfss	___altoft@c+3,7,c
  1676  002B42  D012               	goto	l2003
  1677  002B44  1E3D               	comf	___altoft@c+3,f,c
  1678  002B46  1E3C               	comf	___altoft@c+2,f,c
  1679  002B48  1E3B               	comf	___altoft@c+1,f,c
  1680  002B4A  6C3A               	negf	___altoft@c,c
  1681  002B4C  0E00               	movlw	0
  1682  002B4E  223B               	addwfc	___altoft@c+1,f,c
  1683  002B50  223C               	addwfc	___altoft@c+2,f,c
  1684  002B52  223D               	addwfc	___altoft@c+3,f,c
  1685  002B54  0E01               	movlw	1
  1686  002B56  6E43               	movwf	___altoft@sign,c
  1687  002B58  D007               	goto	l2003
  1688  002B5A                     l2001:
  1689  002B5A  90D8               	bcf	status,0,c
  1690  002B5C  323D               	rrcf	___altoft@c+3,f,c
  1691  002B5E  323C               	rrcf	___altoft@c+2,f,c
  1692  002B60  323B               	rrcf	___altoft@c+1,f,c
  1693  002B62  323A               	rrcf	___altoft@c,f,c
  1694  002B64  2A42               	incf	___altoft@exp,f,c
  1695  002B66  D000               	goto	l2003
  1696  002B68                     l2003:
  1697  002B68  0E00               	movlw	0
  1698  002B6A  143A               	andwf	___altoft@c,w,c
  1699  002B6C  6E3E               	movwf	??___altoft& (0+255),c
  1700  002B6E  0E00               	movlw	0
  1701  002B70  143B               	andwf	___altoft@c+1,w,c
  1702  002B72  6E3F               	movwf	(??___altoft+1)& (0+255),c
  1703  002B74  0E00               	movlw	0
  1704  002B76  143C               	andwf	___altoft@c+2,w,c
  1705  002B78  6E40               	movwf	(??___altoft+2)& (0+255),c
  1706  002B7A  0EFF               	movlw	255
  1707  002B7C  143D               	andwf	___altoft@c+3,w,c
  1708  002B7E  6E41               	movwf	(??___altoft+3)& (0+255),c
  1709  002B80  503E               	movf	??___altoft,w,c
  1710  002B82  103F               	iorwf	??___altoft+1,w,c
  1711  002B84  1040               	iorwf	??___altoft+2,w,c
  1712  002B86  1041               	iorwf	??___altoft+3,w,c
  1713  002B88  A4D8               	btfss	status,2,c
  1714  002B8A  D7E7               	goto	l2001
  1715  002B8C  C03A  F001         	movff	___altoft@c,___ftpack@arg
  1716  002B90  C03B  F002         	movff	___altoft@c+1,___ftpack@arg+1
  1717  002B94  C03C  F003         	movff	___altoft@c+2,___ftpack@arg+2
  1718  002B98  C042  F004         	movff	___altoft@exp,___ftpack@exp
  1719  002B9C  C043  F005         	movff	___altoft@sign,___ftpack@sign
  1720  002BA0  EC92  F013         	call	___ftpack	;wreg free
  1721  002BA4  C001  F03A         	movff	?___ftpack,?___altoft
  1722  002BA8  C002  F03B         	movff	?___ftpack+1,?___altoft+1
  1723  002BAC  C003  F03C         	movff	?___ftpack+2,?___altoft+2
  1724  002BB0  D000               	goto	l367
  1725  002BB2                     l367:
  1726  002BB2  0012               	return		;funcret
  1727  002BB4                     __end_of___altoft:
  1728                           	opt stack 0
  1729                           tblptru	equ	0xFF8
  1730                           tblptrh	equ	0xFF7
  1731                           tblptrl	equ	0xFF6
  1732                           tablat	equ	0xFF5
  1733                           postinc0	equ	0xFEE
  1734                           postdec1	equ	0xFE5
  1735                           fsr1l	equ	0xFE1
  1736                           postinc2	equ	0xFDE
  1737                           postdec2	equ	0xFDD
  1738                           fsr2h	equ	0xFDA
  1739                           fsr2l	equ	0xFD9
  1740                           status	equ	0xFD8
  1741                           
  1742 ;; *************** function _printf *****************
  1743 ;; Defined at:
  1744 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  f               2   87[COMRAM] PTR const unsigned char 
  1747 ;;		 -> STR_1(12), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  tmpval          4  113[COMRAM] struct .
  1750 ;;  val             4  107[COMRAM] unsigned long 
  1751 ;;  fval            3  117[COMRAM] unsigned long 
  1752 ;;  cp              3    0        PTR const unsigned char 
  1753 ;;  exp             2  111[COMRAM] int 
  1754 ;;  prec            2  105[COMRAM] int 
  1755 ;;  flag            2  103[COMRAM] unsigned short 
  1756 ;;  ap              2  101[COMRAM] PTR void [1]
  1757 ;;		 -> ?_printf(2), 
  1758 ;;  len             2    0        unsigned int 
  1759 ;;  width           2    0        int 
  1760 ;;  c               1  120[COMRAM] char 
  1761 ;;  d               1    0        unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2   87[COMRAM] int 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1771 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;Total ram usage:       34 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    3
  1778 ;; This function calls:
  1779 ;;		___awdiv
  1780 ;;		___ftadd
  1781 ;;		___ftge
  1782 ;;		___ftmul
  1783 ;;		___ftneg
  1784 ;;		___ftsub
  1785 ;;		___fttol
  1786 ;;		___lldiv
  1787 ;;		___llmod
  1788 ;;		___lltoft
  1789 ;;		___wmul
  1790 ;;		__div_to_l_
  1791 ;;		__tdiv_to_l_
  1792 ;;		_fround
  1793 ;;		_putch
  1794 ;;		_scale
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text5
  1801  001084                     __ptext5:
  1802                           	opt stack 0
  1803  001084                     _printf:
  1804                           	opt stack 27
  1805                           
  1806                           ;doprnt.c: 466: va_list ap;
  1807                           ;doprnt.c: 499: signed char c;
  1808                           ;doprnt.c: 501: int width;
  1809                           ;doprnt.c: 504: int prec;
  1810                           ;doprnt.c: 508: unsigned short flag;
  1811                           ;doprnt.c: 515: char d;
  1812                           ;doprnt.c: 516: double fval;
  1813                           ;doprnt.c: 517: int exp;
  1814                           ;doprnt.c: 523: union {
  1815                           ;doprnt.c: 524: unsigned long vd;
  1816                           ;doprnt.c: 525: double integ;
  1817                           ;doprnt.c: 526: } tmpval;
  1818                           ;doprnt.c: 528: unsigned long val;
  1819                           ;doprnt.c: 529: unsigned len;
  1820                           ;doprnt.c: 530: const char * cp;
  1821                           ;doprnt.c: 533: *ap = __va_start();
  1822                           
  1823                           ;incstack = 0
  1824  001084  0E5A               	movlw	low (?_printf+2)
  1825  001086  6E66               	movwf	printf@ap,c
  1826  001088  0E00               	movlw	high (?_printf+2)
  1827  00108A  6E67               	movwf	printf@ap+1,c
  1828                           
  1829                           ;doprnt.c: 536: while(c = *f++) {
  1830  00108C  D2FF               	goto	l2795
  1831  00108E                     l2647:
  1832                           
  1833                           ;doprnt.c: 538: if(c != '%')
  1834  00108E  0E25               	movlw	37
  1835  001090  1879               	xorwf	printf@c,w,c
  1836  001092  B4D8               	btfsc	status,2,c
  1837  001094  D004               	goto	l2651
  1838                           
  1839                           ;doprnt.c: 540: {
  1840                           ;doprnt.c: 541: (putch(c) );
  1841  001096  5079               	movf	printf@c,w,c
  1842  001098  ECDB  F017         	call	_putch
  1843                           
  1844                           ;doprnt.c: 542: continue;
  1845  00109C  D2F7               	goto	l2795
  1846  00109E                     l2651:
  1847                           
  1848                           ;doprnt.c: 543: }
  1849                           ;doprnt.c: 548: flag = 0;
  1850  00109E  0E00               	movlw	0
  1851  0010A0  6E69               	movwf	printf@flag+1,c
  1852  0010A2  0E00               	movlw	0
  1853  0010A4  6E68               	movwf	printf@flag,c
  1854                           
  1855                           ;doprnt.c: 635: switch(c = *f++) {
  1856  0010A6  D005               	goto	l2657
  1857                           
  1858                           ;doprnt.c: 638: goto alldone;
  1859                           
  1860                           ;doprnt.c: 637: case 0:
  1861  0010A8  D2FF               	goto	l234
  1862  0010AA                     l2653:
  1863                           
  1864                           ;doprnt.c: 663: flag |= 0x400;
  1865  0010AA  8469               	bsf	printf@flag+1,2,c
  1866                           
  1867                           ;doprnt.c: 664: break;
  1868  0010AC  D013               	goto	l2659
  1869                           
  1870                           ;doprnt.c: 813: continue;
  1871                           
  1872                           ;doprnt.c: 802: default:
  1873  0010AE  D2EE               	goto	l2795
  1874                           
  1875                           ;doprnt.c: 822: }
  1876  0010B0  D011               	goto	l2659
  1877  0010B2                     l2657:
  1878  0010B2  C058  FFF6         	movff	printf@f,tblptrl
  1879  0010B6  C059  FFF7         	movff	printf@f+1,tblptrh
  1880  0010BA  4A58               	infsnz	printf@f,f,c
  1881  0010BC  2A59               	incf	printf@f+1,f,c
  1882  0010BE                     	if	0	;tblptru may be non-zero
  1883  0010BE                     	endif
  1884  0010BE                     	if	0	;tblptru may be non-zero
  1885  0010BE                     	endif
  1886  0010BE  0008               	tblrd		*
  1887  0010C0  CFF5 F079          	movff	tablat,printf@c
  1888  0010C4  5079               	movf	printf@c,w,c
  1889                           
  1890                           ; Switch size 1, requested type "space"
  1891                           ; Number of cases is 2, Range of values is 0 to 102
  1892                           ; switch strategies available:
  1893                           ; Name         Instructions Cycles
  1894                           ; simple_byte            7     4 (average)
  1895                           ;	Chosen strategy is simple_byte
  1896  0010C6  0A00               	xorlw	0	; case 0
  1897  0010C8  B4D8               	btfsc	status,2,c
  1898  0010CA  D2EE               	goto	l234
  1899  0010CC  0A66               	xorlw	102	; case 102
  1900  0010CE  B4D8               	btfsc	status,2,c
  1901  0010D0  D7EC               	goto	l2653
  1902  0010D2  D2DC               	goto	l2795
  1903  0010D4                     l2659:
  1904                           
  1905                           ;doprnt.c: 825: if(flag & (0x700)) {
  1906  0010D4  0E07               	movlw	7
  1907  0010D6  1469               	andwf	printf@flag+1,w,c
  1908  0010D8  B4D8               	btfsc	status,2,c
  1909  0010DA  D2CA               	goto	l2791
  1910                           
  1911                           ;doprnt.c: 829: prec = 6;
  1912  0010DC  0E00               	movlw	0
  1913  0010DE  6E6B               	movwf	printf@prec+1,c
  1914  0010E0  0E06               	movlw	6
  1915  0010E2  6E6A               	movwf	printf@prec,c
  1916                           
  1917                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1918  0010E4  C066  FFD9         	movff	printf@ap,fsr2l
  1919  0010E8  C067  FFDA         	movff	printf@ap+1,fsr2h
  1920  0010EC  CFDE F076          	movff	postinc2,printf@fval
  1921  0010F0  CFDE F077          	movff	postinc2,printf@fval+1
  1922  0010F4  CFDD F078          	movff	postdec2,printf@fval+2
  1923  0010F8  0E03               	movlw	3
  1924  0010FA  2666               	addwf	printf@ap,f,c
  1925  0010FC  0E00               	movlw	0
  1926  0010FE  2267               	addwfc	printf@ap+1,f,c
  1927                           
  1928                           ;doprnt.c: 831: if(fval < 0.0) {
  1929  001100  AE78               	btfss	printf@fval+2,7,c
  1930  001102  D011               	goto	l2673
  1931                           
  1932                           ;doprnt.c: 832: fval = -fval;
  1933  001104  C076  F00D         	movff	printf@fval,___ftneg@f1
  1934  001108  C077  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1935  00110C  C078  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1936  001110  EC8C  F017         	call	___ftneg	;wreg free
  1937  001114  C00D  F076         	movff	?___ftneg,printf@fval
  1938  001118  C00E  F077         	movff	?___ftneg+1,printf@fval+1
  1939  00111C  C00F  F078         	movff	?___ftneg+2,printf@fval+2
  1940                           
  1941                           ;doprnt.c: 833: flag |= 0x03;
  1942  001120  0E03               	movlw	3
  1943  001122  1268               	iorwf	printf@flag,f,c
  1944  001124  D000               	goto	l2673
  1945  001126                     l2673:
  1946                           
  1947                           ;doprnt.c: 834: }
  1948                           ;doprnt.c: 835: exp = 0;
  1949  001126  0E00               	movlw	0
  1950  001128  6E71               	movwf	printf@exp+1,c
  1951  00112A  0E00               	movlw	0
  1952  00112C  6E70               	movwf	printf@exp,c
  1953                           
  1954                           ;doprnt.c: 836: if( fval!=0) {
  1955  00112E  5076               	movf	printf@fval,w,c
  1956  001130  1077               	iorwf	printf@fval+1,w,c
  1957  001132  1078               	iorwf	printf@fval+2,w,c
  1958  001134  B4D8               	btfsc	status,2,c
  1959  001136  D085               	goto	l2701
  1960                           
  1961                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1962  001138  0E82               	movlw	130
  1963  00113A  6E5D               	movwf	??_printf& (0+255),c
  1964  00113C  0EFF               	movlw	255
  1965  00113E  6E5E               	movwf	(??_printf+1)& (0+255),c
  1966  001140  C076  F05F         	movff	printf@fval,??_printf+2
  1967  001144  C077  F060         	movff	printf@fval+1,??_printf+3
  1968  001148  C078  F061         	movff	printf@fval+2,??_printf+4
  1969  00114C  C079  F062         	movff	printf@fval+3,??_printf+5
  1970  001150  0E10               	movlw	16
  1971  001152  D005               	goto	u2630
  1972  001154                     u2635:
  1973  001154  90D8               	bcf	status,0,c
  1974  001156  3262               	rrcf	??_printf+5,f,c
  1975  001158  3261               	rrcf	??_printf+4,f,c
  1976  00115A  3260               	rrcf	??_printf+3,f,c
  1977  00115C  325F               	rrcf	??_printf+2,f,c
  1978  00115E                     u2630:
  1979  00115E  2EE8               	decfsz	wreg,f,c
  1980  001160  D7F9               	goto	u2635
  1981  001162  505F               	movf	??_printf+2,w,c
  1982  001164  245D               	addwf	??_printf,w,c
  1983  001166  6E70               	movwf	printf@exp,c
  1984  001168  0E00               	movlw	0
  1985  00116A  205E               	addwfc	??_printf+1,w,c
  1986  00116C  6E71               	movwf	printf@exp+1,c
  1987                           
  1988                           ;doprnt.c: 838: exp--;
  1989  00116E  0670               	decf	printf@exp,f,c
  1990  001170  A0D8               	btfss	status,0,c
  1991  001172  0671               	decf	printf@exp+1,f,c
  1992                           
  1993                           ;doprnt.c: 839: exp *= 3;
  1994  001174  C070  F048         	movff	printf@exp,___wmul@multiplier
  1995  001178  C071  F049         	movff	printf@exp+1,___wmul@multiplier+1
  1996  00117C  0E00               	movlw	0
  1997  00117E  6E4B               	movwf	___wmul@multiplicand+1,c
  1998  001180  0E03               	movlw	3
  1999  001182  6E4A               	movwf	___wmul@multiplicand,c
  2000  001184  EC52  F017         	call	___wmul	;wreg free
  2001  001188  C048  F070         	movff	?___wmul,printf@exp
  2002  00118C  C049  F071         	movff	?___wmul+1,printf@exp+1
  2003                           
  2004                           ;doprnt.c: 840: exp /= 10;
  2005  001190  C070  F040         	movff	printf@exp,___awdiv@dividend
  2006  001194  C071  F041         	movff	printf@exp+1,___awdiv@dividend+1
  2007  001198  0E00               	movlw	0
  2008  00119A  6E43               	movwf	___awdiv@divisor+1,c
  2009  00119C  0E0A               	movlw	10
  2010  00119E  6E42               	movwf	___awdiv@divisor,c
  2011  0011A0  EC40  F014         	call	___awdiv	;wreg free
  2012  0011A4  C040  F070         	movff	?___awdiv,printf@exp
  2013  0011A8  C041  F071         	movff	?___awdiv+1,printf@exp+1
  2014                           
  2015                           ;doprnt.c: 841: if(exp < 0)
  2016  0011AC  AE71               	btfss	printf@exp+1,7,c
  2017  0011AE  D004               	goto	l2689
  2018                           
  2019                           ;doprnt.c: 842: exp--;
  2020  0011B0  0670               	decf	printf@exp,f,c
  2021  0011B2  A0D8               	btfss	status,0,c
  2022  0011B4  0671               	decf	printf@exp+1,f,c
  2023  0011B6  D000               	goto	l2689
  2024  0011B8                     l2689:
  2025                           
  2026                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2027  0011B8  5070               	movf	printf@exp,w,c
  2028  0011BA  0800               	sublw	0
  2029  0011BC  EC55  F00B         	call	_scale
  2030  0011C0  C04E  F072         	movff	?_scale,printf@tmpval
  2031  0011C4  C04F  F073         	movff	?_scale+1,printf@tmpval+1
  2032  0011C8  C050  F074         	movff	?_scale+2,printf@tmpval+2
  2033                           
  2034                           ;doprnt.c: 847: tmpval.integ *= fval;
  2035  0011CC  C072  F01C         	movff	printf@tmpval,___ftmul@f1
  2036  0011D0  C073  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  2037  0011D4  C074  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  2038  0011D8  C076  F01F         	movff	printf@fval,___ftmul@f2
  2039  0011DC  C077  F020         	movff	printf@fval+1,___ftmul@f2+1
  2040  0011E0  C078  F021         	movff	printf@fval+2,___ftmul@f2+2
  2041  0011E4  EC32  F012         	call	___ftmul	;wreg free
  2042  0011E8  C01C  F072         	movff	?___ftmul,printf@tmpval
  2043  0011EC  C01D  F073         	movff	?___ftmul+1,printf@tmpval+1
  2044  0011F0  C01E  F074         	movff	?___ftmul+2,printf@tmpval+2
  2045                           
  2046                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2047  0011F4  C072  F001         	movff	printf@tmpval,___ftge@ff1
  2048  0011F8  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2049  0011FC  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2050  001200  0E00               	movlw	0
  2051  001202  6E04               	movwf	___ftge@ff2,c
  2052  001204  0E80               	movlw	128
  2053  001206  6E05               	movwf	___ftge@ff2+1,c
  2054  001208  0E3F               	movlw	63
  2055  00120A  6E06               	movwf	___ftge@ff2+2,c
  2056  00120C  ECF5  F013         	call	___ftge	;wreg free
  2057  001210  B0D8               	btfsc	status,0,c
  2058  001212  D004               	goto	l2697
  2059                           
  2060                           ;doprnt.c: 849: exp--;
  2061  001214  0670               	decf	printf@exp,f,c
  2062  001216  A0D8               	btfss	status,0,c
  2063  001218  0671               	decf	printf@exp+1,f,c
  2064  00121A  D013               	goto	l2701
  2065  00121C                     l2697:
  2066                           
  2067                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2068  00121C  C072  F001         	movff	printf@tmpval,___ftge@ff1
  2069  001220  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2070  001224  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2071  001228  0E00               	movlw	0
  2072  00122A  6E04               	movwf	___ftge@ff2,c
  2073  00122C  0E20               	movlw	32
  2074  00122E  6E05               	movwf	___ftge@ff2+1,c
  2075  001230  0E41               	movlw	65
  2076  001232  6E06               	movwf	___ftge@ff2+2,c
  2077  001234  ECF5  F013         	call	___ftge	;wreg free
  2078  001238  A0D8               	btfss	status,0,c
  2079  00123A  D003               	goto	l2701
  2080                           
  2081                           ;doprnt.c: 851: exp++;
  2082  00123C  4A70               	infsnz	printf@exp,f,c
  2083  00123E  2A71               	incf	printf@exp+1,f,c
  2084  001240  D000               	goto	l2701
  2085  001242                     l2701:
  2086                           
  2087                           ;doprnt.c: 852: }
  2088                           ;doprnt.c: 1112: if(prec <= 12)
  2089  001242  BE6B               	btfsc	printf@prec+1,7,c
  2090  001244  D006               	goto	l2703
  2091  001246  506B               	movf	printf@prec+1,w,c
  2092  001248  E11C               	bnz	l2705
  2093  00124A  0E0D               	movlw	13
  2094  00124C  5C6A               	subwf	printf@prec,w,c
  2095  00124E  B0D8               	btfsc	status,0,c
  2096  001250  D018               	goto	l2705
  2097  001252                     l2703:
  2098                           
  2099                           ;doprnt.c: 1113: fval += fround(prec);
  2100  001252  C076  F010         	movff	printf@fval,___ftadd@f1
  2101  001256  C077  F011         	movff	printf@fval+1,___ftadd@f1+1
  2102  00125A  C078  F012         	movff	printf@fval+2,___ftadd@f1+2
  2103  00125E  506A               	movf	printf@prec,w,c
  2104  001260  EC21  F00F         	call	_fround
  2105  001264  C04E  F013         	movff	?_fround,___ftadd@f2
  2106  001268  C04F  F014         	movff	?_fround+1,___ftadd@f2+1
  2107  00126C  C050  F015         	movff	?_fround+2,___ftadd@f2+2
  2108  001270  EC43  F010         	call	___ftadd	;wreg free
  2109  001274  C010  F076         	movff	?___ftadd,printf@fval
  2110  001278  C011  F077         	movff	?___ftadd+1,printf@fval+1
  2111  00127C  C012  F078         	movff	?___ftadd+2,printf@fval+2
  2112  001280  D000               	goto	l2705
  2113  001282                     l2705:
  2114                           
  2115                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2116  001282  BE71               	btfsc	printf@exp+1,7,c
  2117  001284  D006               	goto	l2707
  2118  001286  5071               	movf	printf@exp+1,w,c
  2119  001288  E120               	bnz	l2713
  2120  00128A  0E0A               	movlw	10
  2121  00128C  5C70               	subwf	printf@exp,w,c
  2122  00128E  B0D8               	btfsc	status,0,c
  2123  001290  D01C               	goto	l2713
  2124  001292                     l2707:
  2125  001292  5076               	movf	printf@fval,w,c
  2126  001294  1077               	iorwf	printf@fval+1,w,c
  2127  001296  1078               	iorwf	printf@fval+2,w,c
  2128  001298  B4D8               	btfsc	status,2,c
  2129  00129A  D06D               	goto	l2727
  2130  00129C  C076  F02B         	movff	printf@fval,___fttol@f1
  2131  0012A0  C077  F02C         	movff	printf@fval+1,___fttol@f1+1
  2132  0012A4  C078  F02D         	movff	printf@fval+2,___fttol@f1+2
  2133  0012A8  ECAE  F012         	call	___fttol	;wreg free
  2134  0012AC  502B               	movf	?___fttol,w,c
  2135  0012AE  102C               	iorwf	?___fttol+1,w,c
  2136  0012B0  102D               	iorwf	?___fttol+2,w,c
  2137  0012B2  102E               	iorwf	?___fttol+3,w,c
  2138  0012B4  B4D8               	btfsc	status,2,c
  2139  0012B6  BE71               	btfsc	printf@exp+1,7,c
  2140  0012B8  D05E               	goto	l2727
  2141  0012BA  5071               	movf	printf@exp+1,w,c
  2142  0012BC  E106               	bnz	l2713
  2143  0012BE  0E02               	movlw	2
  2144  0012C0  5C70               	subwf	printf@exp,w,c
  2145  0012C2  B0D8               	btfsc	status,0,c
  2146  0012C4  D002               	goto	l2713
  2147  0012C6  D057               	goto	l2727
  2148  0012C8  D000               	goto	l2713
  2149  0012CA                     l2713:
  2150                           
  2151                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2152  0012CA  C072  F001         	movff	printf@tmpval,___ftge@ff1
  2153  0012CE  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2154  0012D2  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2155  0012D6  0E70               	movlw	112
  2156  0012D8  6E04               	movwf	___ftge@ff2,c
  2157  0012DA  0E89               	movlw	137
  2158  0012DC  6E05               	movwf	___ftge@ff2+1,c
  2159  0012DE  0E40               	movlw	64
  2160  0012E0  6E06               	movwf	___ftge@ff2+2,c
  2161  0012E2  ECF5  F013         	call	___ftge	;wreg free
  2162  0012E6  B0D8               	btfsc	status,0,c
  2163  0012E8  D002               	goto	l2717
  2164                           
  2165                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2166  0012EA  0EF7               	movlw	247
  2167  0012EC  D001               	goto	L1
  2168  0012EE                     l2717:
  2169                           
  2170                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2171  0012EE  0EF8               	movlw	248
  2172  0012F0                     L1:
  2173  0012F0  2670               	addwf	printf@exp,f,c
  2174  0012F2  0EFF               	movlw	255
  2175  0012F4  2271               	addwfc	printf@exp+1,f,c
  2176  0012F6  D000               	goto	l2719
  2177  0012F8                     l2719:
  2178                           
  2179                           ;doprnt.c: 1124: }
  2180                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2181  0012F8  5070               	movf	printf@exp,w,c
  2182  0012FA  EC55  F00B         	call	_scale
  2183  0012FE  C04E  F072         	movff	?_scale,printf@tmpval
  2184  001302  C04F  F073         	movff	?_scale+1,printf@tmpval+1
  2185  001306  C050  F074         	movff	?_scale+2,printf@tmpval+2
  2186                           
  2187                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2188  00130A  D017               	goto	l2723
  2189  00130C  C076  F001         	movff	printf@fval,__div_to_l_@f1
  2190  001310  C077  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  2191  001314  C078  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  2192  001318  C072  F004         	movff	printf@tmpval,__div_to_l_@f2
  2193  00131C  C073  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  2194  001320  C074  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  2195  001324  ECAD  F011         	call	__div_to_l_	;wreg free
  2196  001328  C001  F06C         	movff	?__div_to_l_,printf@val
  2197  00132C  C002  F06D         	movff	?__div_to_l_+1,printf@val+1
  2198  001330  C003  F06E         	movff	?__div_to_l_+2,printf@val+2
  2199  001334  C004  F06F         	movff	?__div_to_l_+3,printf@val+3
  2200  001338  D017               	goto	l2725
  2201  00133A                     l2723:
  2202  00133A  C076  F001         	movff	printf@fval,__tdiv_to_l_@f1
  2203  00133E  C077  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  2204  001342  C078  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  2205  001346  C072  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  2206  00134A  C073  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  2207  00134E  C074  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  2208  001352  EC25  F011         	call	__tdiv_to_l_	;wreg free
  2209  001356  C001  F06C         	movff	?__tdiv_to_l_,printf@val
  2210  00135A  C002  F06D         	movff	?__tdiv_to_l_+1,printf@val+1
  2211  00135E  C003  F06E         	movff	?__tdiv_to_l_+2,printf@val+2
  2212  001362  C004  F06F         	movff	?__tdiv_to_l_+3,printf@val+3
  2213  001366  D000               	goto	l2725
  2214  001368                     l2725:
  2215                           
  2216                           ;doprnt.c: 1129: fval = 0.0;
  2217  001368  0E00               	movlw	0
  2218  00136A  6E76               	movwf	printf@fval,c
  2219  00136C  0E00               	movlw	0
  2220  00136E  6E77               	movwf	printf@fval+1,c
  2221  001370  0E00               	movlw	0
  2222  001372  6E78               	movwf	printf@fval+2,c
  2223                           
  2224                           ;doprnt.c: 1130: } else {
  2225  001374  D033               	goto	l2731
  2226  001376                     l2727:
  2227                           
  2228                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2229  001376  C076  F02B         	movff	printf@fval,___fttol@f1
  2230  00137A  C077  F02C         	movff	printf@fval+1,___fttol@f1+1
  2231  00137E  C078  F02D         	movff	printf@fval+2,___fttol@f1+2
  2232  001382  ECAE  F012         	call	___fttol	;wreg free
  2233  001386  C02B  F06C         	movff	?___fttol,printf@val
  2234  00138A  C02C  F06D         	movff	?___fttol+1,printf@val+1
  2235  00138E  C02D  F06E         	movff	?___fttol+2,printf@val+2
  2236  001392  C02E  F06F         	movff	?___fttol+3,printf@val+3
  2237                           
  2238                           ;doprnt.c: 1132: fval -= (double)val;
  2239  001396  C076  F01C         	movff	printf@fval,___ftsub@f1
  2240  00139A  C077  F01D         	movff	printf@fval+1,___ftsub@f1+1
  2241  00139E  C078  F01E         	movff	printf@fval+2,___ftsub@f1+2
  2242  0013A2  C06C  F009         	movff	printf@val,___lltoft@c
  2243  0013A6  C06D  F00A         	movff	printf@val+1,___lltoft@c+1
  2244  0013AA  C06E  F00B         	movff	printf@val+2,___lltoft@c+2
  2245  0013AE  C06F  F00C         	movff	printf@val+3,___lltoft@c+3
  2246  0013B2  EC87  F016         	call	___lltoft	;wreg free
  2247  0013B6  C009  F01F         	movff	?___lltoft,___ftsub@f2
  2248  0013BA  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  2249  0013BE  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  2250  0013C2  ECDC  F016         	call	___ftsub	;wreg free
  2251  0013C6  C01C  F076         	movff	?___ftsub,printf@fval
  2252  0013CA  C01D  F077         	movff	?___ftsub+1,printf@fval+1
  2253  0013CE  C01E  F078         	movff	?___ftsub+2,printf@fval+2
  2254                           
  2255                           ;doprnt.c: 1133: exp = 0;
  2256  0013D2  0E00               	movlw	0
  2257  0013D4  6E71               	movwf	printf@exp+1,c
  2258  0013D6  0E00               	movlw	0
  2259  0013D8  6E70               	movwf	printf@exp,c
  2260  0013DA  D000               	goto	l2731
  2261  0013DC                     l2731:
  2262                           
  2263                           ;doprnt.c: 1134: }
  2264                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2265  0013DC  0E01               	movlw	1
  2266  0013DE  6E79               	movwf	printf@c,c
  2267  0013E0                     l2733:
  2268  0013E0  0E0A               	movlw	10
  2269  0013E2  1879               	xorwf	printf@c,w,c
  2270  0013E4  B4D8               	btfsc	status,2,c
  2271  0013E6  D01C               	goto	l2745
  2272  0013E8  D001               	goto	l2737
  2273  0013EA  D01A               	goto	l2745
  2274  0013EC                     l2737:
  2275                           
  2276                           ;doprnt.c: 1137: if(val < dpowers[c])
  2277  0013EC  5079               	movf	printf@c,w,c
  2278  0013EE  0D04               	mullw	4
  2279  0013F0  0E01               	movlw	low _dpowers
  2280  0013F2  24F3               	addwf	prodl,w,c
  2281  0013F4  6EF6               	movwf	tblptrl,c
  2282  0013F6  0E10               	movlw	high _dpowers
  2283  0013F8  20F4               	addwfc	prodh,w,c
  2284  0013FA  6EF7               	movwf	tblptrh,c
  2285  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  2286  0013FC                     	endif
  2287  0013FC  0009               	tblrd		*+
  2288  0013FE  50F5               	movf	tablat,w,c
  2289  001400  5C6C               	subwf	printf@val,w,c
  2290  001402  0009               	tblrd		*+
  2291  001404  50F5               	movf	tablat,w,c
  2292  001406  586D               	subwfb	printf@val+1,w,c
  2293  001408  0009               	tblrd		*+
  2294  00140A  50F5               	movf	tablat,w,c
  2295  00140C  586E               	subwfb	printf@val+2,w,c
  2296  00140E  0009               	tblrd		*+
  2297  001410  50F5               	movf	tablat,w,c
  2298  001412  586F               	subwfb	printf@val+3,w,c
  2299  001414  A0D8               	btfss	status,0,c
  2300  001416  D004               	goto	l2745
  2301  001418  D001               	goto	l2741
  2302                           
  2303                           ;doprnt.c: 1138: break;
  2304  00141A  D002               	goto	l2745
  2305  00141C                     l2741:
  2306  00141C  2A79               	incf	printf@c,f,c
  2307  00141E  D7E0               	goto	l2733
  2308  001420                     l2745:
  2309                           
  2310                           ;doprnt.c: 1175: {
  2311                           ;doprnt.c: 1188: if(flag & 0x03)
  2312  001420  0E03               	movlw	3
  2313  001422  1468               	andwf	printf@flag,w,c
  2314  001424  6E5D               	movwf	??_printf& (0+255),c
  2315  001426  0E00               	movlw	0
  2316  001428  1469               	andwf	printf@flag+1,w,c
  2317  00142A  6E5E               	movwf	(??_printf+1)& (0+255),c
  2318  00142C  505D               	movf	??_printf,w,c
  2319  00142E  105E               	iorwf	??_printf+1,w,c
  2320  001430  B4D8               	btfsc	status,2,c
  2321  001432  D049               	goto	l2755
  2322                           
  2323                           ;doprnt.c: 1190: (putch('-') );
  2324  001434  0E2D               	movlw	45
  2325  001436  ECDB  F017         	call	_putch
  2326                           
  2327                           ;doprnt.c: 1195: }
  2328                           ;doprnt.c: 1196: while(c--) {
  2329  00143A  D045               	goto	l2755
  2330  00143C                     l2749:
  2331                           
  2332                           ;doprnt.c: 1200: {
  2333                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2334  00143C  C06C  F001         	movff	printf@val,___lldiv@dividend
  2335  001440  C06D  F002         	movff	printf@val+1,___lldiv@dividend+1
  2336  001444  C06E  F003         	movff	printf@val+2,___lldiv@dividend+2
  2337  001448  C06F  F004         	movff	printf@val+3,___lldiv@dividend+3
  2338  00144C  5079               	movf	printf@c,w,c
  2339  00144E  0D04               	mullw	4
  2340  001450  0E01               	movlw	low _dpowers
  2341  001452  24F3               	addwf	prodl,w,c
  2342  001454  6EF6               	movwf	tblptrl,c
  2343  001456  0E10               	movlw	high _dpowers
  2344  001458  20F4               	addwfc	prodh,w,c
  2345  00145A  6EF7               	movwf	tblptrh,c
  2346  00145C                     	if	0	;There are less than 3 active tblptr bytes
  2347  00145C                     	endif
  2348  00145C  0009               	tblrd		*+
  2349  00145E  CFF5 F005          	movff	tablat,___lldiv@divisor
  2350  001462  0009               	tblrd		*+
  2351  001464  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2352  001468  0009               	tblrd		*+
  2353  00146A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2354  00146E  000A               	tblrd		*-
  2355  001470  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2356  001474  ECD3  F014         	call	___lldiv	;wreg free
  2357  001478  C001  F072         	movff	?___lldiv,printf@tmpval
  2358  00147C  C002  F073         	movff	?___lldiv+1,printf@tmpval+1
  2359  001480  C003  F074         	movff	?___lldiv+2,printf@tmpval+2
  2360  001484  C004  F075         	movff	?___lldiv+3,printf@tmpval+3
  2361                           
  2362                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2363  001488  C072  F001         	movff	printf@tmpval,___llmod@dividend
  2364  00148C  C073  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2365  001490  C074  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2366  001494  C075  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2367  001498  0E0A               	movlw	10
  2368  00149A  6E05               	movwf	___llmod@divisor,c
  2369  00149C  0E00               	movlw	0
  2370  00149E  6E06               	movwf	___llmod@divisor+1,c
  2371  0014A0  0E00               	movlw	0
  2372  0014A2  6E07               	movwf	___llmod@divisor+2,c
  2373  0014A4  0E00               	movlw	0
  2374  0014A6  6E08               	movwf	___llmod@divisor+3,c
  2375  0014A8  EC17  F016         	call	___llmod	;wreg free
  2376  0014AC  C001  F072         	movff	?___llmod,printf@tmpval
  2377  0014B0  C002  F073         	movff	?___llmod+1,printf@tmpval+1
  2378  0014B4  C003  F074         	movff	?___llmod+2,printf@tmpval+2
  2379  0014B8  C004  F075         	movff	?___llmod+3,printf@tmpval+3
  2380                           
  2381                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2382  0014BC  5072               	movf	printf@tmpval,w,c
  2383  0014BE  0F30               	addlw	48
  2384  0014C0  ECDB  F017         	call	_putch
  2385  0014C4  D000               	goto	l2755
  2386  0014C6                     l2755:
  2387  0014C6  0679               	decf	printf@c,f,c
  2388  0014C8  2879               	incf	printf@c,w,c
  2389  0014CA  B4D8               	btfsc	status,2,c
  2390  0014CC  D009               	goto	l2761
  2391  0014CE  D7B6               	goto	l2749
  2392                           
  2393                           ;doprnt.c: 1204: }
  2394                           ;doprnt.c: 1206: }
  2395                           ;doprnt.c: 1207: while(exp > 0) {
  2396  0014D0  D007               	goto	l2761
  2397  0014D2                     l2757:
  2398                           
  2399                           ;doprnt.c: 1208: (putch('0') );
  2400  0014D2  0E30               	movlw	48
  2401  0014D4  ECDB  F017         	call	_putch
  2402                           
  2403                           ;doprnt.c: 1209: exp--;
  2404  0014D8  0670               	decf	printf@exp,f,c
  2405  0014DA  A0D8               	btfss	status,0,c
  2406  0014DC  0671               	decf	printf@exp+1,f,c
  2407  0014DE  D000               	goto	l2761
  2408  0014E0                     l2761:
  2409  0014E0  BE71               	btfsc	printf@exp+1,7,c
  2410  0014E2  D005               	goto	l2763
  2411  0014E4  5071               	movf	printf@exp+1,w,c
  2412  0014E6  E1F5               	bnz	l2757
  2413  0014E8  0470               	decf	printf@exp,w,c
  2414  0014EA  B0D8               	btfsc	status,0,c
  2415  0014EC  D7F2               	goto	l2757
  2416  0014EE                     l2763:
  2417                           
  2418                           ;doprnt.c: 1210: }
  2419                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2420  0014EE  BE6B               	btfsc	printf@prec+1,7,c
  2421  0014F0  D009               	goto	l223
  2422  0014F2  506B               	movf	printf@prec+1,w,c
  2423  0014F4  E104               	bnz	u2790
  2424  0014F6  0E09               	movlw	9
  2425  0014F8  5C6A               	subwf	printf@prec,w,c
  2426  0014FA  A0D8               	btfss	status,0,c
  2427  0014FC  D003               	goto	l223
  2428  0014FE                     u2790:
  2429                           
  2430                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2431  0014FE  0E08               	movlw	8
  2432  001500  6E79               	movwf	printf@c,c
  2433  001502  D003               	goto	l2767
  2434  001504                     l223:
  2435                           
  2436                           ;doprnt.c: 1213: else
  2437                           ;doprnt.c: 1214: c = prec;
  2438  001504  C06A  F079         	movff	printf@prec,printf@c
  2439  001508  D000               	goto	l2767
  2440  00150A                     l2767:
  2441                           
  2442                           ;doprnt.c: 1215: prec -= c;
  2443  00150A  5079               	movf	printf@c,w,c
  2444  00150C  5E6A               	subwf	printf@prec,f,c
  2445  00150E  0E00               	movlw	0
  2446  001510  BE79               	btfsc	printf@c,7,c
  2447  001512  0EFF               	movlw	255
  2448  001514  5A6B               	subwfb	printf@prec+1,f,c
  2449                           
  2450                           ;doprnt.c: 1219: if(c)
  2451  001516  5079               	movf	printf@c,w,c
  2452  001518  B4D8               	btfsc	status,2,c
  2453  00151A  D004               	goto	l2773
  2454                           
  2455                           ;doprnt.c: 1221: (putch('.') );
  2456  00151C  0E2E               	movlw	46
  2457  00151E  ECDB  F017         	call	_putch
  2458  001522  D000               	goto	l2773
  2459  001524                     l2773:
  2460                           
  2461                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2462  001524  5079               	movf	printf@c,w,c
  2463  001526  EC55  F00B         	call	_scale
  2464  00152A  C04E  F063         	movff	?_scale,_printf$1505
  2465  00152E  C04F  F064         	movff	?_scale+1,_printf$1505+1
  2466  001532  C050  F065         	movff	?_scale+2,_printf$1505+2
  2467                           
  2468                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2469  001536  C076  F01F         	movff	printf@fval,___ftmul@f2
  2470  00153A  C077  F020         	movff	printf@fval+1,___ftmul@f2+1
  2471  00153E  C078  F021         	movff	printf@fval+2,___ftmul@f2+2
  2472  001542  C063  F01C         	movff	_printf$1505,___ftmul@f1
  2473  001546  C064  F01D         	movff	_printf$1505+1,___ftmul@f1+1
  2474  00154A  C065  F01E         	movff	_printf$1505+2,___ftmul@f1+2
  2475  00154E  EC32  F012         	call	___ftmul	;wreg free
  2476  001552  C01C  F02B         	movff	?___ftmul,___fttol@f1
  2477  001556  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  2478  00155A  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  2479  00155E  ECAE  F012         	call	___fttol	;wreg free
  2480  001562  C02B  F06C         	movff	?___fttol,printf@val
  2481  001566  C02C  F06D         	movff	?___fttol+1,printf@val+1
  2482  00156A  C02D  F06E         	movff	?___fttol+2,printf@val+2
  2483  00156E  C02E  F06F         	movff	?___fttol+3,printf@val+3
  2484                           
  2485                           ;doprnt.c: 1228: while(c--) {
  2486  001572  D06B               	goto	l2783
  2487  001574                     l2777:
  2488                           
  2489                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2490  001574  C06C  F001         	movff	printf@val,___lldiv@dividend
  2491  001578  C06D  F002         	movff	printf@val+1,___lldiv@dividend+1
  2492  00157C  C06E  F003         	movff	printf@val+2,___lldiv@dividend+2
  2493  001580  C06F  F004         	movff	printf@val+3,___lldiv@dividend+3
  2494  001584  5079               	movf	printf@c,w,c
  2495  001586  0D04               	mullw	4
  2496  001588  0E01               	movlw	low _dpowers
  2497  00158A  24F3               	addwf	prodl,w,c
  2498  00158C  6EF6               	movwf	tblptrl,c
  2499  00158E  0E10               	movlw	high _dpowers
  2500  001590  20F4               	addwfc	prodh,w,c
  2501  001592  6EF7               	movwf	tblptrh,c
  2502  001594                     	if	0	;There are less than 3 active tblptr bytes
  2503  001594                     	endif
  2504  001594  0009               	tblrd		*+
  2505  001596  CFF5 F005          	movff	tablat,___lldiv@divisor
  2506  00159A  0009               	tblrd		*+
  2507  00159C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2508  0015A0  0009               	tblrd		*+
  2509  0015A2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2510  0015A6  000A               	tblrd		*-
  2511  0015A8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2512  0015AC  ECD3  F014         	call	___lldiv	;wreg free
  2513  0015B0  C001  F072         	movff	?___lldiv,printf@tmpval
  2514  0015B4  C002  F073         	movff	?___lldiv+1,printf@tmpval+1
  2515  0015B8  C003  F074         	movff	?___lldiv+2,printf@tmpval+2
  2516  0015BC  C004  F075         	movff	?___lldiv+3,printf@tmpval+3
  2517                           
  2518                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2519  0015C0  C072  F001         	movff	printf@tmpval,___llmod@dividend
  2520  0015C4  C073  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2521  0015C8  C074  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2522  0015CC  C075  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2523  0015D0  0E0A               	movlw	10
  2524  0015D2  6E05               	movwf	___llmod@divisor,c
  2525  0015D4  0E00               	movlw	0
  2526  0015D6  6E06               	movwf	___llmod@divisor+1,c
  2527  0015D8  0E00               	movlw	0
  2528  0015DA  6E07               	movwf	___llmod@divisor+2,c
  2529  0015DC  0E00               	movlw	0
  2530  0015DE  6E08               	movwf	___llmod@divisor+3,c
  2531  0015E0  EC17  F016         	call	___llmod	;wreg free
  2532  0015E4  C001  F072         	movff	?___llmod,printf@tmpval
  2533  0015E8  C002  F073         	movff	?___llmod+1,printf@tmpval+1
  2534  0015EC  C003  F074         	movff	?___llmod+2,printf@tmpval+2
  2535  0015F0  C004  F075         	movff	?___llmod+3,printf@tmpval+3
  2536                           
  2537                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2538  0015F4  5072               	movf	printf@tmpval,w,c
  2539  0015F6  0F30               	addlw	48
  2540  0015F8  ECDB  F017         	call	_putch
  2541                           
  2542                           ;doprnt.c: 1232: val %= dpowers[c];
  2543  0015FC  C06C  F001         	movff	printf@val,___llmod@dividend
  2544  001600  C06D  F002         	movff	printf@val+1,___llmod@dividend+1
  2545  001604  C06E  F003         	movff	printf@val+2,___llmod@dividend+2
  2546  001608  C06F  F004         	movff	printf@val+3,___llmod@dividend+3
  2547  00160C  5079               	movf	printf@c,w,c
  2548  00160E  0D04               	mullw	4
  2549  001610  0E01               	movlw	low _dpowers
  2550  001612  24F3               	addwf	prodl,w,c
  2551  001614  6EF6               	movwf	tblptrl,c
  2552  001616  0E10               	movlw	high _dpowers
  2553  001618  20F4               	addwfc	prodh,w,c
  2554  00161A  6EF7               	movwf	tblptrh,c
  2555  00161C                     	if	0	;There are less than 3 active tblptr bytes
  2556  00161C                     	endif
  2557  00161C  0009               	tblrd		*+
  2558  00161E  CFF5 F005          	movff	tablat,___llmod@divisor
  2559  001622  0009               	tblrd		*+
  2560  001624  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2561  001628  0009               	tblrd		*+
  2562  00162A  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2563  00162E  000A               	tblrd		*-
  2564  001630  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2565  001634  EC17  F016         	call	___llmod	;wreg free
  2566  001638  C001  F06C         	movff	?___llmod,printf@val
  2567  00163C  C002  F06D         	movff	?___llmod+1,printf@val+1
  2568  001640  C003  F06E         	movff	?___llmod+2,printf@val+2
  2569  001644  C004  F06F         	movff	?___llmod+3,printf@val+3
  2570  001648  D000               	goto	l2783
  2571  00164A                     l2783:
  2572  00164A  0679               	decf	printf@c,f,c
  2573  00164C  2879               	incf	printf@c,w,c
  2574  00164E  B4D8               	btfsc	status,2,c
  2575  001650  D009               	goto	l2789
  2576  001652  D790               	goto	l2777
  2577                           
  2578                           ;doprnt.c: 1233: }
  2579                           ;doprnt.c: 1235: while(prec) {
  2580  001654  D007               	goto	l2789
  2581  001656                     l2785:
  2582                           
  2583                           ;doprnt.c: 1236: (putch('0') );
  2584  001656  0E30               	movlw	48
  2585  001658  ECDB  F017         	call	_putch
  2586                           
  2587                           ;doprnt.c: 1237: prec--;
  2588  00165C  066A               	decf	printf@prec,f,c
  2589  00165E  A0D8               	btfss	status,0,c
  2590  001660  066B               	decf	printf@prec+1,f,c
  2591  001662  D000               	goto	l2789
  2592  001664                     l2789:
  2593  001664  506A               	movf	printf@prec,w,c
  2594  001666  106B               	iorwf	printf@prec+1,w,c
  2595  001668  B4D8               	btfsc	status,2,c
  2596  00166A  D010               	goto	l2795
  2597  00166C  D7F4               	goto	l2785
  2598                           
  2599                           ;doprnt.c: 1238: }
  2600                           ;doprnt.c: 1245: continue;
  2601  00166E  D00E               	goto	l2795
  2602  001670                     l2791:
  2603                           
  2604                           ;doprnt.c: 1246: }
  2605                           ;doprnt.c: 1422: {
  2606                           ;doprnt.c: 1438: if(flag & 0x03)
  2607  001670  0E03               	movlw	3
  2608  001672  1468               	andwf	printf@flag,w,c
  2609  001674  6E5D               	movwf	??_printf& (0+255),c
  2610  001676  0E00               	movlw	0
  2611  001678  1469               	andwf	printf@flag+1,w,c
  2612  00167A  6E5E               	movwf	(??_printf+1)& (0+255),c
  2613  00167C  505D               	movf	??_printf,w,c
  2614  00167E  105E               	iorwf	??_printf+1,w,c
  2615  001680  B4D8               	btfsc	status,2,c
  2616  001682  D004               	goto	l2795
  2617                           
  2618                           ;doprnt.c: 1439: (putch('-') );
  2619  001684  0E2D               	movlw	45
  2620  001686  ECDB  F017         	call	_putch
  2621  00168A  D000               	goto	l2795
  2622  00168C                     l2795:
  2623  00168C  C058  FFF6         	movff	printf@f,tblptrl
  2624  001690  C059  FFF7         	movff	printf@f+1,tblptrh
  2625  001694  4A58               	infsnz	printf@f,f,c
  2626  001696  2A59               	incf	printf@f+1,f,c
  2627  001698                     	if	0	;tblptru may be non-zero
  2628  001698                     	endif
  2629  001698                     	if	0	;tblptru may be non-zero
  2630  001698                     	endif
  2631  001698  0008               	tblrd		*
  2632  00169A  CFF5 F079          	movff	tablat,printf@c
  2633  00169E  5079               	movf	printf@c,w,c
  2634  0016A0  B4D8               	btfsc	status,2,c
  2635  0016A2  D002               	goto	l234
  2636  0016A4  D4F4               	goto	l2647
  2637  0016A6  D000               	goto	l234
  2638  0016A8                     l234:
  2639  0016A8  0012               	return		;funcret
  2640  0016AA                     __end_of_printf:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           postdec1	equ	0xFE5
  2651                           fsr1l	equ	0xFE1
  2652                           postinc2	equ	0xFDE
  2653                           postdec2	equ	0xFDD
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _scale *****************
  2659 ;; Defined at:
  2660 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  scl             1    wreg     char 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  scl             1   83[COMRAM] char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  3   77[COMRAM] char 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:        7 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    2
  2681 ;; This function calls:
  2682 ;;		___awdiv
  2683 ;;		___awmod
  2684 ;;		___ftmul
  2685 ;;		___wmul
  2686 ;; This function is called by:
  2687 ;;		_printf
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text6
  2692  0016AA                     __ptext6:
  2693                           	opt stack 0
  2694  0016AA                     _scale:
  2695                           	opt stack 27
  2696                           
  2697                           ;incstack = 0
  2698                           ;scale@scl stored from wreg
  2699  0016AA  6E54               	movwf	scale@scl,c
  2700                           
  2701                           ;doprnt.c: 428: if(scl < 0) {
  2702  0016AC  AE54               	btfss	scale@scl,7,c
  2703  0016AE  D0EF               	goto	l2365
  2704                           
  2705                           ;doprnt.c: 429: scl = -scl;
  2706  0016B0  6C54               	negf	scale@scl,c
  2707                           
  2708                           ;doprnt.c: 430: if(scl>=110)
  2709  0016B2  5054               	movf	scale@scl,w,c
  2710  0016B4  0A80               	xorlw	128
  2711  0016B6  0F12               	addlw	-238
  2712  0016B8  A0D8               	btfss	status,0,c
  2713  0016BA  D08D               	goto	l2355
  2714                           
  2715                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2716  0016BC  0E00               	movlw	0
  2717  0016BE  6E4B               	movwf	___wmul@multiplicand+1,c
  2718  0016C0  0E03               	movlw	3
  2719  0016C2  6E4A               	movwf	___wmul@multiplicand,c
  2720  0016C4  0E00               	movlw	0
  2721  0016C6  6E43               	movwf	___awdiv@divisor+1,c
  2722  0016C8  0E0A               	movlw	10
  2723  0016CA  6E42               	movwf	___awdiv@divisor,c
  2724  0016CC  0E00               	movlw	0
  2725  0016CE  6E3D               	movwf	___awmod@divisor+1,c
  2726  0016D0  0E64               	movlw	100
  2727  0016D2  6E3C               	movwf	___awmod@divisor,c
  2728  0016D4  5054               	movf	scale@scl,w,c
  2729  0016D6  6E3A               	movwf	___awmod@dividend,c
  2730  0016D8  6A3B               	clrf	___awmod@dividend+1,c
  2731  0016DA  BE3A               	btfsc	___awmod@dividend,7,c
  2732  0016DC  063B               	decf	___awmod@dividend+1,f,c
  2733  0016DE  EC5B  F015         	call	___awmod	;wreg free
  2734  0016E2  C03A  F040         	movff	?___awmod,___awdiv@dividend
  2735  0016E6  C03B  F041         	movff	?___awmod+1,___awdiv@dividend+1
  2736  0016EA  EC40  F014         	call	___awdiv	;wreg free
  2737  0016EE  0E09               	movlw	9
  2738  0016F0  2440               	addwf	?___awdiv,w,c
  2739  0016F2  6E48               	movwf	___wmul@multiplier,c
  2740  0016F4  0E00               	movlw	0
  2741  0016F6  2041               	addwfc	?___awdiv+1,w,c
  2742  0016F8  6E49               	movwf	___wmul@multiplier+1,c
  2743  0016FA  EC52  F017         	call	___wmul	;wreg free
  2744  0016FE  0E29               	movlw	low __npowers_
  2745  001700  2448               	addwf	?___wmul,w,c
  2746  001702  6EF6               	movwf	tblptrl,c
  2747  001704  0E10               	movlw	high __npowers_
  2748  001706  2049               	addwfc	?___wmul+1,w,c
  2749  001708  6EF7               	movwf	tblptrh,c
  2750  00170A                     	if	0	;There are less than 3 active tblptr bytes
  2751  00170A                     	endif
  2752  00170A  0009               	tblrd		*+
  2753  00170C  CFF5 F01F          	movff	tablat,___ftmul@f2
  2754  001710  0009               	tblrd		*+
  2755  001712  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2756  001716  000A               	tblrd		*-
  2757  001718  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2758  00171C  0E00               	movlw	0
  2759  00171E  6E43               	movwf	___awdiv@divisor+1,c
  2760  001720  0E64               	movlw	100
  2761  001722  6E42               	movwf	___awdiv@divisor,c
  2762  001724  5054               	movf	scale@scl,w,c
  2763  001726  6E40               	movwf	___awdiv@dividend,c
  2764  001728  6A41               	clrf	___awdiv@dividend+1,c
  2765  00172A  BE40               	btfsc	___awdiv@dividend,7,c
  2766  00172C  0641               	decf	___awdiv@dividend+1,f,c
  2767  00172E  EC40  F014         	call	___awdiv	;wreg free
  2768  001732  0E12               	movlw	18
  2769  001734  2440               	addwf	?___awdiv,w,c
  2770  001736  6E48               	movwf	___wmul@multiplier,c
  2771  001738  0E00               	movlw	0
  2772  00173A  2041               	addwfc	?___awdiv+1,w,c
  2773  00173C  6E49               	movwf	___wmul@multiplier+1,c
  2774  00173E  0E00               	movlw	0
  2775  001740  6E4B               	movwf	___wmul@multiplicand+1,c
  2776  001742  0E03               	movlw	3
  2777  001744  6E4A               	movwf	___wmul@multiplicand,c
  2778  001746  EC52  F017         	call	___wmul	;wreg free
  2779  00174A  0E29               	movlw	low __npowers_
  2780  00174C  2448               	addwf	?___wmul,w,c
  2781  00174E  6EF6               	movwf	tblptrl,c
  2782  001750  0E10               	movlw	high __npowers_
  2783  001752  2049               	addwfc	?___wmul+1,w,c
  2784  001754  6EF7               	movwf	tblptrh,c
  2785  001756                     	if	0	;There are less than 3 active tblptr bytes
  2786  001756                     	endif
  2787  001756  0009               	tblrd		*+
  2788  001758  CFF5 F01C          	movff	tablat,___ftmul@f1
  2789  00175C  0009               	tblrd		*+
  2790  00175E  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2791  001762  000A               	tblrd		*-
  2792  001764  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2793  001768  EC32  F012         	call	___ftmul	;wreg free
  2794  00176C  C01C  F051         	movff	?___ftmul,_scale$1504
  2795  001770  C01D  F052         	movff	?___ftmul+1,_scale$1504+1
  2796  001774  C01E  F053         	movff	?___ftmul+2,_scale$1504+2
  2797                           
  2798                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2799  001778  C051  F01C         	movff	_scale$1504,___ftmul@f1
  2800  00177C  C052  F01D         	movff	_scale$1504+1,___ftmul@f1+1
  2801  001780  C053  F01E         	movff	_scale$1504+2,___ftmul@f1+2
  2802  001784  0E00               	movlw	0
  2803  001786  6E4B               	movwf	___wmul@multiplicand+1,c
  2804  001788  0E03               	movlw	3
  2805  00178A  6E4A               	movwf	___wmul@multiplicand,c
  2806  00178C  0E00               	movlw	0
  2807  00178E  6E3D               	movwf	___awmod@divisor+1,c
  2808  001790  0E0A               	movlw	10
  2809  001792  6E3C               	movwf	___awmod@divisor,c
  2810  001794  5054               	movf	scale@scl,w,c
  2811  001796  6E3A               	movwf	___awmod@dividend,c
  2812  001798  6A3B               	clrf	___awmod@dividend+1,c
  2813  00179A  BE3A               	btfsc	___awmod@dividend,7,c
  2814  00179C  063B               	decf	___awmod@dividend+1,f,c
  2815  00179E  EC5B  F015         	call	___awmod	;wreg free
  2816  0017A2  C03A  F048         	movff	?___awmod,___wmul@multiplier
  2817  0017A6  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  2818  0017AA  EC52  F017         	call	___wmul	;wreg free
  2819  0017AE  0E29               	movlw	low __npowers_
  2820  0017B0  2448               	addwf	?___wmul,w,c
  2821  0017B2  6EF6               	movwf	tblptrl,c
  2822  0017B4  0E10               	movlw	high __npowers_
  2823  0017B6  2049               	addwfc	?___wmul+1,w,c
  2824  0017B8  6EF7               	movwf	tblptrh,c
  2825  0017BA                     	if	0	;There are less than 3 active tblptr bytes
  2826  0017BA                     	endif
  2827  0017BA  0009               	tblrd		*+
  2828  0017BC  CFF5 F01F          	movff	tablat,___ftmul@f2
  2829  0017C0  0009               	tblrd		*+
  2830  0017C2  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2831  0017C6  000A               	tblrd		*-
  2832  0017C8  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2833  0017CC  EC32  F012         	call	___ftmul	;wreg free
  2834  0017D0  D141               	goto	L5
  2835  0017D2  D15A               	goto	l178
  2836  0017D4  D054               	goto	l2361
  2837  0017D6                     l2355:
  2838                           
  2839                           ;doprnt.c: 432: else if(scl > 10)
  2840  0017D6  5054               	movf	scale@scl,w,c
  2841  0017D8  0A80               	xorlw	128
  2842  0017DA  0F75               	addlw	-139
  2843  0017DC  A0D8               	btfss	status,0,c
  2844  0017DE  D04F               	goto	l2361
  2845                           
  2846                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2847  0017E0  0E00               	movlw	0
  2848  0017E2  6E43               	movwf	___awdiv@divisor+1,c
  2849  0017E4  0E0A               	movlw	10
  2850  0017E6  6E42               	movwf	___awdiv@divisor,c
  2851  0017E8  5054               	movf	scale@scl,w,c
  2852  0017EA  6E40               	movwf	___awdiv@dividend,c
  2853  0017EC  6A41               	clrf	___awdiv@dividend+1,c
  2854  0017EE  BE40               	btfsc	___awdiv@dividend,7,c
  2855  0017F0  0641               	decf	___awdiv@dividend+1,f,c
  2856  0017F2  EC40  F014         	call	___awdiv	;wreg free
  2857  0017F6  0E09               	movlw	9
  2858  0017F8  2440               	addwf	?___awdiv,w,c
  2859  0017FA  6E48               	movwf	___wmul@multiplier,c
  2860  0017FC  0E00               	movlw	0
  2861  0017FE  2041               	addwfc	?___awdiv+1,w,c
  2862  001800  6E49               	movwf	___wmul@multiplier+1,c
  2863  001802  0E00               	movlw	0
  2864  001804  6E4B               	movwf	___wmul@multiplicand+1,c
  2865  001806  0E03               	movlw	3
  2866  001808  6E4A               	movwf	___wmul@multiplicand,c
  2867  00180A  EC52  F017         	call	___wmul	;wreg free
  2868  00180E  0E29               	movlw	low __npowers_
  2869  001810  2448               	addwf	?___wmul,w,c
  2870  001812  6EF6               	movwf	tblptrl,c
  2871  001814  0E10               	movlw	high __npowers_
  2872  001816  2049               	addwfc	?___wmul+1,w,c
  2873  001818  6EF7               	movwf	tblptrh,c
  2874  00181A                     	if	0	;There are less than 3 active tblptr bytes
  2875  00181A                     	endif
  2876  00181A  0009               	tblrd		*+
  2877  00181C  CFF5 F01C          	movff	tablat,___ftmul@f1
  2878  001820  0009               	tblrd		*+
  2879  001822  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2880  001826  000A               	tblrd		*-
  2881  001828  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2882  00182C  0E00               	movlw	0
  2883  00182E  6E4B               	movwf	___wmul@multiplicand+1,c
  2884  001830  0E03               	movlw	3
  2885  001832  6E4A               	movwf	___wmul@multiplicand,c
  2886  001834  0E00               	movlw	0
  2887  001836  6E3D               	movwf	___awmod@divisor+1,c
  2888  001838  0E0A               	movlw	10
  2889  00183A  6E3C               	movwf	___awmod@divisor,c
  2890  00183C  5054               	movf	scale@scl,w,c
  2891  00183E  6E3A               	movwf	___awmod@dividend,c
  2892  001840  6A3B               	clrf	___awmod@dividend+1,c
  2893  001842  BE3A               	btfsc	___awmod@dividend,7,c
  2894  001844  063B               	decf	___awmod@dividend+1,f,c
  2895  001846  EC5B  F015         	call	___awmod	;wreg free
  2896  00184A  C03A  F048         	movff	?___awmod,___wmul@multiplier
  2897  00184E  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  2898  001852  EC52  F017         	call	___wmul	;wreg free
  2899  001856  0E29               	movlw	low __npowers_
  2900  001858  2448               	addwf	?___wmul,w,c
  2901  00185A  6EF6               	movwf	tblptrl,c
  2902  00185C  0E10               	movlw	high __npowers_
  2903  00185E  2049               	addwfc	?___wmul+1,w,c
  2904  001860  6EF7               	movwf	tblptrh,c
  2905  001862                     	if	0	;There are less than 3 active tblptr bytes
  2906  001862                     	endif
  2907  001862  0009               	tblrd		*+
  2908  001864  CFF5 F01F          	movff	tablat,___ftmul@f2
  2909  001868  0009               	tblrd		*+
  2910  00186A  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2911  00186E  000A               	tblrd		*-
  2912  001870  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2913  001874  EC32  F012         	call	___ftmul	;wreg free
  2914  001878  D0ED               	goto	L5
  2915  00187A  D106               	goto	l178
  2916  00187C  D000               	goto	l2361
  2917  00187E                     l2361:
  2918                           
  2919                           ;doprnt.c: 434: return _npowers_[scl];
  2920  00187E  5054               	movf	scale@scl,w,c
  2921  001880  0D03               	mullw	3
  2922  001882  0E29               	movlw	low __npowers_
  2923  001884  24F3               	addwf	prodl,w,c
  2924  001886  6EF6               	movwf	tblptrl,c
  2925  001888  0E10               	movlw	high __npowers_
  2926  00188A  D0F2               	goto	L4
  2927  00188C  D0FD               	goto	l178
  2928  00188E                     l2365:
  2929                           
  2930                           ;doprnt.c: 435: }
  2931                           ;doprnt.c: 436: if(scl>=110)
  2932  00188E  5054               	movf	scale@scl,w,c
  2933  001890  0A80               	xorlw	128
  2934  001892  0F12               	addlw	-238
  2935  001894  A0D8               	btfss	status,0,c
  2936  001896  D08D               	goto	l2373
  2937                           
  2938                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2939  001898  0E00               	movlw	0
  2940  00189A  6E4B               	movwf	___wmul@multiplicand+1,c
  2941  00189C  0E03               	movlw	3
  2942  00189E  6E4A               	movwf	___wmul@multiplicand,c
  2943  0018A0  0E00               	movlw	0
  2944  0018A2  6E43               	movwf	___awdiv@divisor+1,c
  2945  0018A4  0E0A               	movlw	10
  2946  0018A6  6E42               	movwf	___awdiv@divisor,c
  2947  0018A8  0E00               	movlw	0
  2948  0018AA  6E3D               	movwf	___awmod@divisor+1,c
  2949  0018AC  0E64               	movlw	100
  2950  0018AE  6E3C               	movwf	___awmod@divisor,c
  2951  0018B0  5054               	movf	scale@scl,w,c
  2952  0018B2  6E3A               	movwf	___awmod@dividend,c
  2953  0018B4  6A3B               	clrf	___awmod@dividend+1,c
  2954  0018B6  BE3A               	btfsc	___awmod@dividend,7,c
  2955  0018B8  063B               	decf	___awmod@dividend+1,f,c
  2956  0018BA  EC5B  F015         	call	___awmod	;wreg free
  2957  0018BE  C03A  F040         	movff	?___awmod,___awdiv@dividend
  2958  0018C2  C03B  F041         	movff	?___awmod+1,___awdiv@dividend+1
  2959  0018C6  EC40  F014         	call	___awdiv	;wreg free
  2960  0018CA  0E09               	movlw	9
  2961  0018CC  2440               	addwf	?___awdiv,w,c
  2962  0018CE  6E48               	movwf	___wmul@multiplier,c
  2963  0018D0  0E00               	movlw	0
  2964  0018D2  2041               	addwfc	?___awdiv+1,w,c
  2965  0018D4  6E49               	movwf	___wmul@multiplier+1,c
  2966  0018D6  EC52  F017         	call	___wmul	;wreg free
  2967  0018DA  0E50               	movlw	low __powers_
  2968  0018DC  2448               	addwf	?___wmul,w,c
  2969  0018DE  6EF6               	movwf	tblptrl,c
  2970  0018E0  0E10               	movlw	high __powers_
  2971  0018E2  2049               	addwfc	?___wmul+1,w,c
  2972  0018E4  6EF7               	movwf	tblptrh,c
  2973  0018E6                     	if	0	;There are less than 3 active tblptr bytes
  2974  0018E6                     	endif
  2975  0018E6  0009               	tblrd		*+
  2976  0018E8  CFF5 F01F          	movff	tablat,___ftmul@f2
  2977  0018EC  0009               	tblrd		*+
  2978  0018EE  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2979  0018F2  000A               	tblrd		*-
  2980  0018F4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2981  0018F8  0E00               	movlw	0
  2982  0018FA  6E43               	movwf	___awdiv@divisor+1,c
  2983  0018FC  0E64               	movlw	100
  2984  0018FE  6E42               	movwf	___awdiv@divisor,c
  2985  001900  5054               	movf	scale@scl,w,c
  2986  001902  6E40               	movwf	___awdiv@dividend,c
  2987  001904  6A41               	clrf	___awdiv@dividend+1,c
  2988  001906  BE40               	btfsc	___awdiv@dividend,7,c
  2989  001908  0641               	decf	___awdiv@dividend+1,f,c
  2990  00190A  EC40  F014         	call	___awdiv	;wreg free
  2991  00190E  0E12               	movlw	18
  2992  001910  2440               	addwf	?___awdiv,w,c
  2993  001912  6E48               	movwf	___wmul@multiplier,c
  2994  001914  0E00               	movlw	0
  2995  001916  2041               	addwfc	?___awdiv+1,w,c
  2996  001918  6E49               	movwf	___wmul@multiplier+1,c
  2997  00191A  0E00               	movlw	0
  2998  00191C  6E4B               	movwf	___wmul@multiplicand+1,c
  2999  00191E  0E03               	movlw	3
  3000  001920  6E4A               	movwf	___wmul@multiplicand,c
  3001  001922  EC52  F017         	call	___wmul	;wreg free
  3002  001926  0E50               	movlw	low __powers_
  3003  001928  2448               	addwf	?___wmul,w,c
  3004  00192A  6EF6               	movwf	tblptrl,c
  3005  00192C  0E10               	movlw	high __powers_
  3006  00192E  2049               	addwfc	?___wmul+1,w,c
  3007  001930  6EF7               	movwf	tblptrh,c
  3008  001932                     	if	0	;There are less than 3 active tblptr bytes
  3009  001932                     	endif
  3010  001932  0009               	tblrd		*+
  3011  001934  CFF5 F01C          	movff	tablat,___ftmul@f1
  3012  001938  0009               	tblrd		*+
  3013  00193A  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3014  00193E  000A               	tblrd		*-
  3015  001940  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3016  001944  EC32  F012         	call	___ftmul	;wreg free
  3017  001948  C01C  F051         	movff	?___ftmul,_scale$1504
  3018  00194C  C01D  F052         	movff	?___ftmul+1,_scale$1504+1
  3019  001950  C01E  F053         	movff	?___ftmul+2,_scale$1504+2
  3020                           
  3021                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3022  001954  C051  F01C         	movff	_scale$1504,___ftmul@f1
  3023  001958  C052  F01D         	movff	_scale$1504+1,___ftmul@f1+1
  3024  00195C  C053  F01E         	movff	_scale$1504+2,___ftmul@f1+2
  3025  001960  0E00               	movlw	0
  3026  001962  6E4B               	movwf	___wmul@multiplicand+1,c
  3027  001964  0E03               	movlw	3
  3028  001966  6E4A               	movwf	___wmul@multiplicand,c
  3029  001968  0E00               	movlw	0
  3030  00196A  6E3D               	movwf	___awmod@divisor+1,c
  3031  00196C  0E0A               	movlw	10
  3032  00196E  6E3C               	movwf	___awmod@divisor,c
  3033  001970  5054               	movf	scale@scl,w,c
  3034  001972  6E3A               	movwf	___awmod@dividend,c
  3035  001974  6A3B               	clrf	___awmod@dividend+1,c
  3036  001976  BE3A               	btfsc	___awmod@dividend,7,c
  3037  001978  063B               	decf	___awmod@dividend+1,f,c
  3038  00197A  EC5B  F015         	call	___awmod	;wreg free
  3039  00197E  C03A  F048         	movff	?___awmod,___wmul@multiplier
  3040  001982  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  3041  001986  EC52  F017         	call	___wmul	;wreg free
  3042  00198A  0E50               	movlw	low __powers_
  3043  00198C  2448               	addwf	?___wmul,w,c
  3044  00198E  6EF6               	movwf	tblptrl,c
  3045  001990  0E10               	movlw	high __powers_
  3046  001992  2049               	addwfc	?___wmul+1,w,c
  3047  001994  6EF7               	movwf	tblptrh,c
  3048  001996                     	if	0	;There are less than 3 active tblptr bytes
  3049  001996                     	endif
  3050  001996  0009               	tblrd		*+
  3051  001998  CFF5 F01F          	movff	tablat,___ftmul@f2
  3052  00199C  0009               	tblrd		*+
  3053  00199E  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3054  0019A2  000A               	tblrd		*-
  3055  0019A4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3056  0019A8  EC32  F012         	call	___ftmul	;wreg free
  3057  0019AC  D053               	goto	L5
  3058  0019AE  D06C               	goto	l178
  3059  0019B0  D059               	goto	l2379
  3060  0019B2                     l2373:
  3061                           
  3062                           ;doprnt.c: 438: else if(scl > 10)
  3063  0019B2  5054               	movf	scale@scl,w,c
  3064  0019B4  0A80               	xorlw	128
  3065  0019B6  0F75               	addlw	-139
  3066  0019B8  A0D8               	btfss	status,0,c
  3067  0019BA  D054               	goto	l2379
  3068                           
  3069                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3070  0019BC  0E00               	movlw	0
  3071  0019BE  6E43               	movwf	___awdiv@divisor+1,c
  3072  0019C0  0E0A               	movlw	10
  3073  0019C2  6E42               	movwf	___awdiv@divisor,c
  3074  0019C4  5054               	movf	scale@scl,w,c
  3075  0019C6  6E40               	movwf	___awdiv@dividend,c
  3076  0019C8  6A41               	clrf	___awdiv@dividend+1,c
  3077  0019CA  BE40               	btfsc	___awdiv@dividend,7,c
  3078  0019CC  0641               	decf	___awdiv@dividend+1,f,c
  3079  0019CE  EC40  F014         	call	___awdiv	;wreg free
  3080  0019D2  0E09               	movlw	9
  3081  0019D4  2440               	addwf	?___awdiv,w,c
  3082  0019D6  6E48               	movwf	___wmul@multiplier,c
  3083  0019D8  0E00               	movlw	0
  3084  0019DA  2041               	addwfc	?___awdiv+1,w,c
  3085  0019DC  6E49               	movwf	___wmul@multiplier+1,c
  3086  0019DE  0E00               	movlw	0
  3087  0019E0  6E4B               	movwf	___wmul@multiplicand+1,c
  3088  0019E2  0E03               	movlw	3
  3089  0019E4  6E4A               	movwf	___wmul@multiplicand,c
  3090  0019E6  EC52  F017         	call	___wmul	;wreg free
  3091  0019EA  0E50               	movlw	low __powers_
  3092  0019EC  2448               	addwf	?___wmul,w,c
  3093  0019EE  6EF6               	movwf	tblptrl,c
  3094  0019F0  0E10               	movlw	high __powers_
  3095  0019F2  2049               	addwfc	?___wmul+1,w,c
  3096  0019F4  6EF7               	movwf	tblptrh,c
  3097  0019F6                     	if	0	;There are less than 3 active tblptr bytes
  3098  0019F6                     	endif
  3099  0019F6  0009               	tblrd		*+
  3100  0019F8  CFF5 F01C          	movff	tablat,___ftmul@f1
  3101  0019FC  0009               	tblrd		*+
  3102  0019FE  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3103  001A02  000A               	tblrd		*-
  3104  001A04  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3105  001A08  0E00               	movlw	0
  3106  001A0A  6E4B               	movwf	___wmul@multiplicand+1,c
  3107  001A0C  0E03               	movlw	3
  3108  001A0E  6E4A               	movwf	___wmul@multiplicand,c
  3109  001A10  0E00               	movlw	0
  3110  001A12  6E3D               	movwf	___awmod@divisor+1,c
  3111  001A14  0E0A               	movlw	10
  3112  001A16  6E3C               	movwf	___awmod@divisor,c
  3113  001A18  5054               	movf	scale@scl,w,c
  3114  001A1A  6E3A               	movwf	___awmod@dividend,c
  3115  001A1C  6A3B               	clrf	___awmod@dividend+1,c
  3116  001A1E  BE3A               	btfsc	___awmod@dividend,7,c
  3117  001A20  063B               	decf	___awmod@dividend+1,f,c
  3118  001A22  EC5B  F015         	call	___awmod	;wreg free
  3119  001A26  C03A  F048         	movff	?___awmod,___wmul@multiplier
  3120  001A2A  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  3121  001A2E  EC52  F017         	call	___wmul	;wreg free
  3122  001A32  0E50               	movlw	low __powers_
  3123  001A34  2448               	addwf	?___wmul,w,c
  3124  001A36  6EF6               	movwf	tblptrl,c
  3125  001A38  0E10               	movlw	high __powers_
  3126  001A3A  2049               	addwfc	?___wmul+1,w,c
  3127  001A3C  6EF7               	movwf	tblptrh,c
  3128  001A3E                     	if	0	;There are less than 3 active tblptr bytes
  3129  001A3E                     	endif
  3130  001A3E  0009               	tblrd		*+
  3131  001A40  CFF5 F01F          	movff	tablat,___ftmul@f2
  3132  001A44  0009               	tblrd		*+
  3133  001A46  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3134  001A4A  000A               	tblrd		*-
  3135  001A4C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3136  001A50  EC32  F012         	call	___ftmul	;wreg free
  3137  001A54                     L5:
  3138  001A54  C01C  F04E         	movff	?___ftmul,?_scale
  3139  001A58  C01D  F04F         	movff	?___ftmul+1,?_scale+1
  3140  001A5C  C01E  F050         	movff	?___ftmul+2,?_scale+2
  3141  001A60  D013               	goto	l178
  3142  001A62  D000               	goto	l2379
  3143  001A64                     l2379:
  3144                           
  3145                           ;doprnt.c: 440: return _powers_[scl];
  3146  001A64  5054               	movf	scale@scl,w,c
  3147  001A66  0D03               	mullw	3
  3148  001A68  0E50               	movlw	low __powers_
  3149  001A6A  24F3               	addwf	prodl,w,c
  3150  001A6C  6EF6               	movwf	tblptrl,c
  3151  001A6E  0E10               	movlw	high __powers_
  3152  001A70                     L4:
  3153  001A70  20F4               	addwfc	prodh,w,c
  3154  001A72  6EF7               	movwf	tblptrh,c
  3155  001A74                     	if	0	;There are less than 3 active tblptr bytes
  3156  001A74                     	endif
  3157  001A74  0009               	tblrd		*+
  3158  001A76  CFF5 F04E          	movff	tablat,?_scale
  3159  001A7A  0009               	tblrd		*+
  3160  001A7C  CFF5 F04F          	movff	tablat,?_scale+1
  3161  001A80  000A               	tblrd		*-
  3162  001A82  CFF5 F050          	movff	tablat,?_scale+2
  3163  001A86  D000               	goto	l178
  3164  001A88                     l178:
  3165  001A88  0012               	return		;funcret
  3166  001A8A                     __end_of_scale:
  3167                           	opt stack 0
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1l	equ	0xFE1
  3178                           postinc2	equ	0xFDE
  3179                           postdec2	equ	0xFDD
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _putch *****************
  3185 ;; Defined at:
  3186 ;;		line 63 in file "Lab5p2b3.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  c               1    wreg     unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  c               1    0[COMRAM] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;		None               void
  3193 ;; Registers used:
  3194 ;;		wreg
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;Total ram usage:        1 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_printf
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text7
  3214  002FB6                     __ptext7:
  3215                           	opt stack 0
  3216  002FB6                     _putch:
  3217                           	opt stack 29
  3218                           
  3219                           ;incstack = 0
  3220                           ;putch@c stored from wreg
  3221  002FB6  6E01               	movwf	putch@c,c
  3222                           
  3223                           ;Lab5p2b3.c: 65: while (!TRMT);
  3224  002FB8  D000               	goto	l85
  3225  002FBA                     l85:
  3226  002FBA  A2AC               	btfss	4012,1,c	;volatile
  3227  002FBC  D7FE               	goto	l85
  3228                           
  3229                           ;Lab5p2b3.c: 66: TXREG = c;
  3230  002FBE  C001  FFAD         	movff	putch@c,4013	;volatile
  3231  002FC2  0012               	return		;funcret
  3232  002FC4                     __end_of_putch:
  3233                           	opt stack 0
  3234                           tblptru	equ	0xFF8
  3235                           tblptrh	equ	0xFF7
  3236                           tblptrl	equ	0xFF6
  3237                           tablat	equ	0xFF5
  3238                           prodh	equ	0xFF4
  3239                           prodl	equ	0xFF3
  3240                           postinc0	equ	0xFEE
  3241                           wreg	equ	0xFE8
  3242                           postdec1	equ	0xFE5
  3243                           fsr1l	equ	0xFE1
  3244                           postinc2	equ	0xFDE
  3245                           postdec2	equ	0xFDD
  3246                           fsr2h	equ	0xFDA
  3247                           fsr2l	equ	0xFD9
  3248                           status	equ	0xFD8
  3249                           
  3250 ;; *************** function _fround *****************
  3251 ;; Defined at:
  3252 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  prec            1    wreg     unsigned char 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  prec            1   86[COMRAM] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  3   77[COMRAM] unsigned char 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3266 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;Total ram usage:       10 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    2
  3273 ;; This function calls:
  3274 ;;		___awdiv
  3275 ;;		___awmod
  3276 ;;		___ftmul
  3277 ;;		___wmul
  3278 ;; This function is called by:
  3279 ;;		_printf
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text8
  3284  001E42                     __ptext8:
  3285                           	opt stack 0
  3286  001E42                     _fround:
  3287                           	opt stack 27
  3288                           
  3289                           ;incstack = 0
  3290                           ;fround@prec stored from wreg
  3291  001E42  6E57               	movwf	fround@prec,c
  3292                           
  3293                           ;doprnt.c: 413: if(prec>=110)
  3294  001E44  0E6D               	movlw	109
  3295  001E46  6457               	cpfsgt	fround@prec,c
  3296  001E48  D09B               	goto	l2333
  3297                           
  3298                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3299  001E4A  0E00               	movlw	0
  3300  001E4C  6E4B               	movwf	___wmul@multiplicand+1,c
  3301  001E4E  0E03               	movlw	3
  3302  001E50  6E4A               	movwf	___wmul@multiplicand,c
  3303  001E52  0E00               	movlw	0
  3304  001E54  6E43               	movwf	___awdiv@divisor+1,c
  3305  001E56  0E0A               	movlw	10
  3306  001E58  6E42               	movwf	___awdiv@divisor,c
  3307  001E5A  0E00               	movlw	0
  3308  001E5C  6E3D               	movwf	___awmod@divisor+1,c
  3309  001E5E  0E64               	movlw	100
  3310  001E60  6E3C               	movwf	___awmod@divisor,c
  3311  001E62  C057  F03A         	movff	fround@prec,___awmod@dividend
  3312  001E66  6A3B               	clrf	___awmod@dividend+1,c
  3313  001E68  EC5B  F015         	call	___awmod	;wreg free
  3314  001E6C  C03A  F040         	movff	?___awmod,___awdiv@dividend
  3315  001E70  C03B  F041         	movff	?___awmod+1,___awdiv@dividend+1
  3316  001E74  EC40  F014         	call	___awdiv	;wreg free
  3317  001E78  0E09               	movlw	9
  3318  001E7A  2440               	addwf	?___awdiv,w,c
  3319  001E7C  6E48               	movwf	___wmul@multiplier,c
  3320  001E7E  0E00               	movlw	0
  3321  001E80  2041               	addwfc	?___awdiv+1,w,c
  3322  001E82  6E49               	movwf	___wmul@multiplier+1,c
  3323  001E84  EC52  F017         	call	___wmul	;wreg free
  3324  001E88  0E29               	movlw	low __npowers_
  3325  001E8A  2448               	addwf	?___wmul,w,c
  3326  001E8C  6EF6               	movwf	tblptrl,c
  3327  001E8E  0E10               	movlw	high __npowers_
  3328  001E90  2049               	addwfc	?___wmul+1,w,c
  3329  001E92  6EF7               	movwf	tblptrh,c
  3330  001E94                     	if	0	;There are less than 3 active tblptr bytes
  3331  001E94                     	endif
  3332  001E94  0009               	tblrd		*+
  3333  001E96  CFF5 F01F          	movff	tablat,___ftmul@f2
  3334  001E9A  0009               	tblrd		*+
  3335  001E9C  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3336  001EA0  000A               	tblrd		*-
  3337  001EA2  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3338  001EA6  0E00               	movlw	0
  3339  001EA8  6E43               	movwf	___awdiv@divisor+1,c
  3340  001EAA  0E64               	movlw	100
  3341  001EAC  6E42               	movwf	___awdiv@divisor,c
  3342  001EAE  C057  F040         	movff	fround@prec,___awdiv@dividend
  3343  001EB2  6A41               	clrf	___awdiv@dividend+1,c
  3344  001EB4  EC40  F014         	call	___awdiv	;wreg free
  3345  001EB8  0E12               	movlw	18
  3346  001EBA  2440               	addwf	?___awdiv,w,c
  3347  001EBC  6E48               	movwf	___wmul@multiplier,c
  3348  001EBE  0E00               	movlw	0
  3349  001EC0  2041               	addwfc	?___awdiv+1,w,c
  3350  001EC2  6E49               	movwf	___wmul@multiplier+1,c
  3351  001EC4  0E00               	movlw	0
  3352  001EC6  6E4B               	movwf	___wmul@multiplicand+1,c
  3353  001EC8  0E03               	movlw	3
  3354  001ECA  6E4A               	movwf	___wmul@multiplicand,c
  3355  001ECC  EC52  F017         	call	___wmul	;wreg free
  3356  001ED0  0E29               	movlw	low __npowers_
  3357  001ED2  2448               	addwf	?___wmul,w,c
  3358  001ED4  6EF6               	movwf	tblptrl,c
  3359  001ED6  0E10               	movlw	high __npowers_
  3360  001ED8  2049               	addwfc	?___wmul+1,w,c
  3361  001EDA  6EF7               	movwf	tblptrh,c
  3362  001EDC                     	if	0	;There are less than 3 active tblptr bytes
  3363  001EDC                     	endif
  3364  001EDC  0009               	tblrd		*+
  3365  001EDE  CFF5 F01C          	movff	tablat,___ftmul@f1
  3366  001EE2  0009               	tblrd		*+
  3367  001EE4  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3368  001EE8  000A               	tblrd		*-
  3369  001EEA  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3370  001EEE  EC32  F012         	call	___ftmul	;wreg free
  3371  001EF2  C01C  F054         	movff	?___ftmul,_fround$1502
  3372  001EF6  C01D  F055         	movff	?___ftmul+1,_fround$1502+1
  3373  001EFA  C01E  F056         	movff	?___ftmul+2,_fround$1502+2
  3374                           
  3375                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3376  001EFE  0E00               	movlw	0
  3377  001F00  6E4B               	movwf	___wmul@multiplicand+1,c
  3378  001F02  0E03               	movlw	3
  3379  001F04  6E4A               	movwf	___wmul@multiplicand,c
  3380  001F06  0E00               	movlw	0
  3381  001F08  6E3D               	movwf	___awmod@divisor+1,c
  3382  001F0A  0E0A               	movlw	10
  3383  001F0C  6E3C               	movwf	___awmod@divisor,c
  3384  001F0E  C057  F03A         	movff	fround@prec,___awmod@dividend
  3385  001F12  6A3B               	clrf	___awmod@dividend+1,c
  3386  001F14  EC5B  F015         	call	___awmod	;wreg free
  3387  001F18  C03A  F048         	movff	?___awmod,___wmul@multiplier
  3388  001F1C  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  3389  001F20  EC52  F017         	call	___wmul	;wreg free
  3390  001F24  0E29               	movlw	low __npowers_
  3391  001F26  2448               	addwf	?___wmul,w,c
  3392  001F28  6EF6               	movwf	tblptrl,c
  3393  001F2A  0E10               	movlw	high __npowers_
  3394  001F2C  2049               	addwfc	?___wmul+1,w,c
  3395  001F2E  6EF7               	movwf	tblptrh,c
  3396  001F30                     	if	0	;There are less than 3 active tblptr bytes
  3397  001F30                     	endif
  3398  001F30  0009               	tblrd		*+
  3399  001F32  CFF5 F01F          	movff	tablat,___ftmul@f2
  3400  001F36  0009               	tblrd		*+
  3401  001F38  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3402  001F3C  000A               	tblrd		*-
  3403  001F3E  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3404  001F42  C054  F01C         	movff	_fround$1502,___ftmul@f1
  3405  001F46  C055  F01D         	movff	_fround$1502+1,___ftmul@f1+1
  3406  001F4A  C056  F01E         	movff	_fround$1502+2,___ftmul@f1+2
  3407  001F4E  EC32  F012         	call	___ftmul	;wreg free
  3408  001F52  C01C  F051         	movff	?___ftmul,_fround$1503
  3409  001F56  C01D  F052         	movff	?___ftmul+1,_fround$1503+1
  3410  001F5A  C01E  F053         	movff	?___ftmul+2,_fround$1503+2
  3411                           
  3412                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3413  001F5E  C051  F01C         	movff	_fround$1503,___ftmul@f1
  3414  001F62  C052  F01D         	movff	_fround$1503+1,___ftmul@f1+1
  3415  001F66  C053  F01E         	movff	_fround$1503+2,___ftmul@f1+2
  3416  001F6A  0E00               	movlw	0
  3417  001F6C  6E1F               	movwf	___ftmul@f2,c
  3418  001F6E  0E00               	movlw	0
  3419  001F70  6E20               	movwf	___ftmul@f2+1,c
  3420  001F72  0E3F               	movlw	63
  3421  001F74  6E21               	movwf	___ftmul@f2+2,c
  3422  001F76  EC32  F012         	call	___ftmul	;wreg free
  3423  001F7A  D07D               	goto	L7
  3424  001F7C  D083               	goto	l171
  3425  001F7E  D062               	goto	l2341
  3426  001F80                     l2333:
  3427                           
  3428                           ;doprnt.c: 415: else if(prec > 10)
  3429  001F80  0E0A               	movlw	10
  3430  001F82  6457               	cpfsgt	fround@prec,c
  3431  001F84  D05F               	goto	l2341
  3432                           
  3433                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3434  001F86  0E00               	movlw	0
  3435  001F88  6E4B               	movwf	___wmul@multiplicand+1,c
  3436  001F8A  0E03               	movlw	3
  3437  001F8C  6E4A               	movwf	___wmul@multiplicand,c
  3438  001F8E  0E00               	movlw	0
  3439  001F90  6E3D               	movwf	___awmod@divisor+1,c
  3440  001F92  0E0A               	movlw	10
  3441  001F94  6E3C               	movwf	___awmod@divisor,c
  3442  001F96  C057  F03A         	movff	fround@prec,___awmod@dividend
  3443  001F9A  6A3B               	clrf	___awmod@dividend+1,c
  3444  001F9C  EC5B  F015         	call	___awmod	;wreg free
  3445  001FA0  C03A  F048         	movff	?___awmod,___wmul@multiplier
  3446  001FA4  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  3447  001FA8  EC52  F017         	call	___wmul	;wreg free
  3448  001FAC  0E29               	movlw	low __npowers_
  3449  001FAE  2448               	addwf	?___wmul,w,c
  3450  001FB0  6EF6               	movwf	tblptrl,c
  3451  001FB2  0E10               	movlw	high __npowers_
  3452  001FB4  2049               	addwfc	?___wmul+1,w,c
  3453  001FB6  6EF7               	movwf	tblptrh,c
  3454  001FB8                     	if	0	;There are less than 3 active tblptr bytes
  3455  001FB8                     	endif
  3456  001FB8  0009               	tblrd		*+
  3457  001FBA  CFF5 F01F          	movff	tablat,___ftmul@f2
  3458  001FBE  0009               	tblrd		*+
  3459  001FC0  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3460  001FC4  000A               	tblrd		*-
  3461  001FC6  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3462  001FCA  0E00               	movlw	0
  3463  001FCC  6E43               	movwf	___awdiv@divisor+1,c
  3464  001FCE  0E0A               	movlw	10
  3465  001FD0  6E42               	movwf	___awdiv@divisor,c
  3466  001FD2  C057  F040         	movff	fround@prec,___awdiv@dividend
  3467  001FD6  6A41               	clrf	___awdiv@dividend+1,c
  3468  001FD8  EC40  F014         	call	___awdiv	;wreg free
  3469  001FDC  0E09               	movlw	9
  3470  001FDE  2440               	addwf	?___awdiv,w,c
  3471  001FE0  6E48               	movwf	___wmul@multiplier,c
  3472  001FE2  0E00               	movlw	0
  3473  001FE4  2041               	addwfc	?___awdiv+1,w,c
  3474  001FE6  6E49               	movwf	___wmul@multiplier+1,c
  3475  001FE8  0E00               	movlw	0
  3476  001FEA  6E4B               	movwf	___wmul@multiplicand+1,c
  3477  001FEC  0E03               	movlw	3
  3478  001FEE  6E4A               	movwf	___wmul@multiplicand,c
  3479  001FF0  EC52  F017         	call	___wmul	;wreg free
  3480  001FF4  0E29               	movlw	low __npowers_
  3481  001FF6  2448               	addwf	?___wmul,w,c
  3482  001FF8  6EF6               	movwf	tblptrl,c
  3483  001FFA  0E10               	movlw	high __npowers_
  3484  001FFC  2049               	addwfc	?___wmul+1,w,c
  3485  001FFE  6EF7               	movwf	tblptrh,c
  3486  002000                     	if	0	;There are less than 3 active tblptr bytes
  3487  002000                     	endif
  3488  002000  0009               	tblrd		*+
  3489  002002  CFF5 F01C          	movff	tablat,___ftmul@f1
  3490  002006  0009               	tblrd		*+
  3491  002008  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3492  00200C  000A               	tblrd		*-
  3493  00200E  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3494  002012  EC32  F012         	call	___ftmul	;wreg free
  3495  002016  C01C  F054         	movff	?___ftmul,_fround$1502
  3496  00201A  C01D  F055         	movff	?___ftmul+1,_fround$1502+1
  3497  00201E  C01E  F056         	movff	?___ftmul+2,_fround$1502+2
  3498                           
  3499                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3500  002022  C054  F01C         	movff	_fround$1502,___ftmul@f1
  3501  002026  C055  F01D         	movff	_fround$1502+1,___ftmul@f1+1
  3502  00202A  C056  F01E         	movff	_fround$1502+2,___ftmul@f1+2
  3503  00202E  0E00               	movlw	0
  3504  002030  6E1F               	movwf	___ftmul@f2,c
  3505  002032  0E00               	movlw	0
  3506  002034  6E20               	movwf	___ftmul@f2+1,c
  3507  002036  0E3F               	movlw	63
  3508  002038  6E21               	movwf	___ftmul@f2+2,c
  3509  00203A  EC32  F012         	call	___ftmul	;wreg free
  3510  00203E  D01B               	goto	L7
  3511  002040  D021               	goto	l171
  3512  002042  D000               	goto	l2341
  3513  002044                     l2341:
  3514                           
  3515                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3516  002044  5057               	movf	fround@prec,w,c
  3517  002046  0D03               	mullw	3
  3518  002048  0E29               	movlw	low __npowers_
  3519  00204A  24F3               	addwf	prodl,w,c
  3520  00204C  6EF6               	movwf	tblptrl,c
  3521  00204E  0E10               	movlw	high __npowers_
  3522  002050  20F4               	addwfc	prodh,w,c
  3523  002052  6EF7               	movwf	tblptrh,c
  3524  002054                     	if	0	;There are less than 3 active tblptr bytes
  3525  002054                     	endif
  3526  002054  0009               	tblrd		*+
  3527  002056  CFF5 F01C          	movff	tablat,___ftmul@f1
  3528  00205A  0009               	tblrd		*+
  3529  00205C  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3530  002060  000A               	tblrd		*-
  3531  002062  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3532  002066  0E00               	movlw	0
  3533  002068  6E1F               	movwf	___ftmul@f2,c
  3534  00206A  0E00               	movlw	0
  3535  00206C  6E20               	movwf	___ftmul@f2+1,c
  3536  00206E  0E3F               	movlw	63
  3537  002070  6E21               	movwf	___ftmul@f2+2,c
  3538  002072  EC32  F012         	call	___ftmul	;wreg free
  3539  002076                     L7:
  3540  002076  C01C  F04E         	movff	?___ftmul,?_fround
  3541  00207A  C01D  F04F         	movff	?___ftmul+1,?_fround+1
  3542  00207E  C01E  F050         	movff	?___ftmul+2,?_fround+2
  3543  002082  D000               	goto	l171
  3544  002084                     l171:
  3545  002084  0012               	return		;funcret
  3546  002086                     __end_of_fround:
  3547                           	opt stack 0
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           prodh	equ	0xFF4
  3553                           prodl	equ	0xFF3
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1l	equ	0xFE1
  3558                           postinc2	equ	0xFDE
  3559                           postdec2	equ	0xFDD
  3560                           fsr2h	equ	0xFDA
  3561                           fsr2l	equ	0xFD9
  3562                           status	equ	0xFD8
  3563                           
  3564 ;; *************** function ___wmul *****************
  3565 ;; Defined at:
  3566 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  multiplier      2   71[COMRAM] unsigned int 
  3569 ;;  multiplicand    2   73[COMRAM] unsigned int 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  product         2   75[COMRAM] unsigned int 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2   71[COMRAM] unsigned int 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0, prodl, prodh
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;Total ram usage:        6 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_fround
  3591 ;;		_scale
  3592 ;;		_printf
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text9
  3597  002EA4                     __ptext9:
  3598                           	opt stack 0
  3599  002EA4                     ___wmul:
  3600                           	opt stack 28
  3601                           
  3602                           ;incstack = 0
  3603  002EA4  5048               	movf	___wmul@multiplier,w,c
  3604  002EA6  024A               	mulwf	___wmul@multiplicand,c
  3605  002EA8  CFF3 F04C          	movff	prodl,___wmul@product
  3606  002EAC  CFF4 F04D          	movff	prodh,___wmul@product+1
  3607  002EB0  5048               	movf	___wmul@multiplier,w,c
  3608  002EB2  024B               	mulwf	___wmul@multiplicand+1,c
  3609  002EB4  50F3               	movf	prodl,w,c
  3610  002EB6  264D               	addwf	___wmul@product+1,f,c
  3611  002EB8  5049               	movf	___wmul@multiplier+1,w,c
  3612  002EBA  024A               	mulwf	___wmul@multiplicand,c
  3613  002EBC  50F3               	movf	prodl,w,c
  3614  002EBE  264D               	addwf	___wmul@product+1,f,c
  3615  002EC0  C04C  F048         	movff	___wmul@product,?___wmul
  3616  002EC4  C04D  F049         	movff	___wmul@product+1,?___wmul+1
  3617  002EC8  D000               	goto	l270
  3618  002ECA                     l270:
  3619  002ECA  0012               	return		;funcret
  3620  002ECC                     __end_of___wmul:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           tblptrh	equ	0xFF7
  3624                           tblptrl	equ	0xFF6
  3625                           tablat	equ	0xFF5
  3626                           prodh	equ	0xFF4
  3627                           prodl	equ	0xFF3
  3628                           postinc0	equ	0xFEE
  3629                           wreg	equ	0xFE8
  3630                           postdec1	equ	0xFE5
  3631                           fsr1l	equ	0xFE1
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function ___ftmul *****************
  3639 ;; Defined at:
  3640 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  f1              3   27[COMRAM] float 
  3643 ;;  f2              3   30[COMRAM] float 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  3646 ;;  sign            1   41[COMRAM] unsigned char 
  3647 ;;  cntr            1   40[COMRAM] unsigned char 
  3648 ;;  exp             1   36[COMRAM] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  3   27[COMRAM] float 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:       15 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    1
  3665 ;; This function calls:
  3666 ;;		___ftpack
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;;		_fround
  3670 ;;		_scale
  3671 ;;		_printf
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text10
  3676  002464                     __ptext10:
  3677                           	opt stack 0
  3678  002464                     ___ftmul:
  3679                           	opt stack 27
  3680                           
  3681                           ;incstack = 0
  3682  002464  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  3683  002468  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3684  00246A  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3685  00246C  341D               	rlcf	___ftmul@f1+1,w,c
  3686  00246E  3622               	rlcf	??___ftmul& (0+255),f,c
  3687  002470  E301               	bnc	u1791
  3688  002472  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3689  002474                     u1791:
  3690  002474  5022               	movf	??___ftmul,w,c
  3691  002476  6E25               	movwf	___ftmul@exp,c
  3692  002478  5025               	movf	___ftmul@exp,w,c
  3693  00247A  A4D8               	btfss	status,2,c
  3694  00247C  D002               	goto	l2085
  3695  00247E  D00E               	goto	l2087
  3696  002480  D06C               	goto	l699
  3697  002482                     l2085:
  3698  002482  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  3699  002486  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3700  002488  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3701  00248A  3420               	rlcf	___ftmul@f2+1,w,c
  3702  00248C  3622               	rlcf	??___ftmul& (0+255),f,c
  3703  00248E  E301               	bnc	u1811
  3704  002490  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3705  002492                     u1811:
  3706  002492  5022               	movf	??___ftmul,w,c
  3707  002494  6E2A               	movwf	___ftmul@sign,c
  3708  002496  502A               	movf	___ftmul@sign,w,c
  3709  002498  A4D8               	btfss	status,2,c
  3710  00249A  D007               	goto	l2091
  3711  00249C                     l2087:
  3712  00249C  0E00               	movlw	0
  3713  00249E  6E1C               	movwf	?___ftmul,c
  3714  0024A0  0E00               	movlw	0
  3715  0024A2  6E1D               	movwf	?___ftmul+1,c
  3716  0024A4  0E00               	movlw	0
  3717  0024A6  6E1E               	movwf	?___ftmul+2,c
  3718  0024A8  D058               	goto	l699
  3719  0024AA                     l2091:
  3720  0024AA  502A               	movf	___ftmul@sign,w,c
  3721  0024AC  0F7B               	addlw	123
  3722  0024AE  2625               	addwf	___ftmul@exp,f,c
  3723  0024B0  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3724  0024B4  5021               	movf	___ftmul@f2+2,w,c
  3725  0024B6  1A2A               	xorwf	___ftmul@sign,f,c
  3726  0024B8  0E80               	movlw	128
  3727  0024BA  162A               	andwf	___ftmul@sign,f,c
  3728  0024BC  8E1D               	bsf	___ftmul@f1+1,7,c
  3729  0024BE  8E20               	bsf	___ftmul@f2+1,7,c
  3730  0024C0  0EFF               	movlw	255
  3731  0024C2  161F               	andwf	___ftmul@f2,f,c
  3732  0024C4  0EFF               	movlw	255
  3733  0024C6  1620               	andwf	___ftmul@f2+1,f,c
  3734  0024C8  0E00               	movlw	0
  3735  0024CA  1621               	andwf	___ftmul@f2+2,f,c
  3736  0024CC  0E00               	movlw	0
  3737  0024CE  6E26               	movwf	___ftmul@f3_as_product,c
  3738  0024D0  0E00               	movlw	0
  3739  0024D2  6E27               	movwf	___ftmul@f3_as_product+1,c
  3740  0024D4  0E00               	movlw	0
  3741  0024D6  6E28               	movwf	___ftmul@f3_as_product+2,c
  3742  0024D8  0E07               	movlw	7
  3743  0024DA  6E29               	movwf	___ftmul@cntr,c
  3744  0024DC  D000               	goto	l2105
  3745  0024DE                     l2105:
  3746  0024DE  A01C               	btfss	___ftmul@f1,0,c
  3747  0024E0  D007               	goto	l2109
  3748  0024E2  501F               	movf	___ftmul@f2,w,c
  3749  0024E4  2626               	addwf	___ftmul@f3_as_product,f,c
  3750  0024E6  5020               	movf	___ftmul@f2+1,w,c
  3751  0024E8  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3752  0024EA  5021               	movf	___ftmul@f2+2,w,c
  3753  0024EC  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3754  0024EE  D000               	goto	l2109
  3755  0024F0                     l2109:
  3756  0024F0  90D8               	bcf	status,0,c
  3757  0024F2  321E               	rrcf	___ftmul@f1+2,f,c
  3758  0024F4  321D               	rrcf	___ftmul@f1+1,f,c
  3759  0024F6  321C               	rrcf	___ftmul@f1,f,c
  3760  0024F8  90D8               	bcf	status,0,c
  3761  0024FA  361F               	rlcf	___ftmul@f2,f,c
  3762  0024FC  3620               	rlcf	___ftmul@f2+1,f,c
  3763  0024FE  3621               	rlcf	___ftmul@f2+2,f,c
  3764  002500  2E29               	decfsz	___ftmul@cntr,f,c
  3765  002502  D7ED               	goto	l2105
  3766  002504  D000               	goto	l2113
  3767  002506                     l2113:
  3768  002506  0E09               	movlw	9
  3769  002508  6E29               	movwf	___ftmul@cntr,c
  3770  00250A  D000               	goto	l2115
  3771  00250C                     l2115:
  3772  00250C  A01C               	btfss	___ftmul@f1,0,c
  3773  00250E  D007               	goto	l2119
  3774  002510  501F               	movf	___ftmul@f2,w,c
  3775  002512  2626               	addwf	___ftmul@f3_as_product,f,c
  3776  002514  5020               	movf	___ftmul@f2+1,w,c
  3777  002516  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3778  002518  5021               	movf	___ftmul@f2+2,w,c
  3779  00251A  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3780  00251C  D000               	goto	l2119
  3781  00251E                     l2119:
  3782  00251E  90D8               	bcf	status,0,c
  3783  002520  321E               	rrcf	___ftmul@f1+2,f,c
  3784  002522  321D               	rrcf	___ftmul@f1+1,f,c
  3785  002524  321C               	rrcf	___ftmul@f1,f,c
  3786  002526  90D8               	bcf	status,0,c
  3787  002528  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3788  00252A  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3789  00252C  3226               	rrcf	___ftmul@f3_as_product,f,c
  3790  00252E  2E29               	decfsz	___ftmul@cntr,f,c
  3791  002530  D7ED               	goto	l2115
  3792  002532  D000               	goto	l2123
  3793  002534                     l2123:
  3794  002534  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3795  002538  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3796  00253C  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3797  002540  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3798  002544  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3799  002548  EC92  F013         	call	___ftpack	;wreg free
  3800  00254C  C001  F01C         	movff	?___ftpack,?___ftmul
  3801  002550  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3802  002554  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3803  002558  D000               	goto	l699
  3804  00255A                     l699:
  3805  00255A  0012               	return		;funcret
  3806  00255C                     __end_of___ftmul:
  3807                           	opt stack 0
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           postinc0	equ	0xFEE
  3815                           wreg	equ	0xFE8
  3816                           postdec1	equ	0xFE5
  3817                           fsr1l	equ	0xFE1
  3818                           postinc2	equ	0xFDE
  3819                           postdec2	equ	0xFDD
  3820                           fsr2h	equ	0xFDA
  3821                           fsr2l	equ	0xFD9
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function ___awmod *****************
  3825 ;; Defined at:
  3826 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  dividend        2   57[COMRAM] int 
  3829 ;;  divisor         2   59[COMRAM] int 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  sign            1   62[COMRAM] unsigned char 
  3832 ;;  counter         1   61[COMRAM] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2   57[COMRAM] int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;Total ram usage:        6 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;;		_fround
  3853 ;;		_scale
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text11
  3858  002AB6                     __ptext11:
  3859                           	opt stack 0
  3860  002AB6                     ___awmod:
  3861                           	opt stack 28
  3862                           
  3863                           ;incstack = 0
  3864  002AB6  0E00               	movlw	0
  3865  002AB8  6E3F               	movwf	___awmod@sign,c
  3866  002ABA  AE3B               	btfss	___awmod@dividend+1,7,c
  3867  002ABC  D007               	goto	l2179
  3868  002ABE  6C3A               	negf	___awmod@dividend,c
  3869  002AC0  1E3B               	comf	___awmod@dividend+1,f,c
  3870  002AC2  B0D8               	btfsc	status,0,c
  3871  002AC4  2A3B               	incf	___awmod@dividend+1,f,c
  3872  002AC6  0E01               	movlw	1
  3873  002AC8  6E3F               	movwf	___awmod@sign,c
  3874  002ACA  D000               	goto	l2179
  3875  002ACC                     l2179:
  3876  002ACC  AE3D               	btfss	___awmod@divisor+1,7,c
  3877  002ACE  D005               	goto	l2183
  3878  002AD0  6C3C               	negf	___awmod@divisor,c
  3879  002AD2  1E3D               	comf	___awmod@divisor+1,f,c
  3880  002AD4  B0D8               	btfsc	status,0,c
  3881  002AD6  2A3D               	incf	___awmod@divisor+1,f,c
  3882  002AD8  D000               	goto	l2183
  3883  002ADA                     l2183:
  3884  002ADA  503C               	movf	___awmod@divisor,w,c
  3885  002ADC  103D               	iorwf	___awmod@divisor+1,w,c
  3886  002ADE  B4D8               	btfsc	status,2,c
  3887  002AE0  D01D               	goto	l2199
  3888  002AE2  0E01               	movlw	1
  3889  002AE4  6E3E               	movwf	___awmod@counter,c
  3890  002AE6  D005               	goto	l2189
  3891  002AE8                     l2187:
  3892  002AE8  90D8               	bcf	status,0,c
  3893  002AEA  363C               	rlcf	___awmod@divisor,f,c
  3894  002AEC  363D               	rlcf	___awmod@divisor+1,f,c
  3895  002AEE  2A3E               	incf	___awmod@counter,f,c
  3896  002AF0  D000               	goto	l2189
  3897  002AF2                     l2189:
  3898  002AF2  BE3D               	btfsc	___awmod@divisor+1,7,c
  3899  002AF4  D002               	goto	l2191
  3900  002AF6  D7F8               	goto	l2187
  3901  002AF8  D000               	goto	l2191
  3902  002AFA                     l2191:
  3903  002AFA  503C               	movf	___awmod@divisor,w,c
  3904  002AFC  5C3A               	subwf	___awmod@dividend,w,c
  3905  002AFE  503D               	movf	___awmod@divisor+1,w,c
  3906  002B00  583B               	subwfb	___awmod@dividend+1,w,c
  3907  002B02  A0D8               	btfss	status,0,c
  3908  002B04  D005               	goto	l2195
  3909  002B06  503C               	movf	___awmod@divisor,w,c
  3910  002B08  5E3A               	subwf	___awmod@dividend,f,c
  3911  002B0A  503D               	movf	___awmod@divisor+1,w,c
  3912  002B0C  5A3B               	subwfb	___awmod@dividend+1,f,c
  3913  002B0E  D000               	goto	l2195
  3914  002B10                     l2195:
  3915  002B10  90D8               	bcf	status,0,c
  3916  002B12  323D               	rrcf	___awmod@divisor+1,f,c
  3917  002B14  323C               	rrcf	___awmod@divisor,f,c
  3918  002B16  2E3E               	decfsz	___awmod@counter,f,c
  3919  002B18  D7F0               	goto	l2191
  3920  002B1A  D000               	goto	l2199
  3921  002B1C                     l2199:
  3922  002B1C  503F               	movf	___awmod@sign,w,c
  3923  002B1E  B4D8               	btfsc	status,2,c
  3924  002B20  D005               	goto	l2203
  3925  002B22  6C3A               	negf	___awmod@dividend,c
  3926  002B24  1E3B               	comf	___awmod@dividend+1,f,c
  3927  002B26  B0D8               	btfsc	status,0,c
  3928  002B28  2A3B               	incf	___awmod@dividend+1,f,c
  3929  002B2A  D000               	goto	l2203
  3930  002B2C                     l2203:
  3931  002B2C  C03A  F03A         	movff	___awmod@dividend,?___awmod
  3932  002B30  C03B  F03B         	movff	___awmod@dividend+1,?___awmod+1
  3933  002B34  D000               	goto	l476
  3934  002B36                     l476:
  3935  002B36  0012               	return		;funcret
  3936  002B38                     __end_of___awmod:
  3937                           	opt stack 0
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           postdec1	equ	0xFE5
  3947                           fsr1l	equ	0xFE1
  3948                           postinc2	equ	0xFDE
  3949                           postdec2	equ	0xFDD
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           status	equ	0xFD8
  3953                           
  3954 ;; *************** function __tdiv_to_l_ *****************
  3955 ;; Defined at:
  3956 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  f1              3    0[COMRAM] float 
  3959 ;;  f2              3    3[COMRAM] float 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  quot            4    9[COMRAM] unsigned long 
  3962 ;;  exp1            1   14[COMRAM] unsigned char 
  3963 ;;  cntr            1   13[COMRAM] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  4    0[COMRAM] unsigned long 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3973 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;Total ram usage:       15 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_printf
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text12
  3987  00224A                     __ptext12:
  3988                           	opt stack 0
  3989  00224A                     __tdiv_to_l_:
  3990                           	opt stack 29
  3991                           
  3992                           ;incstack = 0
  3993  00224A  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3994  00224E  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3995  002250  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3996  002252  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3997  002254  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3998  002256  E301               	bnc	u2251
  3999  002258  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4000  00225A                     u2251:
  4001  00225A  5007               	movf	??__tdiv_to_l_,w,c
  4002  00225C  6E0F               	movwf	__tdiv_to_l_@exp1,c
  4003  00225E  500F               	movf	__tdiv_to_l_@exp1,w,c
  4004  002260  A4D8               	btfss	status,2,c
  4005  002262  D002               	goto	l2389
  4006  002264  D05D               	goto	l2431
  4007  002266  D078               	goto	l675
  4008  002268                     l2389:
  4009  002268  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4010  00226C  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4011  00226E  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4012  002270  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  4013  002272  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4014  002274  E301               	bnc	u2271
  4015  002276  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4016  002278                     u2271:
  4017  002278  5007               	movf	??__tdiv_to_l_,w,c
  4018  00227A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4019  00227C  500E               	movf	__tdiv_to_l_@cntr,w,c
  4020  00227E  A4D8               	btfss	status,2,c
  4021  002280  D002               	goto	l2395
  4022  002282  D04E               	goto	l2431
  4023  002284  D069               	goto	l675
  4024  002286                     l2395:
  4025  002286  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4026  002288  0EFF               	movlw	255
  4027  00228A  1601               	andwf	__tdiv_to_l_@f1,f,c
  4028  00228C  0EFF               	movlw	255
  4029  00228E  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4030  002290  0E00               	movlw	0
  4031  002292  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4032  002294  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  4033  002296  0EFF               	movlw	255
  4034  002298  1604               	andwf	__tdiv_to_l_@f2,f,c
  4035  00229A  0EFF               	movlw	255
  4036  00229C  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  4037  00229E  0E00               	movlw	0
  4038  0022A0  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  4039  0022A2  0E00               	movlw	0
  4040  0022A4  6E0A               	movwf	__tdiv_to_l_@quot,c
  4041  0022A6  0E00               	movlw	0
  4042  0022A8  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  4043  0022AA  0E00               	movlw	0
  4044  0022AC  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  4045  0022AE  0E00               	movlw	0
  4046  0022B0  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  4047  0022B2  0E7F               	movlw	127
  4048  0022B4  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4049  0022B6  500E               	movf	__tdiv_to_l_@cntr,w,c
  4050  0022B8  0F98               	addlw	152
  4051  0022BA  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4052  0022BC  0E18               	movlw	24
  4053  0022BE  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4054  0022C0                     l677:
  4055  0022C0  90D8               	bcf	status,0,c
  4056  0022C2  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4057  0022C4  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4058  0022C6  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4059  0022C8  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4060  0022CA  5004               	movf	__tdiv_to_l_@f2,w,c
  4061  0022CC  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4062  0022CE  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4063  0022D0  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4064  0022D2  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4065  0022D4  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4066  0022D6  A0D8               	btfss	status,0,c
  4067  0022D8  D007               	goto	l678
  4068  0022DA  5004               	movf	__tdiv_to_l_@f2,w,c
  4069  0022DC  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4070  0022DE  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4071  0022E0  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4072  0022E2  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4073  0022E4  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4074  0022E6  800A               	bsf	__tdiv_to_l_@quot,0,c
  4075  0022E8                     l678:
  4076  0022E8  90D8               	bcf	status,0,c
  4077  0022EA  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4078  0022EC  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4079  0022EE  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4080  0022F0  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4081  0022F2  D7E6               	goto	l677
  4082  0022F4  D000               	goto	l2417
  4083  0022F6                     l2417:
  4084  0022F6  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4085  0022F8  D010               	goto	l2429
  4086  0022FA  500F               	movf	__tdiv_to_l_@exp1,w,c
  4087  0022FC  0A80               	xorlw	128
  4088  0022FE  0F97               	addlw	151
  4089  002300  B0D8               	btfsc	status,0,c
  4090  002302  D003               	goto	l2425
  4091  002304  D00D               	goto	l2431
  4092  002306  D028               	goto	l675
  4093  002308  D000               	goto	l2425
  4094  00230A                     l2425:
  4095  00230A  90D8               	bcf	status,0,c
  4096  00230C  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4097  00230E  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4098  002310  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4099  002312  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4100  002314  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4101  002316  D7F9               	goto	l2425
  4102  002318  D017               	goto	l684
  4103  00231A                     l2429:
  4104  00231A  0E17               	movlw	23
  4105  00231C  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4106  00231E  D011               	goto	l2437
  4107  002320                     l2431:
  4108  002320  0E00               	movlw	0
  4109  002322  6E01               	movwf	?__tdiv_to_l_,c
  4110  002324  0E00               	movlw	0
  4111  002326  6E02               	movwf	?__tdiv_to_l_+1,c
  4112  002328  0E00               	movlw	0
  4113  00232A  6E03               	movwf	?__tdiv_to_l_+2,c
  4114  00232C  0E00               	movlw	0
  4115  00232E  6E04               	movwf	?__tdiv_to_l_+3,c
  4116  002330  D013               	goto	l675
  4117  002332  D007               	goto	l2437
  4118  002334                     l2435:
  4119  002334  90D8               	bcf	status,0,c
  4120  002336  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4121  002338  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4122  00233A  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4123  00233C  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4124  00233E  060F               	decf	__tdiv_to_l_@exp1,f,c
  4125  002340  D000               	goto	l2437
  4126  002342                     l2437:
  4127  002342  500F               	movf	__tdiv_to_l_@exp1,w,c
  4128  002344  A4D8               	btfss	status,2,c
  4129  002346  D7F6               	goto	l2435
  4130  002348                     l684:
  4131  002348  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4132  00234C  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4133  002350  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4134  002354  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4135  002358                     l675:
  4136  002358  0012               	return		;funcret
  4137  00235A                     __end_of__tdiv_to_l_:
  4138                           	opt stack 0
  4139                           tblptru	equ	0xFF8
  4140                           tblptrh	equ	0xFF7
  4141                           tblptrl	equ	0xFF6
  4142                           tablat	equ	0xFF5
  4143                           prodh	equ	0xFF4
  4144                           prodl	equ	0xFF3
  4145                           postinc0	equ	0xFEE
  4146                           wreg	equ	0xFE8
  4147                           postdec1	equ	0xFE5
  4148                           fsr1l	equ	0xFE1
  4149                           postinc2	equ	0xFDE
  4150                           postdec2	equ	0xFDD
  4151                           fsr2h	equ	0xFDA
  4152                           fsr2l	equ	0xFD9
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function __div_to_l_ *****************
  4156 ;; Defined at:
  4157 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  f1              3    0[COMRAM] unsigned long 
  4160 ;;  f2              3    3[COMRAM] unsigned long 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  quot            4    6[COMRAM] unsigned long 
  4163 ;;  exp1            1   11[COMRAM] unsigned char 
  4164 ;;  cntr            1   10[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  4    0[COMRAM] unsigned long 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4174 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;Total ram usage:       12 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_printf
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text13
  4188  00235A                     __ptext13:
  4189                           	opt stack 0
  4190  00235A                     __div_to_l_:
  4191                           	opt stack 29
  4192                           
  4193                           ;incstack = 0
  4194  00235A  3403               	rlcf	__div_to_l_@f1+2,w,c
  4195  00235C  3404               	rlcf	__div_to_l_@f1+3,w,c
  4196  00235E  6E0C               	movwf	__div_to_l_@exp1,c
  4197  002360  500C               	movf	__div_to_l_@exp1,w,c
  4198  002362  A4D8               	btfss	status,2,c
  4199  002364  D002               	goto	l2445
  4200  002366  D061               	goto	l2491
  4201  002368  D07C               	goto	l554
  4202  00236A                     l2445:
  4203  00236A  3406               	rlcf	__div_to_l_@f2+2,w,c
  4204  00236C  3407               	rlcf	__div_to_l_@f2+3,w,c
  4205  00236E  6E0B               	movwf	__div_to_l_@cntr,c
  4206  002370  500B               	movf	__div_to_l_@cntr,w,c
  4207  002372  A4D8               	btfss	status,2,c
  4208  002374  D002               	goto	l2451
  4209  002376  D059               	goto	l2491
  4210  002378  D074               	goto	l554
  4211  00237A                     l2451:
  4212  00237A  8E03               	bsf	__div_to_l_@f1+2,7,c
  4213  00237C  0EFF               	movlw	255
  4214  00237E  1601               	andwf	__div_to_l_@f1,f,c
  4215  002380  0EFF               	movlw	255
  4216  002382  1602               	andwf	__div_to_l_@f1+1,f,c
  4217  002384  0EFF               	movlw	255
  4218  002386  1603               	andwf	__div_to_l_@f1+2,f,c
  4219  002388  0E00               	movlw	0
  4220  00238A  1604               	andwf	__div_to_l_@f1+3,f,c
  4221  00238C  8E06               	bsf	__div_to_l_@f2+2,7,c
  4222  00238E  0EFF               	movlw	255
  4223  002390  1604               	andwf	__div_to_l_@f2,f,c
  4224  002392  0EFF               	movlw	255
  4225  002394  1605               	andwf	__div_to_l_@f2+1,f,c
  4226  002396  0EFF               	movlw	255
  4227  002398  1606               	andwf	__div_to_l_@f2+2,f,c
  4228  00239A  0E00               	movlw	0
  4229  00239C  1607               	andwf	__div_to_l_@f2+3,f,c
  4230  00239E  0E00               	movlw	0
  4231  0023A0  6E07               	movwf	__div_to_l_@quot,c
  4232  0023A2  0E00               	movlw	0
  4233  0023A4  6E08               	movwf	__div_to_l_@quot+1,c
  4234  0023A6  0E00               	movlw	0
  4235  0023A8  6E09               	movwf	__div_to_l_@quot+2,c
  4236  0023AA  0E00               	movlw	0
  4237  0023AC  6E0A               	movwf	__div_to_l_@quot+3,c
  4238  0023AE  0E7F               	movlw	127
  4239  0023B0  5E0C               	subwf	__div_to_l_@exp1,f,c
  4240  0023B2  500B               	movf	__div_to_l_@cntr,w,c
  4241  0023B4  0FA0               	addlw	160
  4242  0023B6  5E0C               	subwf	__div_to_l_@exp1,f,c
  4243  0023B8  0E20               	movlw	32
  4244  0023BA  6E0B               	movwf	__div_to_l_@cntr,c
  4245  0023BC  D000               	goto	l2465
  4246  0023BE                     l2465:
  4247  0023BE  90D8               	bcf	status,0,c
  4248  0023C0  3607               	rlcf	__div_to_l_@quot,f,c
  4249  0023C2  3608               	rlcf	__div_to_l_@quot+1,f,c
  4250  0023C4  3609               	rlcf	__div_to_l_@quot+2,f,c
  4251  0023C6  360A               	rlcf	__div_to_l_@quot+3,f,c
  4252  0023C8  5004               	movf	__div_to_l_@f2,w,c
  4253  0023CA  5C01               	subwf	__div_to_l_@f1,w,c
  4254  0023CC  5005               	movf	__div_to_l_@f2+1,w,c
  4255  0023CE  5802               	subwfb	__div_to_l_@f1+1,w,c
  4256  0023D0  5006               	movf	__div_to_l_@f2+2,w,c
  4257  0023D2  5803               	subwfb	__div_to_l_@f1+2,w,c
  4258  0023D4  5007               	movf	__div_to_l_@f2+3,w,c
  4259  0023D6  5804               	subwfb	__div_to_l_@f1+3,w,c
  4260  0023D8  A0D8               	btfss	status,0,c
  4261  0023DA  D00A               	goto	l2473
  4262  0023DC  5004               	movf	__div_to_l_@f2,w,c
  4263  0023DE  5E01               	subwf	__div_to_l_@f1,f,c
  4264  0023E0  5005               	movf	__div_to_l_@f2+1,w,c
  4265  0023E2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4266  0023E4  5006               	movf	__div_to_l_@f2+2,w,c
  4267  0023E6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4268  0023E8  5007               	movf	__div_to_l_@f2+3,w,c
  4269  0023EA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4270  0023EC  8007               	bsf	__div_to_l_@quot,0,c
  4271  0023EE  D000               	goto	l2473
  4272  0023F0                     l2473:
  4273  0023F0  90D8               	bcf	status,0,c
  4274  0023F2  3601               	rlcf	__div_to_l_@f1,f,c
  4275  0023F4  3602               	rlcf	__div_to_l_@f1+1,f,c
  4276  0023F6  3603               	rlcf	__div_to_l_@f1+2,f,c
  4277  0023F8  3604               	rlcf	__div_to_l_@f1+3,f,c
  4278  0023FA  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4279  0023FC  D7E0               	goto	l2465
  4280  0023FE  D000               	goto	l2477
  4281  002400                     l2477:
  4282  002400  AE0C               	btfss	__div_to_l_@exp1,7,c
  4283  002402  D010               	goto	l2489
  4284  002404  500C               	movf	__div_to_l_@exp1,w,c
  4285  002406  0A80               	xorlw	128
  4286  002408  0F9F               	addlw	159
  4287  00240A  B0D8               	btfsc	status,0,c
  4288  00240C  D003               	goto	l2485
  4289  00240E  D00D               	goto	l2491
  4290  002410  D028               	goto	l554
  4291  002412  D000               	goto	l2485
  4292  002414                     l2485:
  4293  002414  90D8               	bcf	status,0,c
  4294  002416  320A               	rrcf	__div_to_l_@quot+3,f,c
  4295  002418  3209               	rrcf	__div_to_l_@quot+2,f,c
  4296  00241A  3208               	rrcf	__div_to_l_@quot+1,f,c
  4297  00241C  3207               	rrcf	__div_to_l_@quot,f,c
  4298  00241E  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4299  002420  D7F9               	goto	l2485
  4300  002422  D017               	goto	l563
  4301  002424                     l2489:
  4302  002424  0E1F               	movlw	31
  4303  002426  640C               	cpfsgt	__div_to_l_@exp1,c
  4304  002428  D011               	goto	l2497
  4305  00242A                     l2491:
  4306  00242A  0E00               	movlw	0
  4307  00242C  6E01               	movwf	?__div_to_l_,c
  4308  00242E  0E00               	movlw	0
  4309  002430  6E02               	movwf	?__div_to_l_+1,c
  4310  002432  0E00               	movlw	0
  4311  002434  6E03               	movwf	?__div_to_l_+2,c
  4312  002436  0E00               	movlw	0
  4313  002438  6E04               	movwf	?__div_to_l_+3,c
  4314  00243A  D013               	goto	l554
  4315  00243C  D007               	goto	l2497
  4316  00243E                     l2495:
  4317  00243E  90D8               	bcf	status,0,c
  4318  002440  3607               	rlcf	__div_to_l_@quot,f,c
  4319  002442  3608               	rlcf	__div_to_l_@quot+1,f,c
  4320  002444  3609               	rlcf	__div_to_l_@quot+2,f,c
  4321  002446  360A               	rlcf	__div_to_l_@quot+3,f,c
  4322  002448  060C               	decf	__div_to_l_@exp1,f,c
  4323  00244A  D000               	goto	l2497
  4324  00244C                     l2497:
  4325  00244C  500C               	movf	__div_to_l_@exp1,w,c
  4326  00244E  A4D8               	btfss	status,2,c
  4327  002450  D7F6               	goto	l2495
  4328  002452                     l563:
  4329  002452  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4330  002456  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4331  00245A  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4332  00245E  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4333  002462                     l554:
  4334  002462  0012               	return		;funcret
  4335  002464                     __end_of__div_to_l_:
  4336                           	opt stack 0
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           prodh	equ	0xFF4
  4342                           prodl	equ	0xFF3
  4343                           postinc0	equ	0xFEE
  4344                           wreg	equ	0xFE8
  4345                           postdec1	equ	0xFE5
  4346                           fsr1l	equ	0xFE1
  4347                           postinc2	equ	0xFDE
  4348                           postdec2	equ	0xFDD
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8
  4352                           
  4353 ;; *************** function ___lltoft *****************
  4354 ;; Defined at:
  4355 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  c               4    8[COMRAM] unsigned long 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  exp             1   16[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  3    8[COMRAM] float 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;Total ram usage:        9 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    1
  4376 ;; This function calls:
  4377 ;;		___ftpack
  4378 ;; This function is called by:
  4379 ;;		_printf
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text14
  4384  002D0E                     __ptext14:
  4385                           	opt stack 0
  4386  002D0E                     ___lltoft:
  4387                           	opt stack 28
  4388                           
  4389                           ;incstack = 0
  4390  002D0E  0E8E               	movlw	142
  4391  002D10  6E11               	movwf	___lltoft@exp,c
  4392  002D12  D007               	goto	l2571
  4393  002D14                     l2569:
  4394  002D14  90D8               	bcf	status,0,c
  4395  002D16  320C               	rrcf	___lltoft@c+3,f,c
  4396  002D18  320B               	rrcf	___lltoft@c+2,f,c
  4397  002D1A  320A               	rrcf	___lltoft@c+1,f,c
  4398  002D1C  3209               	rrcf	___lltoft@c,f,c
  4399  002D1E  2A11               	incf	___lltoft@exp,f,c
  4400  002D20  D000               	goto	l2571
  4401  002D22                     l2571:
  4402  002D22  0E00               	movlw	0
  4403  002D24  1409               	andwf	___lltoft@c,w,c
  4404  002D26  6E0D               	movwf	??___lltoft& (0+255),c
  4405  002D28  0E00               	movlw	0
  4406  002D2A  140A               	andwf	___lltoft@c+1,w,c
  4407  002D2C  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4408  002D2E  0E00               	movlw	0
  4409  002D30  140B               	andwf	___lltoft@c+2,w,c
  4410  002D32  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4411  002D34  0EFF               	movlw	255
  4412  002D36  140C               	andwf	___lltoft@c+3,w,c
  4413  002D38  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4414  002D3A  500D               	movf	??___lltoft,w,c
  4415  002D3C  100E               	iorwf	??___lltoft+1,w,c
  4416  002D3E  100F               	iorwf	??___lltoft+2,w,c
  4417  002D40  1010               	iorwf	??___lltoft+3,w,c
  4418  002D42  A4D8               	btfss	status,2,c
  4419  002D44  D7E7               	goto	l2569
  4420  002D46  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4421  002D4A  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4422  002D4E  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4423  002D52  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4424  002D56  0E00               	movlw	0
  4425  002D58  6E05               	movwf	___ftpack@sign,c
  4426  002D5A  EC92  F013         	call	___ftpack	;wreg free
  4427  002D5E  C001  F009         	movff	?___ftpack,?___lltoft
  4428  002D62  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4429  002D66  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4430  002D6A  D000               	goto	l789
  4431  002D6C                     l789:
  4432  002D6C  0012               	return		;funcret
  4433  002D6E                     __end_of___lltoft:
  4434                           	opt stack 0
  4435                           tblptru	equ	0xFF8
  4436                           tblptrh	equ	0xFF7
  4437                           tblptrl	equ	0xFF6
  4438                           tablat	equ	0xFF5
  4439                           prodh	equ	0xFF4
  4440                           prodl	equ	0xFF3
  4441                           postinc0	equ	0xFEE
  4442                           wreg	equ	0xFE8
  4443                           postdec1	equ	0xFE5
  4444                           fsr1l	equ	0xFE1
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function ___llmod *****************
  4452 ;; Defined at:
  4453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  dividend        4    0[COMRAM] unsigned long 
  4456 ;;  divisor         4    4[COMRAM] unsigned long 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  counter         1    8[COMRAM] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  4    0[COMRAM] unsigned long 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4468 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;Total ram usage:        9 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_printf
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text15
  4482  002C2E                     __ptext15:
  4483                           	opt stack 0
  4484  002C2E                     ___llmod:
  4485                           	opt stack 29
  4486                           
  4487                           ;incstack = 0
  4488  002C2E  5005               	movf	___llmod@divisor,w,c
  4489  002C30  1006               	iorwf	___llmod@divisor+1,w,c
  4490  002C32  1007               	iorwf	___llmod@divisor+2,w,c
  4491  002C34  1008               	iorwf	___llmod@divisor+3,w,c
  4492  002C36  B4D8               	btfsc	status,2,c
  4493  002C38  D029               	goto	l769
  4494  002C3A  0E01               	movlw	1
  4495  002C3C  6E09               	movwf	___llmod@counter,c
  4496  002C3E  D007               	goto	l2557
  4497  002C40                     l2555:
  4498  002C40  90D8               	bcf	status,0,c
  4499  002C42  3605               	rlcf	___llmod@divisor,f,c
  4500  002C44  3606               	rlcf	___llmod@divisor+1,f,c
  4501  002C46  3607               	rlcf	___llmod@divisor+2,f,c
  4502  002C48  3608               	rlcf	___llmod@divisor+3,f,c
  4503  002C4A  2A09               	incf	___llmod@counter,f,c
  4504  002C4C  D000               	goto	l2557
  4505  002C4E                     l2557:
  4506  002C4E  BE08               	btfsc	___llmod@divisor+3,7,c
  4507  002C50  D002               	goto	l2559
  4508  002C52  D7F6               	goto	l2555
  4509  002C54  D000               	goto	l2559
  4510  002C56                     l2559:
  4511  002C56  5005               	movf	___llmod@divisor,w,c
  4512  002C58  5C01               	subwf	___llmod@dividend,w,c
  4513  002C5A  5006               	movf	___llmod@divisor+1,w,c
  4514  002C5C  5802               	subwfb	___llmod@dividend+1,w,c
  4515  002C5E  5007               	movf	___llmod@divisor+2,w,c
  4516  002C60  5803               	subwfb	___llmod@dividend+2,w,c
  4517  002C62  5008               	movf	___llmod@divisor+3,w,c
  4518  002C64  5804               	subwfb	___llmod@dividend+3,w,c
  4519  002C66  A0D8               	btfss	status,0,c
  4520  002C68  D009               	goto	l2563
  4521  002C6A  5005               	movf	___llmod@divisor,w,c
  4522  002C6C  5E01               	subwf	___llmod@dividend,f,c
  4523  002C6E  5006               	movf	___llmod@divisor+1,w,c
  4524  002C70  5A02               	subwfb	___llmod@dividend+1,f,c
  4525  002C72  5007               	movf	___llmod@divisor+2,w,c
  4526  002C74  5A03               	subwfb	___llmod@dividend+2,f,c
  4527  002C76  5008               	movf	___llmod@divisor+3,w,c
  4528  002C78  5A04               	subwfb	___llmod@dividend+3,f,c
  4529  002C7A  D000               	goto	l2563
  4530  002C7C                     l2563:
  4531  002C7C  90D8               	bcf	status,0,c
  4532  002C7E  3208               	rrcf	___llmod@divisor+3,f,c
  4533  002C80  3207               	rrcf	___llmod@divisor+2,f,c
  4534  002C82  3206               	rrcf	___llmod@divisor+1,f,c
  4535  002C84  3205               	rrcf	___llmod@divisor,f,c
  4536  002C86  2E09               	decfsz	___llmod@counter,f,c
  4537  002C88  D7E6               	goto	l2559
  4538  002C8A  D000               	goto	l769
  4539  002C8C                     l769:
  4540  002C8C  C001  F001         	movff	___llmod@dividend,?___llmod
  4541  002C90  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4542  002C94  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4543  002C98  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4544  002C9C  0012               	return		;funcret
  4545  002C9E                     __end_of___llmod:
  4546                           	opt stack 0
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           postinc0	equ	0xFEE
  4554                           wreg	equ	0xFE8
  4555                           postdec1	equ	0xFE5
  4556                           fsr1l	equ	0xFE1
  4557                           postinc2	equ	0xFDE
  4558                           postdec2	equ	0xFDD
  4559                           fsr2h	equ	0xFDA
  4560                           fsr2l	equ	0xFD9
  4561                           status	equ	0xFD8
  4562                           
  4563 ;; *************** function ___lldiv *****************
  4564 ;; Defined at:
  4565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  dividend        4    0[COMRAM] unsigned long 
  4568 ;;  divisor         4    4[COMRAM] unsigned long 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  quotient        4    8[COMRAM] unsigned long 
  4571 ;;  counter         1   12[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  4    0[COMRAM] unsigned long 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4581 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;Total ram usage:       13 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_printf
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text16
  4595  0029A6                     __ptext16:
  4596                           	opt stack 0
  4597  0029A6                     ___lldiv:
  4598                           	opt stack 29
  4599                           
  4600                           ;incstack = 0
  4601  0029A6  0E00               	movlw	0
  4602  0029A8  6E09               	movwf	___lldiv@quotient,c
  4603  0029AA  0E00               	movlw	0
  4604  0029AC  6E0A               	movwf	___lldiv@quotient+1,c
  4605  0029AE  0E00               	movlw	0
  4606  0029B0  6E0B               	movwf	___lldiv@quotient+2,c
  4607  0029B2  0E00               	movlw	0
  4608  0029B4  6E0C               	movwf	___lldiv@quotient+3,c
  4609  0029B6  5005               	movf	___lldiv@divisor,w,c
  4610  0029B8  1006               	iorwf	___lldiv@divisor+1,w,c
  4611  0029BA  1007               	iorwf	___lldiv@divisor+2,w,c
  4612  0029BC  1008               	iorwf	___lldiv@divisor+3,w,c
  4613  0029BE  B4D8               	btfsc	status,2,c
  4614  0029C0  D02F               	goto	l759
  4615  0029C2  0E01               	movlw	1
  4616  0029C4  6E0D               	movwf	___lldiv@counter,c
  4617  0029C6  D007               	goto	l2537
  4618  0029C8                     l2535:
  4619  0029C8  90D8               	bcf	status,0,c
  4620  0029CA  3605               	rlcf	___lldiv@divisor,f,c
  4621  0029CC  3606               	rlcf	___lldiv@divisor+1,f,c
  4622  0029CE  3607               	rlcf	___lldiv@divisor+2,f,c
  4623  0029D0  3608               	rlcf	___lldiv@divisor+3,f,c
  4624  0029D2  2A0D               	incf	___lldiv@counter,f,c
  4625  0029D4  D000               	goto	l2537
  4626  0029D6                     l2537:
  4627  0029D6  BE08               	btfsc	___lldiv@divisor+3,7,c
  4628  0029D8  D002               	goto	l2539
  4629  0029DA  D7F6               	goto	l2535
  4630  0029DC  D000               	goto	l2539
  4631  0029DE                     l2539:
  4632  0029DE  90D8               	bcf	status,0,c
  4633  0029E0  3609               	rlcf	___lldiv@quotient,f,c
  4634  0029E2  360A               	rlcf	___lldiv@quotient+1,f,c
  4635  0029E4  360B               	rlcf	___lldiv@quotient+2,f,c
  4636  0029E6  360C               	rlcf	___lldiv@quotient+3,f,c
  4637  0029E8  5005               	movf	___lldiv@divisor,w,c
  4638  0029EA  5C01               	subwf	___lldiv@dividend,w,c
  4639  0029EC  5006               	movf	___lldiv@divisor+1,w,c
  4640  0029EE  5802               	subwfb	___lldiv@dividend+1,w,c
  4641  0029F0  5007               	movf	___lldiv@divisor+2,w,c
  4642  0029F2  5803               	subwfb	___lldiv@dividend+2,w,c
  4643  0029F4  5008               	movf	___lldiv@divisor+3,w,c
  4644  0029F6  5804               	subwfb	___lldiv@dividend+3,w,c
  4645  0029F8  A0D8               	btfss	status,0,c
  4646  0029FA  D00A               	goto	l2547
  4647  0029FC  5005               	movf	___lldiv@divisor,w,c
  4648  0029FE  5E01               	subwf	___lldiv@dividend,f,c
  4649  002A00  5006               	movf	___lldiv@divisor+1,w,c
  4650  002A02  5A02               	subwfb	___lldiv@dividend+1,f,c
  4651  002A04  5007               	movf	___lldiv@divisor+2,w,c
  4652  002A06  5A03               	subwfb	___lldiv@dividend+2,f,c
  4653  002A08  5008               	movf	___lldiv@divisor+3,w,c
  4654  002A0A  5A04               	subwfb	___lldiv@dividend+3,f,c
  4655  002A0C  8009               	bsf	___lldiv@quotient,0,c
  4656  002A0E  D000               	goto	l2547
  4657  002A10                     l2547:
  4658  002A10  90D8               	bcf	status,0,c
  4659  002A12  3208               	rrcf	___lldiv@divisor+3,f,c
  4660  002A14  3207               	rrcf	___lldiv@divisor+2,f,c
  4661  002A16  3206               	rrcf	___lldiv@divisor+1,f,c
  4662  002A18  3205               	rrcf	___lldiv@divisor,f,c
  4663  002A1A  2E0D               	decfsz	___lldiv@counter,f,c
  4664  002A1C  D7E0               	goto	l2539
  4665  002A1E  D000               	goto	l759
  4666  002A20                     l759:
  4667  002A20  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4668  002A24  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4669  002A28  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4670  002A2C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4671  002A30  0012               	return		;funcret
  4672  002A32                     __end_of___lldiv:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           postdec1	equ	0xFE5
  4683                           fsr1l	equ	0xFE1
  4684                           postinc2	equ	0xFDE
  4685                           postdec2	equ	0xFDD
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function ___fttol *****************
  4691 ;; Defined at:
  4692 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  f1              3   42[COMRAM] float 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  lval            4   52[COMRAM] unsigned long 
  4697 ;;  exp1            1   56[COMRAM] unsigned char 
  4698 ;;  sign1           1   51[COMRAM] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  4   42[COMRAM] long 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;Total ram usage:       15 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_main
  4718 ;;		_printf
  4719 ;;		_trunc
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text17
  4724  00255C                     __ptext17:
  4725                           	opt stack 0
  4726  00255C                     ___fttol:
  4727                           	opt stack 28
  4728                           
  4729                           ;incstack = 0
  4730  00255C  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4731  002560  6A30               	clrf	(??___fttol+1)& (0+255),c
  4732  002562  6A31               	clrf	(??___fttol+2)& (0+255),c
  4733  002564  342C               	rlcf	___fttol@f1+1,w,c
  4734  002566  362F               	rlcf	??___fttol& (0+255),f,c
  4735  002568  E301               	bnc	u1971
  4736  00256A  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4737  00256C                     u1971:
  4738  00256C  502F               	movf	??___fttol,w,c
  4739  00256E  6E39               	movwf	___fttol@exp1,c
  4740  002570  5039               	movf	___fttol@exp1,w,c
  4741  002572  A4D8               	btfss	status,2,c
  4742  002574  D002               	goto	l2213
  4743  002576  D039               	goto	l2237
  4744  002578  D063               	goto	l720
  4745  00257A                     l2213:
  4746  00257A  0E17               	movlw	23
  4747  00257C  6E2F               	movwf	??___fttol& (0+255),c
  4748  00257E  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4749  002582  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4750  002586  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4751  00258A  282F               	incf	??___fttol,w,c
  4752  00258C  6E33               	movwf	(??___fttol+4)& (0+255),c
  4753  00258E  D004               	goto	u1990
  4754  002590                     u1995:
  4755  002590  90D8               	bcf	status,0,c
  4756  002592  3232               	rrcf	??___fttol+3,f,c
  4757  002594  3231               	rrcf	??___fttol+2,f,c
  4758  002596  3230               	rrcf	??___fttol+1,f,c
  4759  002598                     u1990:
  4760  002598  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4761  00259A  D7FA               	goto	u1995
  4762  00259C  5030               	movf	??___fttol+1,w,c
  4763  00259E  6E34               	movwf	___fttol@sign1,c
  4764  0025A0  8E2C               	bsf	___fttol@f1+1,7,c
  4765  0025A2  0EFF               	movlw	255
  4766  0025A4  162B               	andwf	___fttol@f1,f,c
  4767  0025A6  0EFF               	movlw	255
  4768  0025A8  162C               	andwf	___fttol@f1+1,f,c
  4769  0025AA  0E00               	movlw	0
  4770  0025AC  162D               	andwf	___fttol@f1+2,f,c
  4771  0025AE  502B               	movf	___fttol@f1,w,c
  4772  0025B0  6E35               	movwf	___fttol@lval,c
  4773  0025B2  502C               	movf	___fttol@f1+1,w,c
  4774  0025B4  6E36               	movwf	___fttol@lval+1,c
  4775  0025B6  502D               	movf	___fttol@f1+2,w,c
  4776  0025B8  6E37               	movwf	___fttol@lval+2,c
  4777  0025BA  6A38               	clrf	___fttol@lval+3,c
  4778  0025BC  0E8E               	movlw	142
  4779  0025BE  5E39               	subwf	___fttol@exp1,f,c
  4780  0025C0  AE39               	btfss	___fttol@exp1,7,c
  4781  0025C2  D010               	goto	l2235
  4782  0025C4  5039               	movf	___fttol@exp1,w,c
  4783  0025C6  0A80               	xorlw	128
  4784  0025C8  0F8F               	addlw	143
  4785  0025CA  B0D8               	btfsc	status,0,c
  4786  0025CC  D003               	goto	l2231
  4787  0025CE  D00D               	goto	l2237
  4788  0025D0  D037               	goto	l720
  4789  0025D2  D000               	goto	l2231
  4790  0025D4                     l2231:
  4791  0025D4  90D8               	bcf	status,0,c
  4792  0025D6  3238               	rrcf	___fttol@lval+3,f,c
  4793  0025D8  3237               	rrcf	___fttol@lval+2,f,c
  4794  0025DA  3236               	rrcf	___fttol@lval+1,f,c
  4795  0025DC  3235               	rrcf	___fttol@lval,f,c
  4796  0025DE  3E39               	incfsz	___fttol@exp1,f,c
  4797  0025E0  D7F9               	goto	l2231
  4798  0025E2  D019               	goto	l2245
  4799  0025E4                     l2235:
  4800  0025E4  0E17               	movlw	23
  4801  0025E6  6439               	cpfsgt	___fttol@exp1,c
  4802  0025E8  D011               	goto	l2243
  4803  0025EA                     l2237:
  4804  0025EA  0E00               	movlw	0
  4805  0025EC  6E2B               	movwf	?___fttol,c
  4806  0025EE  0E00               	movlw	0
  4807  0025F0  6E2C               	movwf	?___fttol+1,c
  4808  0025F2  0E00               	movlw	0
  4809  0025F4  6E2D               	movwf	?___fttol+2,c
  4810  0025F6  0E00               	movlw	0
  4811  0025F8  6E2E               	movwf	?___fttol+3,c
  4812  0025FA  D022               	goto	l720
  4813  0025FC  D007               	goto	l2243
  4814  0025FE                     l2241:
  4815  0025FE  90D8               	bcf	status,0,c
  4816  002600  3635               	rlcf	___fttol@lval,f,c
  4817  002602  3636               	rlcf	___fttol@lval+1,f,c
  4818  002604  3637               	rlcf	___fttol@lval+2,f,c
  4819  002606  3638               	rlcf	___fttol@lval+3,f,c
  4820  002608  0639               	decf	___fttol@exp1,f,c
  4821  00260A  D000               	goto	l2243
  4822  00260C                     l2243:
  4823  00260C  5039               	movf	___fttol@exp1,w,c
  4824  00260E  B4D8               	btfsc	status,2,c
  4825  002610  D002               	goto	l2245
  4826  002612  D7F5               	goto	l2241
  4827  002614  D000               	goto	l2245
  4828  002616                     l2245:
  4829  002616  5034               	movf	___fttol@sign1,w,c
  4830  002618  B4D8               	btfsc	status,2,c
  4831  00261A  D009               	goto	l2249
  4832  00261C  1E38               	comf	___fttol@lval+3,f,c
  4833  00261E  1E37               	comf	___fttol@lval+2,f,c
  4834  002620  1E36               	comf	___fttol@lval+1,f,c
  4835  002622  6C35               	negf	___fttol@lval,c
  4836  002624  0E00               	movlw	0
  4837  002626  2236               	addwfc	___fttol@lval+1,f,c
  4838  002628  2237               	addwfc	___fttol@lval+2,f,c
  4839  00262A  2238               	addwfc	___fttol@lval+3,f,c
  4840  00262C  D000               	goto	l2249
  4841  00262E                     l2249:
  4842  00262E  C035  F02B         	movff	___fttol@lval,?___fttol
  4843  002632  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4844  002636  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4845  00263A  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4846  00263E  D000               	goto	l720
  4847  002640                     l720:
  4848  002640  0012               	return		;funcret
  4849  002642                     __end_of___fttol:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           prodh	equ	0xFF4
  4856                           prodl	equ	0xFF3
  4857                           postinc0	equ	0xFEE
  4858                           wreg	equ	0xFE8
  4859                           postdec1	equ	0xFE5
  4860                           fsr1l	equ	0xFE1
  4861                           postinc2	equ	0xFDE
  4862                           postdec2	equ	0xFDD
  4863                           fsr2h	equ	0xFDA
  4864                           fsr2l	equ	0xFD9
  4865                           status	equ	0xFD8
  4866                           
  4867 ;; *************** function ___ftsub *****************
  4868 ;; Defined at:
  4869 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  f1              3   27[COMRAM] float 
  4872 ;;  f2              3   30[COMRAM] float 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  3   27[COMRAM] float 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4884 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;Total ram usage:        6 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    2
  4891 ;; This function calls:
  4892 ;;		___ftadd
  4893 ;; This function is called by:
  4894 ;;		_printf
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text18
  4899  002DB8                     __ptext18:
  4900                           	opt stack 0
  4901  002DB8                     ___ftsub:
  4902                           	opt stack 27
  4903                           
  4904                           ;incstack = 0
  4905  002DB8  501F               	movf	___ftsub@f2,w,c
  4906  002DBA  1020               	iorwf	___ftsub@f2+1,w,c
  4907  002DBC  1021               	iorwf	___ftsub@f2+2,w,c
  4908  002DBE  B4D8               	btfsc	status,2,c
  4909  002DC0  D007               	goto	l2503
  4910  002DC2  0E00               	movlw	0
  4911  002DC4  1A1F               	xorwf	___ftsub@f2,f,c
  4912  002DC6  0E00               	movlw	0
  4913  002DC8  1A20               	xorwf	___ftsub@f2+1,f,c
  4914  002DCA  0E80               	movlw	128
  4915  002DCC  1A21               	xorwf	___ftsub@f2+2,f,c
  4916  002DCE  D000               	goto	l2503
  4917  002DD0                     l2503:
  4918  002DD0  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  4919  002DD4  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  4920  002DD8  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  4921  002DDC  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  4922  002DE0  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  4923  002DE4  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  4924  002DE8  EC43  F010         	call	___ftadd	;wreg free
  4925  002DEC  C010  F01C         	movff	?___ftadd,?___ftsub
  4926  002DF0  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  4927  002DF4  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  4928  002DF8  D000               	goto	l716
  4929  002DFA                     l716:
  4930  002DFA  0012               	return		;funcret
  4931  002DFC                     __end_of___ftsub:
  4932                           	opt stack 0
  4933                           tblptru	equ	0xFF8
  4934                           tblptrh	equ	0xFF7
  4935                           tblptrl	equ	0xFF6
  4936                           tablat	equ	0xFF5
  4937                           prodh	equ	0xFF4
  4938                           prodl	equ	0xFF3
  4939                           postinc0	equ	0xFEE
  4940                           wreg	equ	0xFE8
  4941                           postdec1	equ	0xFE5
  4942                           fsr1l	equ	0xFE1
  4943                           postinc2	equ	0xFDE
  4944                           postdec2	equ	0xFDD
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function ___ftadd *****************
  4950 ;; Defined at:
  4951 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  f1              3   15[COMRAM] float 
  4954 ;;  f2              3   18[COMRAM] float 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  exp1            1   26[COMRAM] unsigned char 
  4957 ;;  exp2            1   25[COMRAM] unsigned char 
  4958 ;;  sign            1   24[COMRAM] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  3   15[COMRAM] float 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4968 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;Total ram usage:       12 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    1
  4975 ;; This function calls:
  4976 ;;		___ftpack
  4977 ;; This function is called by:
  4978 ;;		_main
  4979 ;;		_printf
  4980 ;;		___ftsub
  4981 ;;		_round
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text19
  4986  002086                     __ptext19:
  4987                           	opt stack 0
  4988  002086                     ___ftadd:
  4989                           	opt stack 28
  4990                           
  4991                           ;incstack = 0
  4992  002086  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  4993  00208A  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4994  00208C  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4995  00208E  3411               	rlcf	___ftadd@f1+1,w,c
  4996  002090  3616               	rlcf	??___ftadd& (0+255),f,c
  4997  002092  E301               	bnc	u1581
  4998  002094  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4999  002096                     u1581:
  5000  002096  5016               	movf	??___ftadd,w,c
  5001  002098  6E1B               	movwf	___ftadd@exp1,c
  5002  00209A  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  5003  00209E  6A17               	clrf	(??___ftadd+1)& (0+255),c
  5004  0020A0  6A18               	clrf	(??___ftadd+2)& (0+255),c
  5005  0020A2  3414               	rlcf	___ftadd@f2+1,w,c
  5006  0020A4  3616               	rlcf	??___ftadd& (0+255),f,c
  5007  0020A6  E301               	bnc	u1591
  5008  0020A8  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  5009  0020AA                     u1591:
  5010  0020AA  5016               	movf	??___ftadd,w,c
  5011  0020AC  6E1A               	movwf	___ftadd@exp2,c
  5012  0020AE  501B               	movf	___ftadd@exp1,w,c
  5013  0020B0  B4D8               	btfsc	status,2,c
  5014  0020B2  D00B               	goto	l635
  5015  0020B4  501A               	movf	___ftadd@exp2,w,c
  5016  0020B6  5C1B               	subwf	___ftadd@exp1,w,c
  5017  0020B8  B0D8               	btfsc	status,0,c
  5018  0020BA  D00E               	goto	l2017
  5019  0020BC  501B               	movf	___ftadd@exp1,w,c
  5020  0020BE  0800               	sublw	0
  5021  0020C0  241A               	addwf	___ftadd@exp2,w,c
  5022  0020C2  6E16               	movwf	??___ftadd& (0+255),c
  5023  0020C4  0E18               	movlw	24
  5024  0020C6  6416               	cpfsgt	??___ftadd,c
  5025  0020C8  D007               	goto	l2017
  5026  0020CA                     l635:
  5027  0020CA  C013  F010         	movff	___ftadd@f2,?___ftadd
  5028  0020CE  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  5029  0020D2  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  5030  0020D6  D0B8               	goto	l636
  5031  0020D8                     l2017:
  5032  0020D8  501A               	movf	___ftadd@exp2,w,c
  5033  0020DA  B4D8               	btfsc	status,2,c
  5034  0020DC  D00B               	goto	l639
  5035  0020DE  501B               	movf	___ftadd@exp1,w,c
  5036  0020E0  5C1A               	subwf	___ftadd@exp2,w,c
  5037  0020E2  B0D8               	btfsc	status,0,c
  5038  0020E4  D00E               	goto	l2023
  5039  0020E6  501A               	movf	___ftadd@exp2,w,c
  5040  0020E8  0800               	sublw	0
  5041  0020EA  241B               	addwf	___ftadd@exp1,w,c
  5042  0020EC  6E16               	movwf	??___ftadd& (0+255),c
  5043  0020EE  0E18               	movlw	24
  5044  0020F0  6416               	cpfsgt	??___ftadd,c
  5045  0020F2  D007               	goto	l2023
  5046  0020F4                     l639:
  5047  0020F4  C010  F010         	movff	___ftadd@f1,?___ftadd
  5048  0020F8  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  5049  0020FC  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  5050  002100  D0A3               	goto	l636
  5051  002102                     l2023:
  5052  002102  0E06               	movlw	6
  5053  002104  6E19               	movwf	___ftadd@sign,c
  5054  002106  AE12               	btfss	___ftadd@f1+2,7,c
  5055  002108  D002               	goto	l2029
  5056  00210A  8E19               	bsf	___ftadd@sign,7,c
  5057  00210C  D000               	goto	l2029
  5058  00210E                     l2029:
  5059  00210E  BE15               	btfsc	___ftadd@f2+2,7,c
  5060  002110  8C19               	bsf	___ftadd@sign,6,c
  5061  002112  8E11               	bsf	___ftadd@f1+1,7,c
  5062  002114  0EFF               	movlw	255
  5063  002116  1610               	andwf	___ftadd@f1,f,c
  5064  002118  0EFF               	movlw	255
  5065  00211A  1611               	andwf	___ftadd@f1+1,f,c
  5066  00211C  0E00               	movlw	0
  5067  00211E  1612               	andwf	___ftadd@f1+2,f,c
  5068  002120  8E14               	bsf	___ftadd@f2+1,7,c
  5069  002122  0EFF               	movlw	255
  5070  002124  1613               	andwf	___ftadd@f2,f,c
  5071  002126  0EFF               	movlw	255
  5072  002128  1614               	andwf	___ftadd@f2+1,f,c
  5073  00212A  0E00               	movlw	0
  5074  00212C  1615               	andwf	___ftadd@f2+2,f,c
  5075  00212E  501A               	movf	___ftadd@exp2,w,c
  5076  002130  5C1B               	subwf	___ftadd@exp1,w,c
  5077  002132  B0D8               	btfsc	status,0,c
  5078  002134  D01E               	goto	l2049
  5079  002136                     l2039:
  5080  002136  90D8               	bcf	status,0,c
  5081  002138  3613               	rlcf	___ftadd@f2,f,c
  5082  00213A  3614               	rlcf	___ftadd@f2+1,f,c
  5083  00213C  3615               	rlcf	___ftadd@f2+2,f,c
  5084  00213E  061A               	decf	___ftadd@exp2,f,c
  5085  002140  501B               	movf	___ftadd@exp1,w,c
  5086  002142  181A               	xorwf	___ftadd@exp2,w,c
  5087  002144  B4D8               	btfsc	status,2,c
  5088  002146  D00F               	goto	l2047
  5089  002148  0619               	decf	___ftadd@sign,f,c
  5090  00214A  C019  F016         	movff	___ftadd@sign,??___ftadd
  5091  00214E  0E07               	movlw	7
  5092  002150  1616               	andwf	??___ftadd,f,c
  5093  002152  B4D8               	btfsc	status,2,c
  5094  002154  D008               	goto	l2047
  5095  002156  D7EF               	goto	l2039
  5096  002158  D006               	goto	l2047
  5097  00215A                     l2045:
  5098  00215A  90D8               	bcf	status,0,c
  5099  00215C  3212               	rrcf	___ftadd@f1+2,f,c
  5100  00215E  3211               	rrcf	___ftadd@f1+1,f,c
  5101  002160  3210               	rrcf	___ftadd@f1,f,c
  5102  002162  2A1B               	incf	___ftadd@exp1,f,c
  5103  002164  D000               	goto	l2047
  5104  002166                     l2047:
  5105  002166  501A               	movf	___ftadd@exp2,w,c
  5106  002168  181B               	xorwf	___ftadd@exp1,w,c
  5107  00216A  B4D8               	btfsc	status,2,c
  5108  00216C  D024               	goto	l650
  5109  00216E  D7F5               	goto	l2045
  5110  002170  D022               	goto	l650
  5111  002172                     l2049:
  5112  002172  501B               	movf	___ftadd@exp1,w,c
  5113  002174  5C1A               	subwf	___ftadd@exp2,w,c
  5114  002176  B0D8               	btfsc	status,0,c
  5115  002178  D01E               	goto	l650
  5116  00217A                     l2051:
  5117  00217A  90D8               	bcf	status,0,c
  5118  00217C  3610               	rlcf	___ftadd@f1,f,c
  5119  00217E  3611               	rlcf	___ftadd@f1+1,f,c
  5120  002180  3612               	rlcf	___ftadd@f1+2,f,c
  5121  002182  061B               	decf	___ftadd@exp1,f,c
  5122  002184  501B               	movf	___ftadd@exp1,w,c
  5123  002186  181A               	xorwf	___ftadd@exp2,w,c
  5124  002188  B4D8               	btfsc	status,2,c
  5125  00218A  D00F               	goto	l2059
  5126  00218C  0619               	decf	___ftadd@sign,f,c
  5127  00218E  C019  F016         	movff	___ftadd@sign,??___ftadd
  5128  002192  0E07               	movlw	7
  5129  002194  1616               	andwf	??___ftadd,f,c
  5130  002196  B4D8               	btfsc	status,2,c
  5131  002198  D008               	goto	l2059
  5132  00219A  D7EF               	goto	l2051
  5133  00219C  D006               	goto	l2059
  5134  00219E                     l2057:
  5135  00219E  90D8               	bcf	status,0,c
  5136  0021A0  3215               	rrcf	___ftadd@f2+2,f,c
  5137  0021A2  3214               	rrcf	___ftadd@f2+1,f,c
  5138  0021A4  3213               	rrcf	___ftadd@f2,f,c
  5139  0021A6  2A1A               	incf	___ftadd@exp2,f,c
  5140  0021A8  D000               	goto	l2059
  5141  0021AA                     l2059:
  5142  0021AA  501A               	movf	___ftadd@exp2,w,c
  5143  0021AC  181B               	xorwf	___ftadd@exp1,w,c
  5144  0021AE  B4D8               	btfsc	status,2,c
  5145  0021B0  D002               	goto	l650
  5146  0021B2  D7F5               	goto	l2057
  5147  0021B4  D000               	goto	l650
  5148  0021B6                     l650:
  5149  0021B6  AE19               	btfss	___ftadd@sign,7,c
  5150  0021B8  D00C               	goto	l659
  5151  0021BA  0EFF               	movlw	255
  5152  0021BC  1A10               	xorwf	___ftadd@f1,f,c
  5153  0021BE  0EFF               	movlw	255
  5154  0021C0  1A11               	xorwf	___ftadd@f1+1,f,c
  5155  0021C2  0EFF               	movlw	255
  5156  0021C4  1A12               	xorwf	___ftadd@f1+2,f,c
  5157  0021C6  0E01               	movlw	1
  5158  0021C8  2610               	addwf	___ftadd@f1,f,c
  5159  0021CA  0E00               	movlw	0
  5160  0021CC  2211               	addwfc	___ftadd@f1+1,f,c
  5161  0021CE  0E00               	movlw	0
  5162  0021D0  2212               	addwfc	___ftadd@f1+2,f,c
  5163  0021D2                     l659:
  5164  0021D2  AC19               	btfss	___ftadd@sign,6,c
  5165  0021D4  D00D               	goto	l2065
  5166  0021D6  0EFF               	movlw	255
  5167  0021D8  1A13               	xorwf	___ftadd@f2,f,c
  5168  0021DA  0EFF               	movlw	255
  5169  0021DC  1A14               	xorwf	___ftadd@f2+1,f,c
  5170  0021DE  0EFF               	movlw	255
  5171  0021E0  1A15               	xorwf	___ftadd@f2+2,f,c
  5172  0021E2  0E01               	movlw	1
  5173  0021E4  2613               	addwf	___ftadd@f2,f,c
  5174  0021E6  0E00               	movlw	0
  5175  0021E8  2214               	addwfc	___ftadd@f2+1,f,c
  5176  0021EA  0E00               	movlw	0
  5177  0021EC  2215               	addwfc	___ftadd@f2+2,f,c
  5178  0021EE  D000               	goto	l2065
  5179  0021F0                     l2065:
  5180  0021F0  0E00               	movlw	0
  5181  0021F2  6E19               	movwf	___ftadd@sign,c
  5182  0021F4  5010               	movf	___ftadd@f1,w,c
  5183  0021F6  2613               	addwf	___ftadd@f2,f,c
  5184  0021F8  5011               	movf	___ftadd@f1+1,w,c
  5185  0021FA  2214               	addwfc	___ftadd@f2+1,f,c
  5186  0021FC  5012               	movf	___ftadd@f1+2,w,c
  5187  0021FE  2215               	addwfc	___ftadd@f2+2,f,c
  5188  002200  AE15               	btfss	___ftadd@f2+2,7,c
  5189  002202  D00F               	goto	l2075
  5190  002204  0EFF               	movlw	255
  5191  002206  1A13               	xorwf	___ftadd@f2,f,c
  5192  002208  0EFF               	movlw	255
  5193  00220A  1A14               	xorwf	___ftadd@f2+1,f,c
  5194  00220C  0EFF               	movlw	255
  5195  00220E  1A15               	xorwf	___ftadd@f2+2,f,c
  5196  002210  0E01               	movlw	1
  5197  002212  2613               	addwf	___ftadd@f2,f,c
  5198  002214  0E00               	movlw	0
  5199  002216  2214               	addwfc	___ftadd@f2+1,f,c
  5200  002218  0E00               	movlw	0
  5201  00221A  2215               	addwfc	___ftadd@f2+2,f,c
  5202  00221C  0E01               	movlw	1
  5203  00221E  6E19               	movwf	___ftadd@sign,c
  5204  002220  D000               	goto	l2075
  5205  002222                     l2075:
  5206  002222  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  5207  002226  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5208  00222A  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5209  00222E  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  5210  002232  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  5211  002236  EC92  F013         	call	___ftpack	;wreg free
  5212  00223A  C001  F010         	movff	?___ftpack,?___ftadd
  5213  00223E  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  5214  002242  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  5215  002246  D000               	goto	l636
  5216  002248                     l636:
  5217  002248  0012               	return		;funcret
  5218  00224A                     __end_of___ftadd:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           postinc0	equ	0xFEE
  5227                           wreg	equ	0xFE8
  5228                           postdec1	equ	0xFE5
  5229                           fsr1l	equ	0xFE1
  5230                           postinc2	equ	0xFDE
  5231                           postdec2	equ	0xFDD
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function ___ftneg *****************
  5237 ;; Defined at:
  5238 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  f1              3   12[COMRAM] float 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  3   12[COMRAM] float 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5252 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;Total ram usage:        3 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_main
  5262 ;;		_printf
  5263 ;;		_round
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text20
  5268  002F18                     __ptext20:
  5269                           	opt stack 0
  5270  002F18                     ___ftneg:
  5271                           	opt stack 29
  5272                           
  5273                           ;incstack = 0
  5274  002F18  500D               	movf	___ftneg@f1,w,c
  5275  002F1A  100E               	iorwf	___ftneg@f1+1,w,c
  5276  002F1C  100F               	iorwf	___ftneg@f1+2,w,c
  5277  002F1E  B4D8               	btfsc	status,2,c
  5278  002F20  D006               	goto	l709
  5279  002F22  0E00               	movlw	0
  5280  002F24  1A0D               	xorwf	___ftneg@f1,f,c
  5281  002F26  0E00               	movlw	0
  5282  002F28  1A0E               	xorwf	___ftneg@f1+1,f,c
  5283  002F2A  0E80               	movlw	128
  5284  002F2C  1A0F               	xorwf	___ftneg@f1+2,f,c
  5285  002F2E                     l709:
  5286  002F2E  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  5287  002F32  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  5288  002F36  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  5289  002F3A  0012               	return		;funcret
  5290  002F3C                     __end_of___ftneg:
  5291                           	opt stack 0
  5292                           tblptru	equ	0xFF8
  5293                           tblptrh	equ	0xFF7
  5294                           tblptrl	equ	0xFF6
  5295                           tablat	equ	0xFF5
  5296                           prodh	equ	0xFF4
  5297                           prodl	equ	0xFF3
  5298                           postinc0	equ	0xFEE
  5299                           wreg	equ	0xFE8
  5300                           postdec1	equ	0xFE5
  5301                           fsr1l	equ	0xFE1
  5302                           postinc2	equ	0xFDE
  5303                           postdec2	equ	0xFDD
  5304                           fsr2h	equ	0xFDA
  5305                           fsr2l	equ	0xFD9
  5306                           status	equ	0xFD8
  5307                           
  5308 ;; *************** function ___ftge *****************
  5309 ;; Defined at:
  5310 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  ff1             3    0[COMRAM] float 
  5313 ;;  ff2             3    3[COMRAM] float 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;		None               void
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5325 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;Total ram usage:        9 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_main
  5335 ;;		_printf
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text21
  5340  0027EA                     __ptext21:
  5341                           	opt stack 0
  5342  0027EA                     ___ftge:
  5343                           	opt stack 29
  5344                           
  5345                           ;incstack = 0
  5346  0027EA  AE03               	btfss	___ftge@ff1+2,7,c
  5347  0027EC  D017               	goto	l2511
  5348  0027EE  C001  F007         	movff	___ftge@ff1,??___ftge
  5349  0027F2  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5350  0027F6  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5351  0027FA  1E07               	comf	??___ftge,f,c
  5352  0027FC  1E08               	comf	??___ftge+1,f,c
  5353  0027FE  1E09               	comf	??___ftge+2,f,c
  5354  002800  2A07               	incf	??___ftge,f,c
  5355  002802  0E00               	movlw	0
  5356  002804  2208               	addwfc	??___ftge+1,f,c
  5357  002806  2209               	addwfc	??___ftge+2,f,c
  5358  002808  0E00               	movlw	0
  5359  00280A  2407               	addwf	??___ftge,w,c
  5360  00280C  6E01               	movwf	___ftge@ff1,c
  5361  00280E  0E00               	movlw	0
  5362  002810  2008               	addwfc	??___ftge+1,w,c
  5363  002812  6E02               	movwf	___ftge@ff1+1,c
  5364  002814  0E80               	movlw	128
  5365  002816  2009               	addwfc	??___ftge+2,w,c
  5366  002818  6E03               	movwf	___ftge@ff1+2,c
  5367  00281A  D000               	goto	l2511
  5368  00281C                     l2511:
  5369  00281C  AE06               	btfss	___ftge@ff2+2,7,c
  5370  00281E  D017               	goto	l2515
  5371  002820  C004  F007         	movff	___ftge@ff2,??___ftge
  5372  002824  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5373  002828  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5374  00282C  1E07               	comf	??___ftge,f,c
  5375  00282E  1E08               	comf	??___ftge+1,f,c
  5376  002830  1E09               	comf	??___ftge+2,f,c
  5377  002832  2A07               	incf	??___ftge,f,c
  5378  002834  0E00               	movlw	0
  5379  002836  2208               	addwfc	??___ftge+1,f,c
  5380  002838  2209               	addwfc	??___ftge+2,f,c
  5381  00283A  0E00               	movlw	0
  5382  00283C  2407               	addwf	??___ftge,w,c
  5383  00283E  6E04               	movwf	___ftge@ff2,c
  5384  002840  0E00               	movlw	0
  5385  002842  2008               	addwfc	??___ftge+1,w,c
  5386  002844  6E05               	movwf	___ftge@ff2+1,c
  5387  002846  0E80               	movlw	128
  5388  002848  2009               	addwfc	??___ftge+2,w,c
  5389  00284A  6E06               	movwf	___ftge@ff2+2,c
  5390  00284C  D000               	goto	l2515
  5391  00284E                     l2515:
  5392  00284E  0E00               	movlw	0
  5393  002850  1A01               	xorwf	___ftge@ff1,f,c
  5394  002852  0E00               	movlw	0
  5395  002854  1A02               	xorwf	___ftge@ff1+1,f,c
  5396  002856  0E80               	movlw	128
  5397  002858  1A03               	xorwf	___ftge@ff1+2,f,c
  5398  00285A  0E00               	movlw	0
  5399  00285C  1A04               	xorwf	___ftge@ff2,f,c
  5400  00285E  0E00               	movlw	0
  5401  002860  1A05               	xorwf	___ftge@ff2+1,f,c
  5402  002862  0E80               	movlw	128
  5403  002864  1A06               	xorwf	___ftge@ff2+2,f,c
  5404  002866  5004               	movf	___ftge@ff2,w,c
  5405  002868  5C01               	subwf	___ftge@ff1,w,c
  5406  00286A  5005               	movf	___ftge@ff2+1,w,c
  5407  00286C  5802               	subwfb	___ftge@ff1+1,w,c
  5408  00286E  5006               	movf	___ftge@ff2+2,w,c
  5409  002870  5803               	subwfb	___ftge@ff1+2,w,c
  5410  002872  B0D8               	btfsc	status,0,c
  5411  002874  D002               	goto	l2521
  5412  002876  90D8               	bcf	status,0,c
  5413  002878  D002               	goto	l693
  5414  00287A                     l2521:
  5415  00287A  80D8               	bsf	status,0,c
  5416  00287C  D000               	goto	l693
  5417  00287E                     l693:
  5418  00287E  0012               	return		;funcret
  5419  002880                     __end_of___ftge:
  5420                           	opt stack 0
  5421                           tblptru	equ	0xFF8
  5422                           tblptrh	equ	0xFF7
  5423                           tblptrl	equ	0xFF6
  5424                           tablat	equ	0xFF5
  5425                           prodh	equ	0xFF4
  5426                           prodl	equ	0xFF3
  5427                           postinc0	equ	0xFEE
  5428                           wreg	equ	0xFE8
  5429                           postdec1	equ	0xFE5
  5430                           fsr1l	equ	0xFE1
  5431                           postinc2	equ	0xFDE
  5432                           postdec2	equ	0xFDD
  5433                           fsr2h	equ	0xFDA
  5434                           fsr2l	equ	0xFD9
  5435                           status	equ	0xFD8
  5436                           
  5437 ;; *************** function _init_UART *****************
  5438 ;; Defined at:
  5439 ;;		line 56 in file "Lab5p2b3.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    1
  5460 ;; This function calls:
  5461 ;;		_OpenUSART
  5462 ;; This function is called by:
  5463 ;;		_main
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text22
  5468  002F90                     __ptext22:
  5469                           	opt stack 0
  5470  002F90                     _init_UART:
  5471                           	opt stack 29
  5472                           
  5473                           ;Lab5p2b3.c: 58: OpenUSART (0b01111111 & 0b10111111 &
  5474                           ;Lab5p2b3.c: 59: 0b11111110 & 0b11111101 & 0b11111111 &
  5475                           ;Lab5p2b3.c: 60: 0b11111111, 25);
  5476                           
  5477                           ;incstack = 0
  5478  002F90  0E00               	movlw	0
  5479  002F92  6E02               	movwf	OpenUSART@spbrg+1,c
  5480  002F94  0E19               	movlw	25
  5481  002F96  6E01               	movwf	OpenUSART@spbrg,c
  5482  002F98  0E3C               	movlw	60
  5483  002F9A  EC4F  F016         	call	_OpenUSART
  5484                           
  5485                           ;Lab5p2b3.c: 61: OSCCON = 0x60;
  5486  002F9E  0E60               	movlw	96
  5487  002FA0  6ED3               	movwf	4051,c	;volatile
  5488  002FA2  0012               	return		;funcret
  5489  002FA4                     __end_of_init_UART:
  5490                           	opt stack 0
  5491                           tblptru	equ	0xFF8
  5492                           tblptrh	equ	0xFF7
  5493                           tblptrl	equ	0xFF6
  5494                           tablat	equ	0xFF5
  5495                           prodh	equ	0xFF4
  5496                           prodl	equ	0xFF3
  5497                           postinc0	equ	0xFEE
  5498                           wreg	equ	0xFE8
  5499                           postdec1	equ	0xFE5
  5500                           fsr1l	equ	0xFE1
  5501                           postinc2	equ	0xFDE
  5502                           postdec2	equ	0xFDD
  5503                           fsr2h	equ	0xFDA
  5504                           fsr2l	equ	0xFD9
  5505                           status	equ	0xFD8
  5506                           
  5507 ;; *************** function _OpenUSART *****************
  5508 ;; Defined at:
  5509 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  config          1    wreg     unsigned char 
  5512 ;;  spbrg           2    0[COMRAM] unsigned int 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  config          1    2[COMRAM] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;Total ram usage:        3 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		_init_UART
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text23
  5538  002C9E                     __ptext23:
  5539                           	opt stack 0
  5540  002C9E                     _OpenUSART:
  5541                           	opt stack 29
  5542                           
  5543                           ;incstack = 0
  5544                           ;OpenUSART@config stored from wreg
  5545  002C9E  6E03               	movwf	OpenUSART@config,c
  5546  002CA0  0E00               	movlw	0
  5547  002CA2  6EAC               	movwf	4012,c	;volatile
  5548  002CA4  0E00               	movlw	0
  5549  002CA6  6EAB               	movwf	4011,c	;volatile
  5550  002CA8  A003               	btfss	OpenUSART@config,0,c
  5551  002CAA  D002               	goto	l2275
  5552  002CAC  88AC               	bsf	4012,4,c	;volatile
  5553  002CAE  D000               	goto	l2275
  5554  002CB0                     l2275:
  5555  002CB0  A203               	btfss	OpenUSART@config,1,c
  5556  002CB2  D003               	goto	l2279
  5557  002CB4  8CAC               	bsf	4012,6,c	;volatile
  5558  002CB6  8CAB               	bsf	4011,6,c	;volatile
  5559  002CB8  D000               	goto	l2279
  5560  002CBA                     l2279:
  5561  002CBA  A403               	btfss	OpenUSART@config,2,c
  5562  002CBC  D002               	goto	l2283
  5563  002CBE  8EAC               	bsf	4012,7,c	;volatile
  5564  002CC0  D000               	goto	l2283
  5565  002CC2                     l2283:
  5566  002CC2  A603               	btfss	OpenUSART@config,3,c
  5567  002CC4  D002               	goto	l258
  5568  002CC6  88AB               	bsf	4011,4,c	;volatile
  5569  002CC8  D002               	goto	l2287
  5570  002CCA                     l258:
  5571  002CCA  8AAB               	bsf	4011,5,c	;volatile
  5572  002CCC  D000               	goto	l2287
  5573  002CCE                     l2287:
  5574  002CCE  B803               	btfsc	OpenUSART@config,4,c
  5575  002CD0  84AC               	bsf	4012,2,c	;volatile
  5576  002CD2  989E               	bcf	3998,4,c	;volatile
  5577  002CD4  AA03               	btfss	OpenUSART@config,5,c
  5578  002CD6  D002               	goto	l2295
  5579  002CD8  86AB               	bsf	4011,3,c	;volatile
  5580  002CDA  D000               	goto	l2295
  5581  002CDC                     l2295:
  5582  002CDC  AC03               	btfss	OpenUSART@config,6,c
  5583  002CDE  D002               	goto	l262
  5584  002CE0  8A9D               	bsf	3997,5,c	;volatile
  5585  002CE2  D001               	goto	l263
  5586  002CE4                     l262:
  5587  002CE4  9A9D               	bcf	3997,5,c	;volatile
  5588  002CE6                     l263:
  5589  002CE6  9A9E               	bcf	3998,5,c	;volatile
  5590  002CE8  AE03               	btfss	OpenUSART@config,7,c
  5591  002CEA  D002               	goto	l264
  5592  002CEC  889D               	bsf	3997,4,c	;volatile
  5593  002CEE  D001               	goto	l265
  5594  002CF0                     l264:
  5595  002CF0  989D               	bcf	3997,4,c	;volatile
  5596  002CF2                     l265:
  5597  002CF2  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5598  002CF6  5002               	movf	OpenUSART@spbrg+1,w,c
  5599  002CF8  6EB0               	movwf	4016,c	;volatile
  5600  002CFA  8AAC               	bsf	4012,5,c	;volatile
  5601  002CFC  8EAB               	bsf	4011,7,c	;volatile
  5602  002CFE  9C94               	bcf	3988,6,c	;volatile
  5603  002D00  8E94               	bsf	3988,7,c	;volatile
  5604  002D02  B8AC               	btfsc	4012,4,c	;volatile
  5605  002D04  BEAC               	btfsc	4012,7,c	;volatile
  5606  002D06  D002               	goto	l267
  5607  002D08  8C94               	bsf	3988,6,c	;volatile
  5608  002D0A  D000               	goto	l267
  5609  002D0C                     l267:
  5610  002D0C  0012               	return		;funcret
  5611  002D0E                     __end_of_OpenUSART:
  5612                           	opt stack 0
  5613                           tblptru	equ	0xFF8
  5614                           tblptrh	equ	0xFF7
  5615                           tblptrl	equ	0xFF6
  5616                           tablat	equ	0xFF5
  5617                           prodh	equ	0xFF4
  5618                           prodl	equ	0xFF3
  5619                           postinc0	equ	0xFEE
  5620                           wreg	equ	0xFE8
  5621                           postdec1	equ	0xFE5
  5622                           fsr1l	equ	0xFE1
  5623                           postinc2	equ	0xFDE
  5624                           postdec2	equ	0xFDD
  5625                           fsr2h	equ	0xFDA
  5626                           fsr2l	equ	0xFD9
  5627                           status	equ	0xFD8
  5628                           
  5629 ;; *************** function _init_ADC *****************
  5630 ;; Defined at:
  5631 ;;		line 38 in file "Lab5p2b3.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;		None               void
  5638 ;; Registers used:
  5639 ;;		wreg, status,2
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;Total ram usage:        0 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_main
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text24
  5659  002FD0                     __ptext24:
  5660                           	opt stack 0
  5661  002FD0                     _init_ADC:
  5662                           	opt stack 30
  5663                           
  5664                           ;Lab5p2b3.c: 41: ADCON1=0x19;
  5665                           
  5666                           ;incstack = 0
  5667  002FD0  0E19               	movlw	25
  5668  002FD2  6EC1               	movwf	4033,c	;volatile
  5669                           
  5670                           ;Lab5p2b3.c: 43: ADCON2=0xA9;
  5671  002FD4  0EA9               	movlw	169
  5672  002FD6  6EC0               	movwf	4032,c	;volatile
  5673  002FD8  0012               	return		;funcret
  5674  002FDA                     __end_of_init_ADC:
  5675                           	opt stack 0
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           postinc0	equ	0xFEE
  5683                           wreg	equ	0xFE8
  5684                           postdec1	equ	0xFE5
  5685                           fsr1l	equ	0xFE1
  5686                           postinc2	equ	0xFDE
  5687                           postdec2	equ	0xFDD
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692 ;; *************** function _get_full_ADC *****************
  5693 ;; Defined at:
  5694 ;;		line 47 in file "Lab5p2b3.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  result          2    4[COMRAM] int 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  2    0[COMRAM] unsigned int 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;Total ram usage:        6 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_main
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text25
  5722  002ECC                     __ptext25:
  5723                           	opt stack 0
  5724  002ECC                     _get_full_ADC:
  5725                           	opt stack 30
  5726                           
  5727                           ;Lab5p2b3.c: 49: int result;
  5728                           ;Lab5p2b3.c: 50: ADCON0bits.GO=1;
  5729                           
  5730                           ;incstack = 0
  5731  002ECC  82C2               	bsf	4034,1,c	;volatile
  5732                           
  5733                           ;Lab5p2b3.c: 51: while(ADCON0bits.DONE==1);
  5734  002ECE  D000               	goto	l76
  5735  002ED0                     l76:
  5736  002ED0  B2C2               	btfsc	4034,1,c	;volatile
  5737  002ED2  D7FE               	goto	l76
  5738                           
  5739                           ;Lab5p2b3.c: 52: result = (ADRESH * 0x100) + ADRESL;
  5740  002ED4  50C4               	movf	4036,w,c	;volatile
  5741  002ED6  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5742  002ED8  6A03               	clrf	??_get_full_ADC& (0+255),c
  5743  002EDA  50C3               	movf	4035,w,c	;volatile
  5744  002EDC  2403               	addwf	??_get_full_ADC,w,c
  5745  002EDE  6E05               	movwf	get_full_ADC@result,c
  5746  002EE0  0E00               	movlw	0
  5747  002EE2  2004               	addwfc	??_get_full_ADC+1,w,c
  5748  002EE4  6E06               	movwf	get_full_ADC@result+1,c
  5749                           
  5750                           ;Lab5p2b3.c: 54: return result;
  5751  002EE6  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5752  002EEA  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5753  002EEE  D000               	goto	l79
  5754  002EF0                     l79:
  5755  002EF0  0012               	return		;funcret
  5756  002EF2                     __end_of_get_full_ADC:
  5757                           	opt stack 0
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           postinc0	equ	0xFEE
  5765                           wreg	equ	0xFE8
  5766                           postdec1	equ	0xFE5
  5767                           fsr1l	equ	0xFE1
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8
  5773                           
  5774 ;; *************** function ___lbtoft *****************
  5775 ;; Defined at:
  5776 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  c               1    wreg     unsigned char 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  c               1   11[COMRAM] unsigned char 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  3    8[COMRAM] float 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5790 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;Total ram usage:        4 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    1
  5797 ;; This function calls:
  5798 ;;		___ftpack
  5799 ;; This function is called by:
  5800 ;;		_main
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text26
  5805  002EF2                     __ptext26:
  5806                           	opt stack 0
  5807  002EF2                     ___lbtoft:
  5808                           	opt stack 29
  5809                           
  5810                           ;incstack = 0
  5811                           ;___lbtoft@c stored from wreg
  5812  002EF2  6E0C               	movwf	___lbtoft@c,c
  5813  002EF4  500C               	movf	___lbtoft@c,w,c
  5814  002EF6  6E01               	movwf	___ftpack@arg,c
  5815  002EF8  6A02               	clrf	___ftpack@arg+1,c
  5816  002EFA  6A03               	clrf	___ftpack@arg+2,c
  5817  002EFC  0E8E               	movlw	142
  5818  002EFE  6E04               	movwf	___ftpack@exp,c
  5819  002F00  0E00               	movlw	0
  5820  002F02  6E05               	movwf	___ftpack@sign,c
  5821  002F04  EC92  F013         	call	___ftpack	;wreg free
  5822  002F08  C001  F009         	movff	?___ftpack,?___lbtoft
  5823  002F0C  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  5824  002F10  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  5825  002F14  D000               	goto	l756
  5826  002F16                     l756:
  5827  002F16  0012               	return		;funcret
  5828  002F18                     __end_of___lbtoft:
  5829                           	opt stack 0
  5830                           tblptru	equ	0xFF8
  5831                           tblptrh	equ	0xFF7
  5832                           tblptrl	equ	0xFF6
  5833                           tablat	equ	0xFF5
  5834                           prodh	equ	0xFF4
  5835                           prodl	equ	0xFF3
  5836                           postinc0	equ	0xFEE
  5837                           wreg	equ	0xFE8
  5838                           postdec1	equ	0xFE5
  5839                           fsr1l	equ	0xFE1
  5840                           postinc2	equ	0xFDE
  5841                           postdec2	equ	0xFDD
  5842                           fsr2h	equ	0xFDA
  5843                           fsr2l	equ	0xFD9
  5844                           status	equ	0xFD8
  5845                           
  5846 ;; *************** function ___ftdiv *****************
  5847 ;; Defined at:
  5848 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  f1              3   81[COMRAM] float 
  5851 ;;  f2              3   84[COMRAM] float 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  f3              3   91[COMRAM] float 
  5854 ;;  sign            1   95[COMRAM] unsigned char 
  5855 ;;  exp             1   94[COMRAM] unsigned char 
  5856 ;;  cntr            1   90[COMRAM] unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  3   81[COMRAM] float 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5866 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;Total ram usage:       15 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    1
  5873 ;; This function calls:
  5874 ;;		___ftpack
  5875 ;; This function is called by:
  5876 ;;		_main
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text27
  5881  002642                     __ptext27:
  5882                           	opt stack 0
  5883  002642                     ___ftdiv:
  5884                           	opt stack 29
  5885                           
  5886                           ;incstack = 0
  5887  002642  C054  F058         	movff	___ftdiv@f1+2,??___ftdiv
  5888  002646  6A59               	clrf	(??___ftdiv+1)& (0+255),c
  5889  002648  6A5A               	clrf	(??___ftdiv+2)& (0+255),c
  5890  00264A  3453               	rlcf	___ftdiv@f1+1,w,c
  5891  00264C  3658               	rlcf	??___ftdiv& (0+255),f,c
  5892  00264E  E301               	bnc	u2871
  5893  002650  8059               	bsf	(??___ftdiv+1)& (0+255),0,c
  5894  002652                     u2871:
  5895  002652  5058               	movf	??___ftdiv,w,c
  5896  002654  6E5F               	movwf	___ftdiv@exp,c
  5897  002656  505F               	movf	___ftdiv@exp,w,c
  5898  002658  A4D8               	btfss	status,2,c
  5899  00265A  D002               	goto	l2813
  5900  00265C  D00E               	goto	l2815
  5901  00265E  D061               	goto	l667
  5902  002660                     l2813:
  5903  002660  C057  F058         	movff	___ftdiv@f2+2,??___ftdiv
  5904  002664  6A59               	clrf	(??___ftdiv+1)& (0+255),c
  5905  002666  6A5A               	clrf	(??___ftdiv+2)& (0+255),c
  5906  002668  3456               	rlcf	___ftdiv@f2+1,w,c
  5907  00266A  3658               	rlcf	??___ftdiv& (0+255),f,c
  5908  00266C  E301               	bnc	u2891
  5909  00266E  8059               	bsf	(??___ftdiv+1)& (0+255),0,c
  5910  002670                     u2891:
  5911  002670  5058               	movf	??___ftdiv,w,c
  5912  002672  6E60               	movwf	___ftdiv@sign,c
  5913  002674  5060               	movf	___ftdiv@sign,w,c
  5914  002676  A4D8               	btfss	status,2,c
  5915  002678  D007               	goto	l2819
  5916  00267A                     l2815:
  5917  00267A  0E00               	movlw	0
  5918  00267C  6E52               	movwf	?___ftdiv,c
  5919  00267E  0E00               	movlw	0
  5920  002680  6E53               	movwf	?___ftdiv+1,c
  5921  002682  0E00               	movlw	0
  5922  002684  6E54               	movwf	?___ftdiv+2,c
  5923  002686  D04D               	goto	l667
  5924  002688                     l2819:
  5925  002688  0E00               	movlw	0
  5926  00268A  6E5C               	movwf	___ftdiv@f3,c
  5927  00268C  0E00               	movlw	0
  5928  00268E  6E5D               	movwf	___ftdiv@f3+1,c
  5929  002690  0E00               	movlw	0
  5930  002692  6E5E               	movwf	___ftdiv@f3+2,c
  5931  002694  5060               	movf	___ftdiv@sign,w,c
  5932  002696  0F89               	addlw	137
  5933  002698  5E5F               	subwf	___ftdiv@exp,f,c
  5934  00269A  C054  F060         	movff	___ftdiv@f1+2,___ftdiv@sign
  5935  00269E  5057               	movf	___ftdiv@f2+2,w,c
  5936  0026A0  1A60               	xorwf	___ftdiv@sign,f,c
  5937  0026A2  0E80               	movlw	128
  5938  0026A4  1660               	andwf	___ftdiv@sign,f,c
  5939  0026A6  8E53               	bsf	___ftdiv@f1+1,7,c
  5940  0026A8  0EFF               	movlw	255
  5941  0026AA  1652               	andwf	___ftdiv@f1,f,c
  5942  0026AC  0EFF               	movlw	255
  5943  0026AE  1653               	andwf	___ftdiv@f1+1,f,c
  5944  0026B0  0E00               	movlw	0
  5945  0026B2  1654               	andwf	___ftdiv@f1+2,f,c
  5946  0026B4  8E56               	bsf	___ftdiv@f2+1,7,c
  5947  0026B6  0EFF               	movlw	255
  5948  0026B8  1655               	andwf	___ftdiv@f2,f,c
  5949  0026BA  0EFF               	movlw	255
  5950  0026BC  1656               	andwf	___ftdiv@f2+1,f,c
  5951  0026BE  0E00               	movlw	0
  5952  0026C0  1657               	andwf	___ftdiv@f2+2,f,c
  5953  0026C2  0E18               	movlw	24
  5954  0026C4  6E5B               	movwf	___ftdiv@cntr,c
  5955  0026C6  D000               	goto	l2839
  5956  0026C8                     l2839:
  5957  0026C8  90D8               	bcf	status,0,c
  5958  0026CA  365C               	rlcf	___ftdiv@f3,f,c
  5959  0026CC  365D               	rlcf	___ftdiv@f3+1,f,c
  5960  0026CE  365E               	rlcf	___ftdiv@f3+2,f,c
  5961  0026D0  5055               	movf	___ftdiv@f2,w,c
  5962  0026D2  5C52               	subwf	___ftdiv@f1,w,c
  5963  0026D4  5056               	movf	___ftdiv@f2+1,w,c
  5964  0026D6  5853               	subwfb	___ftdiv@f1+1,w,c
  5965  0026D8  5057               	movf	___ftdiv@f2+2,w,c
  5966  0026DA  5854               	subwfb	___ftdiv@f1+2,w,c
  5967  0026DC  A0D8               	btfss	status,0,c
  5968  0026DE  D007               	goto	l670
  5969  0026E0  5055               	movf	___ftdiv@f2,w,c
  5970  0026E2  5E52               	subwf	___ftdiv@f1,f,c
  5971  0026E4  5056               	movf	___ftdiv@f2+1,w,c
  5972  0026E6  5A53               	subwfb	___ftdiv@f1+1,f,c
  5973  0026E8  5057               	movf	___ftdiv@f2+2,w,c
  5974  0026EA  5A54               	subwfb	___ftdiv@f1+2,f,c
  5975  0026EC  805C               	bsf	___ftdiv@f3,0,c
  5976  0026EE                     l670:
  5977  0026EE  90D8               	bcf	status,0,c
  5978  0026F0  3652               	rlcf	___ftdiv@f1,f,c
  5979  0026F2  3653               	rlcf	___ftdiv@f1+1,f,c
  5980  0026F4  3654               	rlcf	___ftdiv@f1+2,f,c
  5981  0026F6  2E5B               	decfsz	___ftdiv@cntr,f,c
  5982  0026F8  D7E7               	goto	l2839
  5983  0026FA  D000               	goto	l2849
  5984  0026FC                     l2849:
  5985  0026FC  C05C  F001         	movff	___ftdiv@f3,___ftpack@arg
  5986  002700  C05D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5987  002704  C05E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5988  002708  C05F  F004         	movff	___ftdiv@exp,___ftpack@exp
  5989  00270C  C060  F005         	movff	___ftdiv@sign,___ftpack@sign
  5990  002710  EC92  F013         	call	___ftpack	;wreg free
  5991  002714  C001  F052         	movff	?___ftpack,?___ftdiv
  5992  002718  C002  F053         	movff	?___ftpack+1,?___ftdiv+1
  5993  00271C  C003  F054         	movff	?___ftpack+2,?___ftdiv+2
  5994  002720  D000               	goto	l667
  5995  002722                     l667:
  5996  002722  0012               	return		;funcret
  5997  002724                     __end_of___ftdiv:
  5998                           	opt stack 0
  5999                           tblptru	equ	0xFF8
  6000                           tblptrh	equ	0xFF7
  6001                           tblptrl	equ	0xFF6
  6002                           tablat	equ	0xFF5
  6003                           prodh	equ	0xFF4
  6004                           prodl	equ	0xFF3
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           postdec1	equ	0xFE5
  6008                           fsr1l	equ	0xFE1
  6009                           postinc2	equ	0xFDE
  6010                           postdec2	equ	0xFDD
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function ___awtoft *****************
  6016 ;; Defined at:
  6017 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  c               2    8[COMRAM] int 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  sign            1   11[COMRAM] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  3    8[COMRAM] float 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6031 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;Total ram usage:        4 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    1
  6038 ;; This function calls:
  6039 ;;		___ftpack
  6040 ;; This function is called by:
  6041 ;;		_main
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text28
  6046  002E3A                     __ptext28:
  6047                           	opt stack 0
  6048  002E3A                     ___awtoft:
  6049                           	opt stack 29
  6050                           
  6051                           ;incstack = 0
  6052  002E3A  0E00               	movlw	0
  6053  002E3C  6E0C               	movwf	___awtoft@sign,c
  6054  002E3E  AE0A               	btfss	___awtoft@c+1,7,c
  6055  002E40  D007               	goto	l2861
  6056  002E42  6C09               	negf	___awtoft@c,c
  6057  002E44  1E0A               	comf	___awtoft@c+1,f,c
  6058  002E46  B0D8               	btfsc	status,0,c
  6059  002E48  2A0A               	incf	___awtoft@c+1,f,c
  6060  002E4A  0E01               	movlw	1
  6061  002E4C  6E0C               	movwf	___awtoft@sign,c
  6062  002E4E  D000               	goto	l2861
  6063  002E50                     l2861:
  6064  002E50  C009  F001         	movff	___awtoft@c,___ftpack@arg
  6065  002E54  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  6066  002E58  6A03               	clrf	___ftpack@arg+2,c
  6067  002E5A  0E8E               	movlw	142
  6068  002E5C  6E04               	movwf	___ftpack@exp,c
  6069  002E5E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  6070  002E62  EC92  F013         	call	___ftpack	;wreg free
  6071  002E66  C001  F009         	movff	?___ftpack,?___awtoft
  6072  002E6A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  6073  002E6E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  6074  002E72  D000               	goto	l488
  6075  002E74                     l488:
  6076  002E74  0012               	return		;funcret
  6077  002E76                     __end_of___awtoft:
  6078                           	opt stack 0
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           prodh	equ	0xFF4
  6084                           prodl	equ	0xFF3
  6085                           postinc0	equ	0xFEE
  6086                           wreg	equ	0xFE8
  6087                           postdec1	equ	0xFE5
  6088                           fsr1l	equ	0xFE1
  6089                           postinc2	equ	0xFDE
  6090                           postdec2	equ	0xFDD
  6091                           fsr2h	equ	0xFDA
  6092                           fsr2l	equ	0xFD9
  6093                           status	equ	0xFD8
  6094                           
  6095 ;; *************** function ___ftpack *****************
  6096 ;; Defined at:
  6097 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  arg             3    0[COMRAM] unsigned um
  6100 ;;  exp             1    3[COMRAM] unsigned char 
  6101 ;;  sign            1    4[COMRAM] unsigned char 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;		None
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  3    0[COMRAM] float 
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6113 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6115 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6116 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;Total ram usage:        8 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		___altoft
  6123 ;;		___awtoft
  6124 ;;		___ftadd
  6125 ;;		___ftdiv
  6126 ;;		___ftmul
  6127 ;;		___lbtoft
  6128 ;;		___lltoft
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text29
  6133  002724                     __ptext29:
  6134                           	opt stack 0
  6135  002724                     ___ftpack:
  6136                           	opt stack 27
  6137                           
  6138                           ;incstack = 0
  6139  002724  5004               	movf	___ftpack@exp,w,c
  6140  002726  B4D8               	btfsc	status,2,c
  6141  002728  D005               	goto	l1955
  6142  00272A  5001               	movf	___ftpack@arg,w,c
  6143  00272C  1002               	iorwf	___ftpack@arg+1,w,c
  6144  00272E  1003               	iorwf	___ftpack@arg+2,w,c
  6145  002730  A4D8               	btfss	status,2,c
  6146  002732  D00E               	goto	l1961
  6147  002734                     l1955:
  6148  002734  0E00               	movlw	0
  6149  002736  6E01               	movwf	?___ftpack,c
  6150  002738  0E00               	movlw	0
  6151  00273A  6E02               	movwf	?___ftpack+1,c
  6152  00273C  0E00               	movlw	0
  6153  00273E  6E03               	movwf	?___ftpack+2,c
  6154  002740  D053               	goto	l595
  6155  002742  D006               	goto	l1961
  6156  002744                     l1959:
  6157  002744  2A04               	incf	___ftpack@exp,f,c
  6158  002746  90D8               	bcf	status,0,c
  6159  002748  3203               	rrcf	___ftpack@arg+2,f,c
  6160  00274A  3202               	rrcf	___ftpack@arg+1,f,c
  6161  00274C  3201               	rrcf	___ftpack@arg,f,c
  6162  00274E  D000               	goto	l1961
  6163  002750                     l1961:
  6164  002750  0E00               	movlw	0
  6165  002752  1401               	andwf	___ftpack@arg,w,c
  6166  002754  6E06               	movwf	??___ftpack& (0+255),c
  6167  002756  0E00               	movlw	0
  6168  002758  1402               	andwf	___ftpack@arg+1,w,c
  6169  00275A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6170  00275C  0EFE               	movlw	254
  6171  00275E  1403               	andwf	___ftpack@arg+2,w,c
  6172  002760  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6173  002762  5006               	movf	??___ftpack,w,c
  6174  002764  1007               	iorwf	??___ftpack+1,w,c
  6175  002766  1008               	iorwf	??___ftpack+2,w,c
  6176  002768  B4D8               	btfsc	status,2,c
  6177  00276A  D00E               	goto	l1967
  6178  00276C  D7EB               	goto	l1959
  6179  00276E  D00C               	goto	l1967
  6180  002770                     l1963:
  6181  002770  2A04               	incf	___ftpack@exp,f,c
  6182  002772  0E01               	movlw	1
  6183  002774  2601               	addwf	___ftpack@arg,f,c
  6184  002776  0E00               	movlw	0
  6185  002778  2202               	addwfc	___ftpack@arg+1,f,c
  6186  00277A  0E00               	movlw	0
  6187  00277C  2203               	addwfc	___ftpack@arg+2,f,c
  6188  00277E  90D8               	bcf	status,0,c
  6189  002780  3203               	rrcf	___ftpack@arg+2,f,c
  6190  002782  3202               	rrcf	___ftpack@arg+1,f,c
  6191  002784  3201               	rrcf	___ftpack@arg,f,c
  6192  002786  D000               	goto	l1967
  6193  002788                     l1967:
  6194  002788  0E00               	movlw	0
  6195  00278A  1401               	andwf	___ftpack@arg,w,c
  6196  00278C  6E06               	movwf	??___ftpack& (0+255),c
  6197  00278E  0E00               	movlw	0
  6198  002790  1402               	andwf	___ftpack@arg+1,w,c
  6199  002792  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6200  002794  0EFF               	movlw	255
  6201  002796  1403               	andwf	___ftpack@arg+2,w,c
  6202  002798  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6203  00279A  5006               	movf	??___ftpack,w,c
  6204  00279C  1007               	iorwf	??___ftpack+1,w,c
  6205  00279E  1008               	iorwf	??___ftpack+2,w,c
  6206  0027A0  B4D8               	btfsc	status,2,c
  6207  0027A2  D008               	goto	l1971
  6208  0027A4  D7E5               	goto	l1963
  6209  0027A6  D006               	goto	l1971
  6210  0027A8                     l1969:
  6211  0027A8  0604               	decf	___ftpack@exp,f,c
  6212  0027AA  90D8               	bcf	status,0,c
  6213  0027AC  3601               	rlcf	___ftpack@arg,f,c
  6214  0027AE  3602               	rlcf	___ftpack@arg+1,f,c
  6215  0027B0  3603               	rlcf	___ftpack@arg+2,f,c
  6216  0027B2  D000               	goto	l1971
  6217  0027B4                     l1971:
  6218  0027B4  BE02               	btfsc	___ftpack@arg+1,7,c
  6219  0027B6  D004               	goto	l606
  6220  0027B8  0E02               	movlw	2
  6221  0027BA  6004               	cpfslt	___ftpack@exp,c
  6222  0027BC  D7F5               	goto	l1969
  6223  0027BE  D000               	goto	l606
  6224  0027C0                     l606:
  6225  0027C0  B004               	btfsc	___ftpack@exp,0,c
  6226  0027C2  D002               	goto	l1977
  6227  0027C4  9E02               	bcf	___ftpack@arg+1,7,c
  6228  0027C6  D000               	goto	l1977
  6229  0027C8                     l1977:
  6230  0027C8  90D8               	bcf	status,0,c
  6231  0027CA  3204               	rrcf	___ftpack@exp,f,c
  6232  0027CC  5004               	movf	___ftpack@exp,w,c
  6233  0027CE  1203               	iorwf	___ftpack@arg+2,f,c
  6234  0027D0  5005               	movf	___ftpack@sign,w,c
  6235  0027D2  B4D8               	btfsc	status,2,c
  6236  0027D4  D002               	goto	l1983
  6237  0027D6  8E03               	bsf	___ftpack@arg+2,7,c
  6238  0027D8  D000               	goto	l1983
  6239  0027DA                     l1983:
  6240  0027DA  C001  F001         	movff	___ftpack@arg,?___ftpack
  6241  0027DE  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6242  0027E2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6243  0027E6  D000               	goto	l595
  6244  0027E8                     l595:
  6245  0027E8  0012               	return		;funcret
  6246  0027EA                     __end_of___ftpack:
  6247                           	opt stack 0
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           prodh	equ	0xFF4
  6253                           prodl	equ	0xFF3
  6254                           postinc0	equ	0xFEE
  6255                           wreg	equ	0xFE8
  6256                           postdec1	equ	0xFE5
  6257                           fsr1l	equ	0xFE1
  6258                           postinc2	equ	0xFDE
  6259                           postdec2	equ	0xFDD
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function _WAIT_ONE_SEC *****************
  6265 ;; Defined at:
  6266 ;;		line 158 in file "Lab5p2b3.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  i               2    0[COMRAM] int 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;		None               void
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;Total ram usage:        2 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_main
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text30
  6294  002F3C                     __ptext30:
  6295                           	opt stack 0
  6296  002F3C                     _WAIT_ONE_SEC:
  6297                           	opt stack 30
  6298                           
  6299                           ;Lab5p2b3.c: 160: for(int i = 0; i < 0xFFFF; i++);
  6300                           
  6301                           ;incstack = 0
  6302  002F3C  0E00               	movlw	0
  6303  002F3E  6E02               	movwf	WAIT_ONE_SEC@i+1,c
  6304  002F40  0E00               	movlw	0
  6305  002F42  6E01               	movwf	WAIT_ONE_SEC@i,c
  6306  002F44                     l2799:
  6307  002F44  2801               	incf	WAIT_ONE_SEC@i,w,c
  6308  002F46  E105               	bnz	l2803
  6309  002F48  2802               	incf	WAIT_ONE_SEC@i+1,w,c
  6310  002F4A  B4D8               	btfsc	status,2,c
  6311  002F4C  D006               	goto	l105
  6312  002F4E  D001               	goto	l2803
  6313  002F50  D004               	goto	l105
  6314  002F52                     l2803:
  6315  002F52  4A01               	infsnz	WAIT_ONE_SEC@i,f,c
  6316  002F54  2A02               	incf	WAIT_ONE_SEC@i+1,f,c
  6317  002F56  D7F6               	goto	l2799
  6318  002F58  D7FC               	goto	l2803
  6319  002F5A                     l105:
  6320  002F5A  0012               	return		;funcret
  6321  002F5C                     __end_of_WAIT_ONE_SEC:
  6322                           	opt stack 0
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodh	equ	0xFF4
  6328                           prodl	equ	0xFF3
  6329                           postinc0	equ	0xFEE
  6330                           wreg	equ	0xFE8
  6331                           postdec1	equ	0xFE5
  6332                           fsr1l	equ	0xFE1
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function _Select_ADC_Channel *****************
  6340 ;; Defined at:
  6341 ;;		line 193 in file "Lab5p2b3.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  channel         1    wreg     unsigned char 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  channel         1    0[COMRAM] unsigned char 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;		None               void
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0, prodl, prodh
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;Total ram usage:        1 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_main
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text31
  6369  002FC4                     __ptext31:
  6370                           	opt stack 0
  6371  002FC4                     _Select_ADC_Channel:
  6372                           	opt stack 30
  6373                           
  6374                           ;incstack = 0
  6375                           ;Select_ADC_Channel@channel stored from wreg
  6376  002FC4  6E01               	movwf	Select_ADC_Channel@channel,c
  6377                           
  6378                           ;Lab5p2b3.c: 195: ADCON0 = channel * 4 + 1;
  6379  002FC6  5001               	movf	Select_ADC_Channel@channel,w,c
  6380  002FC8  0D04               	mullw	4
  6381  002FCA  28F3               	incf	prodl,w,c
  6382  002FCC  6EC2               	movwf	4034,c	;volatile
  6383  002FCE  0012               	return		;funcret
  6384  002FD0                     __end_of_Select_ADC_Channel:
  6385                           	opt stack 0
  6386                           tblptru	equ	0xFF8
  6387                           tblptrh	equ	0xFF7
  6388                           tblptrl	equ	0xFF6
  6389                           tablat	equ	0xFF5
  6390                           prodh	equ	0xFF4
  6391                           prodl	equ	0xFF3
  6392                           postinc0	equ	0xFEE
  6393                           wreg	equ	0xFE8
  6394                           postdec1	equ	0xFE5
  6395                           fsr1l	equ	0xFE1
  6396                           postinc2	equ	0xFDE
  6397                           postdec2	equ	0xFDD
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function _Deactivate_Buzzer *****************
  6403 ;; Defined at:
  6404 ;;		line 207 in file "Lab5p2b3.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;		None               void
  6411 ;; Registers used:
  6412 ;;		wreg, status,2
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_main
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text32
  6432  002FDA                     __ptext32:
  6433                           	opt stack 0
  6434  002FDA                     _Deactivate_Buzzer:
  6435                           	opt stack 30
  6436                           
  6437                           ;Lab5p2b3.c: 209: CCP2CON = 0x0;
  6438                           
  6439                           ;incstack = 0
  6440  002FDA  0E00               	movlw	0
  6441  002FDC  6EBA               	movwf	4026,c	;volatile
  6442                           
  6443                           ;Lab5p2b3.c: 210: PORTBbits.RB3 = 0;
  6444  002FDE  9681               	bcf	3969,3,c	;volatile
  6445  002FE0  0012               	return		;funcret
  6446  002FE2                     __end_of_Deactivate_Buzzer:
  6447                           	opt stack 0
  6448                           tblptru	equ	0xFF8
  6449                           tblptrh	equ	0xFF7
  6450                           tblptrl	equ	0xFF6
  6451                           tablat	equ	0xFF5
  6452                           prodh	equ	0xFF4
  6453                           prodl	equ	0xFF3
  6454                           postinc0	equ	0xFEE
  6455                           wreg	equ	0xFE8
  6456                           postdec1	equ	0xFE5
  6457                           fsr1l	equ	0xFE1
  6458                           postinc2	equ	0xFDE
  6459                           postdec2	equ	0xFDD
  6460                           fsr2h	equ	0xFDA
  6461                           fsr2l	equ	0xFD9
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function _DO_DISPLAY_D2 *****************
  6465 ;; Defined at:
  6466 ;;		line 186 in file "Lab5p2b3.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  RL              2   71[COMRAM] int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;		None
  6471 ;; Return value:  Size  Location     Type
  6472 ;;		None               void
  6473 ;; Registers used:
  6474 ;;		wreg, status,2, status,0, cstack
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;Total ram usage:        4 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; Hardware stack levels required when called:    1
  6487 ;; This function calls:
  6488 ;;		___awdiv
  6489 ;; This function is called by:
  6490 ;;		_main
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text33
  6495  002DFC                     __ptext33:
  6496                           	opt stack 0
  6497  002DFC                     _DO_DISPLAY_D2:
  6498                           	opt stack 29
  6499                           
  6500                           ;Lab5p2b3.c: 188: PORTB = (RL >= 70) ? 7 : (RL/10);
  6501                           
  6502                           ;incstack = 0
  6503  002DFC  BE49               	btfsc	DO_DISPLAY_D2@RL+1,7,c
  6504  002DFE  D006               	goto	l2639
  6505  002E00  5049               	movf	DO_DISPLAY_D2@RL+1,w,c
  6506  002E02  E113               	bnz	l2641
  6507  002E04  0E46               	movlw	70
  6508  002E06  5C48               	subwf	DO_DISPLAY_D2@RL,w,c
  6509  002E08  B0D8               	btfsc	status,0,c
  6510  002E0A  D00F               	goto	l2641
  6511  002E0C                     l2639:
  6512  002E0C  C048  F040         	movff	DO_DISPLAY_D2@RL,___awdiv@dividend
  6513  002E10  C049  F041         	movff	DO_DISPLAY_D2@RL+1,___awdiv@dividend+1
  6514  002E14  0E00               	movlw	0
  6515  002E16  6E43               	movwf	___awdiv@divisor+1,c
  6516  002E18  0E0A               	movlw	10
  6517  002E1A  6E42               	movwf	___awdiv@divisor,c
  6518  002E1C  EC40  F014         	call	___awdiv	;wreg free
  6519  002E20  C040  F04A         	movff	?___awdiv,_DO_DISPLAY_D2$549
  6520  002E24  C041  F04B         	movff	?___awdiv+1,_DO_DISPLAY_D2$549+1
  6521  002E28  D005               	goto	l2643
  6522  002E2A                     l2641:
  6523  002E2A  0E00               	movlw	0
  6524  002E2C  6E4B               	movwf	_DO_DISPLAY_D2$549+1,c
  6525  002E2E  0E07               	movlw	7
  6526  002E30  6E4A               	movwf	_DO_DISPLAY_D2$549,c
  6527  002E32  D000               	goto	l2643
  6528  002E34                     l2643:
  6529  002E34  C04A  FF81         	movff	_DO_DISPLAY_D2$549,3969	;volatile
  6530  002E38  0012               	return		;funcret
  6531  002E3A                     __end_of_DO_DISPLAY_D2:
  6532                           	opt stack 0
  6533                           tblptru	equ	0xFF8
  6534                           tblptrh	equ	0xFF7
  6535                           tblptrl	equ	0xFF6
  6536                           tablat	equ	0xFF5
  6537                           prodh	equ	0xFF4
  6538                           prodl	equ	0xFF3
  6539                           postinc0	equ	0xFEE
  6540                           wreg	equ	0xFE8
  6541                           postdec1	equ	0xFE5
  6542                           fsr1l	equ	0xFE1
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function ___awdiv *****************
  6550 ;; Defined at:
  6551 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  dividend        2   63[COMRAM] int 
  6554 ;;  divisor         2   65[COMRAM] int 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  quotient        2   69[COMRAM] int 
  6557 ;;  sign            1   68[COMRAM] unsigned char 
  6558 ;;  counter         1   67[COMRAM] unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  2   63[COMRAM] int 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;Total ram usage:        8 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;;		_DO_DISPLAY_D2
  6579 ;;		_fround
  6580 ;;		_scale
  6581 ;;		_printf
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text34
  6586  002880                     __ptext34:
  6587                           	opt stack 0
  6588  002880                     ___awdiv:
  6589                           	opt stack 28
  6590                           
  6591                           ;incstack = 0
  6592  002880  0E00               	movlw	0
  6593  002882  6E45               	movwf	___awdiv@sign,c
  6594  002884  AE43               	btfss	___awdiv@divisor+1,7,c
  6595  002886  D007               	goto	l2135
  6596  002888  6C42               	negf	___awdiv@divisor,c
  6597  00288A  1E43               	comf	___awdiv@divisor+1,f,c
  6598  00288C  B0D8               	btfsc	status,0,c
  6599  00288E  2A43               	incf	___awdiv@divisor+1,f,c
  6600  002890  0E01               	movlw	1
  6601  002892  6E45               	movwf	___awdiv@sign,c
  6602  002894  D000               	goto	l2135
  6603  002896                     l2135:
  6604  002896  AE41               	btfss	___awdiv@dividend+1,7,c
  6605  002898  D007               	goto	l2141
  6606  00289A  6C40               	negf	___awdiv@dividend,c
  6607  00289C  1E41               	comf	___awdiv@dividend+1,f,c
  6608  00289E  B0D8               	btfsc	status,0,c
  6609  0028A0  2A41               	incf	___awdiv@dividend+1,f,c
  6610  0028A2  0E01               	movlw	1
  6611  0028A4  1A45               	xorwf	___awdiv@sign,f,c
  6612  0028A6  D000               	goto	l2141
  6613  0028A8                     l2141:
  6614  0028A8  0E00               	movlw	0
  6615  0028AA  6E47               	movwf	___awdiv@quotient+1,c
  6616  0028AC  0E00               	movlw	0
  6617  0028AE  6E46               	movwf	___awdiv@quotient,c
  6618  0028B0  5042               	movf	___awdiv@divisor,w,c
  6619  0028B2  1043               	iorwf	___awdiv@divisor+1,w,c
  6620  0028B4  B4D8               	btfsc	status,2,c
  6621  0028B6  D021               	goto	l2163
  6622  0028B8  0E01               	movlw	1
  6623  0028BA  6E44               	movwf	___awdiv@counter,c
  6624  0028BC  D005               	goto	l2149
  6625  0028BE                     l2147:
  6626  0028BE  90D8               	bcf	status,0,c
  6627  0028C0  3642               	rlcf	___awdiv@divisor,f,c
  6628  0028C2  3643               	rlcf	___awdiv@divisor+1,f,c
  6629  0028C4  2A44               	incf	___awdiv@counter,f,c
  6630  0028C6  D000               	goto	l2149
  6631  0028C8                     l2149:
  6632  0028C8  BE43               	btfsc	___awdiv@divisor+1,7,c
  6633  0028CA  D002               	goto	l2151
  6634  0028CC  D7F8               	goto	l2147
  6635  0028CE  D000               	goto	l2151
  6636  0028D0                     l2151:
  6637  0028D0  90D8               	bcf	status,0,c
  6638  0028D2  3646               	rlcf	___awdiv@quotient,f,c
  6639  0028D4  3647               	rlcf	___awdiv@quotient+1,f,c
  6640  0028D6  5042               	movf	___awdiv@divisor,w,c
  6641  0028D8  5C40               	subwf	___awdiv@dividend,w,c
  6642  0028DA  5043               	movf	___awdiv@divisor+1,w,c
  6643  0028DC  5841               	subwfb	___awdiv@dividend+1,w,c
  6644  0028DE  A0D8               	btfss	status,0,c
  6645  0028E0  D006               	goto	l2159
  6646  0028E2  5042               	movf	___awdiv@divisor,w,c
  6647  0028E4  5E40               	subwf	___awdiv@dividend,f,c
  6648  0028E6  5043               	movf	___awdiv@divisor+1,w,c
  6649  0028E8  5A41               	subwfb	___awdiv@dividend+1,f,c
  6650  0028EA  8046               	bsf	___awdiv@quotient,0,c
  6651  0028EC  D000               	goto	l2159
  6652  0028EE                     l2159:
  6653  0028EE  90D8               	bcf	status,0,c
  6654  0028F0  3243               	rrcf	___awdiv@divisor+1,f,c
  6655  0028F2  3242               	rrcf	___awdiv@divisor,f,c
  6656  0028F4  2E44               	decfsz	___awdiv@counter,f,c
  6657  0028F6  D7EC               	goto	l2151
  6658  0028F8  D000               	goto	l2163
  6659  0028FA                     l2163:
  6660  0028FA  5045               	movf	___awdiv@sign,w,c
  6661  0028FC  B4D8               	btfsc	status,2,c
  6662  0028FE  D005               	goto	l2167
  6663  002900  6C46               	negf	___awdiv@quotient,c
  6664  002902  1E47               	comf	___awdiv@quotient+1,f,c
  6665  002904  B0D8               	btfsc	status,0,c
  6666  002906  2A47               	incf	___awdiv@quotient+1,f,c
  6667  002908  D000               	goto	l2167
  6668  00290A                     l2167:
  6669  00290A  C046  F040         	movff	___awdiv@quotient,?___awdiv
  6670  00290E  C047  F041         	movff	___awdiv@quotient+1,?___awdiv+1
  6671  002912  D000               	goto	l463
  6672  002914                     l463:
  6673  002914  0012               	return		;funcret
  6674  002916                     __end_of___awdiv:
  6675                           	opt stack 0
  6676                           tblptru	equ	0xFF8
  6677                           tblptrh	equ	0xFF7
  6678                           tblptrl	equ	0xFF6
  6679                           tablat	equ	0xFF5
  6680                           prodh	equ	0xFF4
  6681                           prodl	equ	0xFF3
  6682                           postinc0	equ	0xFEE
  6683                           wreg	equ	0xFE8
  6684                           postdec1	equ	0xFE5
  6685                           fsr1l	equ	0xFE1
  6686                           postinc2	equ	0xFDE
  6687                           postdec2	equ	0xFDD
  6688                           fsr2h	equ	0xFDA
  6689                           fsr2l	equ	0xFD9
  6690                           status	equ	0xFD8
  6691                           
  6692 ;; *************** function _DISPLAY_UPPER_7SEG *****************
  6693 ;; Defined at:
  6694 ;;		line 163 in file "Lab5p2b3.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  Upper           1    wreg     unsigned char 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  Upper           1    5[COMRAM] unsigned char 
  6699 ;;  LED1            2    6[COMRAM] int 
  6700 ;;  testbit         2    3[COMRAM] int 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;		None               void
  6703 ;; Registers used:
  6704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;Total ram usage:        8 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_main
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text35
  6724  002D6E                     __ptext35:
  6725                           	opt stack 0
  6726  002D6E                     _DISPLAY_UPPER_7SEG:
  6727                           	opt stack 30
  6728                           
  6729                           ;incstack = 0
  6730                           ;DISPLAY_UPPER_7SEG@Upper stored from wreg
  6731  002D6E  6E06               	movwf	DISPLAY_UPPER_7SEG@Upper,c
  6732                           
  6733                           ;Lab5p2b3.c: 166: int LED1 = segDisplay[Upper];
  6734  002D70  5006               	movf	DISPLAY_UPPER_7SEG@Upper,w,c
  6735  002D72  0D02               	mullw	2
  6736  002D74  0E80               	movlw	low _segDisplay
  6737  002D76  24F3               	addwf	prodl,w,c
  6738  002D78  6ED9               	movwf	fsr2l,c
  6739  002D7A  0E00               	movlw	high _segDisplay
  6740  002D7C  20F4               	addwfc	prodh,w,c
  6741  002D7E  6EDA               	movwf	fsr2h,c
  6742  002D80  CFDE F007          	movff	postinc2,DISPLAY_UPPER_7SEG@LED1
  6743  002D84  CFDD F008          	movff	postdec2,DISPLAY_UPPER_7SEG@LED1+1
  6744                           
  6745                           ;Lab5p2b3.c: 167: PORTC = LED1 & 0x3F;
  6746  002D88  5007               	movf	DISPLAY_UPPER_7SEG@LED1,w,c
  6747  002D8A  0B3F               	andlw	63
  6748  002D8C  6E82               	movwf	3970,c	;volatile
  6749                           
  6750                           ;Lab5p2b3.c: 169: int testbit = (LED1 & 0x40) >> 0x06;
  6751  002D8E  C007  F001         	movff	DISPLAY_UPPER_7SEG@LED1,??_DISPLAY_UPPER_7SEG
  6752  002D92  C008  F002         	movff	DISPLAY_UPPER_7SEG@LED1+1,??_DISPLAY_UPPER_7SEG+1
  6753  002D96  0E06               	movlw	6
  6754  002D98  6E03               	movwf	(??_DISPLAY_UPPER_7SEG+2)& (0+255),c
  6755  002D9A                     u2565:
  6756  002D9A  3402               	rlcf	??_DISPLAY_UPPER_7SEG+1,w,c
  6757  002D9C  3202               	rrcf	??_DISPLAY_UPPER_7SEG+1,f,c
  6758  002D9E  3201               	rrcf	??_DISPLAY_UPPER_7SEG,f,c
  6759  002DA0  2E03               	decfsz	(??_DISPLAY_UPPER_7SEG+2)& (0+255),f,c
  6760  002DA2  D7FB               	goto	u2565
  6761  002DA4  0E01               	movlw	1
  6762  002DA6  1401               	andwf	??_DISPLAY_UPPER_7SEG,w,c
  6763  002DA8  6E04               	movwf	DISPLAY_UPPER_7SEG@testbit,c
  6764  002DAA  6A05               	clrf	DISPLAY_UPPER_7SEG@testbit+1,c
  6765                           
  6766                           ;Lab5p2b3.c: 171: PORTEbits.RE1 = testbit;
  6767  002DAC  B004               	btfsc	DISPLAY_UPPER_7SEG@testbit,0,c
  6768  002DAE  D002               	bra	u2575
  6769  002DB0  9284               	bcf	3972,1,c	;volatile
  6770  002DB2  D001               	bra	u2576
  6771  002DB4                     u2575:
  6772  002DB4  8284               	bsf	3972,1,c	;volatile
  6773  002DB6                     u2576:
  6774  002DB6  0012               	return		;funcret
  6775  002DB8                     __end_of_DISPLAY_UPPER_7SEG:
  6776                           	opt stack 0
  6777                           tblptru	equ	0xFF8
  6778                           tblptrh	equ	0xFF7
  6779                           tblptrl	equ	0xFF6
  6780                           tablat	equ	0xFF5
  6781                           prodh	equ	0xFF4
  6782                           prodl	equ	0xFF3
  6783                           postinc0	equ	0xFEE
  6784                           wreg	equ	0xFE8
  6785                           postdec1	equ	0xFE5
  6786                           fsr1l	equ	0xFE1
  6787                           postinc2	equ	0xFDE
  6788                           postdec2	equ	0xFDD
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function _DISPLAY_LOWER_7SEG *****************
  6794 ;; Defined at:
  6795 ;;		line 177 in file "Lab5p2b3.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  Lower           1    wreg     unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  Lower           1    2[COMRAM] unsigned char 
  6800 ;;  LED2            2    0[COMRAM] int 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;		None               void
  6803 ;; Registers used:
  6804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;Total ram usage:        3 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_main
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text36
  6824  002F5C                     __ptext36:
  6825                           	opt stack 0
  6826  002F5C                     _DISPLAY_LOWER_7SEG:
  6827                           	opt stack 30
  6828                           
  6829                           ;incstack = 0
  6830                           ;DISPLAY_LOWER_7SEG@Lower stored from wreg
  6831  002F5C  6E03               	movwf	DISPLAY_LOWER_7SEG@Lower,c
  6832                           
  6833                           ;Lab5p2b3.c: 180: int LED2 = segDisplay[Lower];
  6834  002F5E  5003               	movf	DISPLAY_LOWER_7SEG@Lower,w,c
  6835  002F60  0D02               	mullw	2
  6836  002F62  0E80               	movlw	low _segDisplay
  6837  002F64  24F3               	addwf	prodl,w,c
  6838  002F66  6ED9               	movwf	fsr2l,c
  6839  002F68  0E00               	movlw	high _segDisplay
  6840  002F6A  20F4               	addwfc	prodh,w,c
  6841  002F6C  6EDA               	movwf	fsr2h,c
  6842  002F6E  CFDE F001          	movff	postinc2,DISPLAY_LOWER_7SEG@LED2
  6843  002F72  CFDD F002          	movff	postdec2,DISPLAY_LOWER_7SEG@LED2+1
  6844                           
  6845                           ;Lab5p2b3.c: 182: PORTD = LED2;
  6846  002F76  C001  FF83         	movff	DISPLAY_LOWER_7SEG@LED2,3971	;volatile
  6847  002F7A  0012               	return		;funcret
  6848  002F7C                     __end_of_DISPLAY_LOWER_7SEG:
  6849                           	opt stack 0
  6850                           tblptru	equ	0xFF8
  6851                           tblptrh	equ	0xFF7
  6852                           tblptrl	equ	0xFF6
  6853                           tablat	equ	0xFF5
  6854                           prodh	equ	0xFF4
  6855                           prodl	equ	0xFF3
  6856                           postinc0	equ	0xFEE
  6857                           wreg	equ	0xFE8
  6858                           postdec1	equ	0xFE5
  6859                           fsr1l	equ	0xFE1
  6860                           postinc2	equ	0xFDE
  6861                           postdec2	equ	0xFDD
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function _Activate_Buzzer *****************
  6867 ;; Defined at:
  6868 ;;		line 199 in file "Lab5p2b3.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;		None
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;		None               void
  6875 ;; Registers used:
  6876 ;;		wreg, status,2
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;Total ram usage:        0 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_main
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text37
  6896  002FA4                     __ptext37:
  6897                           	opt stack 0
  6898  002FA4                     _Activate_Buzzer:
  6899                           	opt stack 30
  6900                           
  6901                           ;Lab5p2b3.c: 201: PR2 = 0b11111001;
  6902                           
  6903                           ;incstack = 0
  6904  002FA4  0EF9               	movlw	249
  6905  002FA6  6ECB               	movwf	4043,c	;volatile
  6906                           
  6907                           ;Lab5p2b3.c: 202: T2CON = 0b00000101;
  6908  002FA8  0E05               	movlw	5
  6909  002FAA  6ECA               	movwf	4042,c	;volatile
  6910                           
  6911                           ;Lab5p2b3.c: 203: CCPR2L = 0b01001010;
  6912  002FAC  0E4A               	movlw	74
  6913  002FAE  6EBB               	movwf	4027,c	;volatile
  6914                           
  6915                           ;Lab5p2b3.c: 204: CCP2CON = 0b00111100;
  6916  002FB0  0E3C               	movlw	60
  6917  002FB2  6EBA               	movwf	4026,c	;volatile
  6918  002FB4  0012               	return		;funcret
  6919  002FB6                     __end_of_Activate_Buzzer:
  6920                           	opt stack 0
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           postinc0	equ	0xFEE
  6928                           wreg	equ	0xFE8
  6929                           postdec1	equ	0xFE5
  6930                           fsr1l	equ	0xFE1
  6931                           postinc2	equ	0xFDE
  6932                           postdec2	equ	0xFDD
  6933                           fsr2h	equ	0xFDA
  6934                           fsr2l	equ	0xFD9
  6935                           status	equ	0xFD8
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           prodh	equ	0xFF4
  6941                           prodl	equ	0xFF3
  6942                           postinc0	equ	0xFEE
  6943                           wreg	equ	0xFE8
  6944                           postdec1	equ	0xFE5
  6945                           fsr1l	equ	0xFE1
  6946                           postinc2	equ	0xFDE
  6947                           postdec2	equ	0xFDD
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952                           	psect	rparam
  6953  0000                     tblptru	equ	0xFF8
  6954                           tblptrh	equ	0xFF7
  6955                           tblptrl	equ	0xFF6
  6956                           tablat	equ	0xFF5
  6957                           prodh	equ	0xFF4
  6958                           prodl	equ	0xFF3
  6959                           postinc0	equ	0xFEE
  6960                           wreg	equ	0xFE8
  6961                           postdec1	equ	0xFE5
  6962                           fsr1l	equ	0xFE1
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           fsr2h	equ	0xFDA
  6966                           fsr2l	equ	0xFD9
  6967                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    118
    Data        20
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    121     123
    BANK0           128     18      38
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> trunc@expon(COMRAM[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _round->_trunc
    _trunc->___altoft
    ___altoft->___fttol
    _printf->_fround
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awmod->___fttol
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___lbtoft
    _init_UART->_OpenUSART
    ___lbtoft->___ftpack
    ___ftdiv->_round
    ___awtoft->___ftpack
    _DO_DISPLAY_D2->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   82347
                                              0 BANK0     18    18      0
                    _Activate_Buzzer
                 _DISPLAY_LOWER_7SEG
                 _DISPLAY_UPPER_7SEG
                      _DO_DISPLAY_D2
                  _Deactivate_Buzzer
                 _Select_ADC_Channel
                       _WAIT_ONE_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                       _get_full_ADC
                           _init_ADC
                          _init_UART
                             _printf
                              _round
 ---------------------------------------------------------------------------------
 (1) _round                                                6     3      3    8730
                                             75 COMRAM     6     3      3
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftmul (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                                8     5      3    3972
                                             67 COMRAM     8     5      3
                           ___altoft
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     336
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    2389
                                             57 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   48237
                                             87 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   11411
                                             77 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   11213
                                             77 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2207
                                             71 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    5047
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1832
                                             57 COMRAM     6     2      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2320
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     956
                                             42 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4450
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4153
                                             15 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     429
                                             12 COMRAM     3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     776
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2209
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2825
                                             81 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                              _round (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2342
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2187
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_ONE_SEC                                         2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D2                                        4     2      2    1968
                                             71 COMRAM     4     2      2
                            ___awdiv
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1836
                                             63 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _DISPLAY_UPPER_7SEG                                   8     8      0      90
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _DISPLAY_LOWER_7SEG                                   3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _DISPLAY_LOWER_7SEG
   _DISPLAY_UPPER_7SEG
   _DO_DISPLAY_D2
     ___awdiv
       ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   _Deactivate_Buzzer
   _Select_ADC_Channel
   _WAIT_ONE_SEC
   ___awdiv
     ___awmod (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___awmod
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     _round (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         _frexp (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   _get_full_ADC
   _init_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
   _round
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     _trunc (ARG)
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     12      26       5       29.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     79      7B       1       96.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1      34        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep 30 11:03:05 2021

               ___altoft@exp 0042                ___altoft@sign 0043                           l76 2ED0  
                         l85 2FBA                           l79 2EF0                           l95 1DD8  
               ___awdiv@sign 0045          ___wmul@multiplicand 004A                 ___ftadd@exp1 001B  
               ___ftadd@exp2 001A                 ___ftadd@sign 0019                          l105 2F5A  
                        l223 1504                          l234 16A8                          l171 2084  
                        l262 2CE4                          l270 2ECA                          l263 2CE6  
                        l264 2CF0                          l265 2CF2                          l258 2CCA  
                        l178 1A88                          l267 2D0C                          l606 27C0  
                        l463 2914                          l367 2BB2                          l720 2640  
                        l650 21B6                          l554 2462                          l635 20CA  
                        l563 2452                          l636 2248                          l716 2DFA  
                        l476 2B36                          l709 2F2E                          l670 26EE  
                        l639 20F4                          l488 2E74                          l595 27E8  
                        l667 2722                          l659 21D2                          l675 2358  
                        l756 2F16                          l684 2348                          l693 287E  
                        l677 22C0                          l678 22E8                          l759 2A20  
                        l871 2C2C                          l864 2AB4                          l769 2C8C  
                        l858 29A4                          l699 255A                          l789 2D6C  
     DISPLAY_UPPER_7SEG@LED1 0007                          _PR2 000FCB            _Deactivate_Buzzer 2FDA  
               ___awmod@sign 003F                          prod 000FF3                          wreg 000FE8  
         ?_Deactivate_Buzzer 0001                 __CFG_LVP$OFF 000000               ?_DO_DISPLAY_D2 0048  
               ___ftdiv@cntr 005B                 ___ftdiv@sign 0060                 __CFG_WDT$OFF 000000  
                       l2001 2B5A                         l2003 2B68                         l2023 2102  
                       l2017 20D8                         l2113 2506                         l2105 24DE  
                       l2051 217A                         l2203 2B2C                         l2123 2534  
                       l2115 250C                         l2141 28A8                         l2045 215A  
                       l2029 210E                         l2213 257A                         l2109 24F0  
                       l2151 28D0                         l2135 2896                         l2047 2166  
                       l2039 2136                         l2231 25D4                         l2119 251E  
                       l2065 21F0                         l2057 219E                         l2049 2172  
                       l2241 25FE                         l2147 28BE                         l2163 28FA  
                       l2075 2222                         l2059 21AA                         l2243 260C  
                       l2235 25E4                         l2091 24AA                         l2149 28C8  
                       l2237 25EA                         l2245 2616                         l2085 2482  
                       l2341 2044                         l2333 1F80                         l2167 290A  
                       l2159 28EE                         l2511 281C                         l2503 2DD0  
                       l2431 2320                         l2191 2AFA                         l2183 2ADA  
                       l2087 249C                         l2521 287A                         l2249 262E  
                       l2425 230A                         l2417 22F6                         l2361 187E  
                       l2283 2CC2                         l2275 2CB0                         l2515 284E  
                       l2451 237A                         l2435 2334                         l2195 2B10  
                       l2187 2AE8                         l2179 2ACC                         l2355 17D6  
                       l2259 2BD0                         l2445 236A                         l2437 2342  
                       l2429 231A                         l2189 2AF2                         l2373 19B2  
                       l2365 188E                         l2701 1242                         l2295 2CDC  
                       l2287 2CCE                         l2279 2CBA                         l2535 29C8  
                       l2199 2B1C                         l2703 1252                         l2641 2E2A  
                       l2537 29D6                         l2473 23F0                         l2465 23BE  
                       l2713 12CA                         l2705 1282                         l2643 2E34  
                       l2803 2F52                         l2547 2A10                         l2539 29DE  
                       l2563 2C7C                         l2555 2C40                         l2571 2D22  
                       l2491 242A                         l2395 2286                         l2379 1A64  
                       l2731 13DC                         l2723 133A                         l2707 1292  
                       l2651 109E                         l2813 2660                         l2557 2C4E  
                       l2485 2414                         l2477 2400                         l2389 2268  
                       l2741 141C                         l2733 13E0                         l2725 1368  
                       l2717 12EE                         l2653 10AA                         l2639 2E0C  
                       l2815 267A                         l2559 2C56                         l2495 243E  
                       l2719 12F8                         l2727 1376                         l2647 108E  
                       l1961 2750                         l2569 2D14                         l2497 244C  
                       l2489 2424                         l2761 14E0                         l2745 1420  
                       l2737 13EC                         l2673 1126                         l2657 10B2  
                       l2585 2A5C                         l1971 27B4                         l1963 2770  
                       l1955 2734                         l2819 2688                         l2763 14EE  
                       l2755 14C6                         l2659 10D4                         l2931 1E04  
                       l2861 2E50                         l2773 1524                         l2757 14D2  
                       l2749 143C                         l2589 2A76                         l1983 27DA  
                       l1967 2788                         l1959 2744                         l2839 26C8  
                       l2783 164A                         l2767 150A                         l2791 1670  
                       l2919 1D22                         l1977 27C8                         l1969 27A8  
                       l2849 26FC                         l2785 1656                         l2777 1574  
                       l2697 121C                         l2689 11B8                         l2929 1DFE  
                       l2795 168C                         l2789 1664                         l2799 2F44  
                       l2897 1AEC                         STR_1 1077                         u2060 2BF8  
                       u2251 225A                         u2068 2BFA                         u2271 2278  
                       u1811 2492                         u2540 2A68                         u1581 2096  
                       u2630 115E                         u1591 20AA                         u2635 1154  
               printf@tmpval 0072                         u2565 2D9A                         u2575 2DB4  
                       u1791 2474                         u2576 2DB6                         u1971 256C  
                       u1990 2598                         u2790 14FE                         u2871 2652  
                       u2891 2670                         u1995 2590                         _TRMT 007D61  
        ??_Deactivate_Buzzer 0001                         _main 1A8A                 ___ftpack@arg 0001  
               ___ftpack@exp 0004               ??_get_full_ADC 0003                         fsr2h 000FDA  
                       fsr1l 000FE1                         fsr2l 000FD9      DISPLAY_UPPER_7SEG@Upper 0006  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
               ___ftmul@cntr 0029                 ___param_bank 000010                 ___ftmul@sign 002A  
 __end_of_DISPLAY_LOWER_7SEG 2F7C                 ___fttol@exp1 0039                 ___fttol@lval 0035  
  __end_of_Deactivate_Buzzer 2FE2                        ?_main 0001              __end_of___awdiv 2916  
            __end_of___ftadd 224A              __end_of___awmod 2B38              __end_of___ftdiv 2724  
            __end_of___ftneg 2F3C              __end_of___lldiv 2A32              __end_of___ftmul 255C  
            ___awdiv@divisor 0042              __end_of___llmod 2C9E              __end_of___ftsub 2DFC  
            __end_of___fttol 2642                        _T2CON 000FCA              ___awdiv@counter 0044  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _TXREG 000FAD  
                      _TXSTA 000FAC                 ___lltoft@exp 0011                ___awtoft@sign 000C  
            __end_of_dpowers 1029                        _frexp 2BB4                        _errno 007A  
                      _scale 16AA                ___ftpack@sign 0005                        main@L 009E  
                      main@U 00A2                        _putch 2FB6                        _round 2916  
                      _trunc 2A32               __CFG_BOREN$OFF 000000                        tablat 000FF5  
                      status 000FD8              __initialization 2E76   __end_of_DISPLAY_UPPER_7SEG 2DB8  
               __end_of_main 1E42                       ??_main 007A                ___fttol@sign1 0034  
              __activetblptr 000002         __size_of__tdiv_to_l_ 0110              ??_DO_DISPLAY_D2 004A  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     ?_frexp 0001             __end_of___altoft 2BB4             ___llmod@dividend 0001  
                     ?_scale 004E                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     _CCPR2L 000FBB             ___awdiv@dividend 0040             __end_of___awtoft 2E76  
                     ?_putch 0001             __end_of___ftpack 27EA                       ?_round 004C  
           __end_of___lbtoft 2F18                       ?_trunc 0044             __end_of___lltoft 2D6E  
                     _OSCCON 000FD3                       _SPBRGH 000FB0             __end_of__powers_ 1077  
         __size_of_OpenUSART 0070                       ___ftge 27EA     __size_of_Activate_Buzzer 0012  
                     ___wmul 2EA4                    ??___awdiv 0044                    ??___ftadd 0016  
                  ??___awmod 003E                    ??___ftdiv 0058                    ??___ftneg 0010  
                  ??___lldiv 0009                    ??___ftmul 0022                    ??___llmod 0009  
                  ??___ftsub 0022                    ??___fttol 002F             __end_of_init_ADC 2FDA  
                     _fround 1E42             ___awdiv@quotient 0046              ___awmod@divisor 003C  
 __size_of_Deactivate_Buzzer 0008              ___awmod@counter 003E                       _printf 1084  
                     main@ON 0094                       main@RL 00A3        ___ftmul@f3_as_product 0026  
       __end_of_get_full_ADC 2EF2                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                       putch@c 0001  
                     round@f 004F                       round@x 004C                       trunc@i 0047  
                     trunc@x 0044                   __accesstop 0080      __end_of__initialization 2E9A  
                 ___altoft@c 003A                   ___ftadd@f1 0010                   ___ftadd@f2 0013  
                 ___ftge@ff1 0001                   ___ftge@ff2 0004                ___rparam_used 000001  
                 ___ftdiv@f1 0052                   ___ftdiv@f2 0055                   ___ftdiv@f3 005C  
                 ___ftneg@f1 000D                   ___awtoft@c 0009                   ___lbtoft@c 000C  
                 ___ftmul@f1 001C                   ___ftmul@f2 001F                   ___ftsub@f1 001C  
                 ___ftsub@f2 001F                   ___fttol@f1 002B               __pcstackCOMRAM 0001  
               __pidataBANK0 2F7C                   ___lltoft@c 0009                __end_of_frexp 2C2E  
              __end_of_scale 1A8A                __end_of_putch 2FC4                __end_of_round 29A6  
              __end_of_trunc 2AB6                   __div_to_l_ 235A            __end_of_OpenUSART 2D0E  
            __div_to_l_@exp1 000C              __div_to_l_@cntr 000B                      ??_frexp 0006  
                    ??_scale 0051              __div_to_l_@quot 0007                      ??_putch 0001  
                    ??_round 004F                      ??_trunc 0047           __size_of_init_UART 0014  
 __end_of_Select_ADC_Channel 2FD0                __div_to_l_@f1 0001                __div_to_l_@f2 0004  
         __CFG_CCP2MX$PORTBE 000000                      ?___ftge 0001                      ?___wmul 0048  
                    _CCP2CON 000FBA                    ?___altoft 003A                      ?_fround 004E  
                  ?___awtoft 0009                    ?___ftpack 0001                    ?___lbtoft 0009  
              ?_WAIT_ONE_SEC 0001                      ?_printf 0058    Select_ADC_Channel@channel 0001  
                  ?___lltoft 0009            ??_Activate_Buzzer 0001           _DISPLAY_LOWER_7SEG 2F5C  
        ?_DISPLAY_LOWER_7SEG 0001                    ?_init_ADC 0001            __end_of__npowers_ 1050  
                    __Hparam 0000                   _scale$1504 0051                      __Lparam 0000  
            __size_of___ftge 0096                      ___awdiv 2880                      ___ftadd 2086  
                    ___awmod 2AB6                      ___ftdiv 2642                      ___ftneg 2F18  
                    ___lldiv 29A6              __size_of___wmul 0028                      ___ftmul 2464  
                    ___llmod 2C2E                      ___ftsub 2DB8                      ___fttol 255C  
      __size_of_get_full_ADC 0026                 __psmallconst 1000         ??_DISPLAY_LOWER_7SEG 0001  
                 ??___altoft 003E               ??_WAIT_ONE_SEC 0001                   _segDisplay 0080  
                    __pcinit 2E76                   ??___awtoft 000C                   ??___ftpack 0006  
                 ??___lbtoft 000C              __size_of_fround 0244                      __ramtop 1000  
                 ??___lltoft 000D                      __ptext0 1A8A                      __ptext1 2916  
                    __ptext2 2A32                      __ptext3 2BB4                      __ptext4 2B38  
                    __ptext5 1084                      __ptext6 16AA                      __ptext7 2FB6  
                    __ptext8 1E42                      __ptext9 2EA4              __size_of_printf 0626  
          __end_of_init_UART 2FA4                  ?__div_to_l_ 0001                      _dpowers 1001  
           ___awmod@dividend 003A           _DISPLAY_UPPER_7SEG 2D6E                      main@OFF 0095  
       end_of_initialization 2E9A          ?_DISPLAY_UPPER_7SEG 0001                   ??_init_ADC 0001  
              __Lmediumconst 0000                 _get_full_ADC 2ECC              ___lldiv@divisor 0005  
            ___lldiv@counter 000D                    _RCSTAbits 000FAB                      printf@c 0079  
                    printf@f 0058                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE               __tdiv_to_l_@f1 0001  
             __tdiv_to_l_@f2 0004         ??_DISPLAY_UPPER_7SEG 0001                ??__tdiv_to_l_ 0007  
                  _PORTBbits 000F81                    _PORTDbits 000F83                    _PORTEbits 000F84  
                  _TRISCbits 000F94        __end_of_DO_DISPLAY_D2 2E3A                  ___ftdiv@exp 005F  
                  _TXSTAbits 000FAC           get_full_ADC@result 0005          __size_of__div_to_l_ 010A  
                ___ftmul@exp 0025                WAIT_ONE_SEC@i 0001               __end_of___ftge 2880  
             __end_of___wmul 2ECC               __end_of_fround 2086               __end_of_printf 16AA  
        start_initialization 2E76          __end_of__tdiv_to_l_ 235A         __end_of_WAIT_ONE_SEC 2F5C  
                 frexp@value 0001                    _OpenUSART 2C9E              ___llmod@divisor 0005  
           __CFG_OSC$INTIO67 000000              ___llmod@counter 0009              _Activate_Buzzer 2FA4  
                   ??___ftge 0007                     ??___wmul 004C                  __pdataBANK0 0080  
         _Select_ADC_Channel 2FC4                     ??_fround 0051            _DO_DISPLAY_D2$549 004A  
                   ??_printf 005D            __size_of___altoft 007C                   fround@prec 0057  
          __size_of___awtoft 003C            __size_of___ftpack 00C6            __size_of___lbtoft 0026  
        ?_Select_ADC_Channel 0001            __size_of___lltoft 0060                  __pbssCOMRAM 007A  
              __pcstackBANK0 0094                   ?_OpenUSART 0001            __size_of_init_ADC 000A  
       ??_Select_ADC_Channel 0001                     ?___awdiv 0040                     ?___ftadd 0010  
                   ?___awmod 003A                     ?___ftdiv 0052                     ?___ftneg 000D  
                   ?___lldiv 0001                     ?___ftmul 001C                     ?___llmod 0001  
                   ?___ftsub 001C                    __npowers_ 1029                     ?___fttol 002B  
                __tdiv_to_l_ 224A                 ??__div_to_l_ 0007                  __smallconst 1000  
                  _init_UART 2F90               __size_of_frexp 007A               __size_of_scale 03E0  
             __size_of_putch 000E               __size_of_round 0090               __size_of_trunc 0084  
    __end_of_Activate_Buzzer 2FB6               ___wmul@product 004C                     _PIE1bits 000F9D  
                   _PIR1bits 000F9E           __end_of__div_to_l_ 2464  __size_of_DISPLAY_LOWER_7SEG 0020  
                 _ADCON0bits 000FC2            ___wmul@multiplier 0048                   printf@flag 0068  
                 printf@fval 0076                   printf@prec 006A                   ?_init_UART 0001  
      __size_of_WAIT_ONE_SEC 0020                    copy_data0 2E8E                  ??_OpenUSART 0003  
            OpenUSART@config 0003                    frexp@eptr 0004                     __Hrparam 0000  
                   __Lrparam 0000             __size_of___awdiv 0096             __size_of___ftadd 01C4  
           __size_of___awmod 0082             __size_of___ftdiv 00E2             __size_of___ftneg 0024  
           __size_of___lldiv 008C                     ___altoft 2B38  __size_of_DISPLAY_UPPER_7SEG 004A  
           __size_of___ftmul 00F8             __size_of___llmod 0070             __size_of___ftsub 0044  
           __size_of___fttol 00E6                     ___awtoft 2E3A                     ___ftpack 2724  
                   ___lbtoft 2EF2                  _fround$1502 0054                  _fround$1503 0051  
               _WAIT_ONE_SEC 2F3C                     ___lltoft 2D0E                     __ptext10 2464  
                   __ptext11 2AB6                     __ptext20 2F18                     __ptext12 224A  
                   __ptext21 27EA                     __ptext13 235A                     __ptext30 2F3C  
                   __ptext22 2F90                     __ptext14 2D0E                     __ptext31 2FC4  
                   __ptext23 2C9E                     __ptext15 2C2E                     __ptext32 2FDA  
                   __ptext24 2FD0                     __ptext16 29A6                     __ptext33 2DFC  
                   __ptext25 2ECC                     __ptext17 255C                     __ptext34 2880  
                   __ptext26 2EF2                     __ptext18 2DB8                     __ptext35 2D6E  
                   __ptext27 2642                     __ptext19 2086                     __ptext36 2F5C  
                   __ptext28 2E3A                     __ptext37 2FA4                     __ptext29 2724  
                   __powers_ 1050                     _init_ADC 2FD0                   trunc@expon 004A  
  DISPLAY_UPPER_7SEG@testbit 0004             ?_Activate_Buzzer 0001                __size_of_main 03B8  
    DISPLAY_LOWER_7SEG@Lower 0003                     main@RREF 0096                     main@STEP 009C  
                   main@VREF 0099                     main@VOLT 009F       __size_of_DO_DISPLAY_D2 003E  
                  printf@exp 0070                    printf@val 006C              DO_DISPLAY_D2@RL 0048  
             OpenUSART@spbrg 0001                  ??_init_UART 0004                     scale@scl 0054  
           __tdiv_to_l_@exp1 000F             __tdiv_to_l_@cntr 000E             __tdiv_to_l_@quot 000A  
           ___lldiv@dividend 0001       DISPLAY_LOWER_7SEG@LED2 0001                     printf@ap 0066  
               ?__tdiv_to_l_ 0001                  _printf$1505 0063             ___lldiv@quotient 0009  
              _DO_DISPLAY_D2 2DFC                ?_get_full_ADC 0001  __size_of_Select_ADC_Channel 000C  
