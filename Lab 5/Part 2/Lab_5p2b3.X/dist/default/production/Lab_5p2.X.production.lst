

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep 23 21:15:30 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	idataBANK0
    51  002EFA                     __pidataBANK0:
    52                           	opt stack 0
    53                           
    54                           ;initializer for _segDisplay
    55  002EFA  0001               	dw	1
    56  002EFC  004F               	dw	79
    57  002EFE  0012               	dw	18
    58  002F00  0006               	dw	6
    59  002F02  004C               	dw	76
    60  002F04  0024               	dw	36
    61  002F06  0020               	dw	32
    62  002F08  000F               	dw	15
    63  002F0A  0000               	dw	0
    64  002F0C  0004               	dw	4
    65                           
    66                           	psect	smallconst
    67  001000                     __psmallconst:
    68                           	opt stack 0
    69  001000  00                 	db	0
    70  001001                     _dpowers:
    71                           	opt stack 0
    72  001001  0001               	dw	1
    73  001003  0000               	dw	0
    74  001005  000A               	dw	10
    75  001007  0000               	dw	0
    76  001009  0064               	dw	100
    77  00100B  0000               	dw	0
    78  00100D  03E8               	dw	1000
    79  00100F  0000               	dw	0
    80  001011  2710               	dw	10000
    81  001013  0000               	dw	0
    82  001015  86A0               	dw	34464
    83  001017  0001               	dw	1
    84  001019  4240               	dw	16960
    85  00101B  000F               	dw	15
    86  00101D  9680               	dw	38528
    87  00101F  0098               	dw	152
    88  001021  E100               	dw	57600
    89  001023  05F5               	dw	1525
    90  001025  CA00               	dw	51712
    91  001027  3B9A               	dw	15258
    92  001029                     __end_of_dpowers:
    93                           	opt stack 0
    94  001029                     __npowers_:
    95                           	opt stack 0
    96  001029  00                 	db	0
    97  00102A  80                 	db	128
    98  00102B  3F                 	db	63
    99  00102C  CD                 	db	205
   100  00102D  CC                 	db	204
   101  00102E  3D                 	db	61
   102  00102F  D7                 	db	215
   103  001030  23                 	db	35
   104  001031  3C                 	db	60
   105  001032  12                 	db	18
   106  001033  83                 	db	131
   107  001034  3A                 	db	58
   108  001035  B7                 	db	183
   109  001036  D1                 	db	209
   110  001037  38                 	db	56
   111  001038  C6                 	db	198
   112  001039  27                 	db	39
   113  00103A  37                 	db	55
   114  00103B  38                 	db	56
   115  00103C  86                 	db	134
   116  00103D  35                 	db	53
   117  00103E  C0                 	db	192
   118  00103F  D6                 	db	214
   119  001040  33                 	db	51
   120  001041  CC                 	db	204
   121  001042  2B                 	db	43
   122  001043  32                 	db	50
   123  001044  70                 	db	112
   124  001045  89                 	db	137
   125  001046  30                 	db	48
   126  001047  E7                 	db	231
   127  001048  DB                 	db	219
   128  001049  2E                 	db	46
   129  00104A  E5                 	db	229
   130  00104B  3C                 	db	60
   131  00104C  1E                 	db	30
   132  00104D  42                 	db	66
   133  00104E  A2                 	db	162
   134  00104F  0D                 	db	13
   135  001050                     __end_of__npowers_:
   136                           	opt stack 0
   137  001050                     __powers_:
   138                           	opt stack 0
   139  001050  00                 	db	0
   140  001051  80                 	db	128
   141  001052  3F                 	db	63
   142  001053  00                 	db	0
   143  001054  20                 	db	32
   144  001055  41                 	db	65
   145  001056  00                 	db	0
   146  001057  C8                 	db	200
   147  001058  42                 	db	66
   148  001059  00                 	db	0
   149  00105A  7A                 	db	122
   150  00105B  44                 	db	68
   151  00105C  40                 	db	64
   152  00105D  1C                 	db	28
   153  00105E  46                 	db	70
   154  00105F  50                 	db	80
   155  001060  C3                 	db	195
   156  001061  47                 	db	71
   157  001062  24                 	db	36
   158  001063  74                 	db	116
   159  001064  49                 	db	73
   160  001065  97                 	db	151
   161  001066  18                 	db	24
   162  001067  4B                 	db	75
   163  001068  BC                 	db	188
   164  001069  BE                 	db	190
   165  00106A  4C                 	db	76
   166  00106B  6B                 	db	107
   167  00106C  6E                 	db	110
   168  00106D  4E                 	db	78
   169  00106E  03                 	db	3
   170  00106F  15                 	db	21
   171  001070  50                 	db	80
   172  001071  79                 	db	121
   173  001072  AD                 	db	173
   174  001073  60                 	db	96
   175  001074  F3                 	db	243
   176  001075  49                 	db	73
   177  001076  71                 	db	113
   178  001077                     __end_of__powers_:
   179                           	opt stack 0
   180  0000                     _ADCON0	set	4034
   181  0000                     _ADCON0bits	set	4034
   182  0000                     _ADCON1	set	4033
   183  0000                     _ADCON2	set	4032
   184  0000                     _ADRESH	set	4036
   185  0000                     _ADRESL	set	4035
   186  0000                     _CCP2CON	set	4026
   187  0000                     _CCPR2L	set	4027
   188  0000                     _OSCCON	set	4051
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PORTB	set	3969
   192  0000                     _PORTBbits	set	3969
   193  0000                     _PORTC	set	3970
   194  0000                     _PORTD	set	3971
   195  0000                     _PORTDbits	set	3971
   196  0000                     _PORTE	set	3972
   197  0000                     _PORTEbits	set	3972
   198  0000                     _PR2	set	4043
   199  0000                     _RCSTA	set	4011
   200  0000                     _RCSTAbits	set	4011
   201  0000                     _SPBRG	set	4015
   202  0000                     _SPBRGH	set	4016
   203  0000                     _T2CON	set	4042
   204  0000                     _TRISA	set	3986
   205  0000                     _TRISB	set	3987
   206  0000                     _TRISC	set	3988
   207  0000                     _TRISCbits	set	3988
   208  0000                     _TRISD	set	3989
   209  0000                     _TRISE	set	3990
   210  0000                     _TXREG	set	4013
   211  0000                     _TXSTA	set	4012
   212  0000                     _TXSTAbits	set	4012
   213  0000                     _TRMT	set	32097
   214  001077                     STR_1:
   215  001077  52                 	db	82	;'R'
   216  001078  4C                 	db	76	;'L'
   217  001079  20                 	db	32
   218  00107A  3D                 	db	61	;'='
   219  00107B  20                 	db	32
   220  00107C  25                 	db	37
   221  00107D  66                 	db	102	;'f'
   222  00107E  0D                 	db	13
   223  00107F  0A                 	db	10
   224  001080  0A                 	db	10
   225  001081  0A                 	db	10
   226  001082  00                 	db	0
   227                           
   228                           ; #config settings
   229  001083  00                 	db	0	; dummy byte at the end
   230  0000                     
   231                           	psect	cinit
   232  002DF4                     __pcinit:
   233                           	opt stack 0
   234  002DF4                     start_initialization:
   235                           	opt stack 0
   236  002DF4                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Clear objects allocated to COMRAM (2 bytes)
   240  002DF4  6A7B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   241  002DF6  6A7A               	clrf	__pbssCOMRAM& (0+255),c
   242                           
   243                           ; Initialize objects allocated to BANK0 (20 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  002DF8  0EFA               	movlw	low __pidataBANK0
   246  002DFA  6EF6               	movwf	tblptrl,c
   247  002DFC  0E2E               	movlw	high __pidataBANK0
   248  002DFE  6EF7               	movwf	tblptrh,c
   249  002E00  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  002E02  6EF8               	movwf	tblptru,c
   251  002E04  EE00  F080         	lfsr	0,__pdataBANK0
   252  002E08  EE10 F014          	lfsr	1,20
   253  002E0C                     copy_data0:
   254  002E0C  0009               	tblrd		*+
   255  002E0E  CFF5 FFEE          	movff	tablat,postinc0
   256  002E12  50E5               	movf	postdec1,w,c
   257  002E14  50E1               	movf	fsr1l,w,c
   258  002E16  E1FA               	bnz	copy_data0
   259  002E18                     end_of_initialization:
   260                           	opt stack 0
   261  002E18                     __end_of__initialization:
   262                           	opt stack 0
   263  002E18  0E00               	movlw	low (__Lmediumconst shr (0+16))
   264  002E1A  6EF8               	movwf	tblptru,c
   265  002E1C  0100               	movlb	0
   266  002E1E  EF45  F00D         	goto	_main	;jump to C main() function
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275                           	psect	bssCOMRAM
   276  00007A                     __pbssCOMRAM:
   277                           	opt stack 0
   278  00007A                     _errno:
   279                           	opt stack 0
   280  00007A                     	ds	2
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	dataBANK0
   290  000080                     __pdataBANK0:
   291                           	opt stack 0
   292  000080                     _segDisplay:
   293                           	opt stack 0
   294  000080                     	ds	20
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	cstackBANK0
   304  000094                     __pcstackBANK0:
   305                           	opt stack 0
   306  000094                     main@ON:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x0
   310  000094                     	ds	1
   311  000095                     main@OFF:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x1
   315  000095                     	ds	1
   316  000096                     main@RREF:
   317                           	opt stack 0
   318                           
   319                           ; 3 bytes @ 0x2
   320  000096                     	ds	3
   321  000099                     main@VREF:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x5
   325  000099                     	ds	3
   326  00009C                     main@STEP:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x8
   330  00009C                     	ds	2
   331  00009E                     main@L:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0xA
   335  00009E                     	ds	1
   336  00009F                     main@VOLT:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0xB
   340  00009F                     	ds	3
   341  0000A2                     main@U:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xE
   345  0000A2                     	ds	1
   346  0000A3                     main@RL:
   347                           	opt stack 0
   348                           
   349                           ; 3 bytes @ 0xF
   350  0000A3                     	ds	3
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           postdec1	equ	0xFE5
   357                           fsr1l	equ	0xFE1
   358                           
   359                           	psect	cstackCOMRAM
   360  000001                     __pcstackCOMRAM:
   361                           	opt stack 0
   362  000001                     ??_DISPLAY_UPPER_7SEG:
   363  000001                     ?_get_full_ADC:
   364                           	opt stack 0
   365  000001                     ?___ftpack:
   366                           	opt stack 0
   367  000001                     ?__tdiv_to_l_:
   368                           	opt stack 0
   369  000001                     ?__div_to_l_:
   370                           	opt stack 0
   371  000001                     ?___lldiv:
   372                           	opt stack 0
   373  000001                     ?___llmod:
   374                           	opt stack 0
   375  000001                     putch@c:
   376                           	opt stack 0
   377  000001                     Select_ADC_Channel@channel:
   378                           	opt stack 0
   379  000001                     WAIT_ONE_SEC@i:
   380                           	opt stack 0
   381  000001                     DISPLAY_LOWER_7SEG@LED2:
   382                           	opt stack 0
   383  000001                     OpenUSART@spbrg:
   384                           	opt stack 0
   385  000001                     __div_to_l_@f1:
   386                           	opt stack 0
   387  000001                     ___ftpack@arg:
   388                           	opt stack 0
   389  000001                     __tdiv_to_l_@f1:
   390                           	opt stack 0
   391  000001                     ___ftge@ff1:
   392                           	opt stack 0
   393  000001                     frexp@value:
   394                           	opt stack 0
   395  000001                     ___lldiv@dividend:
   396                           	opt stack 0
   397  000001                     ___llmod@dividend:
   398                           	opt stack 0
   399                           
   400                           ; 4 bytes @ 0x0
   401  000001                     	ds	2
   402  000003                     ??_get_full_ADC:
   403  000003                     DISPLAY_LOWER_7SEG@Lower:
   404                           	opt stack 0
   405  000003                     OpenUSART@config:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x2
   409  000003                     	ds	1
   410  000004                     ___ftpack@exp:
   411                           	opt stack 0
   412  000004                     DISPLAY_UPPER_7SEG@testbit:
   413                           	opt stack 0
   414  000004                     frexp@eptr:
   415                           	opt stack 0
   416  000004                     __div_to_l_@f2:
   417                           	opt stack 0
   418  000004                     __tdiv_to_l_@f2:
   419                           	opt stack 0
   420  000004                     ___ftge@ff2:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x3
   424  000004                     	ds	1
   425  000005                     ___ftpack@sign:
   426                           	opt stack 0
   427  000005                     get_full_ADC@result:
   428                           	opt stack 0
   429  000005                     ___lldiv@divisor:
   430                           	opt stack 0
   431  000005                     ___llmod@divisor:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x4
   435  000005                     	ds	1
   436  000006                     ??___ftpack:
   437  000006                     ??_frexp:
   438  000006                     DISPLAY_UPPER_7SEG@Upper:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x5
   442  000006                     	ds	1
   443  000007                     ??__tdiv_to_l_:
   444  000007                     ??___ftge:
   445  000007                     DISPLAY_UPPER_7SEG@LED1:
   446                           	opt stack 0
   447  000007                     __div_to_l_@quot:
   448                           	opt stack 0
   449                           
   450                           ; 4 bytes @ 0x6
   451  000007                     	ds	2
   452  000009                     ?___awtoft:
   453                           	opt stack 0
   454  000009                     ?___lbtoft:
   455                           	opt stack 0
   456  000009                     ?___lltoft:
   457                           	opt stack 0
   458  000009                     ___llmod@counter:
   459                           	opt stack 0
   460  000009                     ___awtoft@c:
   461                           	opt stack 0
   462  000009                     ___lldiv@quotient:
   463                           	opt stack 0
   464  000009                     ___lltoft@c:
   465                           	opt stack 0
   466                           
   467                           ; 4 bytes @ 0x8
   468  000009                     	ds	1
   469  00000A                     __tdiv_to_l_@quot:
   470                           	opt stack 0
   471                           
   472                           ; 4 bytes @ 0x9
   473  00000A                     	ds	1
   474  00000B                     __div_to_l_@cntr:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xA
   478  00000B                     	ds	1
   479  00000C                     ___awtoft@sign:
   480                           	opt stack 0
   481  00000C                     __div_to_l_@exp1:
   482                           	opt stack 0
   483  00000C                     ___lbtoft@c:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0xB
   487  00000C                     	ds	1
   488  00000D                     ??___lltoft:
   489  00000D                     ?___ftneg:
   490                           	opt stack 0
   491  00000D                     ___lldiv@counter:
   492                           	opt stack 0
   493  00000D                     ___ftneg@f1:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0xC
   497  00000D                     	ds	1
   498  00000E                     __tdiv_to_l_@cntr:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0xD
   502  00000E                     	ds	1
   503  00000F                     __tdiv_to_l_@exp1:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0xE
   507  00000F                     	ds	1
   508  000010                     ?___ftadd:
   509                           	opt stack 0
   510  000010                     ___ftadd@f1:
   511                           	opt stack 0
   512                           
   513                           ; 3 bytes @ 0xF
   514  000010                     	ds	1
   515  000011                     ___lltoft@exp:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x10
   519  000011                     	ds	2
   520  000013                     ___ftadd@f2:
   521                           	opt stack 0
   522                           
   523                           ; 3 bytes @ 0x12
   524  000013                     	ds	3
   525  000016                     ??___ftadd:
   526                           
   527                           ; 0 bytes @ 0x15
   528  000016                     	ds	3
   529  000019                     ___ftadd@sign:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x18
   533  000019                     	ds	1
   534  00001A                     ___ftadd@exp2:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x19
   538  00001A                     	ds	1
   539  00001B                     ___ftadd@exp1:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x1A
   543  00001B                     	ds	1
   544  00001C                     ?___ftmul:
   545                           	opt stack 0
   546  00001C                     ?___ftsub:
   547                           	opt stack 0
   548  00001C                     ___ftmul@f1:
   549                           	opt stack 0
   550  00001C                     ___ftsub@f1:
   551                           	opt stack 0
   552                           
   553                           ; 3 bytes @ 0x1B
   554  00001C                     	ds	3
   555  00001F                     ___ftmul@f2:
   556                           	opt stack 0
   557  00001F                     ___ftsub@f2:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0x1E
   561  00001F                     	ds	3
   562  000022                     ??___ftmul:
   563  000022                     
   564                           ; 0 bytes @ 0x21
   565  000022                     	ds	3
   566  000025                     ___ftmul@exp:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x24
   570  000025                     	ds	1
   571  000026                     ___ftmul@f3_as_product:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x25
   575  000026                     	ds	3
   576  000029                     ___ftmul@cntr:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x28
   580  000029                     	ds	1
   581  00002A                     ___ftmul@sign:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x29
   585  00002A                     	ds	1
   586  00002B                     ?___fttol:
   587                           	opt stack 0
   588  00002B                     ___fttol@f1:
   589                           	opt stack 0
   590                           
   591                           ; 3 bytes @ 0x2A
   592  00002B                     	ds	4
   593  00002F                     ??___fttol:
   594                           
   595                           ; 0 bytes @ 0x2E
   596  00002F                     	ds	5
   597  000034                     ___fttol@sign1:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x33
   601  000034                     	ds	1
   602  000035                     ___fttol@lval:
   603                           	opt stack 0
   604                           
   605                           ; 4 bytes @ 0x34
   606  000035                     	ds	4
   607  000039                     ___fttol@exp1:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x38
   611  000039                     	ds	1
   612  00003A                     ?___awmod:
   613                           	opt stack 0
   614  00003A                     ?___altoft:
   615                           	opt stack 0
   616  00003A                     ___awmod@dividend:
   617                           	opt stack 0
   618  00003A                     ___altoft@c:
   619                           	opt stack 0
   620                           
   621                           ; 4 bytes @ 0x39
   622  00003A                     	ds	2
   623  00003C                     ___awmod@divisor:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x3B
   627  00003C                     	ds	2
   628  00003E                     ??___altoft:
   629  00003E                     ___awmod@counter:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x3D
   633  00003E                     	ds	1
   634  00003F                     ___awmod@sign:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x3E
   638  00003F                     	ds	1
   639  000040                     ?___awdiv:
   640                           	opt stack 0
   641  000040                     ___awdiv@dividend:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x3F
   645  000040                     	ds	2
   646  000042                     ___altoft@exp:
   647                           	opt stack 0
   648  000042                     ___awdiv@divisor:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x41
   652  000042                     	ds	1
   653  000043                     ___altoft@sign:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x42
   657  000043                     	ds	1
   658  000044                     ?_trunc:
   659                           	opt stack 0
   660  000044                     ___awdiv@counter:
   661                           	opt stack 0
   662  000044                     trunc@x:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x43
   666  000044                     	ds	1
   667  000045                     ___awdiv@sign:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x44
   671  000045                     	ds	1
   672  000046                     ___awdiv@quotient:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x45
   676  000046                     	ds	1
   677  000047                     trunc@i:
   678                           	opt stack 0
   679                           
   680                           ; 3 bytes @ 0x46
   681  000047                     	ds	1
   682  000048                     ?___wmul:
   683                           	opt stack 0
   684  000048                     ___wmul@multiplier:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x47
   688  000048                     	ds	2
   689  00004A                     ___wmul@multiplicand:
   690                           	opt stack 0
   691  00004A                     trunc@expon:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x49
   695  00004A                     	ds	2
   696  00004C                     ?_round:
   697                           	opt stack 0
   698  00004C                     ___wmul@product:
   699                           	opt stack 0
   700  00004C                     round@x:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x4B
   704  00004C                     	ds	2
   705  00004E                     ?_fround:
   706                           	opt stack 0
   707  00004E                     ?_scale:
   708                           	opt stack 0
   709                           
   710                           ; 3 bytes @ 0x4D
   711  00004E                     	ds	1
   712  00004F                     round@f:
   713                           	opt stack 0
   714                           
   715                           ; 3 bytes @ 0x4E
   716  00004F                     	ds	2
   717  000051                     _fround$1499:
   718                           	opt stack 0
   719  000051                     _scale$1500:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x50
   723  000051                     	ds	1
   724  000052                     ?___ftdiv:
   725                           	opt stack 0
   726  000052                     ___ftdiv@f1:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x51
   730  000052                     	ds	2
   731  000054                     scale@scl:
   732                           	opt stack 0
   733  000054                     _fround$1498:
   734                           	opt stack 0
   735                           
   736                           ; 3 bytes @ 0x53
   737  000054                     	ds	1
   738  000055                     ___ftdiv@f2:
   739                           	opt stack 0
   740                           
   741                           ; 3 bytes @ 0x54
   742  000055                     	ds	2
   743  000057                     fround@prec:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x56
   747  000057                     	ds	1
   748  000058                     ??___ftdiv:
   749  000058                     ?_printf:
   750                           	opt stack 0
   751  000058                     printf@f:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x57
   755  000058                     	ds	3
   756  00005B                     ___ftdiv@cntr:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x5A
   760  00005B                     	ds	1
   761  00005C                     ___ftdiv@f3:
   762                           	opt stack 0
   763                           
   764                           ; 3 bytes @ 0x5B
   765  00005C                     	ds	1
   766  00005D                     ??_printf:
   767                           
   768                           ; 0 bytes @ 0x5C
   769  00005D                     	ds	2
   770  00005F                     ___ftdiv@exp:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x5E
   774  00005F                     	ds	1
   775  000060                     ___ftdiv@sign:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x5F
   779  000060                     	ds	3
   780  000063                     _printf$1501:
   781                           	opt stack 0
   782                           
   783                           ; 3 bytes @ 0x62
   784  000063                     	ds	3
   785  000066                     printf@ap:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x65
   789  000066                     	ds	2
   790  000068                     printf@flag:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x67
   794  000068                     	ds	2
   795  00006A                     printf@prec:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x69
   799  00006A                     	ds	2
   800  00006C                     printf@val:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x6B
   804  00006C                     	ds	4
   805  000070                     printf@exp:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x6F
   809  000070                     	ds	2
   810  000072                     printf@tmpval:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x71
   814  000072                     	ds	4
   815  000076                     printf@fval:
   816                           	opt stack 0
   817                           
   818                           ; 3 bytes @ 0x75
   819  000076                     	ds	3
   820  000079                     printf@c:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x78
   824  000079                     	ds	1
   825  00007A                     tblptru	equ	0xFF8
   826                           tblptrh	equ	0xFF7
   827                           tblptrl	equ	0xFF6
   828                           tablat	equ	0xFF5
   829                           postinc0	equ	0xFEE
   830                           postdec1	equ	0xFE5
   831                           fsr1l	equ	0xFE1
   832                           
   833                           ; 0 bytes @ 0x79
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 78 in file "Lab5p2.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  RL              3   15[BANK0 ] float 
   844 ;;  VOLT            3   11[BANK0 ] float 
   845 ;;  STEP            2    8[BANK0 ] int 
   846 ;;  VREF            3    5[BANK0 ] float 
   847 ;;  RREF            3    2[BANK0 ] float 
   848 ;;  U               1   14[BANK0 ] unsigned char 
   849 ;;  L               1   10[BANK0 ] unsigned char 
   850 ;;  OFF             1    1[BANK0 ] unsigned char 
   851 ;;  ON              1    0[BANK0 ] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;		None               void
   854 ;; Registers used:
   855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;Total ram usage:       18 bytes
   866 ;; Hardware stack levels required when called:    4
   867 ;; This function calls:
   868 ;;		_DISPLAY_LOWER_7SEG
   869 ;;		_DISPLAY_UPPER_7SEG
   870 ;;		_Select_ADC_Channel
   871 ;;		_WAIT_ONE_SEC
   872 ;;		___awdiv
   873 ;;		___awmod
   874 ;;		___awtoft
   875 ;;		___ftadd
   876 ;;		___ftdiv
   877 ;;		___ftge
   878 ;;		___ftmul
   879 ;;		___ftneg
   880 ;;		___fttol
   881 ;;		___lbtoft
   882 ;;		_get_full_ADC
   883 ;;		_init_ADC
   884 ;;		_init_UART
   885 ;;		_printf
   886 ;;		_round
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  001A8A                     __ptext0:
   894                           	opt stack 0
   895  001A8A                     _main:
   896                           	opt stack 27
   897                           
   898                           ;Lab5p2.c: 80: init_ADC();
   899                           
   900                           ;incstack = 0
   901  001A8A  EC9E  F017         	call	_init_ADC	;wreg free
   902                           
   903                           ;Lab5p2.c: 81: init_UART();
   904  001A8E  EC87  F017         	call	_init_UART	;wreg free
   905                           
   906                           ;Lab5p2.c: 83: TRISA = 0x0F;
   907  001A92  0E0F               	movlw	15
   908  001A94  6E92               	movwf	3986,c	;volatile
   909                           
   910                           ;Lab5p2.c: 84: TRISB = 0x00;
   911  001A96  0E00               	movlw	0
   912  001A98  6E93               	movwf	3987,c	;volatile
   913                           
   914                           ;Lab5p2.c: 85: TRISC = 0x00;
   915  001A9A  0E00               	movlw	0
   916  001A9C  6E94               	movwf	3988,c	;volatile
   917                           
   918                           ;Lab5p2.c: 86: TRISD = 0x00;
   919  001A9E  0E00               	movlw	0
   920  001AA0  6E95               	movwf	3989,c	;volatile
   921                           
   922                           ;Lab5p2.c: 87: TRISE = 0x00;
   923  001AA2  0E00               	movlw	0
   924  001AA4  6E96               	movwf	3990,c	;volatile
   925                           
   926                           ;Lab5p2.c: 89: PORTB = 0x00;
   927  001AA6  0E00               	movlw	0
   928  001AA8  6E81               	movwf	3969,c	;volatile
   929                           
   930                           ;Lab5p2.c: 91: PORTC = 0xFF;
   931  001AAA  6882               	setf	3970,c	;volatile
   932                           
   933                           ;Lab5p2.c: 92: PORTD = 0xFF;
   934  001AAC  6883               	setf	3971,c	;volatile
   935                           
   936                           ;Lab5p2.c: 93: PORTE = 0xFF;
   937  001AAE  6884               	setf	3972,c	;volatile
   938                           
   939                           ;Lab5p2.c: 96: char U;
   940                           ;Lab5p2.c: 98: char L;
   941                           ;Lab5p2.c: 99: char ON = PORTDbits.RD7= 0;
   942  001AB0  9E83               	bcf	3971,7,c	;volatile
   943  001AB2  0E00               	movlw	0
   944  001AB4  BE83               	btfsc	3971,7,c	;volatile
   945  001AB6  0E01               	movlw	1
   946  001AB8  0100               	movlb	0	; () banked
   947  001ABA  6F94               	movwf	main@ON& (0+255),b
   948                           
   949                           ; BSR set to: 0
   950                           ;Lab5p2.c: 100: char OFF = PORTDbits.RD7 = 1;
   951  001ABC  8E83               	bsf	3971,7,c	;volatile
   952  001ABE  0E00               	movlw	0
   953  001AC0  BE83               	btfsc	3971,7,c	;volatile
   954  001AC2  0E01               	movlw	1
   955  001AC4  0100               	movlb	0	; () banked
   956  001AC6  6F95               	movwf	main@OFF& (0+255),b
   957                           
   958                           ; BSR set to: 0
   959                           ;Lab5p2.c: 101: float RREF = 0.1;
   960  001AC8  0ECD               	movlw	205
   961  001ACA  0100               	movlb	0	; () banked
   962  001ACC  6F96               	movwf	main@RREF& (0+255),b
   963  001ACE  0ECC               	movlw	204
   964  001AD0  0100               	movlb	0	; () banked
   965  001AD2  6F97               	movwf	(main@RREF+1)& (0+255),b
   966  001AD4  0E3D               	movlw	61
   967  001AD6  0100               	movlb	0	; () banked
   968  001AD8  6F98               	movwf	(main@RREF+2)& (0+255),b
   969                           
   970                           ; BSR set to: 0
   971                           ;Lab5p2.c: 102: float VREF = 4.096;
   972  001ADA  0E12               	movlw	18
   973  001ADC  0100               	movlb	0	; () banked
   974  001ADE  6F99               	movwf	main@VREF& (0+255),b
   975  001AE0  0E83               	movlw	131
   976  001AE2  0100               	movlb	0	; () banked
   977  001AE4  6F9A               	movwf	(main@VREF+1)& (0+255),b
   978  001AE6  0E40               	movlw	64
   979  001AE8  0100               	movlb	0	; () banked
   980  001AEA  6F9B               	movwf	(main@VREF+2)& (0+255),b
   981  001AEC  D000               	goto	l2865
   982  001AEE                     l2865:
   983                           
   984                           ;Lab5p2.c: 105: {
   985                           ;Lab5p2.c: 106: Select_ADC_Channel(1);
   986  001AEE  0E01               	movlw	1
   987  001AF0  EC98  F017         	call	_Select_ADC_Channel
   988                           
   989                           ;Lab5p2.c: 107: int STEP = get_full_ADC();
   990  001AF4  EC25  F017         	call	_get_full_ADC	;wreg free
   991  001AF8  C001  F09C         	movff	?_get_full_ADC,main@STEP
   992  001AFC  C002  F09D         	movff	?_get_full_ADC+1,main@STEP+1
   993                           
   994                           ;Lab5p2.c: 108: float VOLT = (round((STEP * 4.0)))/1000;
   995  001B00  0E00               	movlw	0
   996  001B02  6E1F               	movwf	___ftmul@f2,c
   997  001B04  0E80               	movlw	128
   998  001B06  6E20               	movwf	___ftmul@f2+1,c
   999  001B08  0E40               	movlw	64
  1000  001B0A  6E21               	movwf	___ftmul@f2+2,c
  1001  001B0C  C09C  F009         	movff	main@STEP,___awtoft@c
  1002  001B10  C09D  F00A         	movff	main@STEP+1,___awtoft@c+1
  1003  001B14  ECDC  F016         	call	___awtoft	;wreg free
  1004  001B18  C009  F01C         	movff	?___awtoft,___ftmul@f1
  1005  001B1C  C00A  F01D         	movff	?___awtoft+1,___ftmul@f1+1
  1006  001B20  C00B  F01E         	movff	?___awtoft+2,___ftmul@f1+2
  1007  001B24  EC10  F012         	call	___ftmul	;wreg free
  1008  001B28  C01C  F04C         	movff	?___ftmul,round@x
  1009  001B2C  C01D  F04D         	movff	?___ftmul+1,round@x+1
  1010  001B30  C01E  F04E         	movff	?___ftmul+2,round@x+2
  1011  001B34  EC69  F014         	call	_round	;wreg free
  1012  001B38  C04C  F052         	movff	?_round,___ftdiv@f1
  1013  001B3C  C04D  F053         	movff	?_round+1,___ftdiv@f1+1
  1014  001B40  C04E  F054         	movff	?_round+2,___ftdiv@f1+2
  1015  001B44  0E00               	movlw	0
  1016  001B46  6E55               	movwf	___ftdiv@f2,c
  1017  001B48  0E7A               	movlw	122
  1018  001B4A  6E56               	movwf	___ftdiv@f2+1,c
  1019  001B4C  0E44               	movlw	68
  1020  001B4E  6E57               	movwf	___ftdiv@f2+2,c
  1021  001B50  ECFF  F012         	call	___ftdiv	;wreg free
  1022  001B54  C052  F09F         	movff	?___ftdiv,main@VOLT
  1023  001B58  C053  F0A0         	movff	?___ftdiv+1,main@VOLT+1
  1024  001B5C  C054  F0A1         	movff	?___ftdiv+2,main@VOLT+2
  1025                           
  1026                           ;Lab5p2.c: 109: float RL = (RREF * VOLT) / (VREF - VOLT);
  1027  001B60  C09F  F01F         	movff	main@VOLT,___ftmul@f2
  1028  001B64  C0A0  F020         	movff	main@VOLT+1,___ftmul@f2+1
  1029  001B68  C0A1  F021         	movff	main@VOLT+2,___ftmul@f2+2
  1030  001B6C  C096  F01C         	movff	main@RREF,___ftmul@f1
  1031  001B70  C097  F01D         	movff	main@RREF+1,___ftmul@f1+1
  1032  001B74  C098  F01E         	movff	main@RREF+2,___ftmul@f1+2
  1033  001B78  EC10  F012         	call	___ftmul	;wreg free
  1034  001B7C  C01C  F052         	movff	?___ftmul,___ftdiv@f1
  1035  001B80  C01D  F053         	movff	?___ftmul+1,___ftdiv@f1+1
  1036  001B84  C01E  F054         	movff	?___ftmul+2,___ftdiv@f1+2
  1037  001B88  C099  F013         	movff	main@VREF,___ftadd@f2
  1038  001B8C  C09A  F014         	movff	main@VREF+1,___ftadd@f2+1
  1039  001B90  C09B  F015         	movff	main@VREF+2,___ftadd@f2+2
  1040  001B94  C09F  F00D         	movff	main@VOLT,___ftneg@f1
  1041  001B98  C0A0  F00E         	movff	main@VOLT+1,___ftneg@f1+1
  1042  001B9C  C0A1  F00F         	movff	main@VOLT+2,___ftneg@f1+2
  1043  001BA0  EC4B  F017         	call	___ftneg	;wreg free
  1044  001BA4  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1045  001BA8  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1046  001BAC  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1047  001BB0  EC21  F010         	call	___ftadd	;wreg free
  1048  001BB4  C010  F055         	movff	?___ftadd,___ftdiv@f2
  1049  001BB8  C011  F056         	movff	?___ftadd+1,___ftdiv@f2+1
  1050  001BBC  C012  F057         	movff	?___ftadd+2,___ftdiv@f2+2
  1051  001BC0  ECFF  F012         	call	___ftdiv	;wreg free
  1052  001BC4  C052  F0A3         	movff	?___ftdiv,main@RL
  1053  001BC8  C053  F0A4         	movff	?___ftdiv+1,main@RL+1
  1054  001BCC  C054  F0A5         	movff	?___ftdiv+2,main@RL+2
  1055                           
  1056                           ;Lab5p2.c: 110: U = (int) VOLT;
  1057  001BD0  C09F  F02B         	movff	main@VOLT,___fttol@f1
  1058  001BD4  C0A0  F02C         	movff	main@VOLT+1,___fttol@f1+1
  1059  001BD8  C0A1  F02D         	movff	main@VOLT+2,___fttol@f1+2
  1060  001BDC  EC8C  F012         	call	___fttol	;wreg free
  1061  001BE0  502B               	movf	?___fttol,w,c
  1062  001BE2  0100               	movlb	0	; () banked
  1063  001BE4  6FA2               	movwf	main@U& (0+255),b
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;Lab5p2.c: 111: L = ((int)((VOLT - U) * 10) % 10);
  1067  001BE6  0E00               	movlw	0
  1068  001BE8  6E1F               	movwf	___ftmul@f2,c
  1069  001BEA  0E20               	movlw	32
  1070  001BEC  6E20               	movwf	___ftmul@f2+1,c
  1071  001BEE  0E41               	movlw	65
  1072  001BF0  6E21               	movwf	___ftmul@f2+2,c
  1073  001BF2  C09F  F013         	movff	main@VOLT,___ftadd@f2
  1074  001BF6  C0A0  F014         	movff	main@VOLT+1,___ftadd@f2+1
  1075  001BFA  C0A1  F015         	movff	main@VOLT+2,___ftadd@f2+2
  1076  001BFE  0100               	movlb	0	; () banked
  1077  001C00  51A2               	movf	main@U& (0+255),w,b
  1078  001C02  EC38  F017         	call	___lbtoft
  1079  001C06  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1080  001C0A  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1081  001C0E  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1082  001C12  EC4B  F017         	call	___ftneg	;wreg free
  1083  001C16  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1084  001C1A  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1085  001C1E  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1086  001C22  EC21  F010         	call	___ftadd	;wreg free
  1087  001C26  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1088  001C2A  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1089  001C2E  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1090  001C32  EC10  F012         	call	___ftmul	;wreg free
  1091  001C36  C01C  F02B         	movff	?___ftmul,___fttol@f1
  1092  001C3A  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1093  001C3E  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1094  001C42  EC8C  F012         	call	___fttol	;wreg free
  1095  001C46  C02B  F03A         	movff	?___fttol,___awmod@dividend
  1096  001C4A  C02C  F03B         	movff	?___fttol+1,___awmod@dividend+1
  1097  001C4E  0E00               	movlw	0
  1098  001C50  6E3D               	movwf	___awmod@divisor+1,c
  1099  001C52  0E0A               	movlw	10
  1100  001C54  6E3C               	movwf	___awmod@divisor,c
  1101  001C56  EC39  F015         	call	___awmod	;wreg free
  1102  001C5A  503A               	movf	?___awmod,w,c
  1103  001C5C  0100               	movlb	0	; () banked
  1104  001C5E  6F9E               	movwf	main@L& (0+255),b
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;Lab5p2.c: 114: if(RL < 10)
  1108  001C60  C0A3  F001         	movff	main@RL,___ftge@ff1
  1109  001C64  C0A4  F002         	movff	main@RL+1,___ftge@ff1+1
  1110  001C68  C0A5  F003         	movff	main@RL+2,___ftge@ff1+2
  1111  001C6C  0E00               	movlw	0
  1112  001C6E  6E04               	movwf	___ftge@ff2,c
  1113  001C70  0E20               	movlw	32
  1114  001C72  6E05               	movwf	___ftge@ff2+1,c
  1115  001C74  0E41               	movlw	65
  1116  001C76  6E06               	movwf	___ftge@ff2+2,c
  1117  001C78  EC1E  F014         	call	___ftge	;wreg free
  1118  001C7C  B0D8               	btfsc	status,0,c
  1119  001C7E  D052               	goto	l2887
  1120                           
  1121                           ;Lab5p2.c: 115: {
  1122                           ;Lab5p2.c: 116: U = (int) RL;
  1123  001C80  C0A3  F02B         	movff	main@RL,___fttol@f1
  1124  001C84  C0A4  F02C         	movff	main@RL+1,___fttol@f1+1
  1125  001C88  C0A5  F02D         	movff	main@RL+2,___fttol@f1+2
  1126  001C8C  EC8C  F012         	call	___fttol	;wreg free
  1127  001C90  502B               	movf	?___fttol,w,c
  1128  001C92  0100               	movlb	0	; () banked
  1129  001C94  6FA2               	movwf	main@U& (0+255),b
  1130                           
  1131                           ;Lab5p2.c: 117: L = ((int)((RL - U) * 10) % 10);
  1132  001C96  0E00               	movlw	0
  1133  001C98  6E1F               	movwf	___ftmul@f2,c
  1134  001C9A  0E20               	movlw	32
  1135  001C9C  6E20               	movwf	___ftmul@f2+1,c
  1136  001C9E  0E41               	movlw	65
  1137  001CA0  6E21               	movwf	___ftmul@f2+2,c
  1138  001CA2  C0A3  F013         	movff	main@RL,___ftadd@f2
  1139  001CA6  C0A4  F014         	movff	main@RL+1,___ftadd@f2+1
  1140  001CAA  C0A5  F015         	movff	main@RL+2,___ftadd@f2+2
  1141  001CAE  0100               	movlb	0	; () banked
  1142  001CB0  51A2               	movf	main@U& (0+255),w,b
  1143  001CB2  EC38  F017         	call	___lbtoft
  1144  001CB6  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1145  001CBA  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1146  001CBE  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1147  001CC2  EC4B  F017         	call	___ftneg	;wreg free
  1148  001CC6  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1149  001CCA  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1150  001CCE  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1151  001CD2  EC21  F010         	call	___ftadd	;wreg free
  1152  001CD6  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1153  001CDA  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1154  001CDE  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1155  001CE2  EC10  F012         	call	___ftmul	;wreg free
  1156  001CE6  C01C  F02B         	movff	?___ftmul,___fttol@f1
  1157  001CEA  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1158  001CEE  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1159  001CF2  EC8C  F012         	call	___fttol	;wreg free
  1160  001CF6  C02B  F03A         	movff	?___fttol,___awmod@dividend
  1161  001CFA  C02C  F03B         	movff	?___fttol+1,___awmod@dividend+1
  1162  001CFE  0E00               	movlw	0
  1163  001D00  6E3D               	movwf	___awmod@divisor+1,c
  1164  001D02  0E0A               	movlw	10
  1165  001D04  6E3C               	movwf	___awmod@divisor,c
  1166  001D06  EC39  F015         	call	___awmod	;wreg free
  1167  001D0A  503A               	movf	?___awmod,w,c
  1168  001D0C  0100               	movlb	0	; () banked
  1169  001D0E  6F9E               	movwf	main@L& (0+255),b
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;Lab5p2.c: 119: DISPLAY_UPPER_7SEG(U);
  1173  001D10  0100               	movlb	0	; () banked
  1174  001D12  51A2               	movf	main@U& (0+255),w,b
  1175  001D14  EC95  F016         	call	_DISPLAY_UPPER_7SEG
  1176                           
  1177                           ;Lab5p2.c: 121: DISPLAY_LOWER_7SEG(L);
  1178  001D18  0100               	movlb	0	; () banked
  1179  001D1A  519E               	movf	main@L& (0+255),w,b
  1180  001D1C  EC6D  F017         	call	_DISPLAY_LOWER_7SEG
  1181                           
  1182                           ;Lab5p2.c: 123: PORTDbits.RD7= 0;
  1183  001D20  9E83               	bcf	3971,7,c	;volatile
  1184                           
  1185                           ;Lab5p2.c: 124: }
  1186  001D22  D05C               	goto	l2895
  1187  001D24                     l2887:
  1188                           
  1189                           ;Lab5p2.c: 126: else
  1190                           ;Lab5p2.c: 127: {
  1191                           ;Lab5p2.c: 128: U = (int) RL/10;
  1192  001D24  C0A3  F02B         	movff	main@RL,___fttol@f1
  1193  001D28  C0A4  F02C         	movff	main@RL+1,___fttol@f1+1
  1194  001D2C  C0A5  F02D         	movff	main@RL+2,___fttol@f1+2
  1195  001D30  EC8C  F012         	call	___fttol	;wreg free
  1196  001D34  C02B  F040         	movff	?___fttol,___awdiv@dividend
  1197  001D38  C02C  F041         	movff	?___fttol+1,___awdiv@dividend+1
  1198  001D3C  0E00               	movlw	0
  1199  001D3E  6E43               	movwf	___awdiv@divisor+1,c
  1200  001D40  0E0A               	movlw	10
  1201  001D42  6E42               	movwf	___awdiv@divisor,c
  1202  001D44  ECD3  F013         	call	___awdiv	;wreg free
  1203  001D48  5040               	movf	?___awdiv,w,c
  1204  001D4A  0100               	movlb	0	; () banked
  1205  001D4C  6FA2               	movwf	main@U& (0+255),b
  1206                           
  1207                           ;Lab5p2.c: 129: L = ((int)((RL - U) * 10) % 10);
  1208  001D4E  0E00               	movlw	0
  1209  001D50  6E1F               	movwf	___ftmul@f2,c
  1210  001D52  0E20               	movlw	32
  1211  001D54  6E20               	movwf	___ftmul@f2+1,c
  1212  001D56  0E41               	movlw	65
  1213  001D58  6E21               	movwf	___ftmul@f2+2,c
  1214  001D5A  C0A3  F013         	movff	main@RL,___ftadd@f2
  1215  001D5E  C0A4  F014         	movff	main@RL+1,___ftadd@f2+1
  1216  001D62  C0A5  F015         	movff	main@RL+2,___ftadd@f2+2
  1217  001D66  0100               	movlb	0	; () banked
  1218  001D68  51A2               	movf	main@U& (0+255),w,b
  1219  001D6A  EC38  F017         	call	___lbtoft
  1220  001D6E  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1221  001D72  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1222  001D76  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1223  001D7A  EC4B  F017         	call	___ftneg	;wreg free
  1224  001D7E  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1225  001D82  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1226  001D86  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1227  001D8A  EC21  F010         	call	___ftadd	;wreg free
  1228  001D8E  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1229  001D92  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1230  001D96  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1231  001D9A  EC10  F012         	call	___ftmul	;wreg free
  1232  001D9E  C01C  F02B         	movff	?___ftmul,___fttol@f1
  1233  001DA2  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1234  001DA6  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1235  001DAA  EC8C  F012         	call	___fttol	;wreg free
  1236  001DAE  C02B  F03A         	movff	?___fttol,___awmod@dividend
  1237  001DB2  C02C  F03B         	movff	?___fttol+1,___awmod@dividend+1
  1238  001DB6  0E00               	movlw	0
  1239  001DB8  6E3D               	movwf	___awmod@divisor+1,c
  1240  001DBA  0E0A               	movlw	10
  1241  001DBC  6E3C               	movwf	___awmod@divisor,c
  1242  001DBE  EC39  F015         	call	___awmod	;wreg free
  1243  001DC2  503A               	movf	?___awmod,w,c
  1244  001DC4  0100               	movlb	0	; () banked
  1245  001DC6  6F9E               	movwf	main@L& (0+255),b
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;Lab5p2.c: 130: DISPLAY_UPPER_7SEG(U);
  1249  001DC8  0100               	movlb	0	; () banked
  1250  001DCA  51A2               	movf	main@U& (0+255),w,b
  1251  001DCC  EC95  F016         	call	_DISPLAY_UPPER_7SEG
  1252                           
  1253                           ;Lab5p2.c: 132: DISPLAY_LOWER_7SEG(L);
  1254  001DD0  0100               	movlb	0	; () banked
  1255  001DD2  519E               	movf	main@L& (0+255),w,b
  1256  001DD4  EC6D  F017         	call	_DISPLAY_LOWER_7SEG
  1257                           
  1258                           ;Lab5p2.c: 134: PORTDbits.RD7= 1;
  1259  001DD8  8E83               	bsf	3971,7,c	;volatile
  1260  001DDA  D000               	goto	l2895
  1261  001DDC                     l2895:
  1262                           
  1263                           ;Lab5p2.c: 136: }
  1264                           ;Lab5p2.c: 139: printf("RL = %f\r\n\n\n", RL );
  1265  001DDC  0E77               	movlw	low STR_1
  1266  001DDE  6E58               	movwf	printf@f,c
  1267  001DE0  0E10               	movlw	high STR_1
  1268  001DE2  6E59               	movwf	printf@f+1,c
  1269  001DE4  C0A3  F05A         	movff	main@RL,?_printf+2
  1270  001DE8  C0A4  F05B         	movff	main@RL+1,?_printf+3
  1271  001DEC  C0A5  F05C         	movff	main@RL+2,?_printf+4
  1272  001DF0  EC42  F008         	call	_printf	;wreg free
  1273                           
  1274                           ;Lab5p2.c: 140: WAIT_ONE_SEC();
  1275  001DF4  EC5D  F017         	call	_WAIT_ONE_SEC	;wreg free
  1276  001DF8  D67A               	goto	l2865
  1277  001DFA  EF00  F000         	goto	start
  1278  001DFE                     __end_of_main:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           postinc0	equ	0xFEE
  1285                           postdec1	equ	0xFE5
  1286                           fsr1l	equ	0xFE1
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _round *****************
  1290 ;; Defined at:
  1291 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\round.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  x               3   75[COMRAM] unsigned char 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  f               3   78[COMRAM] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  3   75[COMRAM] unsigned char 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;Total ram usage:        6 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    3
  1312 ;; This function calls:
  1313 ;;		___ftadd
  1314 ;;		___ftneg
  1315 ;;		_trunc
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text1
  1322  0028D2                     __ptext1:
  1323                           	opt stack 0
  1324  0028D2                     _round:
  1325                           	opt stack 27
  1326                           
  1327                           ;incstack = 0
  1328  0028D2  C04C  F044         	movff	round@x,trunc@x
  1329  0028D6  C04D  F045         	movff	round@x+1,trunc@x+1
  1330  0028DA  C04E  F046         	movff	round@x+2,trunc@x+2
  1331  0028DE  ECF7  F014         	call	_trunc	;wreg free
  1332  0028E2  C044  F00D         	movff	?_trunc,___ftneg@f1
  1333  0028E6  C045  F00E         	movff	?_trunc+1,___ftneg@f1+1
  1334  0028EA  C046  F00F         	movff	?_trunc+2,___ftneg@f1+2
  1335  0028EE  EC4B  F017         	call	___ftneg	;wreg free
  1336  0028F2  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1337  0028F6  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1338  0028FA  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1339  0028FE  C04C  F013         	movff	round@x,___ftadd@f2
  1340  002902  C04D  F014         	movff	round@x+1,___ftadd@f2+1
  1341  002906  C04E  F015         	movff	round@x+2,___ftadd@f2+2
  1342  00290A  EC21  F010         	call	___ftadd	;wreg free
  1343  00290E  C010  F04F         	movff	?___ftadd,round@f
  1344  002912  C011  F050         	movff	?___ftadd+1,round@f+1
  1345  002916  C012  F051         	movff	?___ftadd+2,round@f+2
  1346  00291A  C04C  F010         	movff	round@x,___ftadd@f1
  1347  00291E  C04D  F011         	movff	round@x+1,___ftadd@f1+1
  1348  002922  C04E  F012         	movff	round@x+2,___ftadd@f1+2
  1349  002926  C04F  F013         	movff	round@f,___ftadd@f2
  1350  00292A  C050  F014         	movff	round@f+1,___ftadd@f2+1
  1351  00292E  C051  F015         	movff	round@f+2,___ftadd@f2+2
  1352  002932  EC21  F010         	call	___ftadd	;wreg free
  1353  002936  C010  F04C         	movff	?___ftadd,round@x
  1354  00293A  C011  F04D         	movff	?___ftadd+1,round@x+1
  1355  00293E  C012  F04E         	movff	?___ftadd+2,round@x+2
  1356  002942  C04C  F044         	movff	round@x,trunc@x
  1357  002946  C04D  F045         	movff	round@x+1,trunc@x+1
  1358  00294A  C04E  F046         	movff	round@x+2,trunc@x+2
  1359  00294E  ECF7  F014         	call	_trunc	;wreg free
  1360  002952  C044  F04C         	movff	?_trunc,?_round
  1361  002956  C045  F04D         	movff	?_trunc+1,?_round+1
  1362  00295A  C046  F04E         	movff	?_trunc+2,?_round+2
  1363  00295E  D000               	goto	l850
  1364  002960                     l850:
  1365  002960  0012               	return		;funcret
  1366  002962                     __end_of_round:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           postinc0	equ	0xFEE
  1373                           postdec1	equ	0xFE5
  1374                           fsr1l	equ	0xFE1
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _trunc *****************
  1378 ;; Defined at:
  1379 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\trunc.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  x               3   67[COMRAM] unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  i               3   70[COMRAM] unsigned char 
  1384 ;;  expon           2   73[COMRAM] int 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  3   67[COMRAM] int 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1394 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;Total ram usage:        8 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    2
  1401 ;; This function calls:
  1402 ;;		___altoft
  1403 ;;		___fttol
  1404 ;;		_frexp
  1405 ;; This function is called by:
  1406 ;;		_round
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text2
  1411  0029EE                     __ptext2:
  1412                           	opt stack 0
  1413  0029EE                     _trunc:
  1414                           	opt stack 27
  1415                           
  1416                           ;incstack = 0
  1417  0029EE  C044  F001         	movff	trunc@x,frexp@value
  1418  0029F2  C045  F002         	movff	trunc@x+1,frexp@value+1
  1419  0029F6  C046  F003         	movff	trunc@x+2,frexp@value+2
  1420  0029FA  0E4A               	movlw	low trunc@expon
  1421  0029FC  6E04               	movwf	frexp@eptr,c
  1422  0029FE  0E00               	movlw	high trunc@expon
  1423  002A00  6E05               	movwf	frexp@eptr+1,c
  1424  002A02  ECB8  F015         	call	_frexp	;wreg free
  1425  002A06  AE4B               	btfss	trunc@expon+1,7,c
  1426  002A08  D007               	goto	l2567
  1427  002A0A  0E00               	movlw	0
  1428  002A0C  6E44               	movwf	?_trunc,c
  1429  002A0E  0E00               	movlw	0
  1430  002A10  6E45               	movwf	?_trunc+1,c
  1431  002A12  0E00               	movlw	0
  1432  002A14  6E46               	movwf	?_trunc+2,c
  1433  002A16  D02C               	goto	l856
  1434  002A18                     l2567:
  1435  002A18  504B               	movf	trunc@expon+1,w,c
  1436  002A1A  E104               	bnz	u2530
  1437  002A1C  0E15               	movlw	21
  1438  002A1E  5C4A               	subwf	trunc@expon,w,c
  1439  002A20  A0D8               	btfss	status,0,c
  1440  002A22  D007               	goto	l2571
  1441  002A24                     u2530:
  1442  002A24  C044  F044         	movff	trunc@x,?_trunc
  1443  002A28  C045  F045         	movff	trunc@x+1,?_trunc+1
  1444  002A2C  C046  F046         	movff	trunc@x+2,?_trunc+2
  1445  002A30  D01F               	goto	l856
  1446  002A32                     l2571:
  1447  002A32  C044  F02B         	movff	trunc@x,___fttol@f1
  1448  002A36  C045  F02C         	movff	trunc@x+1,___fttol@f1+1
  1449  002A3A  C046  F02D         	movff	trunc@x+2,___fttol@f1+2
  1450  002A3E  EC8C  F012         	call	___fttol	;wreg free
  1451  002A42  C02B  F03A         	movff	?___fttol,___altoft@c
  1452  002A46  C02C  F03B         	movff	?___fttol+1,___altoft@c+1
  1453  002A4A  C02D  F03C         	movff	?___fttol+2,___altoft@c+2
  1454  002A4E  C02E  F03D         	movff	?___fttol+3,___altoft@c+3
  1455  002A52  EC7A  F015         	call	___altoft	;wreg free
  1456  002A56  C03A  F047         	movff	?___altoft,trunc@i
  1457  002A5A  C03B  F048         	movff	?___altoft+1,trunc@i+1
  1458  002A5E  C03C  F049         	movff	?___altoft+2,trunc@i+2
  1459  002A62  C047  F044         	movff	trunc@i,?_trunc
  1460  002A66  C048  F045         	movff	trunc@i+1,?_trunc+1
  1461  002A6A  C049  F046         	movff	trunc@i+2,?_trunc+2
  1462  002A6E  D000               	goto	l856
  1463  002A70                     l856:
  1464  002A70  0012               	return		;funcret
  1465  002A72                     __end_of_trunc:
  1466                           	opt stack 0
  1467                           tblptru	equ	0xFF8
  1468                           tblptrh	equ	0xFF7
  1469                           tblptrl	equ	0xFF6
  1470                           tablat	equ	0xFF5
  1471                           postinc0	equ	0xFEE
  1472                           postdec1	equ	0xFE5
  1473                           fsr1l	equ	0xFE1
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _frexp *****************
  1477 ;; Defined at:
  1478 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  value           3    0[COMRAM] int 
  1481 ;;  eptr            2    3[COMRAM] PTR int 
  1482 ;;		 -> trunc@expon(2), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  3    0[COMRAM] PTR int 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1494 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;Total ram usage:        7 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_trunc
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text3
  1508  002B70                     __ptext3:
  1509                           	opt stack 0
  1510  002B70                     _frexp:
  1511                           	opt stack 28
  1512                           
  1513                           ;incstack = 0
  1514  002B70  5001               	movf	frexp@value,w,c
  1515  002B72  1002               	iorwf	frexp@value+1,w,c
  1516  002B74  1003               	iorwf	frexp@value+2,w,c
  1517  002B76  A4D8               	btfss	status,2,c
  1518  002B78  D009               	goto	l2241
  1519  002B7A  C004  FFD9         	movff	frexp@eptr,fsr2l
  1520  002B7E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1521  002B82  0E00               	movlw	0
  1522  002B84  6EDE               	movwf	postinc2,c
  1523  002B86  0E00               	movlw	0
  1524  002B88  6EDD               	movwf	postdec2,c
  1525                           
  1526                           ;	Return value of _frexp is never used
  1527  002B8A  D02E               	goto	l863
  1528  002B8C                     l2241:
  1529  002B8C  5003               	movf	frexp@value+2,w,c
  1530  002B8E  0B7F               	andlw	127
  1531  002B90  6E06               	movwf	??_frexp& (0+255),c
  1532  002B92  6A07               	clrf	(??_frexp+1)& (0+255),c
  1533  002B94  90D8               	bcf	status,0,c
  1534  002B96  3606               	rlcf	??_frexp,f,c
  1535  002B98  3607               	rlcf	??_frexp+1,f,c
  1536  002B9A  C004  FFD9         	movff	frexp@eptr,fsr2l
  1537  002B9E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1538  002BA2  C006  FFDE         	movff	??_frexp,postinc2
  1539  002BA6  C007  FFDD         	movff	??_frexp+1,postdec2
  1540  002BAA  AE02               	btfss	frexp@value+1,7,c
  1541  002BAC  D003               	goto	u2050
  1542  002BAE  6A06               	clrf	??_frexp& (0+255),c
  1543  002BB0  2A06               	incf	??_frexp& (0+255),f,c
  1544  002BB2  D001               	goto	u2058
  1545  002BB4                     u2050:
  1546  002BB4  6A06               	clrf	??_frexp& (0+255),c
  1547  002BB6                     u2058:
  1548  002BB6  5006               	movf	??_frexp,w,c
  1549  002BB8  C004  FFD9         	movff	frexp@eptr,fsr2l
  1550  002BBC  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1551  002BC0  12DE               	iorwf	postinc2,f,c
  1552  002BC2  0E00               	movlw	0
  1553  002BC4  12DD               	iorwf	postdec2,f,c
  1554  002BC6  C004  FFD9         	movff	frexp@eptr,fsr2l
  1555  002BCA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  1556  002BCE  0E82               	movlw	130
  1557  002BD0  26DE               	addwf	postinc2,f,c
  1558  002BD2  0EFF               	movlw	255
  1559  002BD4  22DD               	addwfc	postdec2,f,c
  1560  002BD6  8003               	bsf	frexp@value+2,0,c
  1561  002BD8  8203               	bsf	frexp@value+2,1,c
  1562  002BDA  8403               	bsf	frexp@value+2,2,c
  1563  002BDC  8603               	bsf	frexp@value+2,3,c
  1564  002BDE  8803               	bsf	frexp@value+2,4,c
  1565  002BE0  8A03               	bsf	frexp@value+2,5,c
  1566  002BE2  9C03               	bcf	frexp@value+2,6,c
  1567  002BE4  9E02               	bcf	frexp@value+1,7,c
  1568  002BE6  D000               	goto	l863
  1569  002BE8                     l863:
  1570  002BE8  0012               	return		;funcret
  1571  002BEA                     __end_of_frexp:
  1572                           	opt stack 0
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           postinc0	equ	0xFEE
  1578                           postdec1	equ	0xFE5
  1579                           fsr1l	equ	0xFE1
  1580                           postinc2	equ	0xFDE
  1581                           postdec2	equ	0xFDD
  1582                           fsr2h	equ	0xFDA
  1583                           fsr2l	equ	0xFD9
  1584                           status	equ	0xFD8
  1585                           
  1586 ;; *************** function ___altoft *****************
  1587 ;; Defined at:
  1588 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  c               4   57[COMRAM] long 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  sign            1   66[COMRAM] unsigned char 
  1593 ;;  exp             1   65[COMRAM] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  3   57[COMRAM] float 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;Total ram usage:       10 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    1
  1610 ;; This function calls:
  1611 ;;		___ftpack
  1612 ;; This function is called by:
  1613 ;;		_trunc
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text4
  1618  002AF4                     __ptext4:
  1619                           	opt stack 0
  1620  002AF4                     ___altoft:
  1621                           	opt stack 27
  1622                           
  1623                           ;incstack = 0
  1624  002AF4  0E00               	movlw	0
  1625  002AF6  6E43               	movwf	___altoft@sign,c
  1626  002AF8  0E8E               	movlw	142
  1627  002AFA  6E42               	movwf	___altoft@exp,c
  1628  002AFC  AE3D               	btfss	___altoft@c+3,7,c
  1629  002AFE  D012               	goto	l1985
  1630  002B00  1E3D               	comf	___altoft@c+3,f,c
  1631  002B02  1E3C               	comf	___altoft@c+2,f,c
  1632  002B04  1E3B               	comf	___altoft@c+1,f,c
  1633  002B06  6C3A               	negf	___altoft@c,c
  1634  002B08  0E00               	movlw	0
  1635  002B0A  223B               	addwfc	___altoft@c+1,f,c
  1636  002B0C  223C               	addwfc	___altoft@c+2,f,c
  1637  002B0E  223D               	addwfc	___altoft@c+3,f,c
  1638  002B10  0E01               	movlw	1
  1639  002B12  6E43               	movwf	___altoft@sign,c
  1640  002B14  D007               	goto	l1985
  1641  002B16                     l1983:
  1642  002B16  90D8               	bcf	status,0,c
  1643  002B18  323D               	rrcf	___altoft@c+3,f,c
  1644  002B1A  323C               	rrcf	___altoft@c+2,f,c
  1645  002B1C  323B               	rrcf	___altoft@c+1,f,c
  1646  002B1E  323A               	rrcf	___altoft@c,f,c
  1647  002B20  2A42               	incf	___altoft@exp,f,c
  1648  002B22  D000               	goto	l1985
  1649  002B24                     l1985:
  1650  002B24  0E00               	movlw	0
  1651  002B26  143A               	andwf	___altoft@c,w,c
  1652  002B28  6E3E               	movwf	??___altoft& (0+255),c
  1653  002B2A  0E00               	movlw	0
  1654  002B2C  143B               	andwf	___altoft@c+1,w,c
  1655  002B2E  6E3F               	movwf	(??___altoft+1)& (0+255),c
  1656  002B30  0E00               	movlw	0
  1657  002B32  143C               	andwf	___altoft@c+2,w,c
  1658  002B34  6E40               	movwf	(??___altoft+2)& (0+255),c
  1659  002B36  0EFF               	movlw	255
  1660  002B38  143D               	andwf	___altoft@c+3,w,c
  1661  002B3A  6E41               	movwf	(??___altoft+3)& (0+255),c
  1662  002B3C  503E               	movf	??___altoft,w,c
  1663  002B3E  103F               	iorwf	??___altoft+1,w,c
  1664  002B40  1040               	iorwf	??___altoft+2,w,c
  1665  002B42  1041               	iorwf	??___altoft+3,w,c
  1666  002B44  A4D8               	btfss	status,2,c
  1667  002B46  D7E7               	goto	l1983
  1668  002B48  C03A  F001         	movff	___altoft@c,___ftpack@arg
  1669  002B4C  C03B  F002         	movff	___altoft@c+1,___ftpack@arg+1
  1670  002B50  C03C  F003         	movff	___altoft@c+2,___ftpack@arg+2
  1671  002B54  C042  F004         	movff	___altoft@exp,___ftpack@exp
  1672  002B58  C043  F005         	movff	___altoft@sign,___ftpack@sign
  1673  002B5C  EC70  F013         	call	___ftpack	;wreg free
  1674  002B60  C001  F03A         	movff	?___ftpack,?___altoft
  1675  002B64  C002  F03B         	movff	?___ftpack+1,?___altoft+1
  1676  002B68  C003  F03C         	movff	?___ftpack+2,?___altoft+2
  1677  002B6C  D000               	goto	l359
  1678  002B6E                     l359:
  1679  002B6E  0012               	return		;funcret
  1680  002B70                     __end_of___altoft:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           postinc0	equ	0xFEE
  1687                           postdec1	equ	0xFE5
  1688                           fsr1l	equ	0xFE1
  1689                           postinc2	equ	0xFDE
  1690                           postdec2	equ	0xFDD
  1691                           fsr2h	equ	0xFDA
  1692                           fsr2l	equ	0xFD9
  1693                           status	equ	0xFD8
  1694                           
  1695 ;; *************** function _printf *****************
  1696 ;; Defined at:
  1697 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  f               2   87[COMRAM] PTR const unsigned char 
  1700 ;;		 -> STR_1(12), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  tmpval          4  113[COMRAM] struct .
  1703 ;;  val             4  107[COMRAM] unsigned long 
  1704 ;;  fval            3  117[COMRAM] unsigned long 
  1705 ;;  cp              3    0        PTR const unsigned char 
  1706 ;;  exp             2  111[COMRAM] int 
  1707 ;;  prec            2  105[COMRAM] int 
  1708 ;;  flag            2  103[COMRAM] unsigned short 
  1709 ;;  ap              2  101[COMRAM] PTR void [1]
  1710 ;;		 -> ?_printf(2), 
  1711 ;;  len             2    0        unsigned int 
  1712 ;;  width           2    0        int 
  1713 ;;  c               1  120[COMRAM] char 
  1714 ;;  d               1    0        unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2   87[COMRAM] int 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1724 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;Total ram usage:       34 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    3
  1731 ;; This function calls:
  1732 ;;		___awdiv
  1733 ;;		___ftadd
  1734 ;;		___ftge
  1735 ;;		___ftmul
  1736 ;;		___ftneg
  1737 ;;		___ftsub
  1738 ;;		___fttol
  1739 ;;		___lldiv
  1740 ;;		___llmod
  1741 ;;		___lltoft
  1742 ;;		___wmul
  1743 ;;		__div_to_l_
  1744 ;;		__tdiv_to_l_
  1745 ;;		_fround
  1746 ;;		_putch
  1747 ;;		_scale
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text5
  1754  001084                     __ptext5:
  1755                           	opt stack 0
  1756  001084                     _printf:
  1757                           	opt stack 27
  1758                           
  1759                           ;doprnt.c: 466: va_list ap;
  1760                           ;doprnt.c: 499: signed char c;
  1761                           ;doprnt.c: 501: int width;
  1762                           ;doprnt.c: 504: int prec;
  1763                           ;doprnt.c: 508: unsigned short flag;
  1764                           ;doprnt.c: 515: char d;
  1765                           ;doprnt.c: 516: double fval;
  1766                           ;doprnt.c: 517: int exp;
  1767                           ;doprnt.c: 523: union {
  1768                           ;doprnt.c: 524: unsigned long vd;
  1769                           ;doprnt.c: 525: double integ;
  1770                           ;doprnt.c: 526: } tmpval;
  1771                           ;doprnt.c: 528: unsigned long val;
  1772                           ;doprnt.c: 529: unsigned len;
  1773                           ;doprnt.c: 530: const char * cp;
  1774                           ;doprnt.c: 533: *ap = __va_start();
  1775                           
  1776                           ;incstack = 0
  1777  001084  0E5A               	movlw	low (?_printf+2)
  1778  001086  6E66               	movwf	printf@ap,c
  1779  001088  0E00               	movlw	high (?_printf+2)
  1780  00108A  6E67               	movwf	printf@ap+1,c
  1781                           
  1782                           ;doprnt.c: 536: while(c = *f++) {
  1783  00108C  D2FF               	goto	l2763
  1784  00108E                     l2615:
  1785                           
  1786                           ;doprnt.c: 538: if(c != '%')
  1787  00108E  0E25               	movlw	37
  1788  001090  1879               	xorwf	printf@c,w,c
  1789  001092  B4D8               	btfsc	status,2,c
  1790  001094  D004               	goto	l2619
  1791                           
  1792                           ;doprnt.c: 540: {
  1793                           ;doprnt.c: 541: (putch(c) );
  1794  001096  5079               	movf	printf@c,w,c
  1795  001098  EC91  F017         	call	_putch
  1796                           
  1797                           ;doprnt.c: 542: continue;
  1798  00109C  D2F7               	goto	l2763
  1799  00109E                     l2619:
  1800                           
  1801                           ;doprnt.c: 543: }
  1802                           ;doprnt.c: 548: flag = 0;
  1803  00109E  0E00               	movlw	0
  1804  0010A0  6E69               	movwf	printf@flag+1,c
  1805  0010A2  0E00               	movlw	0
  1806  0010A4  6E68               	movwf	printf@flag,c
  1807                           
  1808                           ;doprnt.c: 635: switch(c = *f++) {
  1809  0010A6  D005               	goto	l2625
  1810                           
  1811                           ;doprnt.c: 638: goto alldone;
  1812                           
  1813                           ;doprnt.c: 637: case 0:
  1814  0010A8  D2FF               	goto	l226
  1815  0010AA                     l2621:
  1816                           
  1817                           ;doprnt.c: 663: flag |= 0x400;
  1818  0010AA  8469               	bsf	printf@flag+1,2,c
  1819                           
  1820                           ;doprnt.c: 664: break;
  1821  0010AC  D013               	goto	l2627
  1822                           
  1823                           ;doprnt.c: 813: continue;
  1824                           
  1825                           ;doprnt.c: 802: default:
  1826  0010AE  D2EE               	goto	l2763
  1827                           
  1828                           ;doprnt.c: 822: }
  1829  0010B0  D011               	goto	l2627
  1830  0010B2                     l2625:
  1831  0010B2  C058  FFF6         	movff	printf@f,tblptrl
  1832  0010B6  C059  FFF7         	movff	printf@f+1,tblptrh
  1833  0010BA  4A58               	infsnz	printf@f,f,c
  1834  0010BC  2A59               	incf	printf@f+1,f,c
  1835  0010BE                     	if	0	;tblptru may be non-zero
  1836  0010BE                     	endif
  1837  0010BE                     	if	0	;tblptru may be non-zero
  1838  0010BE                     	endif
  1839  0010BE  0008               	tblrd		*
  1840  0010C0  CFF5 F079          	movff	tablat,printf@c
  1841  0010C4  5079               	movf	printf@c,w,c
  1842                           
  1843                           ; Switch size 1, requested type "space"
  1844                           ; Number of cases is 2, Range of values is 0 to 102
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte            7     4 (average)
  1848                           ;	Chosen strategy is simple_byte
  1849  0010C6  0A00               	xorlw	0	; case 0
  1850  0010C8  B4D8               	btfsc	status,2,c
  1851  0010CA  D2EE               	goto	l226
  1852  0010CC  0A66               	xorlw	102	; case 102
  1853  0010CE  B4D8               	btfsc	status,2,c
  1854  0010D0  D7EC               	goto	l2621
  1855  0010D2  D2DC               	goto	l2763
  1856  0010D4                     l2627:
  1857                           
  1858                           ;doprnt.c: 825: if(flag & (0x700)) {
  1859  0010D4  0E07               	movlw	7
  1860  0010D6  1469               	andwf	printf@flag+1,w,c
  1861  0010D8  B4D8               	btfsc	status,2,c
  1862  0010DA  D2CA               	goto	l2759
  1863                           
  1864                           ;doprnt.c: 829: prec = 6;
  1865  0010DC  0E00               	movlw	0
  1866  0010DE  6E6B               	movwf	printf@prec+1,c
  1867  0010E0  0E06               	movlw	6
  1868  0010E2  6E6A               	movwf	printf@prec,c
  1869                           
  1870                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1871  0010E4  C066  FFD9         	movff	printf@ap,fsr2l
  1872  0010E8  C067  FFDA         	movff	printf@ap+1,fsr2h
  1873  0010EC  CFDE F076          	movff	postinc2,printf@fval
  1874  0010F0  CFDE F077          	movff	postinc2,printf@fval+1
  1875  0010F4  CFDD F078          	movff	postdec2,printf@fval+2
  1876  0010F8  0E03               	movlw	3
  1877  0010FA  2666               	addwf	printf@ap,f,c
  1878  0010FC  0E00               	movlw	0
  1879  0010FE  2267               	addwfc	printf@ap+1,f,c
  1880                           
  1881                           ;doprnt.c: 831: if(fval < 0.0) {
  1882  001100  AE78               	btfss	printf@fval+2,7,c
  1883  001102  D011               	goto	l2641
  1884                           
  1885                           ;doprnt.c: 832: fval = -fval;
  1886  001104  C076  F00D         	movff	printf@fval,___ftneg@f1
  1887  001108  C077  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1888  00110C  C078  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1889  001110  EC4B  F017         	call	___ftneg	;wreg free
  1890  001114  C00D  F076         	movff	?___ftneg,printf@fval
  1891  001118  C00E  F077         	movff	?___ftneg+1,printf@fval+1
  1892  00111C  C00F  F078         	movff	?___ftneg+2,printf@fval+2
  1893                           
  1894                           ;doprnt.c: 833: flag |= 0x03;
  1895  001120  0E03               	movlw	3
  1896  001122  1268               	iorwf	printf@flag,f,c
  1897  001124  D000               	goto	l2641
  1898  001126                     l2641:
  1899                           
  1900                           ;doprnt.c: 834: }
  1901                           ;doprnt.c: 835: exp = 0;
  1902  001126  0E00               	movlw	0
  1903  001128  6E71               	movwf	printf@exp+1,c
  1904  00112A  0E00               	movlw	0
  1905  00112C  6E70               	movwf	printf@exp,c
  1906                           
  1907                           ;doprnt.c: 836: if( fval!=0) {
  1908  00112E  5076               	movf	printf@fval,w,c
  1909  001130  1077               	iorwf	printf@fval+1,w,c
  1910  001132  1078               	iorwf	printf@fval+2,w,c
  1911  001134  B4D8               	btfsc	status,2,c
  1912  001136  D085               	goto	l2669
  1913                           
  1914                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1915  001138  0E82               	movlw	130
  1916  00113A  6E5D               	movwf	??_printf& (0+255),c
  1917  00113C  0EFF               	movlw	255
  1918  00113E  6E5E               	movwf	(??_printf+1)& (0+255),c
  1919  001140  C076  F05F         	movff	printf@fval,??_printf+2
  1920  001144  C077  F060         	movff	printf@fval+1,??_printf+3
  1921  001148  C078  F061         	movff	printf@fval+2,??_printf+4
  1922  00114C  C079  F062         	movff	printf@fval+3,??_printf+5
  1923  001150  0E10               	movlw	16
  1924  001152  D005               	goto	u2610
  1925  001154                     u2615:
  1926  001154  90D8               	bcf	status,0,c
  1927  001156  3262               	rrcf	??_printf+5,f,c
  1928  001158  3261               	rrcf	??_printf+4,f,c
  1929  00115A  3260               	rrcf	??_printf+3,f,c
  1930  00115C  325F               	rrcf	??_printf+2,f,c
  1931  00115E                     u2610:
  1932  00115E  2EE8               	decfsz	wreg,f,c
  1933  001160  D7F9               	goto	u2615
  1934  001162  505F               	movf	??_printf+2,w,c
  1935  001164  245D               	addwf	??_printf,w,c
  1936  001166  6E70               	movwf	printf@exp,c
  1937  001168  0E00               	movlw	0
  1938  00116A  205E               	addwfc	??_printf+1,w,c
  1939  00116C  6E71               	movwf	printf@exp+1,c
  1940                           
  1941                           ;doprnt.c: 838: exp--;
  1942  00116E  0670               	decf	printf@exp,f,c
  1943  001170  A0D8               	btfss	status,0,c
  1944  001172  0671               	decf	printf@exp+1,f,c
  1945                           
  1946                           ;doprnt.c: 839: exp *= 3;
  1947  001174  C070  F048         	movff	printf@exp,___wmul@multiplier
  1948  001178  C071  F049         	movff	printf@exp+1,___wmul@multiplier+1
  1949  00117C  0E00               	movlw	0
  1950  00117E  6E4B               	movwf	___wmul@multiplicand+1,c
  1951  001180  0E03               	movlw	3
  1952  001182  6E4A               	movwf	___wmul@multiplicand,c
  1953  001184  EC11  F017         	call	___wmul	;wreg free
  1954  001188  C048  F070         	movff	?___wmul,printf@exp
  1955  00118C  C049  F071         	movff	?___wmul+1,printf@exp+1
  1956                           
  1957                           ;doprnt.c: 840: exp /= 10;
  1958  001190  C070  F040         	movff	printf@exp,___awdiv@dividend
  1959  001194  C071  F041         	movff	printf@exp+1,___awdiv@dividend+1
  1960  001198  0E00               	movlw	0
  1961  00119A  6E43               	movwf	___awdiv@divisor+1,c
  1962  00119C  0E0A               	movlw	10
  1963  00119E  6E42               	movwf	___awdiv@divisor,c
  1964  0011A0  ECD3  F013         	call	___awdiv	;wreg free
  1965  0011A4  C040  F070         	movff	?___awdiv,printf@exp
  1966  0011A8  C041  F071         	movff	?___awdiv+1,printf@exp+1
  1967                           
  1968                           ;doprnt.c: 841: if(exp < 0)
  1969  0011AC  AE71               	btfss	printf@exp+1,7,c
  1970  0011AE  D004               	goto	l2657
  1971                           
  1972                           ;doprnt.c: 842: exp--;
  1973  0011B0  0670               	decf	printf@exp,f,c
  1974  0011B2  A0D8               	btfss	status,0,c
  1975  0011B4  0671               	decf	printf@exp+1,f,c
  1976  0011B6  D000               	goto	l2657
  1977  0011B8                     l2657:
  1978                           
  1979                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1980  0011B8  5070               	movf	printf@exp,w,c
  1981  0011BA  0800               	sublw	0
  1982  0011BC  EC55  F00B         	call	_scale
  1983  0011C0  C04E  F072         	movff	?_scale,printf@tmpval
  1984  0011C4  C04F  F073         	movff	?_scale+1,printf@tmpval+1
  1985  0011C8  C050  F074         	movff	?_scale+2,printf@tmpval+2
  1986                           
  1987                           ;doprnt.c: 847: tmpval.integ *= fval;
  1988  0011CC  C072  F01C         	movff	printf@tmpval,___ftmul@f1
  1989  0011D0  C073  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  1990  0011D4  C074  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  1991  0011D8  C076  F01F         	movff	printf@fval,___ftmul@f2
  1992  0011DC  C077  F020         	movff	printf@fval+1,___ftmul@f2+1
  1993  0011E0  C078  F021         	movff	printf@fval+2,___ftmul@f2+2
  1994  0011E4  EC10  F012         	call	___ftmul	;wreg free
  1995  0011E8  C01C  F072         	movff	?___ftmul,printf@tmpval
  1996  0011EC  C01D  F073         	movff	?___ftmul+1,printf@tmpval+1
  1997  0011F0  C01E  F074         	movff	?___ftmul+2,printf@tmpval+2
  1998                           
  1999                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2000  0011F4  C072  F001         	movff	printf@tmpval,___ftge@ff1
  2001  0011F8  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2002  0011FC  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2003  001200  0E00               	movlw	0
  2004  001202  6E04               	movwf	___ftge@ff2,c
  2005  001204  0E80               	movlw	128
  2006  001206  6E05               	movwf	___ftge@ff2+1,c
  2007  001208  0E3F               	movlw	63
  2008  00120A  6E06               	movwf	___ftge@ff2+2,c
  2009  00120C  EC1E  F014         	call	___ftge	;wreg free
  2010  001210  B0D8               	btfsc	status,0,c
  2011  001212  D004               	goto	l2665
  2012                           
  2013                           ;doprnt.c: 849: exp--;
  2014  001214  0670               	decf	printf@exp,f,c
  2015  001216  A0D8               	btfss	status,0,c
  2016  001218  0671               	decf	printf@exp+1,f,c
  2017  00121A  D013               	goto	l2669
  2018  00121C                     l2665:
  2019                           
  2020                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2021  00121C  C072  F001         	movff	printf@tmpval,___ftge@ff1
  2022  001220  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2023  001224  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2024  001228  0E00               	movlw	0
  2025  00122A  6E04               	movwf	___ftge@ff2,c
  2026  00122C  0E20               	movlw	32
  2027  00122E  6E05               	movwf	___ftge@ff2+1,c
  2028  001230  0E41               	movlw	65
  2029  001232  6E06               	movwf	___ftge@ff2+2,c
  2030  001234  EC1E  F014         	call	___ftge	;wreg free
  2031  001238  A0D8               	btfss	status,0,c
  2032  00123A  D003               	goto	l2669
  2033                           
  2034                           ;doprnt.c: 851: exp++;
  2035  00123C  4A70               	infsnz	printf@exp,f,c
  2036  00123E  2A71               	incf	printf@exp+1,f,c
  2037  001240  D000               	goto	l2669
  2038  001242                     l2669:
  2039                           
  2040                           ;doprnt.c: 852: }
  2041                           ;doprnt.c: 1112: if(prec <= 12)
  2042  001242  BE6B               	btfsc	printf@prec+1,7,c
  2043  001244  D006               	goto	l2671
  2044  001246  506B               	movf	printf@prec+1,w,c
  2045  001248  E11C               	bnz	l2673
  2046  00124A  0E0D               	movlw	13
  2047  00124C  5C6A               	subwf	printf@prec,w,c
  2048  00124E  B0D8               	btfsc	status,0,c
  2049  001250  D018               	goto	l2673
  2050  001252                     l2671:
  2051                           
  2052                           ;doprnt.c: 1113: fval += fround(prec);
  2053  001252  C076  F010         	movff	printf@fval,___ftadd@f1
  2054  001256  C077  F011         	movff	printf@fval+1,___ftadd@f1+1
  2055  00125A  C078  F012         	movff	printf@fval+2,___ftadd@f1+2
  2056  00125E  506A               	movf	printf@prec,w,c
  2057  001260  ECFF  F00E         	call	_fround
  2058  001264  C04E  F013         	movff	?_fround,___ftadd@f2
  2059  001268  C04F  F014         	movff	?_fround+1,___ftadd@f2+1
  2060  00126C  C050  F015         	movff	?_fround+2,___ftadd@f2+2
  2061  001270  EC21  F010         	call	___ftadd	;wreg free
  2062  001274  C010  F076         	movff	?___ftadd,printf@fval
  2063  001278  C011  F077         	movff	?___ftadd+1,printf@fval+1
  2064  00127C  C012  F078         	movff	?___ftadd+2,printf@fval+2
  2065  001280  D000               	goto	l2673
  2066  001282                     l2673:
  2067                           
  2068                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2069  001282  BE71               	btfsc	printf@exp+1,7,c
  2070  001284  D006               	goto	l2675
  2071  001286  5071               	movf	printf@exp+1,w,c
  2072  001288  E120               	bnz	l2681
  2073  00128A  0E0A               	movlw	10
  2074  00128C  5C70               	subwf	printf@exp,w,c
  2075  00128E  B0D8               	btfsc	status,0,c
  2076  001290  D01C               	goto	l2681
  2077  001292                     l2675:
  2078  001292  5076               	movf	printf@fval,w,c
  2079  001294  1077               	iorwf	printf@fval+1,w,c
  2080  001296  1078               	iorwf	printf@fval+2,w,c
  2081  001298  B4D8               	btfsc	status,2,c
  2082  00129A  D06D               	goto	l2695
  2083  00129C  C076  F02B         	movff	printf@fval,___fttol@f1
  2084  0012A0  C077  F02C         	movff	printf@fval+1,___fttol@f1+1
  2085  0012A4  C078  F02D         	movff	printf@fval+2,___fttol@f1+2
  2086  0012A8  EC8C  F012         	call	___fttol	;wreg free
  2087  0012AC  502B               	movf	?___fttol,w,c
  2088  0012AE  102C               	iorwf	?___fttol+1,w,c
  2089  0012B0  102D               	iorwf	?___fttol+2,w,c
  2090  0012B2  102E               	iorwf	?___fttol+3,w,c
  2091  0012B4  B4D8               	btfsc	status,2,c
  2092  0012B6  BE71               	btfsc	printf@exp+1,7,c
  2093  0012B8  D05E               	goto	l2695
  2094  0012BA  5071               	movf	printf@exp+1,w,c
  2095  0012BC  E106               	bnz	l2681
  2096  0012BE  0E02               	movlw	2
  2097  0012C0  5C70               	subwf	printf@exp,w,c
  2098  0012C2  B0D8               	btfsc	status,0,c
  2099  0012C4  D002               	goto	l2681
  2100  0012C6  D057               	goto	l2695
  2101  0012C8  D000               	goto	l2681
  2102  0012CA                     l2681:
  2103                           
  2104                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2105  0012CA  C072  F001         	movff	printf@tmpval,___ftge@ff1
  2106  0012CE  C073  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2107  0012D2  C074  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2108  0012D6  0E70               	movlw	112
  2109  0012D8  6E04               	movwf	___ftge@ff2,c
  2110  0012DA  0E89               	movlw	137
  2111  0012DC  6E05               	movwf	___ftge@ff2+1,c
  2112  0012DE  0E40               	movlw	64
  2113  0012E0  6E06               	movwf	___ftge@ff2+2,c
  2114  0012E2  EC1E  F014         	call	___ftge	;wreg free
  2115  0012E6  B0D8               	btfsc	status,0,c
  2116  0012E8  D002               	goto	l2685
  2117                           
  2118                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2119  0012EA  0EF7               	movlw	247
  2120  0012EC  D001               	goto	L1
  2121  0012EE                     l2685:
  2122                           
  2123                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2124  0012EE  0EF8               	movlw	248
  2125  0012F0                     L1:
  2126  0012F0  2670               	addwf	printf@exp,f,c
  2127  0012F2  0EFF               	movlw	255
  2128  0012F4  2271               	addwfc	printf@exp+1,f,c
  2129  0012F6  D000               	goto	l2687
  2130  0012F8                     l2687:
  2131                           
  2132                           ;doprnt.c: 1124: }
  2133                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2134  0012F8  5070               	movf	printf@exp,w,c
  2135  0012FA  EC55  F00B         	call	_scale
  2136  0012FE  C04E  F072         	movff	?_scale,printf@tmpval
  2137  001302  C04F  F073         	movff	?_scale+1,printf@tmpval+1
  2138  001306  C050  F074         	movff	?_scale+2,printf@tmpval+2
  2139                           
  2140                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2141  00130A  D017               	goto	l2691
  2142  00130C  C076  F001         	movff	printf@fval,__div_to_l_@f1
  2143  001310  C077  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  2144  001314  C078  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  2145  001318  C072  F004         	movff	printf@tmpval,__div_to_l_@f2
  2146  00131C  C073  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  2147  001320  C074  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  2148  001324  EC8B  F011         	call	__div_to_l_	;wreg free
  2149  001328  C001  F06C         	movff	?__div_to_l_,printf@val
  2150  00132C  C002  F06D         	movff	?__div_to_l_+1,printf@val+1
  2151  001330  C003  F06E         	movff	?__div_to_l_+2,printf@val+2
  2152  001334  C004  F06F         	movff	?__div_to_l_+3,printf@val+3
  2153  001338  D017               	goto	l2693
  2154  00133A                     l2691:
  2155  00133A  C076  F001         	movff	printf@fval,__tdiv_to_l_@f1
  2156  00133E  C077  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  2157  001342  C078  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  2158  001346  C072  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  2159  00134A  C073  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  2160  00134E  C074  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  2161  001352  EC03  F011         	call	__tdiv_to_l_	;wreg free
  2162  001356  C001  F06C         	movff	?__tdiv_to_l_,printf@val
  2163  00135A  C002  F06D         	movff	?__tdiv_to_l_+1,printf@val+1
  2164  00135E  C003  F06E         	movff	?__tdiv_to_l_+2,printf@val+2
  2165  001362  C004  F06F         	movff	?__tdiv_to_l_+3,printf@val+3
  2166  001366  D000               	goto	l2693
  2167  001368                     l2693:
  2168                           
  2169                           ;doprnt.c: 1129: fval = 0.0;
  2170  001368  0E00               	movlw	0
  2171  00136A  6E76               	movwf	printf@fval,c
  2172  00136C  0E00               	movlw	0
  2173  00136E  6E77               	movwf	printf@fval+1,c
  2174  001370  0E00               	movlw	0
  2175  001372  6E78               	movwf	printf@fval+2,c
  2176                           
  2177                           ;doprnt.c: 1130: } else {
  2178  001374  D033               	goto	l2699
  2179  001376                     l2695:
  2180                           
  2181                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2182  001376  C076  F02B         	movff	printf@fval,___fttol@f1
  2183  00137A  C077  F02C         	movff	printf@fval+1,___fttol@f1+1
  2184  00137E  C078  F02D         	movff	printf@fval+2,___fttol@f1+2
  2185  001382  EC8C  F012         	call	___fttol	;wreg free
  2186  001386  C02B  F06C         	movff	?___fttol,printf@val
  2187  00138A  C02C  F06D         	movff	?___fttol+1,printf@val+1
  2188  00138E  C02D  F06E         	movff	?___fttol+2,printf@val+2
  2189  001392  C02E  F06F         	movff	?___fttol+3,printf@val+3
  2190                           
  2191                           ;doprnt.c: 1132: fval -= (double)val;
  2192  001396  C076  F01C         	movff	printf@fval,___ftsub@f1
  2193  00139A  C077  F01D         	movff	printf@fval+1,___ftsub@f1+1
  2194  00139E  C078  F01E         	movff	printf@fval+2,___ftsub@f1+2
  2195  0013A2  C06C  F009         	movff	printf@val,___lltoft@c
  2196  0013A6  C06D  F00A         	movff	printf@val+1,___lltoft@c+1
  2197  0013AA  C06E  F00B         	movff	printf@val+2,___lltoft@c+2
  2198  0013AE  C06F  F00C         	movff	printf@val+3,___lltoft@c+3
  2199  0013B2  EC65  F016         	call	___lltoft	;wreg free
  2200  0013B6  C009  F01F         	movff	?___lltoft,___ftsub@f2
  2201  0013BA  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  2202  0013BE  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  2203  0013C2  ECBA  F016         	call	___ftsub	;wreg free
  2204  0013C6  C01C  F076         	movff	?___ftsub,printf@fval
  2205  0013CA  C01D  F077         	movff	?___ftsub+1,printf@fval+1
  2206  0013CE  C01E  F078         	movff	?___ftsub+2,printf@fval+2
  2207                           
  2208                           ;doprnt.c: 1133: exp = 0;
  2209  0013D2  0E00               	movlw	0
  2210  0013D4  6E71               	movwf	printf@exp+1,c
  2211  0013D6  0E00               	movlw	0
  2212  0013D8  6E70               	movwf	printf@exp,c
  2213  0013DA  D000               	goto	l2699
  2214  0013DC                     l2699:
  2215                           
  2216                           ;doprnt.c: 1134: }
  2217                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2218  0013DC  0E01               	movlw	1
  2219  0013DE  6E79               	movwf	printf@c,c
  2220  0013E0                     l2701:
  2221  0013E0  0E0A               	movlw	10
  2222  0013E2  1879               	xorwf	printf@c,w,c
  2223  0013E4  B4D8               	btfsc	status,2,c
  2224  0013E6  D01C               	goto	l2713
  2225  0013E8  D001               	goto	l2705
  2226  0013EA  D01A               	goto	l2713
  2227  0013EC                     l2705:
  2228                           
  2229                           ;doprnt.c: 1137: if(val < dpowers[c])
  2230  0013EC  5079               	movf	printf@c,w,c
  2231  0013EE  0D04               	mullw	4
  2232  0013F0  0E01               	movlw	low _dpowers
  2233  0013F2  24F3               	addwf	prodl,w,c
  2234  0013F4  6EF6               	movwf	tblptrl,c
  2235  0013F6  0E10               	movlw	high _dpowers
  2236  0013F8  20F4               	addwfc	prodh,w,c
  2237  0013FA  6EF7               	movwf	tblptrh,c
  2238  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  2239  0013FC                     	endif
  2240  0013FC  0009               	tblrd		*+
  2241  0013FE  50F5               	movf	tablat,w,c
  2242  001400  5C6C               	subwf	printf@val,w,c
  2243  001402  0009               	tblrd		*+
  2244  001404  50F5               	movf	tablat,w,c
  2245  001406  586D               	subwfb	printf@val+1,w,c
  2246  001408  0009               	tblrd		*+
  2247  00140A  50F5               	movf	tablat,w,c
  2248  00140C  586E               	subwfb	printf@val+2,w,c
  2249  00140E  0009               	tblrd		*+
  2250  001410  50F5               	movf	tablat,w,c
  2251  001412  586F               	subwfb	printf@val+3,w,c
  2252  001414  A0D8               	btfss	status,0,c
  2253  001416  D004               	goto	l2713
  2254  001418  D001               	goto	l2709
  2255                           
  2256                           ;doprnt.c: 1138: break;
  2257  00141A  D002               	goto	l2713
  2258  00141C                     l2709:
  2259  00141C  2A79               	incf	printf@c,f,c
  2260  00141E  D7E0               	goto	l2701
  2261  001420                     l2713:
  2262                           
  2263                           ;doprnt.c: 1175: {
  2264                           ;doprnt.c: 1188: if(flag & 0x03)
  2265  001420  0E03               	movlw	3
  2266  001422  1468               	andwf	printf@flag,w,c
  2267  001424  6E5D               	movwf	??_printf& (0+255),c
  2268  001426  0E00               	movlw	0
  2269  001428  1469               	andwf	printf@flag+1,w,c
  2270  00142A  6E5E               	movwf	(??_printf+1)& (0+255),c
  2271  00142C  505D               	movf	??_printf,w,c
  2272  00142E  105E               	iorwf	??_printf+1,w,c
  2273  001430  B4D8               	btfsc	status,2,c
  2274  001432  D049               	goto	l2723
  2275                           
  2276                           ;doprnt.c: 1190: (putch('-') );
  2277  001434  0E2D               	movlw	45
  2278  001436  EC91  F017         	call	_putch
  2279                           
  2280                           ;doprnt.c: 1195: }
  2281                           ;doprnt.c: 1196: while(c--) {
  2282  00143A  D045               	goto	l2723
  2283  00143C                     l2717:
  2284                           
  2285                           ;doprnt.c: 1200: {
  2286                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2287  00143C  C06C  F001         	movff	printf@val,___lldiv@dividend
  2288  001440  C06D  F002         	movff	printf@val+1,___lldiv@dividend+1
  2289  001444  C06E  F003         	movff	printf@val+2,___lldiv@dividend+2
  2290  001448  C06F  F004         	movff	printf@val+3,___lldiv@dividend+3
  2291  00144C  5079               	movf	printf@c,w,c
  2292  00144E  0D04               	mullw	4
  2293  001450  0E01               	movlw	low _dpowers
  2294  001452  24F3               	addwf	prodl,w,c
  2295  001454  6EF6               	movwf	tblptrl,c
  2296  001456  0E10               	movlw	high _dpowers
  2297  001458  20F4               	addwfc	prodh,w,c
  2298  00145A  6EF7               	movwf	tblptrh,c
  2299  00145C                     	if	0	;There are less than 3 active tblptr bytes
  2300  00145C                     	endif
  2301  00145C  0009               	tblrd		*+
  2302  00145E  CFF5 F005          	movff	tablat,___lldiv@divisor
  2303  001462  0009               	tblrd		*+
  2304  001464  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2305  001468  0009               	tblrd		*+
  2306  00146A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2307  00146E  000A               	tblrd		*-
  2308  001470  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2309  001474  ECB1  F014         	call	___lldiv	;wreg free
  2310  001478  C001  F072         	movff	?___lldiv,printf@tmpval
  2311  00147C  C002  F073         	movff	?___lldiv+1,printf@tmpval+1
  2312  001480  C003  F074         	movff	?___lldiv+2,printf@tmpval+2
  2313  001484  C004  F075         	movff	?___lldiv+3,printf@tmpval+3
  2314                           
  2315                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2316  001488  C072  F001         	movff	printf@tmpval,___llmod@dividend
  2317  00148C  C073  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2318  001490  C074  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2319  001494  C075  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2320  001498  0E0A               	movlw	10
  2321  00149A  6E05               	movwf	___llmod@divisor,c
  2322  00149C  0E00               	movlw	0
  2323  00149E  6E06               	movwf	___llmod@divisor+1,c
  2324  0014A0  0E00               	movlw	0
  2325  0014A2  6E07               	movwf	___llmod@divisor+2,c
  2326  0014A4  0E00               	movlw	0
  2327  0014A6  6E08               	movwf	___llmod@divisor+3,c
  2328  0014A8  ECF5  F015         	call	___llmod	;wreg free
  2329  0014AC  C001  F072         	movff	?___llmod,printf@tmpval
  2330  0014B0  C002  F073         	movff	?___llmod+1,printf@tmpval+1
  2331  0014B4  C003  F074         	movff	?___llmod+2,printf@tmpval+2
  2332  0014B8  C004  F075         	movff	?___llmod+3,printf@tmpval+3
  2333                           
  2334                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2335  0014BC  5072               	movf	printf@tmpval,w,c
  2336  0014BE  0F30               	addlw	48
  2337  0014C0  EC91  F017         	call	_putch
  2338  0014C4  D000               	goto	l2723
  2339  0014C6                     l2723:
  2340  0014C6  0679               	decf	printf@c,f,c
  2341  0014C8  2879               	incf	printf@c,w,c
  2342  0014CA  B4D8               	btfsc	status,2,c
  2343  0014CC  D009               	goto	l2729
  2344  0014CE  D7B6               	goto	l2717
  2345                           
  2346                           ;doprnt.c: 1204: }
  2347                           ;doprnt.c: 1206: }
  2348                           ;doprnt.c: 1207: while(exp > 0) {
  2349  0014D0  D007               	goto	l2729
  2350  0014D2                     l2725:
  2351                           
  2352                           ;doprnt.c: 1208: (putch('0') );
  2353  0014D2  0E30               	movlw	48
  2354  0014D4  EC91  F017         	call	_putch
  2355                           
  2356                           ;doprnt.c: 1209: exp--;
  2357  0014D8  0670               	decf	printf@exp,f,c
  2358  0014DA  A0D8               	btfss	status,0,c
  2359  0014DC  0671               	decf	printf@exp+1,f,c
  2360  0014DE  D000               	goto	l2729
  2361  0014E0                     l2729:
  2362  0014E0  BE71               	btfsc	printf@exp+1,7,c
  2363  0014E2  D005               	goto	l2731
  2364  0014E4  5071               	movf	printf@exp+1,w,c
  2365  0014E6  E1F5               	bnz	l2725
  2366  0014E8  0470               	decf	printf@exp,w,c
  2367  0014EA  B0D8               	btfsc	status,0,c
  2368  0014EC  D7F2               	goto	l2725
  2369  0014EE                     l2731:
  2370                           
  2371                           ;doprnt.c: 1210: }
  2372                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2373  0014EE  BE6B               	btfsc	printf@prec+1,7,c
  2374  0014F0  D009               	goto	l215
  2375  0014F2  506B               	movf	printf@prec+1,w,c
  2376  0014F4  E104               	bnz	u2770
  2377  0014F6  0E09               	movlw	9
  2378  0014F8  5C6A               	subwf	printf@prec,w,c
  2379  0014FA  A0D8               	btfss	status,0,c
  2380  0014FC  D003               	goto	l215
  2381  0014FE                     u2770:
  2382                           
  2383                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2384  0014FE  0E08               	movlw	8
  2385  001500  6E79               	movwf	printf@c,c
  2386  001502  D003               	goto	l2735
  2387  001504                     l215:
  2388                           
  2389                           ;doprnt.c: 1213: else
  2390                           ;doprnt.c: 1214: c = prec;
  2391  001504  C06A  F079         	movff	printf@prec,printf@c
  2392  001508  D000               	goto	l2735
  2393  00150A                     l2735:
  2394                           
  2395                           ;doprnt.c: 1215: prec -= c;
  2396  00150A  5079               	movf	printf@c,w,c
  2397  00150C  5E6A               	subwf	printf@prec,f,c
  2398  00150E  0E00               	movlw	0
  2399  001510  BE79               	btfsc	printf@c,7,c
  2400  001512  0EFF               	movlw	255
  2401  001514  5A6B               	subwfb	printf@prec+1,f,c
  2402                           
  2403                           ;doprnt.c: 1219: if(c)
  2404  001516  5079               	movf	printf@c,w,c
  2405  001518  B4D8               	btfsc	status,2,c
  2406  00151A  D004               	goto	l2741
  2407                           
  2408                           ;doprnt.c: 1221: (putch('.') );
  2409  00151C  0E2E               	movlw	46
  2410  00151E  EC91  F017         	call	_putch
  2411  001522  D000               	goto	l2741
  2412  001524                     l2741:
  2413                           
  2414                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2415  001524  5079               	movf	printf@c,w,c
  2416  001526  EC55  F00B         	call	_scale
  2417  00152A  C04E  F063         	movff	?_scale,_printf$1501
  2418  00152E  C04F  F064         	movff	?_scale+1,_printf$1501+1
  2419  001532  C050  F065         	movff	?_scale+2,_printf$1501+2
  2420                           
  2421                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2422  001536  C076  F01F         	movff	printf@fval,___ftmul@f2
  2423  00153A  C077  F020         	movff	printf@fval+1,___ftmul@f2+1
  2424  00153E  C078  F021         	movff	printf@fval+2,___ftmul@f2+2
  2425  001542  C063  F01C         	movff	_printf$1501,___ftmul@f1
  2426  001546  C064  F01D         	movff	_printf$1501+1,___ftmul@f1+1
  2427  00154A  C065  F01E         	movff	_printf$1501+2,___ftmul@f1+2
  2428  00154E  EC10  F012         	call	___ftmul	;wreg free
  2429  001552  C01C  F02B         	movff	?___ftmul,___fttol@f1
  2430  001556  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  2431  00155A  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  2432  00155E  EC8C  F012         	call	___fttol	;wreg free
  2433  001562  C02B  F06C         	movff	?___fttol,printf@val
  2434  001566  C02C  F06D         	movff	?___fttol+1,printf@val+1
  2435  00156A  C02D  F06E         	movff	?___fttol+2,printf@val+2
  2436  00156E  C02E  F06F         	movff	?___fttol+3,printf@val+3
  2437                           
  2438                           ;doprnt.c: 1228: while(c--) {
  2439  001572  D06B               	goto	l2751
  2440  001574                     l2745:
  2441                           
  2442                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2443  001574  C06C  F001         	movff	printf@val,___lldiv@dividend
  2444  001578  C06D  F002         	movff	printf@val+1,___lldiv@dividend+1
  2445  00157C  C06E  F003         	movff	printf@val+2,___lldiv@dividend+2
  2446  001580  C06F  F004         	movff	printf@val+3,___lldiv@dividend+3
  2447  001584  5079               	movf	printf@c,w,c
  2448  001586  0D04               	mullw	4
  2449  001588  0E01               	movlw	low _dpowers
  2450  00158A  24F3               	addwf	prodl,w,c
  2451  00158C  6EF6               	movwf	tblptrl,c
  2452  00158E  0E10               	movlw	high _dpowers
  2453  001590  20F4               	addwfc	prodh,w,c
  2454  001592  6EF7               	movwf	tblptrh,c
  2455  001594                     	if	0	;There are less than 3 active tblptr bytes
  2456  001594                     	endif
  2457  001594  0009               	tblrd		*+
  2458  001596  CFF5 F005          	movff	tablat,___lldiv@divisor
  2459  00159A  0009               	tblrd		*+
  2460  00159C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2461  0015A0  0009               	tblrd		*+
  2462  0015A2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2463  0015A6  000A               	tblrd		*-
  2464  0015A8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2465  0015AC  ECB1  F014         	call	___lldiv	;wreg free
  2466  0015B0  C001  F072         	movff	?___lldiv,printf@tmpval
  2467  0015B4  C002  F073         	movff	?___lldiv+1,printf@tmpval+1
  2468  0015B8  C003  F074         	movff	?___lldiv+2,printf@tmpval+2
  2469  0015BC  C004  F075         	movff	?___lldiv+3,printf@tmpval+3
  2470                           
  2471                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2472  0015C0  C072  F001         	movff	printf@tmpval,___llmod@dividend
  2473  0015C4  C073  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2474  0015C8  C074  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2475  0015CC  C075  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2476  0015D0  0E0A               	movlw	10
  2477  0015D2  6E05               	movwf	___llmod@divisor,c
  2478  0015D4  0E00               	movlw	0
  2479  0015D6  6E06               	movwf	___llmod@divisor+1,c
  2480  0015D8  0E00               	movlw	0
  2481  0015DA  6E07               	movwf	___llmod@divisor+2,c
  2482  0015DC  0E00               	movlw	0
  2483  0015DE  6E08               	movwf	___llmod@divisor+3,c
  2484  0015E0  ECF5  F015         	call	___llmod	;wreg free
  2485  0015E4  C001  F072         	movff	?___llmod,printf@tmpval
  2486  0015E8  C002  F073         	movff	?___llmod+1,printf@tmpval+1
  2487  0015EC  C003  F074         	movff	?___llmod+2,printf@tmpval+2
  2488  0015F0  C004  F075         	movff	?___llmod+3,printf@tmpval+3
  2489                           
  2490                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2491  0015F4  5072               	movf	printf@tmpval,w,c
  2492  0015F6  0F30               	addlw	48
  2493  0015F8  EC91  F017         	call	_putch
  2494                           
  2495                           ;doprnt.c: 1232: val %= dpowers[c];
  2496  0015FC  C06C  F001         	movff	printf@val,___llmod@dividend
  2497  001600  C06D  F002         	movff	printf@val+1,___llmod@dividend+1
  2498  001604  C06E  F003         	movff	printf@val+2,___llmod@dividend+2
  2499  001608  C06F  F004         	movff	printf@val+3,___llmod@dividend+3
  2500  00160C  5079               	movf	printf@c,w,c
  2501  00160E  0D04               	mullw	4
  2502  001610  0E01               	movlw	low _dpowers
  2503  001612  24F3               	addwf	prodl,w,c
  2504  001614  6EF6               	movwf	tblptrl,c
  2505  001616  0E10               	movlw	high _dpowers
  2506  001618  20F4               	addwfc	prodh,w,c
  2507  00161A  6EF7               	movwf	tblptrh,c
  2508  00161C                     	if	0	;There are less than 3 active tblptr bytes
  2509  00161C                     	endif
  2510  00161C  0009               	tblrd		*+
  2511  00161E  CFF5 F005          	movff	tablat,___llmod@divisor
  2512  001622  0009               	tblrd		*+
  2513  001624  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2514  001628  0009               	tblrd		*+
  2515  00162A  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2516  00162E  000A               	tblrd		*-
  2517  001630  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2518  001634  ECF5  F015         	call	___llmod	;wreg free
  2519  001638  C001  F06C         	movff	?___llmod,printf@val
  2520  00163C  C002  F06D         	movff	?___llmod+1,printf@val+1
  2521  001640  C003  F06E         	movff	?___llmod+2,printf@val+2
  2522  001644  C004  F06F         	movff	?___llmod+3,printf@val+3
  2523  001648  D000               	goto	l2751
  2524  00164A                     l2751:
  2525  00164A  0679               	decf	printf@c,f,c
  2526  00164C  2879               	incf	printf@c,w,c
  2527  00164E  B4D8               	btfsc	status,2,c
  2528  001650  D009               	goto	l2757
  2529  001652  D790               	goto	l2745
  2530                           
  2531                           ;doprnt.c: 1233: }
  2532                           ;doprnt.c: 1235: while(prec) {
  2533  001654  D007               	goto	l2757
  2534  001656                     l2753:
  2535                           
  2536                           ;doprnt.c: 1236: (putch('0') );
  2537  001656  0E30               	movlw	48
  2538  001658  EC91  F017         	call	_putch
  2539                           
  2540                           ;doprnt.c: 1237: prec--;
  2541  00165C  066A               	decf	printf@prec,f,c
  2542  00165E  A0D8               	btfss	status,0,c
  2543  001660  066B               	decf	printf@prec+1,f,c
  2544  001662  D000               	goto	l2757
  2545  001664                     l2757:
  2546  001664  506A               	movf	printf@prec,w,c
  2547  001666  106B               	iorwf	printf@prec+1,w,c
  2548  001668  B4D8               	btfsc	status,2,c
  2549  00166A  D010               	goto	l2763
  2550  00166C  D7F4               	goto	l2753
  2551                           
  2552                           ;doprnt.c: 1238: }
  2553                           ;doprnt.c: 1245: continue;
  2554  00166E  D00E               	goto	l2763
  2555  001670                     l2759:
  2556                           
  2557                           ;doprnt.c: 1246: }
  2558                           ;doprnt.c: 1422: {
  2559                           ;doprnt.c: 1438: if(flag & 0x03)
  2560  001670  0E03               	movlw	3
  2561  001672  1468               	andwf	printf@flag,w,c
  2562  001674  6E5D               	movwf	??_printf& (0+255),c
  2563  001676  0E00               	movlw	0
  2564  001678  1469               	andwf	printf@flag+1,w,c
  2565  00167A  6E5E               	movwf	(??_printf+1)& (0+255),c
  2566  00167C  505D               	movf	??_printf,w,c
  2567  00167E  105E               	iorwf	??_printf+1,w,c
  2568  001680  B4D8               	btfsc	status,2,c
  2569  001682  D004               	goto	l2763
  2570                           
  2571                           ;doprnt.c: 1439: (putch('-') );
  2572  001684  0E2D               	movlw	45
  2573  001686  EC91  F017         	call	_putch
  2574  00168A  D000               	goto	l2763
  2575  00168C                     l2763:
  2576  00168C  C058  FFF6         	movff	printf@f,tblptrl
  2577  001690  C059  FFF7         	movff	printf@f+1,tblptrh
  2578  001694  4A58               	infsnz	printf@f,f,c
  2579  001696  2A59               	incf	printf@f+1,f,c
  2580  001698                     	if	0	;tblptru may be non-zero
  2581  001698                     	endif
  2582  001698                     	if	0	;tblptru may be non-zero
  2583  001698                     	endif
  2584  001698  0008               	tblrd		*
  2585  00169A  CFF5 F079          	movff	tablat,printf@c
  2586  00169E  5079               	movf	printf@c,w,c
  2587  0016A0  B4D8               	btfsc	status,2,c
  2588  0016A2  D002               	goto	l226
  2589  0016A4  D4F4               	goto	l2615
  2590  0016A6  D000               	goto	l226
  2591  0016A8                     l226:
  2592  0016A8  0012               	return		;funcret
  2593  0016AA                     __end_of_printf:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           prodh	equ	0xFF4
  2600                           prodl	equ	0xFF3
  2601                           postinc0	equ	0xFEE
  2602                           wreg	equ	0xFE8
  2603                           postdec1	equ	0xFE5
  2604                           fsr1l	equ	0xFE1
  2605                           postinc2	equ	0xFDE
  2606                           postdec2	equ	0xFDD
  2607                           fsr2h	equ	0xFDA
  2608                           fsr2l	equ	0xFD9
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function _scale *****************
  2612 ;; Defined at:
  2613 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  scl             1    wreg     char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  scl             1   83[COMRAM] char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  3   77[COMRAM] char 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2627 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;Total ram usage:        7 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    2
  2634 ;; This function calls:
  2635 ;;		___awdiv
  2636 ;;		___awmod
  2637 ;;		___ftmul
  2638 ;;		___wmul
  2639 ;; This function is called by:
  2640 ;;		_printf
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text6
  2645  0016AA                     __ptext6:
  2646                           	opt stack 0
  2647  0016AA                     _scale:
  2648                           	opt stack 27
  2649                           
  2650                           ;incstack = 0
  2651                           ;scale@scl stored from wreg
  2652  0016AA  6E54               	movwf	scale@scl,c
  2653                           
  2654                           ;doprnt.c: 428: if(scl < 0) {
  2655  0016AC  AE54               	btfss	scale@scl,7,c
  2656  0016AE  D0EF               	goto	l2347
  2657                           
  2658                           ;doprnt.c: 429: scl = -scl;
  2659  0016B0  6C54               	negf	scale@scl,c
  2660                           
  2661                           ;doprnt.c: 430: if(scl>=110)
  2662  0016B2  5054               	movf	scale@scl,w,c
  2663  0016B4  0A80               	xorlw	128
  2664  0016B6  0F12               	addlw	-238
  2665  0016B8  A0D8               	btfss	status,0,c
  2666  0016BA  D08D               	goto	l2337
  2667                           
  2668                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2669  0016BC  0E00               	movlw	0
  2670  0016BE  6E4B               	movwf	___wmul@multiplicand+1,c
  2671  0016C0  0E03               	movlw	3
  2672  0016C2  6E4A               	movwf	___wmul@multiplicand,c
  2673  0016C4  0E00               	movlw	0
  2674  0016C6  6E43               	movwf	___awdiv@divisor+1,c
  2675  0016C8  0E0A               	movlw	10
  2676  0016CA  6E42               	movwf	___awdiv@divisor,c
  2677  0016CC  0E00               	movlw	0
  2678  0016CE  6E3D               	movwf	___awmod@divisor+1,c
  2679  0016D0  0E64               	movlw	100
  2680  0016D2  6E3C               	movwf	___awmod@divisor,c
  2681  0016D4  5054               	movf	scale@scl,w,c
  2682  0016D6  6E3A               	movwf	___awmod@dividend,c
  2683  0016D8  6A3B               	clrf	___awmod@dividend+1,c
  2684  0016DA  BE3A               	btfsc	___awmod@dividend,7,c
  2685  0016DC  063B               	decf	___awmod@dividend+1,f,c
  2686  0016DE  EC39  F015         	call	___awmod	;wreg free
  2687  0016E2  C03A  F040         	movff	?___awmod,___awdiv@dividend
  2688  0016E6  C03B  F041         	movff	?___awmod+1,___awdiv@dividend+1
  2689  0016EA  ECD3  F013         	call	___awdiv	;wreg free
  2690  0016EE  0E09               	movlw	9
  2691  0016F0  2440               	addwf	?___awdiv,w,c
  2692  0016F2  6E48               	movwf	___wmul@multiplier,c
  2693  0016F4  0E00               	movlw	0
  2694  0016F6  2041               	addwfc	?___awdiv+1,w,c
  2695  0016F8  6E49               	movwf	___wmul@multiplier+1,c
  2696  0016FA  EC11  F017         	call	___wmul	;wreg free
  2697  0016FE  0E29               	movlw	low __npowers_
  2698  001700  2448               	addwf	?___wmul,w,c
  2699  001702  6EF6               	movwf	tblptrl,c
  2700  001704  0E10               	movlw	high __npowers_
  2701  001706  2049               	addwfc	?___wmul+1,w,c
  2702  001708  6EF7               	movwf	tblptrh,c
  2703  00170A                     	if	0	;There are less than 3 active tblptr bytes
  2704  00170A                     	endif
  2705  00170A  0009               	tblrd		*+
  2706  00170C  CFF5 F01F          	movff	tablat,___ftmul@f2
  2707  001710  0009               	tblrd		*+
  2708  001712  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2709  001716  000A               	tblrd		*-
  2710  001718  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2711  00171C  0E00               	movlw	0
  2712  00171E  6E43               	movwf	___awdiv@divisor+1,c
  2713  001720  0E64               	movlw	100
  2714  001722  6E42               	movwf	___awdiv@divisor,c
  2715  001724  5054               	movf	scale@scl,w,c
  2716  001726  6E40               	movwf	___awdiv@dividend,c
  2717  001728  6A41               	clrf	___awdiv@dividend+1,c
  2718  00172A  BE40               	btfsc	___awdiv@dividend,7,c
  2719  00172C  0641               	decf	___awdiv@dividend+1,f,c
  2720  00172E  ECD3  F013         	call	___awdiv	;wreg free
  2721  001732  0E12               	movlw	18
  2722  001734  2440               	addwf	?___awdiv,w,c
  2723  001736  6E48               	movwf	___wmul@multiplier,c
  2724  001738  0E00               	movlw	0
  2725  00173A  2041               	addwfc	?___awdiv+1,w,c
  2726  00173C  6E49               	movwf	___wmul@multiplier+1,c
  2727  00173E  0E00               	movlw	0
  2728  001740  6E4B               	movwf	___wmul@multiplicand+1,c
  2729  001742  0E03               	movlw	3
  2730  001744  6E4A               	movwf	___wmul@multiplicand,c
  2731  001746  EC11  F017         	call	___wmul	;wreg free
  2732  00174A  0E29               	movlw	low __npowers_
  2733  00174C  2448               	addwf	?___wmul,w,c
  2734  00174E  6EF6               	movwf	tblptrl,c
  2735  001750  0E10               	movlw	high __npowers_
  2736  001752  2049               	addwfc	?___wmul+1,w,c
  2737  001754  6EF7               	movwf	tblptrh,c
  2738  001756                     	if	0	;There are less than 3 active tblptr bytes
  2739  001756                     	endif
  2740  001756  0009               	tblrd		*+
  2741  001758  CFF5 F01C          	movff	tablat,___ftmul@f1
  2742  00175C  0009               	tblrd		*+
  2743  00175E  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2744  001762  000A               	tblrd		*-
  2745  001764  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2746  001768  EC10  F012         	call	___ftmul	;wreg free
  2747  00176C  C01C  F051         	movff	?___ftmul,_scale$1500
  2748  001770  C01D  F052         	movff	?___ftmul+1,_scale$1500+1
  2749  001774  C01E  F053         	movff	?___ftmul+2,_scale$1500+2
  2750                           
  2751                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2752  001778  C051  F01C         	movff	_scale$1500,___ftmul@f1
  2753  00177C  C052  F01D         	movff	_scale$1500+1,___ftmul@f1+1
  2754  001780  C053  F01E         	movff	_scale$1500+2,___ftmul@f1+2
  2755  001784  0E00               	movlw	0
  2756  001786  6E4B               	movwf	___wmul@multiplicand+1,c
  2757  001788  0E03               	movlw	3
  2758  00178A  6E4A               	movwf	___wmul@multiplicand,c
  2759  00178C  0E00               	movlw	0
  2760  00178E  6E3D               	movwf	___awmod@divisor+1,c
  2761  001790  0E0A               	movlw	10
  2762  001792  6E3C               	movwf	___awmod@divisor,c
  2763  001794  5054               	movf	scale@scl,w,c
  2764  001796  6E3A               	movwf	___awmod@dividend,c
  2765  001798  6A3B               	clrf	___awmod@dividend+1,c
  2766  00179A  BE3A               	btfsc	___awmod@dividend,7,c
  2767  00179C  063B               	decf	___awmod@dividend+1,f,c
  2768  00179E  EC39  F015         	call	___awmod	;wreg free
  2769  0017A2  C03A  F048         	movff	?___awmod,___wmul@multiplier
  2770  0017A6  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  2771  0017AA  EC11  F017         	call	___wmul	;wreg free
  2772  0017AE  0E29               	movlw	low __npowers_
  2773  0017B0  2448               	addwf	?___wmul,w,c
  2774  0017B2  6EF6               	movwf	tblptrl,c
  2775  0017B4  0E10               	movlw	high __npowers_
  2776  0017B6  2049               	addwfc	?___wmul+1,w,c
  2777  0017B8  6EF7               	movwf	tblptrh,c
  2778  0017BA                     	if	0	;There are less than 3 active tblptr bytes
  2779  0017BA                     	endif
  2780  0017BA  0009               	tblrd		*+
  2781  0017BC  CFF5 F01F          	movff	tablat,___ftmul@f2
  2782  0017C0  0009               	tblrd		*+
  2783  0017C2  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2784  0017C6  000A               	tblrd		*-
  2785  0017C8  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2786  0017CC  EC10  F012         	call	___ftmul	;wreg free
  2787  0017D0  D141               	goto	L5
  2788  0017D2  D15A               	goto	l170
  2789  0017D4  D054               	goto	l2343
  2790  0017D6                     l2337:
  2791                           
  2792                           ;doprnt.c: 432: else if(scl > 10)
  2793  0017D6  5054               	movf	scale@scl,w,c
  2794  0017D8  0A80               	xorlw	128
  2795  0017DA  0F75               	addlw	-139
  2796  0017DC  A0D8               	btfss	status,0,c
  2797  0017DE  D04F               	goto	l2343
  2798                           
  2799                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2800  0017E0  0E00               	movlw	0
  2801  0017E2  6E43               	movwf	___awdiv@divisor+1,c
  2802  0017E4  0E0A               	movlw	10
  2803  0017E6  6E42               	movwf	___awdiv@divisor,c
  2804  0017E8  5054               	movf	scale@scl,w,c
  2805  0017EA  6E40               	movwf	___awdiv@dividend,c
  2806  0017EC  6A41               	clrf	___awdiv@dividend+1,c
  2807  0017EE  BE40               	btfsc	___awdiv@dividend,7,c
  2808  0017F0  0641               	decf	___awdiv@dividend+1,f,c
  2809  0017F2  ECD3  F013         	call	___awdiv	;wreg free
  2810  0017F6  0E09               	movlw	9
  2811  0017F8  2440               	addwf	?___awdiv,w,c
  2812  0017FA  6E48               	movwf	___wmul@multiplier,c
  2813  0017FC  0E00               	movlw	0
  2814  0017FE  2041               	addwfc	?___awdiv+1,w,c
  2815  001800  6E49               	movwf	___wmul@multiplier+1,c
  2816  001802  0E00               	movlw	0
  2817  001804  6E4B               	movwf	___wmul@multiplicand+1,c
  2818  001806  0E03               	movlw	3
  2819  001808  6E4A               	movwf	___wmul@multiplicand,c
  2820  00180A  EC11  F017         	call	___wmul	;wreg free
  2821  00180E  0E29               	movlw	low __npowers_
  2822  001810  2448               	addwf	?___wmul,w,c
  2823  001812  6EF6               	movwf	tblptrl,c
  2824  001814  0E10               	movlw	high __npowers_
  2825  001816  2049               	addwfc	?___wmul+1,w,c
  2826  001818  6EF7               	movwf	tblptrh,c
  2827  00181A                     	if	0	;There are less than 3 active tblptr bytes
  2828  00181A                     	endif
  2829  00181A  0009               	tblrd		*+
  2830  00181C  CFF5 F01C          	movff	tablat,___ftmul@f1
  2831  001820  0009               	tblrd		*+
  2832  001822  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2833  001826  000A               	tblrd		*-
  2834  001828  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2835  00182C  0E00               	movlw	0
  2836  00182E  6E4B               	movwf	___wmul@multiplicand+1,c
  2837  001830  0E03               	movlw	3
  2838  001832  6E4A               	movwf	___wmul@multiplicand,c
  2839  001834  0E00               	movlw	0
  2840  001836  6E3D               	movwf	___awmod@divisor+1,c
  2841  001838  0E0A               	movlw	10
  2842  00183A  6E3C               	movwf	___awmod@divisor,c
  2843  00183C  5054               	movf	scale@scl,w,c
  2844  00183E  6E3A               	movwf	___awmod@dividend,c
  2845  001840  6A3B               	clrf	___awmod@dividend+1,c
  2846  001842  BE3A               	btfsc	___awmod@dividend,7,c
  2847  001844  063B               	decf	___awmod@dividend+1,f,c
  2848  001846  EC39  F015         	call	___awmod	;wreg free
  2849  00184A  C03A  F048         	movff	?___awmod,___wmul@multiplier
  2850  00184E  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  2851  001852  EC11  F017         	call	___wmul	;wreg free
  2852  001856  0E29               	movlw	low __npowers_
  2853  001858  2448               	addwf	?___wmul,w,c
  2854  00185A  6EF6               	movwf	tblptrl,c
  2855  00185C  0E10               	movlw	high __npowers_
  2856  00185E  2049               	addwfc	?___wmul+1,w,c
  2857  001860  6EF7               	movwf	tblptrh,c
  2858  001862                     	if	0	;There are less than 3 active tblptr bytes
  2859  001862                     	endif
  2860  001862  0009               	tblrd		*+
  2861  001864  CFF5 F01F          	movff	tablat,___ftmul@f2
  2862  001868  0009               	tblrd		*+
  2863  00186A  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2864  00186E  000A               	tblrd		*-
  2865  001870  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2866  001874  EC10  F012         	call	___ftmul	;wreg free
  2867  001878  D0ED               	goto	L5
  2868  00187A  D106               	goto	l170
  2869  00187C  D000               	goto	l2343
  2870  00187E                     l2343:
  2871                           
  2872                           ;doprnt.c: 434: return _npowers_[scl];
  2873  00187E  5054               	movf	scale@scl,w,c
  2874  001880  0D03               	mullw	3
  2875  001882  0E29               	movlw	low __npowers_
  2876  001884  24F3               	addwf	prodl,w,c
  2877  001886  6EF6               	movwf	tblptrl,c
  2878  001888  0E10               	movlw	high __npowers_
  2879  00188A  D0F2               	goto	L4
  2880  00188C  D0FD               	goto	l170
  2881  00188E                     l2347:
  2882                           
  2883                           ;doprnt.c: 435: }
  2884                           ;doprnt.c: 436: if(scl>=110)
  2885  00188E  5054               	movf	scale@scl,w,c
  2886  001890  0A80               	xorlw	128
  2887  001892  0F12               	addlw	-238
  2888  001894  A0D8               	btfss	status,0,c
  2889  001896  D08D               	goto	l2355
  2890                           
  2891                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2892  001898  0E00               	movlw	0
  2893  00189A  6E4B               	movwf	___wmul@multiplicand+1,c
  2894  00189C  0E03               	movlw	3
  2895  00189E  6E4A               	movwf	___wmul@multiplicand,c
  2896  0018A0  0E00               	movlw	0
  2897  0018A2  6E43               	movwf	___awdiv@divisor+1,c
  2898  0018A4  0E0A               	movlw	10
  2899  0018A6  6E42               	movwf	___awdiv@divisor,c
  2900  0018A8  0E00               	movlw	0
  2901  0018AA  6E3D               	movwf	___awmod@divisor+1,c
  2902  0018AC  0E64               	movlw	100
  2903  0018AE  6E3C               	movwf	___awmod@divisor,c
  2904  0018B0  5054               	movf	scale@scl,w,c
  2905  0018B2  6E3A               	movwf	___awmod@dividend,c
  2906  0018B4  6A3B               	clrf	___awmod@dividend+1,c
  2907  0018B6  BE3A               	btfsc	___awmod@dividend,7,c
  2908  0018B8  063B               	decf	___awmod@dividend+1,f,c
  2909  0018BA  EC39  F015         	call	___awmod	;wreg free
  2910  0018BE  C03A  F040         	movff	?___awmod,___awdiv@dividend
  2911  0018C2  C03B  F041         	movff	?___awmod+1,___awdiv@dividend+1
  2912  0018C6  ECD3  F013         	call	___awdiv	;wreg free
  2913  0018CA  0E09               	movlw	9
  2914  0018CC  2440               	addwf	?___awdiv,w,c
  2915  0018CE  6E48               	movwf	___wmul@multiplier,c
  2916  0018D0  0E00               	movlw	0
  2917  0018D2  2041               	addwfc	?___awdiv+1,w,c
  2918  0018D4  6E49               	movwf	___wmul@multiplier+1,c
  2919  0018D6  EC11  F017         	call	___wmul	;wreg free
  2920  0018DA  0E50               	movlw	low __powers_
  2921  0018DC  2448               	addwf	?___wmul,w,c
  2922  0018DE  6EF6               	movwf	tblptrl,c
  2923  0018E0  0E10               	movlw	high __powers_
  2924  0018E2  2049               	addwfc	?___wmul+1,w,c
  2925  0018E4  6EF7               	movwf	tblptrh,c
  2926  0018E6                     	if	0	;There are less than 3 active tblptr bytes
  2927  0018E6                     	endif
  2928  0018E6  0009               	tblrd		*+
  2929  0018E8  CFF5 F01F          	movff	tablat,___ftmul@f2
  2930  0018EC  0009               	tblrd		*+
  2931  0018EE  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2932  0018F2  000A               	tblrd		*-
  2933  0018F4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2934  0018F8  0E00               	movlw	0
  2935  0018FA  6E43               	movwf	___awdiv@divisor+1,c
  2936  0018FC  0E64               	movlw	100
  2937  0018FE  6E42               	movwf	___awdiv@divisor,c
  2938  001900  5054               	movf	scale@scl,w,c
  2939  001902  6E40               	movwf	___awdiv@dividend,c
  2940  001904  6A41               	clrf	___awdiv@dividend+1,c
  2941  001906  BE40               	btfsc	___awdiv@dividend,7,c
  2942  001908  0641               	decf	___awdiv@dividend+1,f,c
  2943  00190A  ECD3  F013         	call	___awdiv	;wreg free
  2944  00190E  0E12               	movlw	18
  2945  001910  2440               	addwf	?___awdiv,w,c
  2946  001912  6E48               	movwf	___wmul@multiplier,c
  2947  001914  0E00               	movlw	0
  2948  001916  2041               	addwfc	?___awdiv+1,w,c
  2949  001918  6E49               	movwf	___wmul@multiplier+1,c
  2950  00191A  0E00               	movlw	0
  2951  00191C  6E4B               	movwf	___wmul@multiplicand+1,c
  2952  00191E  0E03               	movlw	3
  2953  001920  6E4A               	movwf	___wmul@multiplicand,c
  2954  001922  EC11  F017         	call	___wmul	;wreg free
  2955  001926  0E50               	movlw	low __powers_
  2956  001928  2448               	addwf	?___wmul,w,c
  2957  00192A  6EF6               	movwf	tblptrl,c
  2958  00192C  0E10               	movlw	high __powers_
  2959  00192E  2049               	addwfc	?___wmul+1,w,c
  2960  001930  6EF7               	movwf	tblptrh,c
  2961  001932                     	if	0	;There are less than 3 active tblptr bytes
  2962  001932                     	endif
  2963  001932  0009               	tblrd		*+
  2964  001934  CFF5 F01C          	movff	tablat,___ftmul@f1
  2965  001938  0009               	tblrd		*+
  2966  00193A  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2967  00193E  000A               	tblrd		*-
  2968  001940  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2969  001944  EC10  F012         	call	___ftmul	;wreg free
  2970  001948  C01C  F051         	movff	?___ftmul,_scale$1500
  2971  00194C  C01D  F052         	movff	?___ftmul+1,_scale$1500+1
  2972  001950  C01E  F053         	movff	?___ftmul+2,_scale$1500+2
  2973                           
  2974                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2975  001954  C051  F01C         	movff	_scale$1500,___ftmul@f1
  2976  001958  C052  F01D         	movff	_scale$1500+1,___ftmul@f1+1
  2977  00195C  C053  F01E         	movff	_scale$1500+2,___ftmul@f1+2
  2978  001960  0E00               	movlw	0
  2979  001962  6E4B               	movwf	___wmul@multiplicand+1,c
  2980  001964  0E03               	movlw	3
  2981  001966  6E4A               	movwf	___wmul@multiplicand,c
  2982  001968  0E00               	movlw	0
  2983  00196A  6E3D               	movwf	___awmod@divisor+1,c
  2984  00196C  0E0A               	movlw	10
  2985  00196E  6E3C               	movwf	___awmod@divisor,c
  2986  001970  5054               	movf	scale@scl,w,c
  2987  001972  6E3A               	movwf	___awmod@dividend,c
  2988  001974  6A3B               	clrf	___awmod@dividend+1,c
  2989  001976  BE3A               	btfsc	___awmod@dividend,7,c
  2990  001978  063B               	decf	___awmod@dividend+1,f,c
  2991  00197A  EC39  F015         	call	___awmod	;wreg free
  2992  00197E  C03A  F048         	movff	?___awmod,___wmul@multiplier
  2993  001982  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  2994  001986  EC11  F017         	call	___wmul	;wreg free
  2995  00198A  0E50               	movlw	low __powers_
  2996  00198C  2448               	addwf	?___wmul,w,c
  2997  00198E  6EF6               	movwf	tblptrl,c
  2998  001990  0E10               	movlw	high __powers_
  2999  001992  2049               	addwfc	?___wmul+1,w,c
  3000  001994  6EF7               	movwf	tblptrh,c
  3001  001996                     	if	0	;There are less than 3 active tblptr bytes
  3002  001996                     	endif
  3003  001996  0009               	tblrd		*+
  3004  001998  CFF5 F01F          	movff	tablat,___ftmul@f2
  3005  00199C  0009               	tblrd		*+
  3006  00199E  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3007  0019A2  000A               	tblrd		*-
  3008  0019A4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3009  0019A8  EC10  F012         	call	___ftmul	;wreg free
  3010  0019AC  D053               	goto	L5
  3011  0019AE  D06C               	goto	l170
  3012  0019B0  D059               	goto	l2361
  3013  0019B2                     l2355:
  3014                           
  3015                           ;doprnt.c: 438: else if(scl > 10)
  3016  0019B2  5054               	movf	scale@scl,w,c
  3017  0019B4  0A80               	xorlw	128
  3018  0019B6  0F75               	addlw	-139
  3019  0019B8  A0D8               	btfss	status,0,c
  3020  0019BA  D054               	goto	l2361
  3021                           
  3022                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3023  0019BC  0E00               	movlw	0
  3024  0019BE  6E43               	movwf	___awdiv@divisor+1,c
  3025  0019C0  0E0A               	movlw	10
  3026  0019C2  6E42               	movwf	___awdiv@divisor,c
  3027  0019C4  5054               	movf	scale@scl,w,c
  3028  0019C6  6E40               	movwf	___awdiv@dividend,c
  3029  0019C8  6A41               	clrf	___awdiv@dividend+1,c
  3030  0019CA  BE40               	btfsc	___awdiv@dividend,7,c
  3031  0019CC  0641               	decf	___awdiv@dividend+1,f,c
  3032  0019CE  ECD3  F013         	call	___awdiv	;wreg free
  3033  0019D2  0E09               	movlw	9
  3034  0019D4  2440               	addwf	?___awdiv,w,c
  3035  0019D6  6E48               	movwf	___wmul@multiplier,c
  3036  0019D8  0E00               	movlw	0
  3037  0019DA  2041               	addwfc	?___awdiv+1,w,c
  3038  0019DC  6E49               	movwf	___wmul@multiplier+1,c
  3039  0019DE  0E00               	movlw	0
  3040  0019E0  6E4B               	movwf	___wmul@multiplicand+1,c
  3041  0019E2  0E03               	movlw	3
  3042  0019E4  6E4A               	movwf	___wmul@multiplicand,c
  3043  0019E6  EC11  F017         	call	___wmul	;wreg free
  3044  0019EA  0E50               	movlw	low __powers_
  3045  0019EC  2448               	addwf	?___wmul,w,c
  3046  0019EE  6EF6               	movwf	tblptrl,c
  3047  0019F0  0E10               	movlw	high __powers_
  3048  0019F2  2049               	addwfc	?___wmul+1,w,c
  3049  0019F4  6EF7               	movwf	tblptrh,c
  3050  0019F6                     	if	0	;There are less than 3 active tblptr bytes
  3051  0019F6                     	endif
  3052  0019F6  0009               	tblrd		*+
  3053  0019F8  CFF5 F01C          	movff	tablat,___ftmul@f1
  3054  0019FC  0009               	tblrd		*+
  3055  0019FE  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3056  001A02  000A               	tblrd		*-
  3057  001A04  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3058  001A08  0E00               	movlw	0
  3059  001A0A  6E4B               	movwf	___wmul@multiplicand+1,c
  3060  001A0C  0E03               	movlw	3
  3061  001A0E  6E4A               	movwf	___wmul@multiplicand,c
  3062  001A10  0E00               	movlw	0
  3063  001A12  6E3D               	movwf	___awmod@divisor+1,c
  3064  001A14  0E0A               	movlw	10
  3065  001A16  6E3C               	movwf	___awmod@divisor,c
  3066  001A18  5054               	movf	scale@scl,w,c
  3067  001A1A  6E3A               	movwf	___awmod@dividend,c
  3068  001A1C  6A3B               	clrf	___awmod@dividend+1,c
  3069  001A1E  BE3A               	btfsc	___awmod@dividend,7,c
  3070  001A20  063B               	decf	___awmod@dividend+1,f,c
  3071  001A22  EC39  F015         	call	___awmod	;wreg free
  3072  001A26  C03A  F048         	movff	?___awmod,___wmul@multiplier
  3073  001A2A  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  3074  001A2E  EC11  F017         	call	___wmul	;wreg free
  3075  001A32  0E50               	movlw	low __powers_
  3076  001A34  2448               	addwf	?___wmul,w,c
  3077  001A36  6EF6               	movwf	tblptrl,c
  3078  001A38  0E10               	movlw	high __powers_
  3079  001A3A  2049               	addwfc	?___wmul+1,w,c
  3080  001A3C  6EF7               	movwf	tblptrh,c
  3081  001A3E                     	if	0	;There are less than 3 active tblptr bytes
  3082  001A3E                     	endif
  3083  001A3E  0009               	tblrd		*+
  3084  001A40  CFF5 F01F          	movff	tablat,___ftmul@f2
  3085  001A44  0009               	tblrd		*+
  3086  001A46  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3087  001A4A  000A               	tblrd		*-
  3088  001A4C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3089  001A50  EC10  F012         	call	___ftmul	;wreg free
  3090  001A54                     L5:
  3091  001A54  C01C  F04E         	movff	?___ftmul,?_scale
  3092  001A58  C01D  F04F         	movff	?___ftmul+1,?_scale+1
  3093  001A5C  C01E  F050         	movff	?___ftmul+2,?_scale+2
  3094  001A60  D013               	goto	l170
  3095  001A62  D000               	goto	l2361
  3096  001A64                     l2361:
  3097                           
  3098                           ;doprnt.c: 440: return _powers_[scl];
  3099  001A64  5054               	movf	scale@scl,w,c
  3100  001A66  0D03               	mullw	3
  3101  001A68  0E50               	movlw	low __powers_
  3102  001A6A  24F3               	addwf	prodl,w,c
  3103  001A6C  6EF6               	movwf	tblptrl,c
  3104  001A6E  0E10               	movlw	high __powers_
  3105  001A70                     L4:
  3106  001A70  20F4               	addwfc	prodh,w,c
  3107  001A72  6EF7               	movwf	tblptrh,c
  3108  001A74                     	if	0	;There are less than 3 active tblptr bytes
  3109  001A74                     	endif
  3110  001A74  0009               	tblrd		*+
  3111  001A76  CFF5 F04E          	movff	tablat,?_scale
  3112  001A7A  0009               	tblrd		*+
  3113  001A7C  CFF5 F04F          	movff	tablat,?_scale+1
  3114  001A80  000A               	tblrd		*-
  3115  001A82  CFF5 F050          	movff	tablat,?_scale+2
  3116  001A86  D000               	goto	l170
  3117  001A88                     l170:
  3118  001A88  0012               	return		;funcret
  3119  001A8A                     __end_of_scale:
  3120                           	opt stack 0
  3121                           tblptru	equ	0xFF8
  3122                           tblptrh	equ	0xFF7
  3123                           tblptrl	equ	0xFF6
  3124                           tablat	equ	0xFF5
  3125                           prodh	equ	0xFF4
  3126                           prodl	equ	0xFF3
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           postdec1	equ	0xFE5
  3130                           fsr1l	equ	0xFE1
  3131                           postinc2	equ	0xFDE
  3132                           postdec2	equ	0xFDD
  3133                           fsr2h	equ	0xFDA
  3134                           fsr2l	equ	0xFD9
  3135                           status	equ	0xFD8
  3136                           
  3137 ;; *************** function _putch *****************
  3138 ;; Defined at:
  3139 ;;		line 62 in file "Lab5p2.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  c               1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  c               1    0[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;		None               void
  3146 ;; Registers used:
  3147 ;;		wreg
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_printf
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text7
  3167  002F22                     __ptext7:
  3168                           	opt stack 0
  3169  002F22                     _putch:
  3170                           	opt stack 29
  3171                           
  3172                           ;incstack = 0
  3173                           ;putch@c stored from wreg
  3174  002F22  6E01               	movwf	putch@c,c
  3175                           
  3176                           ;Lab5p2.c: 64: while (!TRMT);
  3177  002F24  D000               	goto	l79
  3178  002F26                     l79:
  3179  002F26  A2AC               	btfss	4012,1,c	;volatile
  3180  002F28  D7FE               	goto	l79
  3181                           
  3182                           ;Lab5p2.c: 65: TXREG = c;
  3183  002F2A  C001  FFAD         	movff	putch@c,4013	;volatile
  3184  002F2E  0012               	return		;funcret
  3185  002F30                     __end_of_putch:
  3186                           	opt stack 0
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           prodh	equ	0xFF4
  3192                           prodl	equ	0xFF3
  3193                           postinc0	equ	0xFEE
  3194                           wreg	equ	0xFE8
  3195                           postdec1	equ	0xFE5
  3196                           fsr1l	equ	0xFE1
  3197                           postinc2	equ	0xFDE
  3198                           postdec2	equ	0xFDD
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _fround *****************
  3204 ;; Defined at:
  3205 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  prec            1    wreg     unsigned char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  prec            1   86[COMRAM] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  3   77[COMRAM] unsigned char 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3219 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;Total ram usage:       10 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    2
  3226 ;; This function calls:
  3227 ;;		___awdiv
  3228 ;;		___awmod
  3229 ;;		___ftmul
  3230 ;;		___wmul
  3231 ;; This function is called by:
  3232 ;;		_printf
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text8
  3237  001DFE                     __ptext8:
  3238                           	opt stack 0
  3239  001DFE                     _fround:
  3240                           	opt stack 27
  3241                           
  3242                           ;incstack = 0
  3243                           ;fround@prec stored from wreg
  3244  001DFE  6E57               	movwf	fround@prec,c
  3245                           
  3246                           ;doprnt.c: 413: if(prec>=110)
  3247  001E00  0E6D               	movlw	109
  3248  001E02  6457               	cpfsgt	fround@prec,c
  3249  001E04  D09B               	goto	l2315
  3250                           
  3251                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3252  001E06  0E00               	movlw	0
  3253  001E08  6E4B               	movwf	___wmul@multiplicand+1,c
  3254  001E0A  0E03               	movlw	3
  3255  001E0C  6E4A               	movwf	___wmul@multiplicand,c
  3256  001E0E  0E00               	movlw	0
  3257  001E10  6E43               	movwf	___awdiv@divisor+1,c
  3258  001E12  0E0A               	movlw	10
  3259  001E14  6E42               	movwf	___awdiv@divisor,c
  3260  001E16  0E00               	movlw	0
  3261  001E18  6E3D               	movwf	___awmod@divisor+1,c
  3262  001E1A  0E64               	movlw	100
  3263  001E1C  6E3C               	movwf	___awmod@divisor,c
  3264  001E1E  C057  F03A         	movff	fround@prec,___awmod@dividend
  3265  001E22  6A3B               	clrf	___awmod@dividend+1,c
  3266  001E24  EC39  F015         	call	___awmod	;wreg free
  3267  001E28  C03A  F040         	movff	?___awmod,___awdiv@dividend
  3268  001E2C  C03B  F041         	movff	?___awmod+1,___awdiv@dividend+1
  3269  001E30  ECD3  F013         	call	___awdiv	;wreg free
  3270  001E34  0E09               	movlw	9
  3271  001E36  2440               	addwf	?___awdiv,w,c
  3272  001E38  6E48               	movwf	___wmul@multiplier,c
  3273  001E3A  0E00               	movlw	0
  3274  001E3C  2041               	addwfc	?___awdiv+1,w,c
  3275  001E3E  6E49               	movwf	___wmul@multiplier+1,c
  3276  001E40  EC11  F017         	call	___wmul	;wreg free
  3277  001E44  0E29               	movlw	low __npowers_
  3278  001E46  2448               	addwf	?___wmul,w,c
  3279  001E48  6EF6               	movwf	tblptrl,c
  3280  001E4A  0E10               	movlw	high __npowers_
  3281  001E4C  2049               	addwfc	?___wmul+1,w,c
  3282  001E4E  6EF7               	movwf	tblptrh,c
  3283  001E50                     	if	0	;There are less than 3 active tblptr bytes
  3284  001E50                     	endif
  3285  001E50  0009               	tblrd		*+
  3286  001E52  CFF5 F01F          	movff	tablat,___ftmul@f2
  3287  001E56  0009               	tblrd		*+
  3288  001E58  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3289  001E5C  000A               	tblrd		*-
  3290  001E5E  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3291  001E62  0E00               	movlw	0
  3292  001E64  6E43               	movwf	___awdiv@divisor+1,c
  3293  001E66  0E64               	movlw	100
  3294  001E68  6E42               	movwf	___awdiv@divisor,c
  3295  001E6A  C057  F040         	movff	fround@prec,___awdiv@dividend
  3296  001E6E  6A41               	clrf	___awdiv@dividend+1,c
  3297  001E70  ECD3  F013         	call	___awdiv	;wreg free
  3298  001E74  0E12               	movlw	18
  3299  001E76  2440               	addwf	?___awdiv,w,c
  3300  001E78  6E48               	movwf	___wmul@multiplier,c
  3301  001E7A  0E00               	movlw	0
  3302  001E7C  2041               	addwfc	?___awdiv+1,w,c
  3303  001E7E  6E49               	movwf	___wmul@multiplier+1,c
  3304  001E80  0E00               	movlw	0
  3305  001E82  6E4B               	movwf	___wmul@multiplicand+1,c
  3306  001E84  0E03               	movlw	3
  3307  001E86  6E4A               	movwf	___wmul@multiplicand,c
  3308  001E88  EC11  F017         	call	___wmul	;wreg free
  3309  001E8C  0E29               	movlw	low __npowers_
  3310  001E8E  2448               	addwf	?___wmul,w,c
  3311  001E90  6EF6               	movwf	tblptrl,c
  3312  001E92  0E10               	movlw	high __npowers_
  3313  001E94  2049               	addwfc	?___wmul+1,w,c
  3314  001E96  6EF7               	movwf	tblptrh,c
  3315  001E98                     	if	0	;There are less than 3 active tblptr bytes
  3316  001E98                     	endif
  3317  001E98  0009               	tblrd		*+
  3318  001E9A  CFF5 F01C          	movff	tablat,___ftmul@f1
  3319  001E9E  0009               	tblrd		*+
  3320  001EA0  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3321  001EA4  000A               	tblrd		*-
  3322  001EA6  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3323  001EAA  EC10  F012         	call	___ftmul	;wreg free
  3324  001EAE  C01C  F054         	movff	?___ftmul,_fround$1498
  3325  001EB2  C01D  F055         	movff	?___ftmul+1,_fround$1498+1
  3326  001EB6  C01E  F056         	movff	?___ftmul+2,_fround$1498+2
  3327                           
  3328                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3329  001EBA  0E00               	movlw	0
  3330  001EBC  6E4B               	movwf	___wmul@multiplicand+1,c
  3331  001EBE  0E03               	movlw	3
  3332  001EC0  6E4A               	movwf	___wmul@multiplicand,c
  3333  001EC2  0E00               	movlw	0
  3334  001EC4  6E3D               	movwf	___awmod@divisor+1,c
  3335  001EC6  0E0A               	movlw	10
  3336  001EC8  6E3C               	movwf	___awmod@divisor,c
  3337  001ECA  C057  F03A         	movff	fround@prec,___awmod@dividend
  3338  001ECE  6A3B               	clrf	___awmod@dividend+1,c
  3339  001ED0  EC39  F015         	call	___awmod	;wreg free
  3340  001ED4  C03A  F048         	movff	?___awmod,___wmul@multiplier
  3341  001ED8  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  3342  001EDC  EC11  F017         	call	___wmul	;wreg free
  3343  001EE0  0E29               	movlw	low __npowers_
  3344  001EE2  2448               	addwf	?___wmul,w,c
  3345  001EE4  6EF6               	movwf	tblptrl,c
  3346  001EE6  0E10               	movlw	high __npowers_
  3347  001EE8  2049               	addwfc	?___wmul+1,w,c
  3348  001EEA  6EF7               	movwf	tblptrh,c
  3349  001EEC                     	if	0	;There are less than 3 active tblptr bytes
  3350  001EEC                     	endif
  3351  001EEC  0009               	tblrd		*+
  3352  001EEE  CFF5 F01F          	movff	tablat,___ftmul@f2
  3353  001EF2  0009               	tblrd		*+
  3354  001EF4  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3355  001EF8  000A               	tblrd		*-
  3356  001EFA  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3357  001EFE  C054  F01C         	movff	_fround$1498,___ftmul@f1
  3358  001F02  C055  F01D         	movff	_fround$1498+1,___ftmul@f1+1
  3359  001F06  C056  F01E         	movff	_fround$1498+2,___ftmul@f1+2
  3360  001F0A  EC10  F012         	call	___ftmul	;wreg free
  3361  001F0E  C01C  F051         	movff	?___ftmul,_fround$1499
  3362  001F12  C01D  F052         	movff	?___ftmul+1,_fround$1499+1
  3363  001F16  C01E  F053         	movff	?___ftmul+2,_fround$1499+2
  3364                           
  3365                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3366  001F1A  C051  F01C         	movff	_fround$1499,___ftmul@f1
  3367  001F1E  C052  F01D         	movff	_fround$1499+1,___ftmul@f1+1
  3368  001F22  C053  F01E         	movff	_fround$1499+2,___ftmul@f1+2
  3369  001F26  0E00               	movlw	0
  3370  001F28  6E1F               	movwf	___ftmul@f2,c
  3371  001F2A  0E00               	movlw	0
  3372  001F2C  6E20               	movwf	___ftmul@f2+1,c
  3373  001F2E  0E3F               	movlw	63
  3374  001F30  6E21               	movwf	___ftmul@f2+2,c
  3375  001F32  EC10  F012         	call	___ftmul	;wreg free
  3376  001F36  D07D               	goto	L7
  3377  001F38  D083               	goto	l163
  3378  001F3A  D062               	goto	l2323
  3379  001F3C                     l2315:
  3380                           
  3381                           ;doprnt.c: 415: else if(prec > 10)
  3382  001F3C  0E0A               	movlw	10
  3383  001F3E  6457               	cpfsgt	fround@prec,c
  3384  001F40  D05F               	goto	l2323
  3385                           
  3386                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3387  001F42  0E00               	movlw	0
  3388  001F44  6E4B               	movwf	___wmul@multiplicand+1,c
  3389  001F46  0E03               	movlw	3
  3390  001F48  6E4A               	movwf	___wmul@multiplicand,c
  3391  001F4A  0E00               	movlw	0
  3392  001F4C  6E3D               	movwf	___awmod@divisor+1,c
  3393  001F4E  0E0A               	movlw	10
  3394  001F50  6E3C               	movwf	___awmod@divisor,c
  3395  001F52  C057  F03A         	movff	fround@prec,___awmod@dividend
  3396  001F56  6A3B               	clrf	___awmod@dividend+1,c
  3397  001F58  EC39  F015         	call	___awmod	;wreg free
  3398  001F5C  C03A  F048         	movff	?___awmod,___wmul@multiplier
  3399  001F60  C03B  F049         	movff	?___awmod+1,___wmul@multiplier+1
  3400  001F64  EC11  F017         	call	___wmul	;wreg free
  3401  001F68  0E29               	movlw	low __npowers_
  3402  001F6A  2448               	addwf	?___wmul,w,c
  3403  001F6C  6EF6               	movwf	tblptrl,c
  3404  001F6E  0E10               	movlw	high __npowers_
  3405  001F70  2049               	addwfc	?___wmul+1,w,c
  3406  001F72  6EF7               	movwf	tblptrh,c
  3407  001F74                     	if	0	;There are less than 3 active tblptr bytes
  3408  001F74                     	endif
  3409  001F74  0009               	tblrd		*+
  3410  001F76  CFF5 F01F          	movff	tablat,___ftmul@f2
  3411  001F7A  0009               	tblrd		*+
  3412  001F7C  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3413  001F80  000A               	tblrd		*-
  3414  001F82  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3415  001F86  0E00               	movlw	0
  3416  001F88  6E43               	movwf	___awdiv@divisor+1,c
  3417  001F8A  0E0A               	movlw	10
  3418  001F8C  6E42               	movwf	___awdiv@divisor,c
  3419  001F8E  C057  F040         	movff	fround@prec,___awdiv@dividend
  3420  001F92  6A41               	clrf	___awdiv@dividend+1,c
  3421  001F94  ECD3  F013         	call	___awdiv	;wreg free
  3422  001F98  0E09               	movlw	9
  3423  001F9A  2440               	addwf	?___awdiv,w,c
  3424  001F9C  6E48               	movwf	___wmul@multiplier,c
  3425  001F9E  0E00               	movlw	0
  3426  001FA0  2041               	addwfc	?___awdiv+1,w,c
  3427  001FA2  6E49               	movwf	___wmul@multiplier+1,c
  3428  001FA4  0E00               	movlw	0
  3429  001FA6  6E4B               	movwf	___wmul@multiplicand+1,c
  3430  001FA8  0E03               	movlw	3
  3431  001FAA  6E4A               	movwf	___wmul@multiplicand,c
  3432  001FAC  EC11  F017         	call	___wmul	;wreg free
  3433  001FB0  0E29               	movlw	low __npowers_
  3434  001FB2  2448               	addwf	?___wmul,w,c
  3435  001FB4  6EF6               	movwf	tblptrl,c
  3436  001FB6  0E10               	movlw	high __npowers_
  3437  001FB8  2049               	addwfc	?___wmul+1,w,c
  3438  001FBA  6EF7               	movwf	tblptrh,c
  3439  001FBC                     	if	0	;There are less than 3 active tblptr bytes
  3440  001FBC                     	endif
  3441  001FBC  0009               	tblrd		*+
  3442  001FBE  CFF5 F01C          	movff	tablat,___ftmul@f1
  3443  001FC2  0009               	tblrd		*+
  3444  001FC4  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3445  001FC8  000A               	tblrd		*-
  3446  001FCA  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3447  001FCE  EC10  F012         	call	___ftmul	;wreg free
  3448  001FD2  C01C  F054         	movff	?___ftmul,_fround$1498
  3449  001FD6  C01D  F055         	movff	?___ftmul+1,_fround$1498+1
  3450  001FDA  C01E  F056         	movff	?___ftmul+2,_fround$1498+2
  3451                           
  3452                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3453  001FDE  C054  F01C         	movff	_fround$1498,___ftmul@f1
  3454  001FE2  C055  F01D         	movff	_fround$1498+1,___ftmul@f1+1
  3455  001FE6  C056  F01E         	movff	_fround$1498+2,___ftmul@f1+2
  3456  001FEA  0E00               	movlw	0
  3457  001FEC  6E1F               	movwf	___ftmul@f2,c
  3458  001FEE  0E00               	movlw	0
  3459  001FF0  6E20               	movwf	___ftmul@f2+1,c
  3460  001FF2  0E3F               	movlw	63
  3461  001FF4  6E21               	movwf	___ftmul@f2+2,c
  3462  001FF6  EC10  F012         	call	___ftmul	;wreg free
  3463  001FFA  D01B               	goto	L7
  3464  001FFC  D021               	goto	l163
  3465  001FFE  D000               	goto	l2323
  3466  002000                     l2323:
  3467                           
  3468                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3469  002000  5057               	movf	fround@prec,w,c
  3470  002002  0D03               	mullw	3
  3471  002004  0E29               	movlw	low __npowers_
  3472  002006  24F3               	addwf	prodl,w,c
  3473  002008  6EF6               	movwf	tblptrl,c
  3474  00200A  0E10               	movlw	high __npowers_
  3475  00200C  20F4               	addwfc	prodh,w,c
  3476  00200E  6EF7               	movwf	tblptrh,c
  3477  002010                     	if	0	;There are less than 3 active tblptr bytes
  3478  002010                     	endif
  3479  002010  0009               	tblrd		*+
  3480  002012  CFF5 F01C          	movff	tablat,___ftmul@f1
  3481  002016  0009               	tblrd		*+
  3482  002018  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3483  00201C  000A               	tblrd		*-
  3484  00201E  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3485  002022  0E00               	movlw	0
  3486  002024  6E1F               	movwf	___ftmul@f2,c
  3487  002026  0E00               	movlw	0
  3488  002028  6E20               	movwf	___ftmul@f2+1,c
  3489  00202A  0E3F               	movlw	63
  3490  00202C  6E21               	movwf	___ftmul@f2+2,c
  3491  00202E  EC10  F012         	call	___ftmul	;wreg free
  3492  002032                     L7:
  3493  002032  C01C  F04E         	movff	?___ftmul,?_fround
  3494  002036  C01D  F04F         	movff	?___ftmul+1,?_fround+1
  3495  00203A  C01E  F050         	movff	?___ftmul+2,?_fround+2
  3496  00203E  D000               	goto	l163
  3497  002040                     l163:
  3498  002040  0012               	return		;funcret
  3499  002042                     __end_of_fround:
  3500                           	opt stack 0
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           prodh	equ	0xFF4
  3506                           prodl	equ	0xFF3
  3507                           postinc0	equ	0xFEE
  3508                           wreg	equ	0xFE8
  3509                           postdec1	equ	0xFE5
  3510                           fsr1l	equ	0xFE1
  3511                           postinc2	equ	0xFDE
  3512                           postdec2	equ	0xFDD
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function ___wmul *****************
  3518 ;; Defined at:
  3519 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  multiplier      2   71[COMRAM] unsigned int 
  3522 ;;  multiplicand    2   73[COMRAM] unsigned int 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  product         2   75[COMRAM] unsigned int 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  2   71[COMRAM] unsigned int 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, prodl, prodh
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;Total ram usage:        6 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_fround
  3544 ;;		_scale
  3545 ;;		_printf
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text9
  3550  002E22                     __ptext9:
  3551                           	opt stack 0
  3552  002E22                     ___wmul:
  3553                           	opt stack 28
  3554                           
  3555                           ;incstack = 0
  3556  002E22  5048               	movf	___wmul@multiplier,w,c
  3557  002E24  024A               	mulwf	___wmul@multiplicand,c
  3558  002E26  CFF3 F04C          	movff	prodl,___wmul@product
  3559  002E2A  CFF4 F04D          	movff	prodh,___wmul@product+1
  3560  002E2E  5048               	movf	___wmul@multiplier,w,c
  3561  002E30  024B               	mulwf	___wmul@multiplicand+1,c
  3562  002E32  50F3               	movf	prodl,w,c
  3563  002E34  264D               	addwf	___wmul@product+1,f,c
  3564  002E36  5049               	movf	___wmul@multiplier+1,w,c
  3565  002E38  024A               	mulwf	___wmul@multiplicand,c
  3566  002E3A  50F3               	movf	prodl,w,c
  3567  002E3C  264D               	addwf	___wmul@product+1,f,c
  3568  002E3E  C04C  F048         	movff	___wmul@product,?___wmul
  3569  002E42  C04D  F049         	movff	___wmul@product+1,?___wmul+1
  3570  002E46  D000               	goto	l262
  3571  002E48                     l262:
  3572  002E48  0012               	return		;funcret
  3573  002E4A                     __end_of___wmul:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           fsr1l	equ	0xFE1
  3585                           postinc2	equ	0xFDE
  3586                           postdec2	equ	0xFDD
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function ___ftmul *****************
  3592 ;; Defined at:
  3593 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  f1              3   27[COMRAM] float 
  3596 ;;  f2              3   30[COMRAM] float 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  3599 ;;  sign            1   41[COMRAM] unsigned char 
  3600 ;;  cntr            1   40[COMRAM] unsigned char 
  3601 ;;  exp             1   36[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  3   27[COMRAM] float 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;Total ram usage:       15 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    1
  3618 ;; This function calls:
  3619 ;;		___ftpack
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;;		_fround
  3623 ;;		_scale
  3624 ;;		_printf
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text10
  3629  002420                     __ptext10:
  3630                           	opt stack 0
  3631  002420                     ___ftmul:
  3632                           	opt stack 27
  3633                           
  3634                           ;incstack = 0
  3635  002420  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  3636  002424  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3637  002426  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3638  002428  341D               	rlcf	___ftmul@f1+1,w,c
  3639  00242A  3622               	rlcf	??___ftmul& (0+255),f,c
  3640  00242C  E301               	bnc	u1781
  3641  00242E  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3642  002430                     u1781:
  3643  002430  5022               	movf	??___ftmul,w,c
  3644  002432  6E25               	movwf	___ftmul@exp,c
  3645  002434  5025               	movf	___ftmul@exp,w,c
  3646  002436  A4D8               	btfss	status,2,c
  3647  002438  D002               	goto	l2067
  3648  00243A  D00E               	goto	l2069
  3649  00243C  D06C               	goto	l691
  3650  00243E                     l2067:
  3651  00243E  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  3652  002442  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3653  002444  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3654  002446  3420               	rlcf	___ftmul@f2+1,w,c
  3655  002448  3622               	rlcf	??___ftmul& (0+255),f,c
  3656  00244A  E301               	bnc	u1801
  3657  00244C  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3658  00244E                     u1801:
  3659  00244E  5022               	movf	??___ftmul,w,c
  3660  002450  6E2A               	movwf	___ftmul@sign,c
  3661  002452  502A               	movf	___ftmul@sign,w,c
  3662  002454  A4D8               	btfss	status,2,c
  3663  002456  D007               	goto	l2073
  3664  002458                     l2069:
  3665  002458  0E00               	movlw	0
  3666  00245A  6E1C               	movwf	?___ftmul,c
  3667  00245C  0E00               	movlw	0
  3668  00245E  6E1D               	movwf	?___ftmul+1,c
  3669  002460  0E00               	movlw	0
  3670  002462  6E1E               	movwf	?___ftmul+2,c
  3671  002464  D058               	goto	l691
  3672  002466                     l2073:
  3673  002466  502A               	movf	___ftmul@sign,w,c
  3674  002468  0F7B               	addlw	123
  3675  00246A  2625               	addwf	___ftmul@exp,f,c
  3676  00246C  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3677  002470  5021               	movf	___ftmul@f2+2,w,c
  3678  002472  1A2A               	xorwf	___ftmul@sign,f,c
  3679  002474  0E80               	movlw	128
  3680  002476  162A               	andwf	___ftmul@sign,f,c
  3681  002478  8E1D               	bsf	___ftmul@f1+1,7,c
  3682  00247A  8E20               	bsf	___ftmul@f2+1,7,c
  3683  00247C  0EFF               	movlw	255
  3684  00247E  161F               	andwf	___ftmul@f2,f,c
  3685  002480  0EFF               	movlw	255
  3686  002482  1620               	andwf	___ftmul@f2+1,f,c
  3687  002484  0E00               	movlw	0
  3688  002486  1621               	andwf	___ftmul@f2+2,f,c
  3689  002488  0E00               	movlw	0
  3690  00248A  6E26               	movwf	___ftmul@f3_as_product,c
  3691  00248C  0E00               	movlw	0
  3692  00248E  6E27               	movwf	___ftmul@f3_as_product+1,c
  3693  002490  0E00               	movlw	0
  3694  002492  6E28               	movwf	___ftmul@f3_as_product+2,c
  3695  002494  0E07               	movlw	7
  3696  002496  6E29               	movwf	___ftmul@cntr,c
  3697  002498  D000               	goto	l2087
  3698  00249A                     l2087:
  3699  00249A  A01C               	btfss	___ftmul@f1,0,c
  3700  00249C  D007               	goto	l2091
  3701  00249E  501F               	movf	___ftmul@f2,w,c
  3702  0024A0  2626               	addwf	___ftmul@f3_as_product,f,c
  3703  0024A2  5020               	movf	___ftmul@f2+1,w,c
  3704  0024A4  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3705  0024A6  5021               	movf	___ftmul@f2+2,w,c
  3706  0024A8  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3707  0024AA  D000               	goto	l2091
  3708  0024AC                     l2091:
  3709  0024AC  90D8               	bcf	status,0,c
  3710  0024AE  321E               	rrcf	___ftmul@f1+2,f,c
  3711  0024B0  321D               	rrcf	___ftmul@f1+1,f,c
  3712  0024B2  321C               	rrcf	___ftmul@f1,f,c
  3713  0024B4  90D8               	bcf	status,0,c
  3714  0024B6  361F               	rlcf	___ftmul@f2,f,c
  3715  0024B8  3620               	rlcf	___ftmul@f2+1,f,c
  3716  0024BA  3621               	rlcf	___ftmul@f2+2,f,c
  3717  0024BC  2E29               	decfsz	___ftmul@cntr,f,c
  3718  0024BE  D7ED               	goto	l2087
  3719  0024C0  D000               	goto	l2095
  3720  0024C2                     l2095:
  3721  0024C2  0E09               	movlw	9
  3722  0024C4  6E29               	movwf	___ftmul@cntr,c
  3723  0024C6  D000               	goto	l2097
  3724  0024C8                     l2097:
  3725  0024C8  A01C               	btfss	___ftmul@f1,0,c
  3726  0024CA  D007               	goto	l2101
  3727  0024CC  501F               	movf	___ftmul@f2,w,c
  3728  0024CE  2626               	addwf	___ftmul@f3_as_product,f,c
  3729  0024D0  5020               	movf	___ftmul@f2+1,w,c
  3730  0024D2  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3731  0024D4  5021               	movf	___ftmul@f2+2,w,c
  3732  0024D6  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3733  0024D8  D000               	goto	l2101
  3734  0024DA                     l2101:
  3735  0024DA  90D8               	bcf	status,0,c
  3736  0024DC  321E               	rrcf	___ftmul@f1+2,f,c
  3737  0024DE  321D               	rrcf	___ftmul@f1+1,f,c
  3738  0024E0  321C               	rrcf	___ftmul@f1,f,c
  3739  0024E2  90D8               	bcf	status,0,c
  3740  0024E4  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3741  0024E6  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3742  0024E8  3226               	rrcf	___ftmul@f3_as_product,f,c
  3743  0024EA  2E29               	decfsz	___ftmul@cntr,f,c
  3744  0024EC  D7ED               	goto	l2097
  3745  0024EE  D000               	goto	l2105
  3746  0024F0                     l2105:
  3747  0024F0  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3748  0024F4  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3749  0024F8  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3750  0024FC  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3751  002500  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3752  002504  EC70  F013         	call	___ftpack	;wreg free
  3753  002508  C001  F01C         	movff	?___ftpack,?___ftmul
  3754  00250C  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3755  002510  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3756  002514  D000               	goto	l691
  3757  002516                     l691:
  3758  002516  0012               	return		;funcret
  3759  002518                     __end_of___ftmul:
  3760                           	opt stack 0
  3761                           tblptru	equ	0xFF8
  3762                           tblptrh	equ	0xFF7
  3763                           tblptrl	equ	0xFF6
  3764                           tablat	equ	0xFF5
  3765                           prodh	equ	0xFF4
  3766                           prodl	equ	0xFF3
  3767                           postinc0	equ	0xFEE
  3768                           wreg	equ	0xFE8
  3769                           postdec1	equ	0xFE5
  3770                           fsr1l	equ	0xFE1
  3771                           postinc2	equ	0xFDE
  3772                           postdec2	equ	0xFDD
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           status	equ	0xFD8
  3776                           
  3777 ;; *************** function ___awmod *****************
  3778 ;; Defined at:
  3779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  dividend        2   57[COMRAM] int 
  3782 ;;  divisor         2   59[COMRAM] int 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  sign            1   62[COMRAM] unsigned char 
  3785 ;;  counter         1   61[COMRAM] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  2   57[COMRAM] int 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;Total ram usage:        6 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_main
  3805 ;;		_fround
  3806 ;;		_scale
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text11
  3811  002A72                     __ptext11:
  3812                           	opt stack 0
  3813  002A72                     ___awmod:
  3814                           	opt stack 28
  3815                           
  3816                           ;incstack = 0
  3817  002A72  0E00               	movlw	0
  3818  002A74  6E3F               	movwf	___awmod@sign,c
  3819  002A76  AE3B               	btfss	___awmod@dividend+1,7,c
  3820  002A78  D007               	goto	l2161
  3821  002A7A  6C3A               	negf	___awmod@dividend,c
  3822  002A7C  1E3B               	comf	___awmod@dividend+1,f,c
  3823  002A7E  B0D8               	btfsc	status,0,c
  3824  002A80  2A3B               	incf	___awmod@dividend+1,f,c
  3825  002A82  0E01               	movlw	1
  3826  002A84  6E3F               	movwf	___awmod@sign,c
  3827  002A86  D000               	goto	l2161
  3828  002A88                     l2161:
  3829  002A88  AE3D               	btfss	___awmod@divisor+1,7,c
  3830  002A8A  D005               	goto	l2165
  3831  002A8C  6C3C               	negf	___awmod@divisor,c
  3832  002A8E  1E3D               	comf	___awmod@divisor+1,f,c
  3833  002A90  B0D8               	btfsc	status,0,c
  3834  002A92  2A3D               	incf	___awmod@divisor+1,f,c
  3835  002A94  D000               	goto	l2165
  3836  002A96                     l2165:
  3837  002A96  503C               	movf	___awmod@divisor,w,c
  3838  002A98  103D               	iorwf	___awmod@divisor+1,w,c
  3839  002A9A  B4D8               	btfsc	status,2,c
  3840  002A9C  D01D               	goto	l2181
  3841  002A9E  0E01               	movlw	1
  3842  002AA0  6E3E               	movwf	___awmod@counter,c
  3843  002AA2  D005               	goto	l2171
  3844  002AA4                     l2169:
  3845  002AA4  90D8               	bcf	status,0,c
  3846  002AA6  363C               	rlcf	___awmod@divisor,f,c
  3847  002AA8  363D               	rlcf	___awmod@divisor+1,f,c
  3848  002AAA  2A3E               	incf	___awmod@counter,f,c
  3849  002AAC  D000               	goto	l2171
  3850  002AAE                     l2171:
  3851  002AAE  BE3D               	btfsc	___awmod@divisor+1,7,c
  3852  002AB0  D002               	goto	l2173
  3853  002AB2  D7F8               	goto	l2169
  3854  002AB4  D000               	goto	l2173
  3855  002AB6                     l2173:
  3856  002AB6  503C               	movf	___awmod@divisor,w,c
  3857  002AB8  5C3A               	subwf	___awmod@dividend,w,c
  3858  002ABA  503D               	movf	___awmod@divisor+1,w,c
  3859  002ABC  583B               	subwfb	___awmod@dividend+1,w,c
  3860  002ABE  A0D8               	btfss	status,0,c
  3861  002AC0  D005               	goto	l2177
  3862  002AC2  503C               	movf	___awmod@divisor,w,c
  3863  002AC4  5E3A               	subwf	___awmod@dividend,f,c
  3864  002AC6  503D               	movf	___awmod@divisor+1,w,c
  3865  002AC8  5A3B               	subwfb	___awmod@dividend+1,f,c
  3866  002ACA  D000               	goto	l2177
  3867  002ACC                     l2177:
  3868  002ACC  90D8               	bcf	status,0,c
  3869  002ACE  323D               	rrcf	___awmod@divisor+1,f,c
  3870  002AD0  323C               	rrcf	___awmod@divisor,f,c
  3871  002AD2  2E3E               	decfsz	___awmod@counter,f,c
  3872  002AD4  D7F0               	goto	l2173
  3873  002AD6  D000               	goto	l2181
  3874  002AD8                     l2181:
  3875  002AD8  503F               	movf	___awmod@sign,w,c
  3876  002ADA  B4D8               	btfsc	status,2,c
  3877  002ADC  D005               	goto	l2185
  3878  002ADE  6C3A               	negf	___awmod@dividend,c
  3879  002AE0  1E3B               	comf	___awmod@dividend+1,f,c
  3880  002AE2  B0D8               	btfsc	status,0,c
  3881  002AE4  2A3B               	incf	___awmod@dividend+1,f,c
  3882  002AE6  D000               	goto	l2185
  3883  002AE8                     l2185:
  3884  002AE8  C03A  F03A         	movff	___awmod@dividend,?___awmod
  3885  002AEC  C03B  F03B         	movff	___awmod@dividend+1,?___awmod+1
  3886  002AF0  D000               	goto	l468
  3887  002AF2                     l468:
  3888  002AF2  0012               	return		;funcret
  3889  002AF4                     __end_of___awmod:
  3890                           	opt stack 0
  3891                           tblptru	equ	0xFF8
  3892                           tblptrh	equ	0xFF7
  3893                           tblptrl	equ	0xFF6
  3894                           tablat	equ	0xFF5
  3895                           prodh	equ	0xFF4
  3896                           prodl	equ	0xFF3
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1l	equ	0xFE1
  3901                           postinc2	equ	0xFDE
  3902                           postdec2	equ	0xFDD
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function ___awdiv *****************
  3908 ;; Defined at:
  3909 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  dividend        2   63[COMRAM] int 
  3912 ;;  divisor         2   65[COMRAM] int 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  quotient        2   69[COMRAM] int 
  3915 ;;  sign            1   68[COMRAM] unsigned char 
  3916 ;;  counter         1   67[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  2   63[COMRAM] int 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        8 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_main
  3936 ;;		_fround
  3937 ;;		_scale
  3938 ;;		_printf
  3939 ;;		_DO_DISPLAY_D2
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text12
  3944  0027A6                     __ptext12:
  3945                           	opt stack 0
  3946  0027A6                     ___awdiv:
  3947                           	opt stack 28
  3948                           
  3949                           ;incstack = 0
  3950  0027A6  0E00               	movlw	0
  3951  0027A8  6E45               	movwf	___awdiv@sign,c
  3952  0027AA  AE43               	btfss	___awdiv@divisor+1,7,c
  3953  0027AC  D007               	goto	l2117
  3954  0027AE  6C42               	negf	___awdiv@divisor,c
  3955  0027B0  1E43               	comf	___awdiv@divisor+1,f,c
  3956  0027B2  B0D8               	btfsc	status,0,c
  3957  0027B4  2A43               	incf	___awdiv@divisor+1,f,c
  3958  0027B6  0E01               	movlw	1
  3959  0027B8  6E45               	movwf	___awdiv@sign,c
  3960  0027BA  D000               	goto	l2117
  3961  0027BC                     l2117:
  3962  0027BC  AE41               	btfss	___awdiv@dividend+1,7,c
  3963  0027BE  D007               	goto	l2123
  3964  0027C0  6C40               	negf	___awdiv@dividend,c
  3965  0027C2  1E41               	comf	___awdiv@dividend+1,f,c
  3966  0027C4  B0D8               	btfsc	status,0,c
  3967  0027C6  2A41               	incf	___awdiv@dividend+1,f,c
  3968  0027C8  0E01               	movlw	1
  3969  0027CA  1A45               	xorwf	___awdiv@sign,f,c
  3970  0027CC  D000               	goto	l2123
  3971  0027CE                     l2123:
  3972  0027CE  0E00               	movlw	0
  3973  0027D0  6E47               	movwf	___awdiv@quotient+1,c
  3974  0027D2  0E00               	movlw	0
  3975  0027D4  6E46               	movwf	___awdiv@quotient,c
  3976  0027D6  5042               	movf	___awdiv@divisor,w,c
  3977  0027D8  1043               	iorwf	___awdiv@divisor+1,w,c
  3978  0027DA  B4D8               	btfsc	status,2,c
  3979  0027DC  D021               	goto	l2145
  3980  0027DE  0E01               	movlw	1
  3981  0027E0  6E44               	movwf	___awdiv@counter,c
  3982  0027E2  D005               	goto	l2131
  3983  0027E4                     l2129:
  3984  0027E4  90D8               	bcf	status,0,c
  3985  0027E6  3642               	rlcf	___awdiv@divisor,f,c
  3986  0027E8  3643               	rlcf	___awdiv@divisor+1,f,c
  3987  0027EA  2A44               	incf	___awdiv@counter,f,c
  3988  0027EC  D000               	goto	l2131
  3989  0027EE                     l2131:
  3990  0027EE  BE43               	btfsc	___awdiv@divisor+1,7,c
  3991  0027F0  D002               	goto	l2133
  3992  0027F2  D7F8               	goto	l2129
  3993  0027F4  D000               	goto	l2133
  3994  0027F6                     l2133:
  3995  0027F6  90D8               	bcf	status,0,c
  3996  0027F8  3646               	rlcf	___awdiv@quotient,f,c
  3997  0027FA  3647               	rlcf	___awdiv@quotient+1,f,c
  3998  0027FC  5042               	movf	___awdiv@divisor,w,c
  3999  0027FE  5C40               	subwf	___awdiv@dividend,w,c
  4000  002800  5043               	movf	___awdiv@divisor+1,w,c
  4001  002802  5841               	subwfb	___awdiv@dividend+1,w,c
  4002  002804  A0D8               	btfss	status,0,c
  4003  002806  D006               	goto	l2141
  4004  002808  5042               	movf	___awdiv@divisor,w,c
  4005  00280A  5E40               	subwf	___awdiv@dividend,f,c
  4006  00280C  5043               	movf	___awdiv@divisor+1,w,c
  4007  00280E  5A41               	subwfb	___awdiv@dividend+1,f,c
  4008  002810  8046               	bsf	___awdiv@quotient,0,c
  4009  002812  D000               	goto	l2141
  4010  002814                     l2141:
  4011  002814  90D8               	bcf	status,0,c
  4012  002816  3243               	rrcf	___awdiv@divisor+1,f,c
  4013  002818  3242               	rrcf	___awdiv@divisor,f,c
  4014  00281A  2E44               	decfsz	___awdiv@counter,f,c
  4015  00281C  D7EC               	goto	l2133
  4016  00281E  D000               	goto	l2145
  4017  002820                     l2145:
  4018  002820  5045               	movf	___awdiv@sign,w,c
  4019  002822  B4D8               	btfsc	status,2,c
  4020  002824  D005               	goto	l2149
  4021  002826  6C46               	negf	___awdiv@quotient,c
  4022  002828  1E47               	comf	___awdiv@quotient+1,f,c
  4023  00282A  B0D8               	btfsc	status,0,c
  4024  00282C  2A47               	incf	___awdiv@quotient+1,f,c
  4025  00282E  D000               	goto	l2149
  4026  002830                     l2149:
  4027  002830  C046  F040         	movff	___awdiv@quotient,?___awdiv
  4028  002834  C047  F041         	movff	___awdiv@quotient+1,?___awdiv+1
  4029  002838  D000               	goto	l455
  4030  00283A                     l455:
  4031  00283A  0012               	return		;funcret
  4032  00283C                     __end_of___awdiv:
  4033                           	opt stack 0
  4034                           tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           prodh	equ	0xFF4
  4039                           prodl	equ	0xFF3
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           postdec1	equ	0xFE5
  4043                           fsr1l	equ	0xFE1
  4044                           postinc2	equ	0xFDE
  4045                           postdec2	equ	0xFDD
  4046                           fsr2h	equ	0xFDA
  4047                           fsr2l	equ	0xFD9
  4048                           status	equ	0xFD8
  4049                           
  4050 ;; *************** function __tdiv_to_l_ *****************
  4051 ;; Defined at:
  4052 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  f1              3    0[COMRAM] float 
  4055 ;;  f2              3    3[COMRAM] float 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  quot            4    9[COMRAM] unsigned long 
  4058 ;;  exp1            1   14[COMRAM] unsigned char 
  4059 ;;  cntr            1   13[COMRAM] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  4    0[COMRAM] unsigned long 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4069 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;Total ram usage:       15 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_printf
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text13
  4083  002206                     __ptext13:
  4084                           	opt stack 0
  4085  002206                     __tdiv_to_l_:
  4086                           	opt stack 29
  4087                           
  4088                           ;incstack = 0
  4089  002206  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4090  00220A  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4091  00220C  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4092  00220E  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  4093  002210  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4094  002212  E301               	bnc	u2241
  4095  002214  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4096  002216                     u2241:
  4097  002216  5007               	movf	??__tdiv_to_l_,w,c
  4098  002218  6E0F               	movwf	__tdiv_to_l_@exp1,c
  4099  00221A  500F               	movf	__tdiv_to_l_@exp1,w,c
  4100  00221C  A4D8               	btfss	status,2,c
  4101  00221E  D002               	goto	l2371
  4102  002220  D05D               	goto	l2413
  4103  002222  D078               	goto	l667
  4104  002224                     l2371:
  4105  002224  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4106  002228  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4107  00222A  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4108  00222C  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  4109  00222E  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4110  002230  E301               	bnc	u2261
  4111  002232  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4112  002234                     u2261:
  4113  002234  5007               	movf	??__tdiv_to_l_,w,c
  4114  002236  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4115  002238  500E               	movf	__tdiv_to_l_@cntr,w,c
  4116  00223A  A4D8               	btfss	status,2,c
  4117  00223C  D002               	goto	l2377
  4118  00223E  D04E               	goto	l2413
  4119  002240  D069               	goto	l667
  4120  002242                     l2377:
  4121  002242  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4122  002244  0EFF               	movlw	255
  4123  002246  1601               	andwf	__tdiv_to_l_@f1,f,c
  4124  002248  0EFF               	movlw	255
  4125  00224A  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4126  00224C  0E00               	movlw	0
  4127  00224E  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4128  002250  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  4129  002252  0EFF               	movlw	255
  4130  002254  1604               	andwf	__tdiv_to_l_@f2,f,c
  4131  002256  0EFF               	movlw	255
  4132  002258  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  4133  00225A  0E00               	movlw	0
  4134  00225C  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  4135  00225E  0E00               	movlw	0
  4136  002260  6E0A               	movwf	__tdiv_to_l_@quot,c
  4137  002262  0E00               	movlw	0
  4138  002264  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  4139  002266  0E00               	movlw	0
  4140  002268  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  4141  00226A  0E00               	movlw	0
  4142  00226C  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  4143  00226E  0E7F               	movlw	127
  4144  002270  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4145  002272  500E               	movf	__tdiv_to_l_@cntr,w,c
  4146  002274  0F98               	addlw	152
  4147  002276  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  4148  002278  0E18               	movlw	24
  4149  00227A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  4150  00227C                     l669:
  4151  00227C  90D8               	bcf	status,0,c
  4152  00227E  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4153  002280  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4154  002282  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4155  002284  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4156  002286  5004               	movf	__tdiv_to_l_@f2,w,c
  4157  002288  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4158  00228A  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4159  00228C  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4160  00228E  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4161  002290  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4162  002292  A0D8               	btfss	status,0,c
  4163  002294  D007               	goto	l670
  4164  002296  5004               	movf	__tdiv_to_l_@f2,w,c
  4165  002298  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4166  00229A  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4167  00229C  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4168  00229E  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4169  0022A0  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4170  0022A2  800A               	bsf	__tdiv_to_l_@quot,0,c
  4171  0022A4                     l670:
  4172  0022A4  90D8               	bcf	status,0,c
  4173  0022A6  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4174  0022A8  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4175  0022AA  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4176  0022AC  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4177  0022AE  D7E6               	goto	l669
  4178  0022B0  D000               	goto	l2399
  4179  0022B2                     l2399:
  4180  0022B2  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4181  0022B4  D010               	goto	l2411
  4182  0022B6  500F               	movf	__tdiv_to_l_@exp1,w,c
  4183  0022B8  0A80               	xorlw	128
  4184  0022BA  0F97               	addlw	151
  4185  0022BC  B0D8               	btfsc	status,0,c
  4186  0022BE  D003               	goto	l2407
  4187  0022C0  D00D               	goto	l2413
  4188  0022C2  D028               	goto	l667
  4189  0022C4  D000               	goto	l2407
  4190  0022C6                     l2407:
  4191  0022C6  90D8               	bcf	status,0,c
  4192  0022C8  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4193  0022CA  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4194  0022CC  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4195  0022CE  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4196  0022D0  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4197  0022D2  D7F9               	goto	l2407
  4198  0022D4  D017               	goto	l676
  4199  0022D6                     l2411:
  4200  0022D6  0E17               	movlw	23
  4201  0022D8  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4202  0022DA  D011               	goto	l2419
  4203  0022DC                     l2413:
  4204  0022DC  0E00               	movlw	0
  4205  0022DE  6E01               	movwf	?__tdiv_to_l_,c
  4206  0022E0  0E00               	movlw	0
  4207  0022E2  6E02               	movwf	?__tdiv_to_l_+1,c
  4208  0022E4  0E00               	movlw	0
  4209  0022E6  6E03               	movwf	?__tdiv_to_l_+2,c
  4210  0022E8  0E00               	movlw	0
  4211  0022EA  6E04               	movwf	?__tdiv_to_l_+3,c
  4212  0022EC  D013               	goto	l667
  4213  0022EE  D007               	goto	l2419
  4214  0022F0                     l2417:
  4215  0022F0  90D8               	bcf	status,0,c
  4216  0022F2  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4217  0022F4  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4218  0022F6  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4219  0022F8  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4220  0022FA  060F               	decf	__tdiv_to_l_@exp1,f,c
  4221  0022FC  D000               	goto	l2419
  4222  0022FE                     l2419:
  4223  0022FE  500F               	movf	__tdiv_to_l_@exp1,w,c
  4224  002300  A4D8               	btfss	status,2,c
  4225  002302  D7F6               	goto	l2417
  4226  002304                     l676:
  4227  002304  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4228  002308  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4229  00230C  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4230  002310  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4231  002314                     l667:
  4232  002314  0012               	return		;funcret
  4233  002316                     __end_of__tdiv_to_l_:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodh	equ	0xFF4
  4240                           prodl	equ	0xFF3
  4241                           postinc0	equ	0xFEE
  4242                           wreg	equ	0xFE8
  4243                           postdec1	equ	0xFE5
  4244                           fsr1l	equ	0xFE1
  4245                           postinc2	equ	0xFDE
  4246                           postdec2	equ	0xFDD
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           status	equ	0xFD8
  4250                           
  4251 ;; *************** function __div_to_l_ *****************
  4252 ;; Defined at:
  4253 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  f1              3    0[COMRAM] unsigned long 
  4256 ;;  f2              3    3[COMRAM] unsigned long 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  quot            4    6[COMRAM] unsigned long 
  4259 ;;  exp1            1   11[COMRAM] unsigned char 
  4260 ;;  cntr            1   10[COMRAM] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  4    0[COMRAM] unsigned long 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4270 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;Total ram usage:       12 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_printf
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text14
  4284  002316                     __ptext14:
  4285                           	opt stack 0
  4286  002316                     __div_to_l_:
  4287                           	opt stack 29
  4288                           
  4289                           ;incstack = 0
  4290  002316  3403               	rlcf	__div_to_l_@f1+2,w,c
  4291  002318  3404               	rlcf	__div_to_l_@f1+3,w,c
  4292  00231A  6E0C               	movwf	__div_to_l_@exp1,c
  4293  00231C  500C               	movf	__div_to_l_@exp1,w,c
  4294  00231E  A4D8               	btfss	status,2,c
  4295  002320  D002               	goto	l2427
  4296  002322  D061               	goto	l2473
  4297  002324  D07C               	goto	l546
  4298  002326                     l2427:
  4299  002326  3406               	rlcf	__div_to_l_@f2+2,w,c
  4300  002328  3407               	rlcf	__div_to_l_@f2+3,w,c
  4301  00232A  6E0B               	movwf	__div_to_l_@cntr,c
  4302  00232C  500B               	movf	__div_to_l_@cntr,w,c
  4303  00232E  A4D8               	btfss	status,2,c
  4304  002330  D002               	goto	l2433
  4305  002332  D059               	goto	l2473
  4306  002334  D074               	goto	l546
  4307  002336                     l2433:
  4308  002336  8E03               	bsf	__div_to_l_@f1+2,7,c
  4309  002338  0EFF               	movlw	255
  4310  00233A  1601               	andwf	__div_to_l_@f1,f,c
  4311  00233C  0EFF               	movlw	255
  4312  00233E  1602               	andwf	__div_to_l_@f1+1,f,c
  4313  002340  0EFF               	movlw	255
  4314  002342  1603               	andwf	__div_to_l_@f1+2,f,c
  4315  002344  0E00               	movlw	0
  4316  002346  1604               	andwf	__div_to_l_@f1+3,f,c
  4317  002348  8E06               	bsf	__div_to_l_@f2+2,7,c
  4318  00234A  0EFF               	movlw	255
  4319  00234C  1604               	andwf	__div_to_l_@f2,f,c
  4320  00234E  0EFF               	movlw	255
  4321  002350  1605               	andwf	__div_to_l_@f2+1,f,c
  4322  002352  0EFF               	movlw	255
  4323  002354  1606               	andwf	__div_to_l_@f2+2,f,c
  4324  002356  0E00               	movlw	0
  4325  002358  1607               	andwf	__div_to_l_@f2+3,f,c
  4326  00235A  0E00               	movlw	0
  4327  00235C  6E07               	movwf	__div_to_l_@quot,c
  4328  00235E  0E00               	movlw	0
  4329  002360  6E08               	movwf	__div_to_l_@quot+1,c
  4330  002362  0E00               	movlw	0
  4331  002364  6E09               	movwf	__div_to_l_@quot+2,c
  4332  002366  0E00               	movlw	0
  4333  002368  6E0A               	movwf	__div_to_l_@quot+3,c
  4334  00236A  0E7F               	movlw	127
  4335  00236C  5E0C               	subwf	__div_to_l_@exp1,f,c
  4336  00236E  500B               	movf	__div_to_l_@cntr,w,c
  4337  002370  0FA0               	addlw	160
  4338  002372  5E0C               	subwf	__div_to_l_@exp1,f,c
  4339  002374  0E20               	movlw	32
  4340  002376  6E0B               	movwf	__div_to_l_@cntr,c
  4341  002378  D000               	goto	l2447
  4342  00237A                     l2447:
  4343  00237A  90D8               	bcf	status,0,c
  4344  00237C  3607               	rlcf	__div_to_l_@quot,f,c
  4345  00237E  3608               	rlcf	__div_to_l_@quot+1,f,c
  4346  002380  3609               	rlcf	__div_to_l_@quot+2,f,c
  4347  002382  360A               	rlcf	__div_to_l_@quot+3,f,c
  4348  002384  5004               	movf	__div_to_l_@f2,w,c
  4349  002386  5C01               	subwf	__div_to_l_@f1,w,c
  4350  002388  5005               	movf	__div_to_l_@f2+1,w,c
  4351  00238A  5802               	subwfb	__div_to_l_@f1+1,w,c
  4352  00238C  5006               	movf	__div_to_l_@f2+2,w,c
  4353  00238E  5803               	subwfb	__div_to_l_@f1+2,w,c
  4354  002390  5007               	movf	__div_to_l_@f2+3,w,c
  4355  002392  5804               	subwfb	__div_to_l_@f1+3,w,c
  4356  002394  A0D8               	btfss	status,0,c
  4357  002396  D00A               	goto	l2455
  4358  002398  5004               	movf	__div_to_l_@f2,w,c
  4359  00239A  5E01               	subwf	__div_to_l_@f1,f,c
  4360  00239C  5005               	movf	__div_to_l_@f2+1,w,c
  4361  00239E  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4362  0023A0  5006               	movf	__div_to_l_@f2+2,w,c
  4363  0023A2  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4364  0023A4  5007               	movf	__div_to_l_@f2+3,w,c
  4365  0023A6  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4366  0023A8  8007               	bsf	__div_to_l_@quot,0,c
  4367  0023AA  D000               	goto	l2455
  4368  0023AC                     l2455:
  4369  0023AC  90D8               	bcf	status,0,c
  4370  0023AE  3601               	rlcf	__div_to_l_@f1,f,c
  4371  0023B0  3602               	rlcf	__div_to_l_@f1+1,f,c
  4372  0023B2  3603               	rlcf	__div_to_l_@f1+2,f,c
  4373  0023B4  3604               	rlcf	__div_to_l_@f1+3,f,c
  4374  0023B6  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4375  0023B8  D7E0               	goto	l2447
  4376  0023BA  D000               	goto	l2459
  4377  0023BC                     l2459:
  4378  0023BC  AE0C               	btfss	__div_to_l_@exp1,7,c
  4379  0023BE  D010               	goto	l2471
  4380  0023C0  500C               	movf	__div_to_l_@exp1,w,c
  4381  0023C2  0A80               	xorlw	128
  4382  0023C4  0F9F               	addlw	159
  4383  0023C6  B0D8               	btfsc	status,0,c
  4384  0023C8  D003               	goto	l2467
  4385  0023CA  D00D               	goto	l2473
  4386  0023CC  D028               	goto	l546
  4387  0023CE  D000               	goto	l2467
  4388  0023D0                     l2467:
  4389  0023D0  90D8               	bcf	status,0,c
  4390  0023D2  320A               	rrcf	__div_to_l_@quot+3,f,c
  4391  0023D4  3209               	rrcf	__div_to_l_@quot+2,f,c
  4392  0023D6  3208               	rrcf	__div_to_l_@quot+1,f,c
  4393  0023D8  3207               	rrcf	__div_to_l_@quot,f,c
  4394  0023DA  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4395  0023DC  D7F9               	goto	l2467
  4396  0023DE  D017               	goto	l555
  4397  0023E0                     l2471:
  4398  0023E0  0E1F               	movlw	31
  4399  0023E2  640C               	cpfsgt	__div_to_l_@exp1,c
  4400  0023E4  D011               	goto	l2479
  4401  0023E6                     l2473:
  4402  0023E6  0E00               	movlw	0
  4403  0023E8  6E01               	movwf	?__div_to_l_,c
  4404  0023EA  0E00               	movlw	0
  4405  0023EC  6E02               	movwf	?__div_to_l_+1,c
  4406  0023EE  0E00               	movlw	0
  4407  0023F0  6E03               	movwf	?__div_to_l_+2,c
  4408  0023F2  0E00               	movlw	0
  4409  0023F4  6E04               	movwf	?__div_to_l_+3,c
  4410  0023F6  D013               	goto	l546
  4411  0023F8  D007               	goto	l2479
  4412  0023FA                     l2477:
  4413  0023FA  90D8               	bcf	status,0,c
  4414  0023FC  3607               	rlcf	__div_to_l_@quot,f,c
  4415  0023FE  3608               	rlcf	__div_to_l_@quot+1,f,c
  4416  002400  3609               	rlcf	__div_to_l_@quot+2,f,c
  4417  002402  360A               	rlcf	__div_to_l_@quot+3,f,c
  4418  002404  060C               	decf	__div_to_l_@exp1,f,c
  4419  002406  D000               	goto	l2479
  4420  002408                     l2479:
  4421  002408  500C               	movf	__div_to_l_@exp1,w,c
  4422  00240A  A4D8               	btfss	status,2,c
  4423  00240C  D7F6               	goto	l2477
  4424  00240E                     l555:
  4425  00240E  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4426  002412  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4427  002416  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4428  00241A  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4429  00241E                     l546:
  4430  00241E  0012               	return		;funcret
  4431  002420                     __end_of__div_to_l_:
  4432                           	opt stack 0
  4433                           tblptru	equ	0xFF8
  4434                           tblptrh	equ	0xFF7
  4435                           tblptrl	equ	0xFF6
  4436                           tablat	equ	0xFF5
  4437                           prodh	equ	0xFF4
  4438                           prodl	equ	0xFF3
  4439                           postinc0	equ	0xFEE
  4440                           wreg	equ	0xFE8
  4441                           postdec1	equ	0xFE5
  4442                           fsr1l	equ	0xFE1
  4443                           postinc2	equ	0xFDE
  4444                           postdec2	equ	0xFDD
  4445                           fsr2h	equ	0xFDA
  4446                           fsr2l	equ	0xFD9
  4447                           status	equ	0xFD8
  4448                           
  4449 ;; *************** function ___lltoft *****************
  4450 ;; Defined at:
  4451 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  c               4    8[COMRAM] unsigned long 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  exp             1   16[COMRAM] unsigned char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  3    8[COMRAM] float 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;Total ram usage:        9 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    1
  4472 ;; This function calls:
  4473 ;;		___ftpack
  4474 ;; This function is called by:
  4475 ;;		_printf
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text15
  4480  002CCA                     __ptext15:
  4481                           	opt stack 0
  4482  002CCA                     ___lltoft:
  4483                           	opt stack 28
  4484                           
  4485                           ;incstack = 0
  4486  002CCA  0E8E               	movlw	142
  4487  002CCC  6E11               	movwf	___lltoft@exp,c
  4488  002CCE  D007               	goto	l2553
  4489  002CD0                     l2551:
  4490  002CD0  90D8               	bcf	status,0,c
  4491  002CD2  320C               	rrcf	___lltoft@c+3,f,c
  4492  002CD4  320B               	rrcf	___lltoft@c+2,f,c
  4493  002CD6  320A               	rrcf	___lltoft@c+1,f,c
  4494  002CD8  3209               	rrcf	___lltoft@c,f,c
  4495  002CDA  2A11               	incf	___lltoft@exp,f,c
  4496  002CDC  D000               	goto	l2553
  4497  002CDE                     l2553:
  4498  002CDE  0E00               	movlw	0
  4499  002CE0  1409               	andwf	___lltoft@c,w,c
  4500  002CE2  6E0D               	movwf	??___lltoft& (0+255),c
  4501  002CE4  0E00               	movlw	0
  4502  002CE6  140A               	andwf	___lltoft@c+1,w,c
  4503  002CE8  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4504  002CEA  0E00               	movlw	0
  4505  002CEC  140B               	andwf	___lltoft@c+2,w,c
  4506  002CEE  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4507  002CF0  0EFF               	movlw	255
  4508  002CF2  140C               	andwf	___lltoft@c+3,w,c
  4509  002CF4  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4510  002CF6  500D               	movf	??___lltoft,w,c
  4511  002CF8  100E               	iorwf	??___lltoft+1,w,c
  4512  002CFA  100F               	iorwf	??___lltoft+2,w,c
  4513  002CFC  1010               	iorwf	??___lltoft+3,w,c
  4514  002CFE  A4D8               	btfss	status,2,c
  4515  002D00  D7E7               	goto	l2551
  4516  002D02  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4517  002D06  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4518  002D0A  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4519  002D0E  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4520  002D12  0E00               	movlw	0
  4521  002D14  6E05               	movwf	___ftpack@sign,c
  4522  002D16  EC70  F013         	call	___ftpack	;wreg free
  4523  002D1A  C001  F009         	movff	?___ftpack,?___lltoft
  4524  002D1E  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4525  002D22  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4526  002D26  D000               	goto	l781
  4527  002D28                     l781:
  4528  002D28  0012               	return		;funcret
  4529  002D2A                     __end_of___lltoft:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           postinc0	equ	0xFEE
  4538                           wreg	equ	0xFE8
  4539                           postdec1	equ	0xFE5
  4540                           fsr1l	equ	0xFE1
  4541                           postinc2	equ	0xFDE
  4542                           postdec2	equ	0xFDD
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function ___llmod *****************
  4548 ;; Defined at:
  4549 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  dividend        4    0[COMRAM] unsigned long 
  4552 ;;  divisor         4    4[COMRAM] unsigned long 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  counter         1    8[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  4    0[COMRAM] unsigned long 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4564 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;Total ram usage:        9 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_printf
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text16
  4578  002BEA                     __ptext16:
  4579                           	opt stack 0
  4580  002BEA                     ___llmod:
  4581                           	opt stack 29
  4582                           
  4583                           ;incstack = 0
  4584  002BEA  5005               	movf	___llmod@divisor,w,c
  4585  002BEC  1006               	iorwf	___llmod@divisor+1,w,c
  4586  002BEE  1007               	iorwf	___llmod@divisor+2,w,c
  4587  002BF0  1008               	iorwf	___llmod@divisor+3,w,c
  4588  002BF2  B4D8               	btfsc	status,2,c
  4589  002BF4  D029               	goto	l761
  4590  002BF6  0E01               	movlw	1
  4591  002BF8  6E09               	movwf	___llmod@counter,c
  4592  002BFA  D007               	goto	l2539
  4593  002BFC                     l2537:
  4594  002BFC  90D8               	bcf	status,0,c
  4595  002BFE  3605               	rlcf	___llmod@divisor,f,c
  4596  002C00  3606               	rlcf	___llmod@divisor+1,f,c
  4597  002C02  3607               	rlcf	___llmod@divisor+2,f,c
  4598  002C04  3608               	rlcf	___llmod@divisor+3,f,c
  4599  002C06  2A09               	incf	___llmod@counter,f,c
  4600  002C08  D000               	goto	l2539
  4601  002C0A                     l2539:
  4602  002C0A  BE08               	btfsc	___llmod@divisor+3,7,c
  4603  002C0C  D002               	goto	l2541
  4604  002C0E  D7F6               	goto	l2537
  4605  002C10  D000               	goto	l2541
  4606  002C12                     l2541:
  4607  002C12  5005               	movf	___llmod@divisor,w,c
  4608  002C14  5C01               	subwf	___llmod@dividend,w,c
  4609  002C16  5006               	movf	___llmod@divisor+1,w,c
  4610  002C18  5802               	subwfb	___llmod@dividend+1,w,c
  4611  002C1A  5007               	movf	___llmod@divisor+2,w,c
  4612  002C1C  5803               	subwfb	___llmod@dividend+2,w,c
  4613  002C1E  5008               	movf	___llmod@divisor+3,w,c
  4614  002C20  5804               	subwfb	___llmod@dividend+3,w,c
  4615  002C22  A0D8               	btfss	status,0,c
  4616  002C24  D009               	goto	l2545
  4617  002C26  5005               	movf	___llmod@divisor,w,c
  4618  002C28  5E01               	subwf	___llmod@dividend,f,c
  4619  002C2A  5006               	movf	___llmod@divisor+1,w,c
  4620  002C2C  5A02               	subwfb	___llmod@dividend+1,f,c
  4621  002C2E  5007               	movf	___llmod@divisor+2,w,c
  4622  002C30  5A03               	subwfb	___llmod@dividend+2,f,c
  4623  002C32  5008               	movf	___llmod@divisor+3,w,c
  4624  002C34  5A04               	subwfb	___llmod@dividend+3,f,c
  4625  002C36  D000               	goto	l2545
  4626  002C38                     l2545:
  4627  002C38  90D8               	bcf	status,0,c
  4628  002C3A  3208               	rrcf	___llmod@divisor+3,f,c
  4629  002C3C  3207               	rrcf	___llmod@divisor+2,f,c
  4630  002C3E  3206               	rrcf	___llmod@divisor+1,f,c
  4631  002C40  3205               	rrcf	___llmod@divisor,f,c
  4632  002C42  2E09               	decfsz	___llmod@counter,f,c
  4633  002C44  D7E6               	goto	l2541
  4634  002C46  D000               	goto	l761
  4635  002C48                     l761:
  4636  002C48  C001  F001         	movff	___llmod@dividend,?___llmod
  4637  002C4C  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4638  002C50  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4639  002C54  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4640  002C58  0012               	return		;funcret
  4641  002C5A                     __end_of___llmod:
  4642                           	opt stack 0
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postdec1	equ	0xFE5
  4652                           fsr1l	equ	0xFE1
  4653                           postinc2	equ	0xFDE
  4654                           postdec2	equ	0xFDD
  4655                           fsr2h	equ	0xFDA
  4656                           fsr2l	equ	0xFD9
  4657                           status	equ	0xFD8
  4658                           
  4659 ;; *************** function ___lldiv *****************
  4660 ;; Defined at:
  4661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  dividend        4    0[COMRAM] unsigned long 
  4664 ;;  divisor         4    4[COMRAM] unsigned long 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  quotient        4    8[COMRAM] unsigned long 
  4667 ;;  counter         1   12[COMRAM] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  4    0[COMRAM] unsigned long 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4677 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;Total ram usage:       13 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		_printf
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text17
  4691  002962                     __ptext17:
  4692                           	opt stack 0
  4693  002962                     ___lldiv:
  4694                           	opt stack 29
  4695                           
  4696                           ;incstack = 0
  4697  002962  0E00               	movlw	0
  4698  002964  6E09               	movwf	___lldiv@quotient,c
  4699  002966  0E00               	movlw	0
  4700  002968  6E0A               	movwf	___lldiv@quotient+1,c
  4701  00296A  0E00               	movlw	0
  4702  00296C  6E0B               	movwf	___lldiv@quotient+2,c
  4703  00296E  0E00               	movlw	0
  4704  002970  6E0C               	movwf	___lldiv@quotient+3,c
  4705  002972  5005               	movf	___lldiv@divisor,w,c
  4706  002974  1006               	iorwf	___lldiv@divisor+1,w,c
  4707  002976  1007               	iorwf	___lldiv@divisor+2,w,c
  4708  002978  1008               	iorwf	___lldiv@divisor+3,w,c
  4709  00297A  B4D8               	btfsc	status,2,c
  4710  00297C  D02F               	goto	l751
  4711  00297E  0E01               	movlw	1
  4712  002980  6E0D               	movwf	___lldiv@counter,c
  4713  002982  D007               	goto	l2519
  4714  002984                     l2517:
  4715  002984  90D8               	bcf	status,0,c
  4716  002986  3605               	rlcf	___lldiv@divisor,f,c
  4717  002988  3606               	rlcf	___lldiv@divisor+1,f,c
  4718  00298A  3607               	rlcf	___lldiv@divisor+2,f,c
  4719  00298C  3608               	rlcf	___lldiv@divisor+3,f,c
  4720  00298E  2A0D               	incf	___lldiv@counter,f,c
  4721  002990  D000               	goto	l2519
  4722  002992                     l2519:
  4723  002992  BE08               	btfsc	___lldiv@divisor+3,7,c
  4724  002994  D002               	goto	l2521
  4725  002996  D7F6               	goto	l2517
  4726  002998  D000               	goto	l2521
  4727  00299A                     l2521:
  4728  00299A  90D8               	bcf	status,0,c
  4729  00299C  3609               	rlcf	___lldiv@quotient,f,c
  4730  00299E  360A               	rlcf	___lldiv@quotient+1,f,c
  4731  0029A0  360B               	rlcf	___lldiv@quotient+2,f,c
  4732  0029A2  360C               	rlcf	___lldiv@quotient+3,f,c
  4733  0029A4  5005               	movf	___lldiv@divisor,w,c
  4734  0029A6  5C01               	subwf	___lldiv@dividend,w,c
  4735  0029A8  5006               	movf	___lldiv@divisor+1,w,c
  4736  0029AA  5802               	subwfb	___lldiv@dividend+1,w,c
  4737  0029AC  5007               	movf	___lldiv@divisor+2,w,c
  4738  0029AE  5803               	subwfb	___lldiv@dividend+2,w,c
  4739  0029B0  5008               	movf	___lldiv@divisor+3,w,c
  4740  0029B2  5804               	subwfb	___lldiv@dividend+3,w,c
  4741  0029B4  A0D8               	btfss	status,0,c
  4742  0029B6  D00A               	goto	l2529
  4743  0029B8  5005               	movf	___lldiv@divisor,w,c
  4744  0029BA  5E01               	subwf	___lldiv@dividend,f,c
  4745  0029BC  5006               	movf	___lldiv@divisor+1,w,c
  4746  0029BE  5A02               	subwfb	___lldiv@dividend+1,f,c
  4747  0029C0  5007               	movf	___lldiv@divisor+2,w,c
  4748  0029C2  5A03               	subwfb	___lldiv@dividend+2,f,c
  4749  0029C4  5008               	movf	___lldiv@divisor+3,w,c
  4750  0029C6  5A04               	subwfb	___lldiv@dividend+3,f,c
  4751  0029C8  8009               	bsf	___lldiv@quotient,0,c
  4752  0029CA  D000               	goto	l2529
  4753  0029CC                     l2529:
  4754  0029CC  90D8               	bcf	status,0,c
  4755  0029CE  3208               	rrcf	___lldiv@divisor+3,f,c
  4756  0029D0  3207               	rrcf	___lldiv@divisor+2,f,c
  4757  0029D2  3206               	rrcf	___lldiv@divisor+1,f,c
  4758  0029D4  3205               	rrcf	___lldiv@divisor,f,c
  4759  0029D6  2E0D               	decfsz	___lldiv@counter,f,c
  4760  0029D8  D7E0               	goto	l2521
  4761  0029DA  D000               	goto	l751
  4762  0029DC                     l751:
  4763  0029DC  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4764  0029E0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4765  0029E4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4766  0029E8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4767  0029EC  0012               	return		;funcret
  4768  0029EE                     __end_of___lldiv:
  4769                           	opt stack 0
  4770                           tblptru	equ	0xFF8
  4771                           tblptrh	equ	0xFF7
  4772                           tblptrl	equ	0xFF6
  4773                           tablat	equ	0xFF5
  4774                           prodh	equ	0xFF4
  4775                           prodl	equ	0xFF3
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           postdec1	equ	0xFE5
  4779                           fsr1l	equ	0xFE1
  4780                           postinc2	equ	0xFDE
  4781                           postdec2	equ	0xFDD
  4782                           fsr2h	equ	0xFDA
  4783                           fsr2l	equ	0xFD9
  4784                           status	equ	0xFD8
  4785                           
  4786 ;; *************** function ___fttol *****************
  4787 ;; Defined at:
  4788 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  f1              3   42[COMRAM] float 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  lval            4   52[COMRAM] unsigned long 
  4793 ;;  exp1            1   56[COMRAM] unsigned char 
  4794 ;;  sign1           1   51[COMRAM] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  4   42[COMRAM] long 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;Total ram usage:       15 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;;		_printf
  4815 ;;		_trunc
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text18
  4820  002518                     __ptext18:
  4821                           	opt stack 0
  4822  002518                     ___fttol:
  4823                           	opt stack 28
  4824                           
  4825                           ;incstack = 0
  4826  002518  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4827  00251C  6A30               	clrf	(??___fttol+1)& (0+255),c
  4828  00251E  6A31               	clrf	(??___fttol+2)& (0+255),c
  4829  002520  342C               	rlcf	___fttol@f1+1,w,c
  4830  002522  362F               	rlcf	??___fttol& (0+255),f,c
  4831  002524  E301               	bnc	u1961
  4832  002526  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4833  002528                     u1961:
  4834  002528  502F               	movf	??___fttol,w,c
  4835  00252A  6E39               	movwf	___fttol@exp1,c
  4836  00252C  5039               	movf	___fttol@exp1,w,c
  4837  00252E  A4D8               	btfss	status,2,c
  4838  002530  D002               	goto	l2195
  4839  002532  D039               	goto	l2219
  4840  002534  D063               	goto	l712
  4841  002536                     l2195:
  4842  002536  0E17               	movlw	23
  4843  002538  6E2F               	movwf	??___fttol& (0+255),c
  4844  00253A  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4845  00253E  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4846  002542  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4847  002546  282F               	incf	??___fttol,w,c
  4848  002548  6E33               	movwf	(??___fttol+4)& (0+255),c
  4849  00254A  D004               	goto	u1980
  4850  00254C                     u1985:
  4851  00254C  90D8               	bcf	status,0,c
  4852  00254E  3232               	rrcf	??___fttol+3,f,c
  4853  002550  3231               	rrcf	??___fttol+2,f,c
  4854  002552  3230               	rrcf	??___fttol+1,f,c
  4855  002554                     u1980:
  4856  002554  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4857  002556  D7FA               	goto	u1985
  4858  002558  5030               	movf	??___fttol+1,w,c
  4859  00255A  6E34               	movwf	___fttol@sign1,c
  4860  00255C  8E2C               	bsf	___fttol@f1+1,7,c
  4861  00255E  0EFF               	movlw	255
  4862  002560  162B               	andwf	___fttol@f1,f,c
  4863  002562  0EFF               	movlw	255
  4864  002564  162C               	andwf	___fttol@f1+1,f,c
  4865  002566  0E00               	movlw	0
  4866  002568  162D               	andwf	___fttol@f1+2,f,c
  4867  00256A  502B               	movf	___fttol@f1,w,c
  4868  00256C  6E35               	movwf	___fttol@lval,c
  4869  00256E  502C               	movf	___fttol@f1+1,w,c
  4870  002570  6E36               	movwf	___fttol@lval+1,c
  4871  002572  502D               	movf	___fttol@f1+2,w,c
  4872  002574  6E37               	movwf	___fttol@lval+2,c
  4873  002576  6A38               	clrf	___fttol@lval+3,c
  4874  002578  0E8E               	movlw	142
  4875  00257A  5E39               	subwf	___fttol@exp1,f,c
  4876  00257C  AE39               	btfss	___fttol@exp1,7,c
  4877  00257E  D010               	goto	l2217
  4878  002580  5039               	movf	___fttol@exp1,w,c
  4879  002582  0A80               	xorlw	128
  4880  002584  0F8F               	addlw	143
  4881  002586  B0D8               	btfsc	status,0,c
  4882  002588  D003               	goto	l2213
  4883  00258A  D00D               	goto	l2219
  4884  00258C  D037               	goto	l712
  4885  00258E  D000               	goto	l2213
  4886  002590                     l2213:
  4887  002590  90D8               	bcf	status,0,c
  4888  002592  3238               	rrcf	___fttol@lval+3,f,c
  4889  002594  3237               	rrcf	___fttol@lval+2,f,c
  4890  002596  3236               	rrcf	___fttol@lval+1,f,c
  4891  002598  3235               	rrcf	___fttol@lval,f,c
  4892  00259A  3E39               	incfsz	___fttol@exp1,f,c
  4893  00259C  D7F9               	goto	l2213
  4894  00259E  D019               	goto	l2227
  4895  0025A0                     l2217:
  4896  0025A0  0E17               	movlw	23
  4897  0025A2  6439               	cpfsgt	___fttol@exp1,c
  4898  0025A4  D011               	goto	l2225
  4899  0025A6                     l2219:
  4900  0025A6  0E00               	movlw	0
  4901  0025A8  6E2B               	movwf	?___fttol,c
  4902  0025AA  0E00               	movlw	0
  4903  0025AC  6E2C               	movwf	?___fttol+1,c
  4904  0025AE  0E00               	movlw	0
  4905  0025B0  6E2D               	movwf	?___fttol+2,c
  4906  0025B2  0E00               	movlw	0
  4907  0025B4  6E2E               	movwf	?___fttol+3,c
  4908  0025B6  D022               	goto	l712
  4909  0025B8  D007               	goto	l2225
  4910  0025BA                     l2223:
  4911  0025BA  90D8               	bcf	status,0,c
  4912  0025BC  3635               	rlcf	___fttol@lval,f,c
  4913  0025BE  3636               	rlcf	___fttol@lval+1,f,c
  4914  0025C0  3637               	rlcf	___fttol@lval+2,f,c
  4915  0025C2  3638               	rlcf	___fttol@lval+3,f,c
  4916  0025C4  0639               	decf	___fttol@exp1,f,c
  4917  0025C6  D000               	goto	l2225
  4918  0025C8                     l2225:
  4919  0025C8  5039               	movf	___fttol@exp1,w,c
  4920  0025CA  B4D8               	btfsc	status,2,c
  4921  0025CC  D002               	goto	l2227
  4922  0025CE  D7F5               	goto	l2223
  4923  0025D0  D000               	goto	l2227
  4924  0025D2                     l2227:
  4925  0025D2  5034               	movf	___fttol@sign1,w,c
  4926  0025D4  B4D8               	btfsc	status,2,c
  4927  0025D6  D009               	goto	l2231
  4928  0025D8  1E38               	comf	___fttol@lval+3,f,c
  4929  0025DA  1E37               	comf	___fttol@lval+2,f,c
  4930  0025DC  1E36               	comf	___fttol@lval+1,f,c
  4931  0025DE  6C35               	negf	___fttol@lval,c
  4932  0025E0  0E00               	movlw	0
  4933  0025E2  2236               	addwfc	___fttol@lval+1,f,c
  4934  0025E4  2237               	addwfc	___fttol@lval+2,f,c
  4935  0025E6  2238               	addwfc	___fttol@lval+3,f,c
  4936  0025E8  D000               	goto	l2231
  4937  0025EA                     l2231:
  4938  0025EA  C035  F02B         	movff	___fttol@lval,?___fttol
  4939  0025EE  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4940  0025F2  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4941  0025F6  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4942  0025FA  D000               	goto	l712
  4943  0025FC                     l712:
  4944  0025FC  0012               	return		;funcret
  4945  0025FE                     __end_of___fttol:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           postinc0	equ	0xFEE
  4954                           wreg	equ	0xFE8
  4955                           postdec1	equ	0xFE5
  4956                           fsr1l	equ	0xFE1
  4957                           postinc2	equ	0xFDE
  4958                           postdec2	equ	0xFDD
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function ___ftsub *****************
  4964 ;; Defined at:
  4965 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  f1              3   27[COMRAM] float 
  4968 ;;  f2              3   30[COMRAM] float 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  3   27[COMRAM] float 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4980 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;Total ram usage:        6 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    2
  4987 ;; This function calls:
  4988 ;;		___ftadd
  4989 ;; This function is called by:
  4990 ;;		_printf
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text19
  4995  002D74                     __ptext19:
  4996                           	opt stack 0
  4997  002D74                     ___ftsub:
  4998                           	opt stack 27
  4999                           
  5000                           ;incstack = 0
  5001  002D74  501F               	movf	___ftsub@f2,w,c
  5002  002D76  1020               	iorwf	___ftsub@f2+1,w,c
  5003  002D78  1021               	iorwf	___ftsub@f2+2,w,c
  5004  002D7A  B4D8               	btfsc	status,2,c
  5005  002D7C  D007               	goto	l2485
  5006  002D7E  0E00               	movlw	0
  5007  002D80  1A1F               	xorwf	___ftsub@f2,f,c
  5008  002D82  0E00               	movlw	0
  5009  002D84  1A20               	xorwf	___ftsub@f2+1,f,c
  5010  002D86  0E80               	movlw	128
  5011  002D88  1A21               	xorwf	___ftsub@f2+2,f,c
  5012  002D8A  D000               	goto	l2485
  5013  002D8C                     l2485:
  5014  002D8C  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  5015  002D90  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  5016  002D94  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  5017  002D98  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  5018  002D9C  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  5019  002DA0  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  5020  002DA4  EC21  F010         	call	___ftadd	;wreg free
  5021  002DA8  C010  F01C         	movff	?___ftadd,?___ftsub
  5022  002DAC  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  5023  002DB0  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  5024  002DB4  D000               	goto	l708
  5025  002DB6                     l708:
  5026  002DB6  0012               	return		;funcret
  5027  002DB8                     __end_of___ftsub:
  5028                           	opt stack 0
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           prodh	equ	0xFF4
  5034                           prodl	equ	0xFF3
  5035                           postinc0	equ	0xFEE
  5036                           wreg	equ	0xFE8
  5037                           postdec1	equ	0xFE5
  5038                           fsr1l	equ	0xFE1
  5039                           postinc2	equ	0xFDE
  5040                           postdec2	equ	0xFDD
  5041                           fsr2h	equ	0xFDA
  5042                           fsr2l	equ	0xFD9
  5043                           status	equ	0xFD8
  5044                           
  5045 ;; *************** function ___ftadd *****************
  5046 ;; Defined at:
  5047 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  f1              3   15[COMRAM] float 
  5050 ;;  f2              3   18[COMRAM] float 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  exp1            1   26[COMRAM] unsigned char 
  5053 ;;  exp2            1   25[COMRAM] unsigned char 
  5054 ;;  sign            1   24[COMRAM] unsigned char 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  3   15[COMRAM] float 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5064 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;Total ram usage:       12 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    1
  5071 ;; This function calls:
  5072 ;;		___ftpack
  5073 ;; This function is called by:
  5074 ;;		_main
  5075 ;;		_printf
  5076 ;;		___ftsub
  5077 ;;		_round
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text20
  5082  002042                     __ptext20:
  5083                           	opt stack 0
  5084  002042                     ___ftadd:
  5085                           	opt stack 28
  5086                           
  5087                           ;incstack = 0
  5088  002042  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  5089  002046  6A17               	clrf	(??___ftadd+1)& (0+255),c
  5090  002048  6A18               	clrf	(??___ftadd+2)& (0+255),c
  5091  00204A  3411               	rlcf	___ftadd@f1+1,w,c
  5092  00204C  3616               	rlcf	??___ftadd& (0+255),f,c
  5093  00204E  E301               	bnc	u1571
  5094  002050  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  5095  002052                     u1571:
  5096  002052  5016               	movf	??___ftadd,w,c
  5097  002054  6E1B               	movwf	___ftadd@exp1,c
  5098  002056  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  5099  00205A  6A17               	clrf	(??___ftadd+1)& (0+255),c
  5100  00205C  6A18               	clrf	(??___ftadd+2)& (0+255),c
  5101  00205E  3414               	rlcf	___ftadd@f2+1,w,c
  5102  002060  3616               	rlcf	??___ftadd& (0+255),f,c
  5103  002062  E301               	bnc	u1581
  5104  002064  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  5105  002066                     u1581:
  5106  002066  5016               	movf	??___ftadd,w,c
  5107  002068  6E1A               	movwf	___ftadd@exp2,c
  5108  00206A  501B               	movf	___ftadd@exp1,w,c
  5109  00206C  B4D8               	btfsc	status,2,c
  5110  00206E  D00B               	goto	l627
  5111  002070  501A               	movf	___ftadd@exp2,w,c
  5112  002072  5C1B               	subwf	___ftadd@exp1,w,c
  5113  002074  B0D8               	btfsc	status,0,c
  5114  002076  D00E               	goto	l1999
  5115  002078  501B               	movf	___ftadd@exp1,w,c
  5116  00207A  0800               	sublw	0
  5117  00207C  241A               	addwf	___ftadd@exp2,w,c
  5118  00207E  6E16               	movwf	??___ftadd& (0+255),c
  5119  002080  0E18               	movlw	24
  5120  002082  6416               	cpfsgt	??___ftadd,c
  5121  002084  D007               	goto	l1999
  5122  002086                     l627:
  5123  002086  C013  F010         	movff	___ftadd@f2,?___ftadd
  5124  00208A  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  5125  00208E  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  5126  002092  D0B8               	goto	l628
  5127  002094                     l1999:
  5128  002094  501A               	movf	___ftadd@exp2,w,c
  5129  002096  B4D8               	btfsc	status,2,c
  5130  002098  D00B               	goto	l631
  5131  00209A  501B               	movf	___ftadd@exp1,w,c
  5132  00209C  5C1A               	subwf	___ftadd@exp2,w,c
  5133  00209E  B0D8               	btfsc	status,0,c
  5134  0020A0  D00E               	goto	l2005
  5135  0020A2  501A               	movf	___ftadd@exp2,w,c
  5136  0020A4  0800               	sublw	0
  5137  0020A6  241B               	addwf	___ftadd@exp1,w,c
  5138  0020A8  6E16               	movwf	??___ftadd& (0+255),c
  5139  0020AA  0E18               	movlw	24
  5140  0020AC  6416               	cpfsgt	??___ftadd,c
  5141  0020AE  D007               	goto	l2005
  5142  0020B0                     l631:
  5143  0020B0  C010  F010         	movff	___ftadd@f1,?___ftadd
  5144  0020B4  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  5145  0020B8  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  5146  0020BC  D0A3               	goto	l628
  5147  0020BE                     l2005:
  5148  0020BE  0E06               	movlw	6
  5149  0020C0  6E19               	movwf	___ftadd@sign,c
  5150  0020C2  AE12               	btfss	___ftadd@f1+2,7,c
  5151  0020C4  D002               	goto	l2011
  5152  0020C6  8E19               	bsf	___ftadd@sign,7,c
  5153  0020C8  D000               	goto	l2011
  5154  0020CA                     l2011:
  5155  0020CA  BE15               	btfsc	___ftadd@f2+2,7,c
  5156  0020CC  8C19               	bsf	___ftadd@sign,6,c
  5157  0020CE  8E11               	bsf	___ftadd@f1+1,7,c
  5158  0020D0  0EFF               	movlw	255
  5159  0020D2  1610               	andwf	___ftadd@f1,f,c
  5160  0020D4  0EFF               	movlw	255
  5161  0020D6  1611               	andwf	___ftadd@f1+1,f,c
  5162  0020D8  0E00               	movlw	0
  5163  0020DA  1612               	andwf	___ftadd@f1+2,f,c
  5164  0020DC  8E14               	bsf	___ftadd@f2+1,7,c
  5165  0020DE  0EFF               	movlw	255
  5166  0020E0  1613               	andwf	___ftadd@f2,f,c
  5167  0020E2  0EFF               	movlw	255
  5168  0020E4  1614               	andwf	___ftadd@f2+1,f,c
  5169  0020E6  0E00               	movlw	0
  5170  0020E8  1615               	andwf	___ftadd@f2+2,f,c
  5171  0020EA  501A               	movf	___ftadd@exp2,w,c
  5172  0020EC  5C1B               	subwf	___ftadd@exp1,w,c
  5173  0020EE  B0D8               	btfsc	status,0,c
  5174  0020F0  D01E               	goto	l2031
  5175  0020F2                     l2021:
  5176  0020F2  90D8               	bcf	status,0,c
  5177  0020F4  3613               	rlcf	___ftadd@f2,f,c
  5178  0020F6  3614               	rlcf	___ftadd@f2+1,f,c
  5179  0020F8  3615               	rlcf	___ftadd@f2+2,f,c
  5180  0020FA  061A               	decf	___ftadd@exp2,f,c
  5181  0020FC  501B               	movf	___ftadd@exp1,w,c
  5182  0020FE  181A               	xorwf	___ftadd@exp2,w,c
  5183  002100  B4D8               	btfsc	status,2,c
  5184  002102  D00F               	goto	l2029
  5185  002104  0619               	decf	___ftadd@sign,f,c
  5186  002106  C019  F016         	movff	___ftadd@sign,??___ftadd
  5187  00210A  0E07               	movlw	7
  5188  00210C  1616               	andwf	??___ftadd,f,c
  5189  00210E  B4D8               	btfsc	status,2,c
  5190  002110  D008               	goto	l2029
  5191  002112  D7EF               	goto	l2021
  5192  002114  D006               	goto	l2029
  5193  002116                     l2027:
  5194  002116  90D8               	bcf	status,0,c
  5195  002118  3212               	rrcf	___ftadd@f1+2,f,c
  5196  00211A  3211               	rrcf	___ftadd@f1+1,f,c
  5197  00211C  3210               	rrcf	___ftadd@f1,f,c
  5198  00211E  2A1B               	incf	___ftadd@exp1,f,c
  5199  002120  D000               	goto	l2029
  5200  002122                     l2029:
  5201  002122  501A               	movf	___ftadd@exp2,w,c
  5202  002124  181B               	xorwf	___ftadd@exp1,w,c
  5203  002126  B4D8               	btfsc	status,2,c
  5204  002128  D024               	goto	l642
  5205  00212A  D7F5               	goto	l2027
  5206  00212C  D022               	goto	l642
  5207  00212E                     l2031:
  5208  00212E  501B               	movf	___ftadd@exp1,w,c
  5209  002130  5C1A               	subwf	___ftadd@exp2,w,c
  5210  002132  B0D8               	btfsc	status,0,c
  5211  002134  D01E               	goto	l642
  5212  002136                     l2033:
  5213  002136  90D8               	bcf	status,0,c
  5214  002138  3610               	rlcf	___ftadd@f1,f,c
  5215  00213A  3611               	rlcf	___ftadd@f1+1,f,c
  5216  00213C  3612               	rlcf	___ftadd@f1+2,f,c
  5217  00213E  061B               	decf	___ftadd@exp1,f,c
  5218  002140  501B               	movf	___ftadd@exp1,w,c
  5219  002142  181A               	xorwf	___ftadd@exp2,w,c
  5220  002144  B4D8               	btfsc	status,2,c
  5221  002146  D00F               	goto	l2041
  5222  002148  0619               	decf	___ftadd@sign,f,c
  5223  00214A  C019  F016         	movff	___ftadd@sign,??___ftadd
  5224  00214E  0E07               	movlw	7
  5225  002150  1616               	andwf	??___ftadd,f,c
  5226  002152  B4D8               	btfsc	status,2,c
  5227  002154  D008               	goto	l2041
  5228  002156  D7EF               	goto	l2033
  5229  002158  D006               	goto	l2041
  5230  00215A                     l2039:
  5231  00215A  90D8               	bcf	status,0,c
  5232  00215C  3215               	rrcf	___ftadd@f2+2,f,c
  5233  00215E  3214               	rrcf	___ftadd@f2+1,f,c
  5234  002160  3213               	rrcf	___ftadd@f2,f,c
  5235  002162  2A1A               	incf	___ftadd@exp2,f,c
  5236  002164  D000               	goto	l2041
  5237  002166                     l2041:
  5238  002166  501A               	movf	___ftadd@exp2,w,c
  5239  002168  181B               	xorwf	___ftadd@exp1,w,c
  5240  00216A  B4D8               	btfsc	status,2,c
  5241  00216C  D002               	goto	l642
  5242  00216E  D7F5               	goto	l2039
  5243  002170  D000               	goto	l642
  5244  002172                     l642:
  5245  002172  AE19               	btfss	___ftadd@sign,7,c
  5246  002174  D00C               	goto	l651
  5247  002176  0EFF               	movlw	255
  5248  002178  1A10               	xorwf	___ftadd@f1,f,c
  5249  00217A  0EFF               	movlw	255
  5250  00217C  1A11               	xorwf	___ftadd@f1+1,f,c
  5251  00217E  0EFF               	movlw	255
  5252  002180  1A12               	xorwf	___ftadd@f1+2,f,c
  5253  002182  0E01               	movlw	1
  5254  002184  2610               	addwf	___ftadd@f1,f,c
  5255  002186  0E00               	movlw	0
  5256  002188  2211               	addwfc	___ftadd@f1+1,f,c
  5257  00218A  0E00               	movlw	0
  5258  00218C  2212               	addwfc	___ftadd@f1+2,f,c
  5259  00218E                     l651:
  5260  00218E  AC19               	btfss	___ftadd@sign,6,c
  5261  002190  D00D               	goto	l2047
  5262  002192  0EFF               	movlw	255
  5263  002194  1A13               	xorwf	___ftadd@f2,f,c
  5264  002196  0EFF               	movlw	255
  5265  002198  1A14               	xorwf	___ftadd@f2+1,f,c
  5266  00219A  0EFF               	movlw	255
  5267  00219C  1A15               	xorwf	___ftadd@f2+2,f,c
  5268  00219E  0E01               	movlw	1
  5269  0021A0  2613               	addwf	___ftadd@f2,f,c
  5270  0021A2  0E00               	movlw	0
  5271  0021A4  2214               	addwfc	___ftadd@f2+1,f,c
  5272  0021A6  0E00               	movlw	0
  5273  0021A8  2215               	addwfc	___ftadd@f2+2,f,c
  5274  0021AA  D000               	goto	l2047
  5275  0021AC                     l2047:
  5276  0021AC  0E00               	movlw	0
  5277  0021AE  6E19               	movwf	___ftadd@sign,c
  5278  0021B0  5010               	movf	___ftadd@f1,w,c
  5279  0021B2  2613               	addwf	___ftadd@f2,f,c
  5280  0021B4  5011               	movf	___ftadd@f1+1,w,c
  5281  0021B6  2214               	addwfc	___ftadd@f2+1,f,c
  5282  0021B8  5012               	movf	___ftadd@f1+2,w,c
  5283  0021BA  2215               	addwfc	___ftadd@f2+2,f,c
  5284  0021BC  AE15               	btfss	___ftadd@f2+2,7,c
  5285  0021BE  D00F               	goto	l2057
  5286  0021C0  0EFF               	movlw	255
  5287  0021C2  1A13               	xorwf	___ftadd@f2,f,c
  5288  0021C4  0EFF               	movlw	255
  5289  0021C6  1A14               	xorwf	___ftadd@f2+1,f,c
  5290  0021C8  0EFF               	movlw	255
  5291  0021CA  1A15               	xorwf	___ftadd@f2+2,f,c
  5292  0021CC  0E01               	movlw	1
  5293  0021CE  2613               	addwf	___ftadd@f2,f,c
  5294  0021D0  0E00               	movlw	0
  5295  0021D2  2214               	addwfc	___ftadd@f2+1,f,c
  5296  0021D4  0E00               	movlw	0
  5297  0021D6  2215               	addwfc	___ftadd@f2+2,f,c
  5298  0021D8  0E01               	movlw	1
  5299  0021DA  6E19               	movwf	___ftadd@sign,c
  5300  0021DC  D000               	goto	l2057
  5301  0021DE                     l2057:
  5302  0021DE  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  5303  0021E2  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5304  0021E6  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5305  0021EA  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  5306  0021EE  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  5307  0021F2  EC70  F013         	call	___ftpack	;wreg free
  5308  0021F6  C001  F010         	movff	?___ftpack,?___ftadd
  5309  0021FA  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  5310  0021FE  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  5311  002202  D000               	goto	l628
  5312  002204                     l628:
  5313  002204  0012               	return		;funcret
  5314  002206                     __end_of___ftadd:
  5315                           	opt stack 0
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           postinc0	equ	0xFEE
  5323                           wreg	equ	0xFE8
  5324                           postdec1	equ	0xFE5
  5325                           fsr1l	equ	0xFE1
  5326                           postinc2	equ	0xFDE
  5327                           postdec2	equ	0xFDD
  5328                           fsr2h	equ	0xFDA
  5329                           fsr2l	equ	0xFD9
  5330                           status	equ	0xFD8
  5331                           
  5332 ;; *************** function ___ftneg *****************
  5333 ;; Defined at:
  5334 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  f1              3   12[COMRAM] float 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  3   12[COMRAM] float 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5348 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;Total ram usage:        3 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;;		_printf
  5359 ;;		_round
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text21
  5364  002E96                     __ptext21:
  5365                           	opt stack 0
  5366  002E96                     ___ftneg:
  5367                           	opt stack 29
  5368                           
  5369                           ;incstack = 0
  5370  002E96  500D               	movf	___ftneg@f1,w,c
  5371  002E98  100E               	iorwf	___ftneg@f1+1,w,c
  5372  002E9A  100F               	iorwf	___ftneg@f1+2,w,c
  5373  002E9C  B4D8               	btfsc	status,2,c
  5374  002E9E  D006               	goto	l701
  5375  002EA0  0E00               	movlw	0
  5376  002EA2  1A0D               	xorwf	___ftneg@f1,f,c
  5377  002EA4  0E00               	movlw	0
  5378  002EA6  1A0E               	xorwf	___ftneg@f1+1,f,c
  5379  002EA8  0E80               	movlw	128
  5380  002EAA  1A0F               	xorwf	___ftneg@f1+2,f,c
  5381  002EAC                     l701:
  5382  002EAC  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  5383  002EB0  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  5384  002EB4  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  5385  002EB8  0012               	return		;funcret
  5386  002EBA                     __end_of___ftneg:
  5387                           	opt stack 0
  5388                           tblptru	equ	0xFF8
  5389                           tblptrh	equ	0xFF7
  5390                           tblptrl	equ	0xFF6
  5391                           tablat	equ	0xFF5
  5392                           prodh	equ	0xFF4
  5393                           prodl	equ	0xFF3
  5394                           postinc0	equ	0xFEE
  5395                           wreg	equ	0xFE8
  5396                           postdec1	equ	0xFE5
  5397                           fsr1l	equ	0xFE1
  5398                           postinc2	equ	0xFDE
  5399                           postdec2	equ	0xFDD
  5400                           fsr2h	equ	0xFDA
  5401                           fsr2l	equ	0xFD9
  5402                           status	equ	0xFD8
  5403                           
  5404 ;; *************** function ___ftge *****************
  5405 ;; Defined at:
  5406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  ff1             3    0[COMRAM] float 
  5409 ;;  ff2             3    3[COMRAM] float 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;		None               void
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;Total ram usage:        9 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; This function calls:
  5428 ;;		Nothing
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;;		_printf
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text22
  5436  00283C                     __ptext22:
  5437                           	opt stack 0
  5438  00283C                     ___ftge:
  5439                           	opt stack 29
  5440                           
  5441                           ;incstack = 0
  5442  00283C  AE03               	btfss	___ftge@ff1+2,7,c
  5443  00283E  D017               	goto	l2493
  5444  002840  C001  F007         	movff	___ftge@ff1,??___ftge
  5445  002844  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  5446  002848  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  5447  00284C  1E07               	comf	??___ftge,f,c
  5448  00284E  1E08               	comf	??___ftge+1,f,c
  5449  002850  1E09               	comf	??___ftge+2,f,c
  5450  002852  2A07               	incf	??___ftge,f,c
  5451  002854  0E00               	movlw	0
  5452  002856  2208               	addwfc	??___ftge+1,f,c
  5453  002858  2209               	addwfc	??___ftge+2,f,c
  5454  00285A  0E00               	movlw	0
  5455  00285C  2407               	addwf	??___ftge,w,c
  5456  00285E  6E01               	movwf	___ftge@ff1,c
  5457  002860  0E00               	movlw	0
  5458  002862  2008               	addwfc	??___ftge+1,w,c
  5459  002864  6E02               	movwf	___ftge@ff1+1,c
  5460  002866  0E80               	movlw	128
  5461  002868  2009               	addwfc	??___ftge+2,w,c
  5462  00286A  6E03               	movwf	___ftge@ff1+2,c
  5463  00286C  D000               	goto	l2493
  5464  00286E                     l2493:
  5465  00286E  AE06               	btfss	___ftge@ff2+2,7,c
  5466  002870  D017               	goto	l2497
  5467  002872  C004  F007         	movff	___ftge@ff2,??___ftge
  5468  002876  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  5469  00287A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  5470  00287E  1E07               	comf	??___ftge,f,c
  5471  002880  1E08               	comf	??___ftge+1,f,c
  5472  002882  1E09               	comf	??___ftge+2,f,c
  5473  002884  2A07               	incf	??___ftge,f,c
  5474  002886  0E00               	movlw	0
  5475  002888  2208               	addwfc	??___ftge+1,f,c
  5476  00288A  2209               	addwfc	??___ftge+2,f,c
  5477  00288C  0E00               	movlw	0
  5478  00288E  2407               	addwf	??___ftge,w,c
  5479  002890  6E04               	movwf	___ftge@ff2,c
  5480  002892  0E00               	movlw	0
  5481  002894  2008               	addwfc	??___ftge+1,w,c
  5482  002896  6E05               	movwf	___ftge@ff2+1,c
  5483  002898  0E80               	movlw	128
  5484  00289A  2009               	addwfc	??___ftge+2,w,c
  5485  00289C  6E06               	movwf	___ftge@ff2+2,c
  5486  00289E  D000               	goto	l2497
  5487  0028A0                     l2497:
  5488  0028A0  0E00               	movlw	0
  5489  0028A2  1A01               	xorwf	___ftge@ff1,f,c
  5490  0028A4  0E00               	movlw	0
  5491  0028A6  1A02               	xorwf	___ftge@ff1+1,f,c
  5492  0028A8  0E80               	movlw	128
  5493  0028AA  1A03               	xorwf	___ftge@ff1+2,f,c
  5494  0028AC  0E00               	movlw	0
  5495  0028AE  1A04               	xorwf	___ftge@ff2,f,c
  5496  0028B0  0E00               	movlw	0
  5497  0028B2  1A05               	xorwf	___ftge@ff2+1,f,c
  5498  0028B4  0E80               	movlw	128
  5499  0028B6  1A06               	xorwf	___ftge@ff2+2,f,c
  5500  0028B8  5004               	movf	___ftge@ff2,w,c
  5501  0028BA  5C01               	subwf	___ftge@ff1,w,c
  5502  0028BC  5005               	movf	___ftge@ff2+1,w,c
  5503  0028BE  5802               	subwfb	___ftge@ff1+1,w,c
  5504  0028C0  5006               	movf	___ftge@ff2+2,w,c
  5505  0028C2  5803               	subwfb	___ftge@ff1+2,w,c
  5506  0028C4  B0D8               	btfsc	status,0,c
  5507  0028C6  D002               	goto	l2503
  5508  0028C8  90D8               	bcf	status,0,c
  5509  0028CA  D002               	goto	l685
  5510  0028CC                     l2503:
  5511  0028CC  80D8               	bsf	status,0,c
  5512  0028CE  D000               	goto	l685
  5513  0028D0                     l685:
  5514  0028D0  0012               	return		;funcret
  5515  0028D2                     __end_of___ftge:
  5516                           	opt stack 0
  5517                           tblptru	equ	0xFF8
  5518                           tblptrh	equ	0xFF7
  5519                           tblptrl	equ	0xFF6
  5520                           tablat	equ	0xFF5
  5521                           prodh	equ	0xFF4
  5522                           prodl	equ	0xFF3
  5523                           postinc0	equ	0xFEE
  5524                           wreg	equ	0xFE8
  5525                           postdec1	equ	0xFE5
  5526                           fsr1l	equ	0xFE1
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           fsr2h	equ	0xFDA
  5530                           fsr2l	equ	0xFD9
  5531                           status	equ	0xFD8
  5532                           
  5533 ;; *************** function _init_UART *****************
  5534 ;; Defined at:
  5535 ;;		line 55 in file "Lab5p2.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    1
  5556 ;; This function calls:
  5557 ;;		_OpenUSART
  5558 ;; This function is called by:
  5559 ;;		_main
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text23
  5564  002F0E                     __ptext23:
  5565                           	opt stack 0
  5566  002F0E                     _init_UART:
  5567                           	opt stack 29
  5568                           
  5569                           ;Lab5p2.c: 57: OpenUSART (0b01111111 & 0b10111111 &
  5570                           ;Lab5p2.c: 58: 0b11111110 & 0b11111101 & 0b11111111 &
  5571                           ;Lab5p2.c: 59: 0b11111111, 25);
  5572                           
  5573                           ;incstack = 0
  5574  002F0E  0E00               	movlw	0
  5575  002F10  6E02               	movwf	OpenUSART@spbrg+1,c
  5576  002F12  0E19               	movlw	25
  5577  002F14  6E01               	movwf	OpenUSART@spbrg,c
  5578  002F16  0E3C               	movlw	60
  5579  002F18  EC2D  F016         	call	_OpenUSART
  5580                           
  5581                           ;Lab5p2.c: 60: OSCCON = 0x60;
  5582  002F1C  0E60               	movlw	96
  5583  002F1E  6ED3               	movwf	4051,c	;volatile
  5584  002F20  0012               	return		;funcret
  5585  002F22                     __end_of_init_UART:
  5586                           	opt stack 0
  5587                           tblptru	equ	0xFF8
  5588                           tblptrh	equ	0xFF7
  5589                           tblptrl	equ	0xFF6
  5590                           tablat	equ	0xFF5
  5591                           prodh	equ	0xFF4
  5592                           prodl	equ	0xFF3
  5593                           postinc0	equ	0xFEE
  5594                           wreg	equ	0xFE8
  5595                           postdec1	equ	0xFE5
  5596                           fsr1l	equ	0xFE1
  5597                           postinc2	equ	0xFDE
  5598                           postdec2	equ	0xFDD
  5599                           fsr2h	equ	0xFDA
  5600                           fsr2l	equ	0xFD9
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function _OpenUSART *****************
  5604 ;; Defined at:
  5605 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  config          1    wreg     unsigned char 
  5608 ;;  spbrg           2    0[COMRAM] unsigned int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  config          1    2[COMRAM] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;		None               void
  5613 ;; Registers used:
  5614 ;;		wreg, status,2
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;Total ram usage:        3 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_init_UART
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text24
  5634  002C5A                     __ptext24:
  5635                           	opt stack 0
  5636  002C5A                     _OpenUSART:
  5637                           	opt stack 29
  5638                           
  5639                           ;incstack = 0
  5640                           ;OpenUSART@config stored from wreg
  5641  002C5A  6E03               	movwf	OpenUSART@config,c
  5642  002C5C  0E00               	movlw	0
  5643  002C5E  6EAC               	movwf	4012,c	;volatile
  5644  002C60  0E00               	movlw	0
  5645  002C62  6EAB               	movwf	4011,c	;volatile
  5646  002C64  A003               	btfss	OpenUSART@config,0,c
  5647  002C66  D002               	goto	l2257
  5648  002C68  88AC               	bsf	4012,4,c	;volatile
  5649  002C6A  D000               	goto	l2257
  5650  002C6C                     l2257:
  5651  002C6C  A203               	btfss	OpenUSART@config,1,c
  5652  002C6E  D003               	goto	l2261
  5653  002C70  8CAC               	bsf	4012,6,c	;volatile
  5654  002C72  8CAB               	bsf	4011,6,c	;volatile
  5655  002C74  D000               	goto	l2261
  5656  002C76                     l2261:
  5657  002C76  A403               	btfss	OpenUSART@config,2,c
  5658  002C78  D002               	goto	l2265
  5659  002C7A  8EAC               	bsf	4012,7,c	;volatile
  5660  002C7C  D000               	goto	l2265
  5661  002C7E                     l2265:
  5662  002C7E  A603               	btfss	OpenUSART@config,3,c
  5663  002C80  D002               	goto	l250
  5664  002C82  88AB               	bsf	4011,4,c	;volatile
  5665  002C84  D002               	goto	l2269
  5666  002C86                     l250:
  5667  002C86  8AAB               	bsf	4011,5,c	;volatile
  5668  002C88  D000               	goto	l2269
  5669  002C8A                     l2269:
  5670  002C8A  B803               	btfsc	OpenUSART@config,4,c
  5671  002C8C  84AC               	bsf	4012,2,c	;volatile
  5672  002C8E  989E               	bcf	3998,4,c	;volatile
  5673  002C90  AA03               	btfss	OpenUSART@config,5,c
  5674  002C92  D002               	goto	l2277
  5675  002C94  86AB               	bsf	4011,3,c	;volatile
  5676  002C96  D000               	goto	l2277
  5677  002C98                     l2277:
  5678  002C98  AC03               	btfss	OpenUSART@config,6,c
  5679  002C9A  D002               	goto	l254
  5680  002C9C  8A9D               	bsf	3997,5,c	;volatile
  5681  002C9E  D001               	goto	l255
  5682  002CA0                     l254:
  5683  002CA0  9A9D               	bcf	3997,5,c	;volatile
  5684  002CA2                     l255:
  5685  002CA2  9A9E               	bcf	3998,5,c	;volatile
  5686  002CA4  AE03               	btfss	OpenUSART@config,7,c
  5687  002CA6  D002               	goto	l256
  5688  002CA8  889D               	bsf	3997,4,c	;volatile
  5689  002CAA  D001               	goto	l257
  5690  002CAC                     l256:
  5691  002CAC  989D               	bcf	3997,4,c	;volatile
  5692  002CAE                     l257:
  5693  002CAE  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5694  002CB2  5002               	movf	OpenUSART@spbrg+1,w,c
  5695  002CB4  6EB0               	movwf	4016,c	;volatile
  5696  002CB6  8AAC               	bsf	4012,5,c	;volatile
  5697  002CB8  8EAB               	bsf	4011,7,c	;volatile
  5698  002CBA  9C94               	bcf	3988,6,c	;volatile
  5699  002CBC  8E94               	bsf	3988,7,c	;volatile
  5700  002CBE  B8AC               	btfsc	4012,4,c	;volatile
  5701  002CC0  BEAC               	btfsc	4012,7,c	;volatile
  5702  002CC2  D002               	goto	l259
  5703  002CC4  8C94               	bsf	3988,6,c	;volatile
  5704  002CC6  D000               	goto	l259
  5705  002CC8                     l259:
  5706  002CC8  0012               	return		;funcret
  5707  002CCA                     __end_of_OpenUSART:
  5708                           	opt stack 0
  5709                           tblptru	equ	0xFF8
  5710                           tblptrh	equ	0xFF7
  5711                           tblptrl	equ	0xFF6
  5712                           tablat	equ	0xFF5
  5713                           prodh	equ	0xFF4
  5714                           prodl	equ	0xFF3
  5715                           postinc0	equ	0xFEE
  5716                           wreg	equ	0xFE8
  5717                           postdec1	equ	0xFE5
  5718                           fsr1l	equ	0xFE1
  5719                           postinc2	equ	0xFDE
  5720                           postdec2	equ	0xFDD
  5721                           fsr2h	equ	0xFDA
  5722                           fsr2l	equ	0xFD9
  5723                           status	equ	0xFD8
  5724                           
  5725 ;; *************** function _init_ADC *****************
  5726 ;; Defined at:
  5727 ;;		line 37 in file "Lab5p2.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;		None               void
  5734 ;; Registers used:
  5735 ;;		wreg, status,2
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_main
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text25
  5755  002F3C                     __ptext25:
  5756                           	opt stack 0
  5757  002F3C                     _init_ADC:
  5758                           	opt stack 30
  5759                           
  5760                           ;Lab5p2.c: 40: ADCON1=0x19;
  5761                           
  5762                           ;incstack = 0
  5763  002F3C  0E19               	movlw	25
  5764  002F3E  6EC1               	movwf	4033,c	;volatile
  5765                           
  5766                           ;Lab5p2.c: 42: ADCON2=0xA9;
  5767  002F40  0EA9               	movlw	169
  5768  002F42  6EC0               	movwf	4032,c	;volatile
  5769  002F44  0012               	return		;funcret
  5770  002F46                     __end_of_init_ADC:
  5771                           	opt stack 0
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           postinc0	equ	0xFEE
  5779                           wreg	equ	0xFE8
  5780                           postdec1	equ	0xFE5
  5781                           fsr1l	equ	0xFE1
  5782                           postinc2	equ	0xFDE
  5783                           postdec2	equ	0xFDD
  5784                           fsr2h	equ	0xFDA
  5785                           fsr2l	equ	0xFD9
  5786                           status	equ	0xFD8
  5787                           
  5788 ;; *************** function _get_full_ADC *****************
  5789 ;; Defined at:
  5790 ;;		line 46 in file "Lab5p2.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  result          2    4[COMRAM] int 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  2    0[COMRAM] unsigned int 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;Total ram usage:        6 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_main
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text26
  5818  002E4A                     __ptext26:
  5819                           	opt stack 0
  5820  002E4A                     _get_full_ADC:
  5821                           	opt stack 30
  5822                           
  5823                           ;Lab5p2.c: 48: int result;
  5824                           ;Lab5p2.c: 49: ADCON0bits.GO=1;
  5825                           
  5826                           ;incstack = 0
  5827  002E4A  82C2               	bsf	4034,1,c	;volatile
  5828                           
  5829                           ;Lab5p2.c: 50: while(ADCON0bits.DONE==1);
  5830  002E4C  D000               	goto	l70
  5831  002E4E                     l70:
  5832  002E4E  B2C2               	btfsc	4034,1,c	;volatile
  5833  002E50  D7FE               	goto	l70
  5834                           
  5835                           ;Lab5p2.c: 51: result = (ADRESH * 0x100) + ADRESL;
  5836  002E52  50C4               	movf	4036,w,c	;volatile
  5837  002E54  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5838  002E56  6A03               	clrf	??_get_full_ADC& (0+255),c
  5839  002E58  50C3               	movf	4035,w,c	;volatile
  5840  002E5A  2403               	addwf	??_get_full_ADC,w,c
  5841  002E5C  6E05               	movwf	get_full_ADC@result,c
  5842  002E5E  0E00               	movlw	0
  5843  002E60  2004               	addwfc	??_get_full_ADC+1,w,c
  5844  002E62  6E06               	movwf	get_full_ADC@result+1,c
  5845                           
  5846                           ;Lab5p2.c: 53: return result;
  5847  002E64  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5848  002E68  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5849  002E6C  D000               	goto	l73
  5850  002E6E                     l73:
  5851  002E6E  0012               	return		;funcret
  5852  002E70                     __end_of_get_full_ADC:
  5853                           	opt stack 0
  5854                           tblptru	equ	0xFF8
  5855                           tblptrh	equ	0xFF7
  5856                           tblptrl	equ	0xFF6
  5857                           tablat	equ	0xFF5
  5858                           prodh	equ	0xFF4
  5859                           prodl	equ	0xFF3
  5860                           postinc0	equ	0xFEE
  5861                           wreg	equ	0xFE8
  5862                           postdec1	equ	0xFE5
  5863                           fsr1l	equ	0xFE1
  5864                           postinc2	equ	0xFDE
  5865                           postdec2	equ	0xFDD
  5866                           fsr2h	equ	0xFDA
  5867                           fsr2l	equ	0xFD9
  5868                           status	equ	0xFD8
  5869                           
  5870 ;; *************** function ___lbtoft *****************
  5871 ;; Defined at:
  5872 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  c               1    wreg     unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  c               1   11[COMRAM] unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  3    8[COMRAM] float 
  5879 ;; Registers used:
  5880 ;;		wreg, status,2, status,0, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5886 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;Total ram usage:        4 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    1
  5893 ;; This function calls:
  5894 ;;		___ftpack
  5895 ;; This function is called by:
  5896 ;;		_main
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text27
  5901  002E70                     __ptext27:
  5902                           	opt stack 0
  5903  002E70                     ___lbtoft:
  5904                           	opt stack 29
  5905                           
  5906                           ;incstack = 0
  5907                           ;___lbtoft@c stored from wreg
  5908  002E70  6E0C               	movwf	___lbtoft@c,c
  5909  002E72  500C               	movf	___lbtoft@c,w,c
  5910  002E74  6E01               	movwf	___ftpack@arg,c
  5911  002E76  6A02               	clrf	___ftpack@arg+1,c
  5912  002E78  6A03               	clrf	___ftpack@arg+2,c
  5913  002E7A  0E8E               	movlw	142
  5914  002E7C  6E04               	movwf	___ftpack@exp,c
  5915  002E7E  0E00               	movlw	0
  5916  002E80  6E05               	movwf	___ftpack@sign,c
  5917  002E82  EC70  F013         	call	___ftpack	;wreg free
  5918  002E86  C001  F009         	movff	?___ftpack,?___lbtoft
  5919  002E8A  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  5920  002E8E  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  5921  002E92  D000               	goto	l748
  5922  002E94                     l748:
  5923  002E94  0012               	return		;funcret
  5924  002E96                     __end_of___lbtoft:
  5925                           	opt stack 0
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           postinc0	equ	0xFEE
  5933                           wreg	equ	0xFE8
  5934                           postdec1	equ	0xFE5
  5935                           fsr1l	equ	0xFE1
  5936                           postinc2	equ	0xFDE
  5937                           postdec2	equ	0xFDD
  5938                           fsr2h	equ	0xFDA
  5939                           fsr2l	equ	0xFD9
  5940                           status	equ	0xFD8
  5941                           
  5942 ;; *************** function ___ftdiv *****************
  5943 ;; Defined at:
  5944 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  f1              3   81[COMRAM] float 
  5947 ;;  f2              3   84[COMRAM] float 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  f3              3   91[COMRAM] float 
  5950 ;;  sign            1   95[COMRAM] unsigned char 
  5951 ;;  exp             1   94[COMRAM] unsigned char 
  5952 ;;  cntr            1   90[COMRAM] unsigned char 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  3   81[COMRAM] float 
  5955 ;; Registers used:
  5956 ;;		wreg, status,2, status,0, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5962 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;Total ram usage:       15 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    1
  5969 ;; This function calls:
  5970 ;;		___ftpack
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text28
  5977  0025FE                     __ptext28:
  5978                           	opt stack 0
  5979  0025FE                     ___ftdiv:
  5980                           	opt stack 29
  5981                           
  5982                           ;incstack = 0
  5983  0025FE  C054  F058         	movff	___ftdiv@f1+2,??___ftdiv
  5984  002602  6A59               	clrf	(??___ftdiv+1)& (0+255),c
  5985  002604  6A5A               	clrf	(??___ftdiv+2)& (0+255),c
  5986  002606  3453               	rlcf	___ftdiv@f1+1,w,c
  5987  002608  3658               	rlcf	??___ftdiv& (0+255),f,c
  5988  00260A  E301               	bnc	u2851
  5989  00260C  8059               	bsf	(??___ftdiv+1)& (0+255),0,c
  5990  00260E                     u2851:
  5991  00260E  5058               	movf	??___ftdiv,w,c
  5992  002610  6E5F               	movwf	___ftdiv@exp,c
  5993  002612  505F               	movf	___ftdiv@exp,w,c
  5994  002614  A4D8               	btfss	status,2,c
  5995  002616  D002               	goto	l2781
  5996  002618  D00E               	goto	l2783
  5997  00261A  D061               	goto	l659
  5998  00261C                     l2781:
  5999  00261C  C057  F058         	movff	___ftdiv@f2+2,??___ftdiv
  6000  002620  6A59               	clrf	(??___ftdiv+1)& (0+255),c
  6001  002622  6A5A               	clrf	(??___ftdiv+2)& (0+255),c
  6002  002624  3456               	rlcf	___ftdiv@f2+1,w,c
  6003  002626  3658               	rlcf	??___ftdiv& (0+255),f,c
  6004  002628  E301               	bnc	u2871
  6005  00262A  8059               	bsf	(??___ftdiv+1)& (0+255),0,c
  6006  00262C                     u2871:
  6007  00262C  5058               	movf	??___ftdiv,w,c
  6008  00262E  6E60               	movwf	___ftdiv@sign,c
  6009  002630  5060               	movf	___ftdiv@sign,w,c
  6010  002632  A4D8               	btfss	status,2,c
  6011  002634  D007               	goto	l2787
  6012  002636                     l2783:
  6013  002636  0E00               	movlw	0
  6014  002638  6E52               	movwf	?___ftdiv,c
  6015  00263A  0E00               	movlw	0
  6016  00263C  6E53               	movwf	?___ftdiv+1,c
  6017  00263E  0E00               	movlw	0
  6018  002640  6E54               	movwf	?___ftdiv+2,c
  6019  002642  D04D               	goto	l659
  6020  002644                     l2787:
  6021  002644  0E00               	movlw	0
  6022  002646  6E5C               	movwf	___ftdiv@f3,c
  6023  002648  0E00               	movlw	0
  6024  00264A  6E5D               	movwf	___ftdiv@f3+1,c
  6025  00264C  0E00               	movlw	0
  6026  00264E  6E5E               	movwf	___ftdiv@f3+2,c
  6027  002650  5060               	movf	___ftdiv@sign,w,c
  6028  002652  0F89               	addlw	137
  6029  002654  5E5F               	subwf	___ftdiv@exp,f,c
  6030  002656  C054  F060         	movff	___ftdiv@f1+2,___ftdiv@sign
  6031  00265A  5057               	movf	___ftdiv@f2+2,w,c
  6032  00265C  1A60               	xorwf	___ftdiv@sign,f,c
  6033  00265E  0E80               	movlw	128
  6034  002660  1660               	andwf	___ftdiv@sign,f,c
  6035  002662  8E53               	bsf	___ftdiv@f1+1,7,c
  6036  002664  0EFF               	movlw	255
  6037  002666  1652               	andwf	___ftdiv@f1,f,c
  6038  002668  0EFF               	movlw	255
  6039  00266A  1653               	andwf	___ftdiv@f1+1,f,c
  6040  00266C  0E00               	movlw	0
  6041  00266E  1654               	andwf	___ftdiv@f1+2,f,c
  6042  002670  8E56               	bsf	___ftdiv@f2+1,7,c
  6043  002672  0EFF               	movlw	255
  6044  002674  1655               	andwf	___ftdiv@f2,f,c
  6045  002676  0EFF               	movlw	255
  6046  002678  1656               	andwf	___ftdiv@f2+1,f,c
  6047  00267A  0E00               	movlw	0
  6048  00267C  1657               	andwf	___ftdiv@f2+2,f,c
  6049  00267E  0E18               	movlw	24
  6050  002680  6E5B               	movwf	___ftdiv@cntr,c
  6051  002682  D000               	goto	l2807
  6052  002684                     l2807:
  6053  002684  90D8               	bcf	status,0,c
  6054  002686  365C               	rlcf	___ftdiv@f3,f,c
  6055  002688  365D               	rlcf	___ftdiv@f3+1,f,c
  6056  00268A  365E               	rlcf	___ftdiv@f3+2,f,c
  6057  00268C  5055               	movf	___ftdiv@f2,w,c
  6058  00268E  5C52               	subwf	___ftdiv@f1,w,c
  6059  002690  5056               	movf	___ftdiv@f2+1,w,c
  6060  002692  5853               	subwfb	___ftdiv@f1+1,w,c
  6061  002694  5057               	movf	___ftdiv@f2+2,w,c
  6062  002696  5854               	subwfb	___ftdiv@f1+2,w,c
  6063  002698  A0D8               	btfss	status,0,c
  6064  00269A  D007               	goto	l662
  6065  00269C  5055               	movf	___ftdiv@f2,w,c
  6066  00269E  5E52               	subwf	___ftdiv@f1,f,c
  6067  0026A0  5056               	movf	___ftdiv@f2+1,w,c
  6068  0026A2  5A53               	subwfb	___ftdiv@f1+1,f,c
  6069  0026A4  5057               	movf	___ftdiv@f2+2,w,c
  6070  0026A6  5A54               	subwfb	___ftdiv@f1+2,f,c
  6071  0026A8  805C               	bsf	___ftdiv@f3,0,c
  6072  0026AA                     l662:
  6073  0026AA  90D8               	bcf	status,0,c
  6074  0026AC  3652               	rlcf	___ftdiv@f1,f,c
  6075  0026AE  3653               	rlcf	___ftdiv@f1+1,f,c
  6076  0026B0  3654               	rlcf	___ftdiv@f1+2,f,c
  6077  0026B2  2E5B               	decfsz	___ftdiv@cntr,f,c
  6078  0026B4  D7E7               	goto	l2807
  6079  0026B6  D000               	goto	l2817
  6080  0026B8                     l2817:
  6081  0026B8  C05C  F001         	movff	___ftdiv@f3,___ftpack@arg
  6082  0026BC  C05D  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6083  0026C0  C05E  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6084  0026C4  C05F  F004         	movff	___ftdiv@exp,___ftpack@exp
  6085  0026C8  C060  F005         	movff	___ftdiv@sign,___ftpack@sign
  6086  0026CC  EC70  F013         	call	___ftpack	;wreg free
  6087  0026D0  C001  F052         	movff	?___ftpack,?___ftdiv
  6088  0026D4  C002  F053         	movff	?___ftpack+1,?___ftdiv+1
  6089  0026D8  C003  F054         	movff	?___ftpack+2,?___ftdiv+2
  6090  0026DC  D000               	goto	l659
  6091  0026DE                     l659:
  6092  0026DE  0012               	return		;funcret
  6093  0026E0                     __end_of___ftdiv:
  6094                           	opt stack 0
  6095                           tblptru	equ	0xFF8
  6096                           tblptrh	equ	0xFF7
  6097                           tblptrl	equ	0xFF6
  6098                           tablat	equ	0xFF5
  6099                           prodh	equ	0xFF4
  6100                           prodl	equ	0xFF3
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           postdec1	equ	0xFE5
  6104                           fsr1l	equ	0xFE1
  6105                           postinc2	equ	0xFDE
  6106                           postdec2	equ	0xFDD
  6107                           fsr2h	equ	0xFDA
  6108                           fsr2l	equ	0xFD9
  6109                           status	equ	0xFD8
  6110                           
  6111 ;; *************** function ___awtoft *****************
  6112 ;; Defined at:
  6113 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  c               2    8[COMRAM] int 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  sign            1   11[COMRAM] unsigned char 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  3    8[COMRAM] float 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6127 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;Total ram usage:        4 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    1
  6134 ;; This function calls:
  6135 ;;		___ftpack
  6136 ;; This function is called by:
  6137 ;;		_main
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text29
  6142  002DB8                     __ptext29:
  6143                           	opt stack 0
  6144  002DB8                     ___awtoft:
  6145                           	opt stack 29
  6146                           
  6147                           ;incstack = 0
  6148  002DB8  0E00               	movlw	0
  6149  002DBA  6E0C               	movwf	___awtoft@sign,c
  6150  002DBC  AE0A               	btfss	___awtoft@c+1,7,c
  6151  002DBE  D007               	goto	l2829
  6152  002DC0  6C09               	negf	___awtoft@c,c
  6153  002DC2  1E0A               	comf	___awtoft@c+1,f,c
  6154  002DC4  B0D8               	btfsc	status,0,c
  6155  002DC6  2A0A               	incf	___awtoft@c+1,f,c
  6156  002DC8  0E01               	movlw	1
  6157  002DCA  6E0C               	movwf	___awtoft@sign,c
  6158  002DCC  D000               	goto	l2829
  6159  002DCE                     l2829:
  6160  002DCE  C009  F001         	movff	___awtoft@c,___ftpack@arg
  6161  002DD2  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  6162  002DD6  6A03               	clrf	___ftpack@arg+2,c
  6163  002DD8  0E8E               	movlw	142
  6164  002DDA  6E04               	movwf	___ftpack@exp,c
  6165  002DDC  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  6166  002DE0  EC70  F013         	call	___ftpack	;wreg free
  6167  002DE4  C001  F009         	movff	?___ftpack,?___awtoft
  6168  002DE8  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  6169  002DEC  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  6170  002DF0  D000               	goto	l480
  6171  002DF2                     l480:
  6172  002DF2  0012               	return		;funcret
  6173  002DF4                     __end_of___awtoft:
  6174                           	opt stack 0
  6175                           tblptru	equ	0xFF8
  6176                           tblptrh	equ	0xFF7
  6177                           tblptrl	equ	0xFF6
  6178                           tablat	equ	0xFF5
  6179                           prodh	equ	0xFF4
  6180                           prodl	equ	0xFF3
  6181                           postinc0	equ	0xFEE
  6182                           wreg	equ	0xFE8
  6183                           postdec1	equ	0xFE5
  6184                           fsr1l	equ	0xFE1
  6185                           postinc2	equ	0xFDE
  6186                           postdec2	equ	0xFDD
  6187                           fsr2h	equ	0xFDA
  6188                           fsr2l	equ	0xFD9
  6189                           status	equ	0xFD8
  6190                           
  6191 ;; *************** function ___ftpack *****************
  6192 ;; Defined at:
  6193 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  arg             3    0[COMRAM] unsigned um
  6196 ;;  exp             1    3[COMRAM] unsigned char 
  6197 ;;  sign            1    4[COMRAM] unsigned char 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  3    0[COMRAM] float 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6209 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;Total ram usage:        8 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; This function calls:
  6216 ;;		Nothing
  6217 ;; This function is called by:
  6218 ;;		___altoft
  6219 ;;		___awtoft
  6220 ;;		___ftadd
  6221 ;;		___ftdiv
  6222 ;;		___ftmul
  6223 ;;		___lbtoft
  6224 ;;		___lltoft
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text30
  6229  0026E0                     __ptext30:
  6230                           	opt stack 0
  6231  0026E0                     ___ftpack:
  6232                           	opt stack 27
  6233                           
  6234                           ;incstack = 0
  6235  0026E0  5004               	movf	___ftpack@exp,w,c
  6236  0026E2  B4D8               	btfsc	status,2,c
  6237  0026E4  D005               	goto	l1937
  6238  0026E6  5001               	movf	___ftpack@arg,w,c
  6239  0026E8  1002               	iorwf	___ftpack@arg+1,w,c
  6240  0026EA  1003               	iorwf	___ftpack@arg+2,w,c
  6241  0026EC  A4D8               	btfss	status,2,c
  6242  0026EE  D00E               	goto	l1943
  6243  0026F0                     l1937:
  6244  0026F0  0E00               	movlw	0
  6245  0026F2  6E01               	movwf	?___ftpack,c
  6246  0026F4  0E00               	movlw	0
  6247  0026F6  6E02               	movwf	?___ftpack+1,c
  6248  0026F8  0E00               	movlw	0
  6249  0026FA  6E03               	movwf	?___ftpack+2,c
  6250  0026FC  D053               	goto	l587
  6251  0026FE  D006               	goto	l1943
  6252  002700                     l1941:
  6253  002700  2A04               	incf	___ftpack@exp,f,c
  6254  002702  90D8               	bcf	status,0,c
  6255  002704  3203               	rrcf	___ftpack@arg+2,f,c
  6256  002706  3202               	rrcf	___ftpack@arg+1,f,c
  6257  002708  3201               	rrcf	___ftpack@arg,f,c
  6258  00270A  D000               	goto	l1943
  6259  00270C                     l1943:
  6260  00270C  0E00               	movlw	0
  6261  00270E  1401               	andwf	___ftpack@arg,w,c
  6262  002710  6E06               	movwf	??___ftpack& (0+255),c
  6263  002712  0E00               	movlw	0
  6264  002714  1402               	andwf	___ftpack@arg+1,w,c
  6265  002716  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6266  002718  0EFE               	movlw	254
  6267  00271A  1403               	andwf	___ftpack@arg+2,w,c
  6268  00271C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6269  00271E  5006               	movf	??___ftpack,w,c
  6270  002720  1007               	iorwf	??___ftpack+1,w,c
  6271  002722  1008               	iorwf	??___ftpack+2,w,c
  6272  002724  B4D8               	btfsc	status,2,c
  6273  002726  D00E               	goto	l1949
  6274  002728  D7EB               	goto	l1941
  6275  00272A  D00C               	goto	l1949
  6276  00272C                     l1945:
  6277  00272C  2A04               	incf	___ftpack@exp,f,c
  6278  00272E  0E01               	movlw	1
  6279  002730  2601               	addwf	___ftpack@arg,f,c
  6280  002732  0E00               	movlw	0
  6281  002734  2202               	addwfc	___ftpack@arg+1,f,c
  6282  002736  0E00               	movlw	0
  6283  002738  2203               	addwfc	___ftpack@arg+2,f,c
  6284  00273A  90D8               	bcf	status,0,c
  6285  00273C  3203               	rrcf	___ftpack@arg+2,f,c
  6286  00273E  3202               	rrcf	___ftpack@arg+1,f,c
  6287  002740  3201               	rrcf	___ftpack@arg,f,c
  6288  002742  D000               	goto	l1949
  6289  002744                     l1949:
  6290  002744  0E00               	movlw	0
  6291  002746  1401               	andwf	___ftpack@arg,w,c
  6292  002748  6E06               	movwf	??___ftpack& (0+255),c
  6293  00274A  0E00               	movlw	0
  6294  00274C  1402               	andwf	___ftpack@arg+1,w,c
  6295  00274E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6296  002750  0EFF               	movlw	255
  6297  002752  1403               	andwf	___ftpack@arg+2,w,c
  6298  002754  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6299  002756  5006               	movf	??___ftpack,w,c
  6300  002758  1007               	iorwf	??___ftpack+1,w,c
  6301  00275A  1008               	iorwf	??___ftpack+2,w,c
  6302  00275C  B4D8               	btfsc	status,2,c
  6303  00275E  D008               	goto	l1953
  6304  002760  D7E5               	goto	l1945
  6305  002762  D006               	goto	l1953
  6306  002764                     l1951:
  6307  002764  0604               	decf	___ftpack@exp,f,c
  6308  002766  90D8               	bcf	status,0,c
  6309  002768  3601               	rlcf	___ftpack@arg,f,c
  6310  00276A  3602               	rlcf	___ftpack@arg+1,f,c
  6311  00276C  3603               	rlcf	___ftpack@arg+2,f,c
  6312  00276E  D000               	goto	l1953
  6313  002770                     l1953:
  6314  002770  BE02               	btfsc	___ftpack@arg+1,7,c
  6315  002772  D004               	goto	l598
  6316  002774  0E02               	movlw	2
  6317  002776  6004               	cpfslt	___ftpack@exp,c
  6318  002778  D7F5               	goto	l1951
  6319  00277A  D000               	goto	l598
  6320  00277C                     l598:
  6321  00277C  B004               	btfsc	___ftpack@exp,0,c
  6322  00277E  D002               	goto	l1959
  6323  002780  9E02               	bcf	___ftpack@arg+1,7,c
  6324  002782  D000               	goto	l1959
  6325  002784                     l1959:
  6326  002784  90D8               	bcf	status,0,c
  6327  002786  3204               	rrcf	___ftpack@exp,f,c
  6328  002788  5004               	movf	___ftpack@exp,w,c
  6329  00278A  1203               	iorwf	___ftpack@arg+2,f,c
  6330  00278C  5005               	movf	___ftpack@sign,w,c
  6331  00278E  B4D8               	btfsc	status,2,c
  6332  002790  D002               	goto	l1965
  6333  002792  8E03               	bsf	___ftpack@arg+2,7,c
  6334  002794  D000               	goto	l1965
  6335  002796                     l1965:
  6336  002796  C001  F001         	movff	___ftpack@arg,?___ftpack
  6337  00279A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6338  00279E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6339  0027A2  D000               	goto	l587
  6340  0027A4                     l587:
  6341  0027A4  0012               	return		;funcret
  6342  0027A6                     __end_of___ftpack:
  6343                           	opt stack 0
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           postinc0	equ	0xFEE
  6351                           wreg	equ	0xFE8
  6352                           postdec1	equ	0xFE5
  6353                           fsr1l	equ	0xFE1
  6354                           postinc2	equ	0xFDE
  6355                           postdec2	equ	0xFDD
  6356                           fsr2h	equ	0xFDA
  6357                           fsr2l	equ	0xFD9
  6358                           status	equ	0xFD8
  6359                           
  6360 ;; *************** function _WAIT_ONE_SEC *****************
  6361 ;; Defined at:
  6362 ;;		line 149 in file "Lab5p2.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  i               2    0[COMRAM] int 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;		None               void
  6369 ;; Registers used:
  6370 ;;		wreg, status,2, status,0
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;Total ram usage:        2 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text31
  6390  002EBA                     __ptext31:
  6391                           	opt stack 0
  6392  002EBA                     _WAIT_ONE_SEC:
  6393                           	opt stack 30
  6394                           
  6395                           ;Lab5p2.c: 151: for(int i = 0; i < 0xFFFF; i++);
  6396                           
  6397                           ;incstack = 0
  6398  002EBA  0E00               	movlw	0
  6399  002EBC  6E02               	movwf	WAIT_ONE_SEC@i+1,c
  6400  002EBE  0E00               	movlw	0
  6401  002EC0  6E01               	movwf	WAIT_ONE_SEC@i,c
  6402  002EC2                     l2767:
  6403  002EC2  2801               	incf	WAIT_ONE_SEC@i,w,c
  6404  002EC4  E105               	bnz	l2771
  6405  002EC6  2802               	incf	WAIT_ONE_SEC@i+1,w,c
  6406  002EC8  B4D8               	btfsc	status,2,c
  6407  002ECA  D006               	goto	l97
  6408  002ECC  D001               	goto	l2771
  6409  002ECE  D004               	goto	l97
  6410  002ED0                     l2771:
  6411  002ED0  4A01               	infsnz	WAIT_ONE_SEC@i,f,c
  6412  002ED2  2A02               	incf	WAIT_ONE_SEC@i+1,f,c
  6413  002ED4  D7F6               	goto	l2767
  6414  002ED6  D7FC               	goto	l2771
  6415  002ED8                     l97:
  6416  002ED8  0012               	return		;funcret
  6417  002EDA                     __end_of_WAIT_ONE_SEC:
  6418                           	opt stack 0
  6419                           tblptru	equ	0xFF8
  6420                           tblptrh	equ	0xFF7
  6421                           tblptrl	equ	0xFF6
  6422                           tablat	equ	0xFF5
  6423                           prodh	equ	0xFF4
  6424                           prodl	equ	0xFF3
  6425                           postinc0	equ	0xFEE
  6426                           wreg	equ	0xFE8
  6427                           postdec1	equ	0xFE5
  6428                           fsr1l	equ	0xFE1
  6429                           postinc2	equ	0xFDE
  6430                           postdec2	equ	0xFDD
  6431                           fsr2h	equ	0xFDA
  6432                           fsr2l	equ	0xFD9
  6433                           status	equ	0xFD8
  6434                           
  6435 ;; *************** function _Select_ADC_Channel *****************
  6436 ;; Defined at:
  6437 ;;		line 184 in file "Lab5p2.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  channel         1    wreg     unsigned char 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  channel         1    0[COMRAM] unsigned char 
  6442 ;; Return value:  Size  Location     Type
  6443 ;;		None               void
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0, prodl, prodh
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;Total ram usage:        1 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_main
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text32
  6465  002F30                     __ptext32:
  6466                           	opt stack 0
  6467  002F30                     _Select_ADC_Channel:
  6468                           	opt stack 30
  6469                           
  6470                           ;incstack = 0
  6471                           ;Select_ADC_Channel@channel stored from wreg
  6472  002F30  6E01               	movwf	Select_ADC_Channel@channel,c
  6473                           
  6474                           ;Lab5p2.c: 186: ADCON0 = channel * 4 + 1;
  6475  002F32  5001               	movf	Select_ADC_Channel@channel,w,c
  6476  002F34  0D04               	mullw	4
  6477  002F36  28F3               	incf	prodl,w,c
  6478  002F38  6EC2               	movwf	4034,c	;volatile
  6479  002F3A  0012               	return		;funcret
  6480  002F3C                     __end_of_Select_ADC_Channel:
  6481                           	opt stack 0
  6482                           tblptru	equ	0xFF8
  6483                           tblptrh	equ	0xFF7
  6484                           tblptrl	equ	0xFF6
  6485                           tablat	equ	0xFF5
  6486                           prodh	equ	0xFF4
  6487                           prodl	equ	0xFF3
  6488                           postinc0	equ	0xFEE
  6489                           wreg	equ	0xFE8
  6490                           postdec1	equ	0xFE5
  6491                           fsr1l	equ	0xFE1
  6492                           postinc2	equ	0xFDE
  6493                           postdec2	equ	0xFDD
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8
  6497                           
  6498 ;; *************** function _DISPLAY_UPPER_7SEG *****************
  6499 ;; Defined at:
  6500 ;;		line 154 in file "Lab5p2.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  Upper           1    wreg     unsigned char 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  Upper           1    5[COMRAM] unsigned char 
  6505 ;;  LED1            2    6[COMRAM] int 
  6506 ;;  testbit         2    3[COMRAM] int 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;		None               void
  6509 ;; Registers used:
  6510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;Total ram usage:        8 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_main
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text33
  6530  002D2A                     __ptext33:
  6531                           	opt stack 0
  6532  002D2A                     _DISPLAY_UPPER_7SEG:
  6533                           	opt stack 30
  6534                           
  6535                           ;incstack = 0
  6536                           ;DISPLAY_UPPER_7SEG@Upper stored from wreg
  6537  002D2A  6E06               	movwf	DISPLAY_UPPER_7SEG@Upper,c
  6538                           
  6539                           ;Lab5p2.c: 157: int LED1 = segDisplay[Upper];
  6540  002D2C  5006               	movf	DISPLAY_UPPER_7SEG@Upper,w,c
  6541  002D2E  0D02               	mullw	2
  6542  002D30  0E80               	movlw	low _segDisplay
  6543  002D32  24F3               	addwf	prodl,w,c
  6544  002D34  6ED9               	movwf	fsr2l,c
  6545  002D36  0E00               	movlw	high _segDisplay
  6546  002D38  20F4               	addwfc	prodh,w,c
  6547  002D3A  6EDA               	movwf	fsr2h,c
  6548  002D3C  CFDE F007          	movff	postinc2,DISPLAY_UPPER_7SEG@LED1
  6549  002D40  CFDD F008          	movff	postdec2,DISPLAY_UPPER_7SEG@LED1+1
  6550                           
  6551                           ;Lab5p2.c: 158: PORTC = LED1 & 0x3F;
  6552  002D44  5007               	movf	DISPLAY_UPPER_7SEG@LED1,w,c
  6553  002D46  0B3F               	andlw	63
  6554  002D48  6E82               	movwf	3970,c	;volatile
  6555                           
  6556                           ;Lab5p2.c: 160: int testbit = (LED1 & 0x40) >> 0x06;
  6557  002D4A  C007  F001         	movff	DISPLAY_UPPER_7SEG@LED1,??_DISPLAY_UPPER_7SEG
  6558  002D4E  C008  F002         	movff	DISPLAY_UPPER_7SEG@LED1+1,??_DISPLAY_UPPER_7SEG+1
  6559  002D52  0E06               	movlw	6
  6560  002D54  6E03               	movwf	(??_DISPLAY_UPPER_7SEG+2)& (0+255),c
  6561  002D56                     u2555:
  6562  002D56  3402               	rlcf	??_DISPLAY_UPPER_7SEG+1,w,c
  6563  002D58  3202               	rrcf	??_DISPLAY_UPPER_7SEG+1,f,c
  6564  002D5A  3201               	rrcf	??_DISPLAY_UPPER_7SEG,f,c
  6565  002D5C  2E03               	decfsz	(??_DISPLAY_UPPER_7SEG+2)& (0+255),f,c
  6566  002D5E  D7FB               	goto	u2555
  6567  002D60  0E01               	movlw	1
  6568  002D62  1401               	andwf	??_DISPLAY_UPPER_7SEG,w,c
  6569  002D64  6E04               	movwf	DISPLAY_UPPER_7SEG@testbit,c
  6570  002D66  6A05               	clrf	DISPLAY_UPPER_7SEG@testbit+1,c
  6571                           
  6572                           ;Lab5p2.c: 162: PORTEbits.RE1 = testbit;
  6573  002D68  B004               	btfsc	DISPLAY_UPPER_7SEG@testbit,0,c
  6574  002D6A  D002               	bra	u2565
  6575  002D6C  9284               	bcf	3972,1,c	;volatile
  6576  002D6E  D001               	bra	u2566
  6577  002D70                     u2565:
  6578  002D70  8284               	bsf	3972,1,c	;volatile
  6579  002D72                     u2566:
  6580  002D72  0012               	return		;funcret
  6581  002D74                     __end_of_DISPLAY_UPPER_7SEG:
  6582                           	opt stack 0
  6583                           tblptru	equ	0xFF8
  6584                           tblptrh	equ	0xFF7
  6585                           tblptrl	equ	0xFF6
  6586                           tablat	equ	0xFF5
  6587                           prodh	equ	0xFF4
  6588                           prodl	equ	0xFF3
  6589                           postinc0	equ	0xFEE
  6590                           wreg	equ	0xFE8
  6591                           postdec1	equ	0xFE5
  6592                           fsr1l	equ	0xFE1
  6593                           postinc2	equ	0xFDE
  6594                           postdec2	equ	0xFDD
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _DISPLAY_LOWER_7SEG *****************
  6600 ;; Defined at:
  6601 ;;		line 168 in file "Lab5p2.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  Lower           1    wreg     unsigned char 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  Lower           1    2[COMRAM] unsigned char 
  6606 ;;  LED2            2    0[COMRAM] int 
  6607 ;; Return value:  Size  Location     Type
  6608 ;;		None               void
  6609 ;; Registers used:
  6610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;Total ram usage:        3 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_main
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text34
  6630  002EDA                     __ptext34:
  6631                           	opt stack 0
  6632  002EDA                     _DISPLAY_LOWER_7SEG:
  6633                           	opt stack 30
  6634                           
  6635                           ;incstack = 0
  6636                           ;DISPLAY_LOWER_7SEG@Lower stored from wreg
  6637  002EDA  6E03               	movwf	DISPLAY_LOWER_7SEG@Lower,c
  6638                           
  6639                           ;Lab5p2.c: 171: int LED2 = segDisplay[Lower];
  6640  002EDC  5003               	movf	DISPLAY_LOWER_7SEG@Lower,w,c
  6641  002EDE  0D02               	mullw	2
  6642  002EE0  0E80               	movlw	low _segDisplay
  6643  002EE2  24F3               	addwf	prodl,w,c
  6644  002EE4  6ED9               	movwf	fsr2l,c
  6645  002EE6  0E00               	movlw	high _segDisplay
  6646  002EE8  20F4               	addwfc	prodh,w,c
  6647  002EEA  6EDA               	movwf	fsr2h,c
  6648  002EEC  CFDE F001          	movff	postinc2,DISPLAY_LOWER_7SEG@LED2
  6649  002EF0  CFDD F002          	movff	postdec2,DISPLAY_LOWER_7SEG@LED2+1
  6650                           
  6651                           ;Lab5p2.c: 173: PORTD = LED2;
  6652  002EF4  C001  FF83         	movff	DISPLAY_LOWER_7SEG@LED2,3971	;volatile
  6653  002EF8  0012               	return		;funcret
  6654  002EFA                     __end_of_DISPLAY_LOWER_7SEG:
  6655                           	opt stack 0
  6656                           tblptru	equ	0xFF8
  6657                           tblptrh	equ	0xFF7
  6658                           tblptrl	equ	0xFF6
  6659                           tablat	equ	0xFF5
  6660                           prodh	equ	0xFF4
  6661                           prodl	equ	0xFF3
  6662                           postinc0	equ	0xFEE
  6663                           wreg	equ	0xFE8
  6664                           postdec1	equ	0xFE5
  6665                           fsr1l	equ	0xFE1
  6666                           postinc2	equ	0xFDE
  6667                           postdec2	equ	0xFDD
  6668                           fsr2h	equ	0xFDA
  6669                           fsr2l	equ	0xFD9
  6670                           status	equ	0xFD8
  6671                           tblptru	equ	0xFF8
  6672                           tblptrh	equ	0xFF7
  6673                           tblptrl	equ	0xFF6
  6674                           tablat	equ	0xFF5
  6675                           prodh	equ	0xFF4
  6676                           prodl	equ	0xFF3
  6677                           postinc0	equ	0xFEE
  6678                           wreg	equ	0xFE8
  6679                           postdec1	equ	0xFE5
  6680                           fsr1l	equ	0xFE1
  6681                           postinc2	equ	0xFDE
  6682                           postdec2	equ	0xFDD
  6683                           fsr2h	equ	0xFDA
  6684                           fsr2l	equ	0xFD9
  6685                           status	equ	0xFD8
  6686                           
  6687                           	psect	rparam
  6688  0000                     tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           postinc0	equ	0xFEE
  6695                           wreg	equ	0xFE8
  6696                           postdec1	equ	0xFE5
  6697                           fsr1l	equ	0xFE1
  6698                           postinc2	equ	0xFDE
  6699                           postdec2	equ	0xFDD
  6700                           fsr2h	equ	0xFDA
  6701                           fsr2l	equ	0xFD9
  6702                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    118
    Data        20
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    121     123
    BANK0           128     18      38
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> trunc@expon(COMRAM[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _round->_trunc
    _trunc->___altoft
    ___altoft->___fttol
    _printf->_fround
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___lbtoft
    _init_UART->_OpenUSART
    ___lbtoft->___ftpack
    ___ftdiv->_round
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   79887
                                              0 BANK0     18    18      0
                 _DISPLAY_LOWER_7SEG
                 _DISPLAY_UPPER_7SEG
                 _Select_ADC_Channel
                       _WAIT_ONE_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                       _get_full_ADC
                           _init_ADC
                          _init_UART
                             _printf
                              _round
 ---------------------------------------------------------------------------------
 (1) _round                                                6     3      3    8666
                                             75 COMRAM     6     3      3
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftmul (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (2) _trunc                                                8     5      3    3908
                                             67 COMRAM     8     5      3
                           ___altoft
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5     336
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) ___altoft                                            10     6      4    2389
                                             57 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   48045
                                             87 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   11411
                                             77 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   11213
                                             77 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2207
                                             71 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    5047
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1832
                                             57 COMRAM     6     2      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1836
                                             63 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2320
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     892
                                             42 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4450
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4153
                                             15 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     429
                                             12 COMRAM     3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     284
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    2209
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2825
                                             81 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                              _round (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2342
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2187
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_ONE_SEC                                         2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DISPLAY_UPPER_7SEG                                   8     8      0      90
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _DISPLAY_LOWER_7SEG                                   3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DISPLAY_LOWER_7SEG
   _DISPLAY_UPPER_7SEG
   _Select_ADC_Channel
   _WAIT_ONE_SEC
   ___awdiv
     ___awmod (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___awmod
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     _round (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         _frexp (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   _get_full_ADC
   _init_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
   _round
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     _trunc (ARG)
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     12      26       5       29.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     79      7B       1       96.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1      34        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep 23 21:15:30 2021

               ___altoft@exp 0042                ___altoft@sign 0043                           l70 2E4E  
                         l73 2E6E                           l79 2F26                           l97 2ED8  
               ___awdiv@sign 0045          ___wmul@multiplicand 004A                 ___ftadd@exp1 001B  
               ___ftadd@exp2 001A                 ___ftadd@sign 0019                          l215 1504  
                        l250 2C86                          l170 1A88                          l226 16A8  
                        l163 2040                          l254 2CA0                          l262 2E48  
                        l255 2CA2                          l256 2CAC                          l257 2CAE  
                        l259 2CC8                          l701 2EAC                          l631 20B0  
                        l455 283A                          l359 2B6E                          l480 2DF2  
                        l712 25FC                          l642 2172                          l546 241E  
                        l651 218E                          l627 2086                          l555 240E  
                        l628 2204                          l708 2DB6                          l468 2AF2  
                        l662 26AA                          l670 22A4                          l751 29DC  
                        l761 2C48                          l850 2960                          l587 27A4  
                        l659 26DE                          l667 2314                          l691 2516  
                        l748 2E94                          l676 2304                          l685 28D0  
                        l781 2D28                          l669 227C                          l598 277C  
                        l863 2BE8                          l856 2A70       DISPLAY_UPPER_7SEG@LED1 0007  
                        _PR2 000FCB                 ___awmod@sign 003F                          prod 000FF3  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 005B  
               ___ftdiv@sign 0060                 __CFG_WDT$OFF 000000                         l2011 20CA  
                       l2021 20F2                         l2005 20BE                         l2101 24DA  
                       l2031 212E                         l2041 2166                         l2033 2136  
                       l2105 24F0                         l2027 2116                         l2131 27EE  
                       l2123 27CE                         l2029 2122                         l2213 2590  
                       l2141 2814                         l2133 27F6                         l2117 27BC  
                       l2047 21AC                         l2039 215A                         l2231 25EA  
                       l2223 25BA                         l2057 21DE                         l2225 25C8  
                       l2217 25A0                         l2129 27E4                         l2145 2820  
                       l2161 2A88                         l2073 2466                         l2241 2B8C  
                       l2219 25A6                         l2227 25D2                         l2411 22D6  
                       l2171 2AAE                         l2091 24AC                         l2067 243E  
                       l2323 2000                         l2315 1F3C                         l2261 2C76  
                       l2413 22DC                         l2149 2830                         l2173 2AB6  
                       l2181 2AD8                         l2165 2A96                         l2069 2458  
                       l2503 28CC                         l2407 22C6                         l2095 24C2  
                       l2087 249A                         l2343 187E                         l2265 2C7E  
                       l2257 2C6C                         l2521 299A                         l2433 2336  
                       l2417 22F0                         l2185 2AE8                         l2177 2ACC  
                       l2169 2AA4                         l2097 24C8                         l2361 1A64  
                       l2337 17D6                         l2195 2536                         l2427 2326  
                       l2419 22FE                         l2371 2224                         l2355 19B2  
                       l2347 188E                         l2277 2C98                         l2269 2C8A  
                       l2517 2984                         l2541 2C12                         l2701 13E0  
                       l2621 10AA                         l2519 2992                         l2551 2CD0  
                       l2471 23E0                         l2455 23AC                         l2447 237A  
                       l2615 108E                         l2529 29CC                         l2545 2C38  
                       l2537 2BFC                         l2553 2CDE                         l2473 23E6  
                       l2377 2242                         l2713 1420                         l2705 13EC  
                       l2641 1126                         l2625 10B2                         l2539 2C0A  
                       l2467 23D0                         l2459 23BC                         l2731 14EE  
                       l2723 14C6                         l2627 10D4                         l2619 109E  
                       l2571 2A32                         l1941 2700                         l2493 286E  
                       l2485 2D8C                         l2477 23FA                         l2741 1524  
                       l2725 14D2                         l2717 143C                         l2709 141C  
                       l1951 2764                         l1943 270C                         l2807 2684  
                       l2479 2408                         l2399 22B2                         l2751 164A  
                       l2735 150A                         l2671 1252                         l2567 2A18  
                       l1953 2770                         l1945 272C                         l1937 26F0  
                       l2817 26B8                         l2497 28A0                         l2753 1656  
                       l2745 1574                         l2729 14E0                         l2681 12CA  
                       l2673 1282                         l2665 121C                         l2657 11B8  
                       l2771 2ED0                         l2691 133A                         l2675 1292  
                       l2763 168C                         l1965 2796                         l1949 2744  
                       l2829 2DCE                         l2781 261C                         l2757 1664  
                       l2693 1368                         l2685 12EE                         l2669 1242  
                       l2767 2EC2                         l1959 2784                         l2783 2636  
                       l2687 12F8                         l2695 1376                         l2759 1670  
                       l1983 2B16                         l1985 2B24                         l2865 1AEE  
                       l2787 2644                         l2699 13DC                         l1999 2094  
                       l2895 1DDC                         l2887 1D24                         STR_1 1077  
                       u2050 2BB4                         u2241 2216                         u2058 2BB6  
                       u2261 2234                         u1801 244E                         u2610 115E  
                       u2530 2A24                         u1571 2052                         u1581 2066  
                       u2615 1154                         u2555 2D56                 printf@tmpval 0072  
                       u2565 2D70                         u1781 2430                         u2566 2D72  
                       u1961 2528                         u2770 14FE                         u2851 260E  
                       u1980 2554                         u2871 262C                         u1985 254C  
                       _TRMT 007D61                         _main 1A8A                 ___ftpack@arg 0001  
               ___ftpack@exp 0004               ??_get_full_ADC 0003                         fsr2h 000FDA  
                       fsr1l 000FE1                         fsr2l 000FD9      DISPLAY_UPPER_7SEG@Upper 0006  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
               ___ftmul@cntr 0029                 ___param_bank 000010                 ___ftmul@sign 002A  
 __end_of_DISPLAY_LOWER_7SEG 2EFA                 ___fttol@exp1 0039                 ___fttol@lval 0035  
                      ?_main 0001              __end_of___awdiv 283C              __end_of___ftadd 2206  
            __end_of___awmod 2AF4              __end_of___ftdiv 26E0              __end_of___ftneg 2EBA  
            __end_of___lldiv 29EE              __end_of___ftmul 2518              ___awdiv@divisor 0042  
            __end_of___llmod 2C5A              __end_of___ftsub 2DB8              __end_of___fttol 25FE  
                      _T2CON 000FCA              ___awdiv@counter 0044                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
               ___lltoft@exp 0011                ___awtoft@sign 000C              __end_of_dpowers 1029  
                      _frexp 2B70                        _errno 007A                        _scale 16AA  
              ___ftpack@sign 0005                        main@L 009E                        main@U 00A2  
                      _putch 2F22                        _round 28D2                        _trunc 29EE  
             __CFG_BOREN$OFF 000000                        tablat 000FF5                        status 000FD8  
            __initialization 2DF4   __end_of_DISPLAY_UPPER_7SEG 2D74                 __end_of_main 1DFE  
                     ??_main 007A                ___fttol@sign1 0034                __activetblptr 000002  
       __size_of__tdiv_to_l_ 0110                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       ?_frexp 0001             __end_of___altoft 2B70  
           ___llmod@dividend 0001                       ?_scale 004E                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _CCPR2L 000FBB             ___awdiv@dividend 0040  
           __end_of___awtoft 2DF4                       ?_putch 0001             __end_of___ftpack 27A6  
                     ?_round 004C             __end_of___lbtoft 2E96                       ?_trunc 0044  
           __end_of___lltoft 2D2A                       _OSCCON 000FD3                       _SPBRGH 000FB0  
           __end_of__powers_ 1077           __size_of_OpenUSART 0070                       ___ftge 283C  
                     ___wmul 2E22                    ??___awdiv 0044                    ??___ftadd 0016  
                  ??___awmod 003E                    ??___ftdiv 0058                    ??___ftneg 0010  
                  ??___lldiv 0009                    ??___ftmul 0022                    ??___llmod 0009  
                  ??___ftsub 0022                    ??___fttol 002F             __end_of_init_ADC 2F46  
                     _fround 1DFE             ___awdiv@quotient 0046              ___awmod@divisor 003C  
            ___awmod@counter 003E                       _printf 1084                       main@ON 0094  
                     main@RL 00A3        ___ftmul@f3_as_product 0026         __end_of_get_full_ADC 2E70  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                       putch@c 0001                       round@f 004F  
                     round@x 004C                       trunc@i 0047                       trunc@x 0044  
                 __accesstop 0080      __end_of__initialization 2E18                   ___altoft@c 003A  
                 ___ftadd@f1 0010                   ___ftadd@f2 0013                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004                ___rparam_used 000001                   ___ftdiv@f1 0052  
                 ___ftdiv@f2 0055                   ___ftdiv@f3 005C                   ___ftneg@f1 000D  
                 ___awtoft@c 0009                   ___lbtoft@c 000C                   ___ftmul@f1 001C  
                 ___ftmul@f2 001F                   ___ftsub@f1 001C                   ___ftsub@f2 001F  
                 ___fttol@f1 002B               __pcstackCOMRAM 0001                 __pidataBANK0 2EFA  
                 ___lltoft@c 0009                __end_of_frexp 2BEA                __end_of_scale 1A8A  
              __end_of_putch 2F30                __end_of_round 2962                __end_of_trunc 2A72  
                 __div_to_l_ 2316            __end_of_OpenUSART 2CCA              __div_to_l_@exp1 000C  
            __div_to_l_@cntr 000B                      ??_frexp 0006                      ??_scale 0051  
            __div_to_l_@quot 0007                      ??_putch 0001                      ??_round 004F  
                    ??_trunc 0047           __size_of_init_UART 0014   __end_of_Select_ADC_Channel 2F3C  
              __div_to_l_@f1 0001                __div_to_l_@f2 0004           __CFG_CCP2MX$PORTBE 000000  
                    ?___ftge 0001                      ?___wmul 0048                      _CCP2CON 000FBA  
                  ?___altoft 003A                      ?_fround 004E                    ?___awtoft 0009  
                  ?___ftpack 0001                    ?___lbtoft 0009                ?_WAIT_ONE_SEC 0001  
                    ?_printf 0058    Select_ADC_Channel@channel 0001                    ?___lltoft 0009  
         _DISPLAY_LOWER_7SEG 2EDA          ?_DISPLAY_LOWER_7SEG 0001                    ?_init_ADC 0001  
          __end_of__npowers_ 1050                      __Hparam 0000                   _scale$1500 0051  
                    __Lparam 0000              __size_of___ftge 0096                      ___awdiv 27A6  
                    ___ftadd 2042                      ___awmod 2A72                      ___ftdiv 25FE  
                    ___ftneg 2E96                      ___lldiv 2962              __size_of___wmul 0028  
                    ___ftmul 2420                      ___llmod 2BEA                      ___ftsub 2D74  
                    ___fttol 2518        __size_of_get_full_ADC 0026                 __psmallconst 1000  
       ??_DISPLAY_LOWER_7SEG 0001                   ??___altoft 003E               ??_WAIT_ONE_SEC 0001  
                 _segDisplay 0080                      __pcinit 2DF4                   ??___awtoft 000C  
                 ??___ftpack 0006                   ??___lbtoft 000C              __size_of_fround 0244  
                    __ramtop 1000                   ??___lltoft 000D                      __ptext0 1A8A  
                    __ptext1 28D2                      __ptext2 29EE                      __ptext3 2B70  
                    __ptext4 2AF4                      __ptext5 1084                      __ptext6 16AA  
                    __ptext7 2F22                      __ptext8 1DFE                      __ptext9 2E22  
            __size_of_printf 0626            __end_of_init_UART 2F22                  ?__div_to_l_ 0001  
                    _dpowers 1001             ___awmod@dividend 003A           _DISPLAY_UPPER_7SEG 2D2A  
                    main@OFF 0095         end_of_initialization 2E18          ?_DISPLAY_UPPER_7SEG 0001  
                 ??_init_ADC 0001                __Lmediumconst 0000                 _get_full_ADC 2E4A  
            ___lldiv@divisor 0005              ___lldiv@counter 000D                    _RCSTAbits 000FAB  
                    printf@c 0079                      printf@f 0058                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
             __tdiv_to_l_@f1 0001               __tdiv_to_l_@f2 0004         ??_DISPLAY_UPPER_7SEG 0001  
              ??__tdiv_to_l_ 0007                    _PORTBbits 000F81                    _PORTDbits 000F83  
                  _PORTEbits 000F84                    _TRISCbits 000F94                  ___ftdiv@exp 005F  
                  _TXSTAbits 000FAC           get_full_ADC@result 0005          __size_of__div_to_l_ 010A  
                ___ftmul@exp 0025                WAIT_ONE_SEC@i 0001               __end_of___ftge 28D2  
             __end_of___wmul 2E4A               __end_of_fround 2042               __end_of_printf 16AA  
        start_initialization 2DF4          __end_of__tdiv_to_l_ 2316         __end_of_WAIT_ONE_SEC 2EDA  
                 frexp@value 0001                    _OpenUSART 2C5A              ___llmod@divisor 0005  
           __CFG_OSC$INTIO67 000000              ___llmod@counter 0009                     ??___ftge 0007  
                   ??___wmul 004C                  __pdataBANK0 0080           _Select_ADC_Channel 2F30  
                   ??_fround 0051                     ??_printf 005D            __size_of___altoft 007C  
                 fround@prec 0057            __size_of___awtoft 003C            __size_of___ftpack 00C6  
          __size_of___lbtoft 0026          ?_Select_ADC_Channel 0001            __size_of___lltoft 0060  
                __pbssCOMRAM 007A                __pcstackBANK0 0094                   ?_OpenUSART 0001  
          __size_of_init_ADC 000A         ??_Select_ADC_Channel 0001                     ?___awdiv 0040  
                   ?___ftadd 0010                     ?___awmod 003A                     ?___ftdiv 0052  
                   ?___ftneg 000D                     ?___lldiv 0001                     ?___ftmul 001C  
                   ?___llmod 0001                     ?___ftsub 001C                    __npowers_ 1029  
                   ?___fttol 002B                  __tdiv_to_l_ 2206                 ??__div_to_l_ 0007  
                __smallconst 1000                    _init_UART 2F0E               __size_of_frexp 007A  
             __size_of_scale 03E0               __size_of_putch 000E               __size_of_round 0090  
             __size_of_trunc 0084               ___wmul@product 004C                     _PIE1bits 000F9D  
                   _PIR1bits 000F9E           __end_of__div_to_l_ 2420  __size_of_DISPLAY_LOWER_7SEG 0020  
                 _ADCON0bits 000FC2            ___wmul@multiplier 0048                   printf@flag 0068  
                 printf@fval 0076                   printf@prec 006A                   ?_init_UART 0001  
      __size_of_WAIT_ONE_SEC 0020                    copy_data0 2E0C                  ??_OpenUSART 0003  
            OpenUSART@config 0003                    frexp@eptr 0004                     __Hrparam 0000  
                   __Lrparam 0000             __size_of___awdiv 0096             __size_of___ftadd 01C4  
           __size_of___awmod 0082             __size_of___ftdiv 00E2             __size_of___ftneg 0024  
           __size_of___lldiv 008C                     ___altoft 2AF4  __size_of_DISPLAY_UPPER_7SEG 004A  
           __size_of___ftmul 00F8             __size_of___llmod 0070             __size_of___ftsub 0044  
           __size_of___fttol 00E6                     ___awtoft 2DB8                     ___ftpack 26E0  
                   ___lbtoft 2E70                  _fround$1498 0054                  _fround$1499 0051  
               _WAIT_ONE_SEC 2EBA                     ___lltoft 2CCA                     __ptext10 2420  
                   __ptext11 2A72                     __ptext20 2042                     __ptext12 27A6  
                   __ptext21 2E96                     __ptext13 2206                     __ptext30 26E0  
                   __ptext22 283C                     __ptext14 2316                     __ptext31 2EBA  
                   __ptext23 2F0E                     __ptext15 2CCA                     __ptext32 2F30  
                   __ptext24 2C5A                     __ptext16 2BEA                     __ptext33 2D2A  
                   __ptext25 2F3C                     __ptext17 2962                     __ptext34 2EDA  
                   __ptext26 2E4A                     __ptext18 2518                     __ptext27 2E70  
                   __ptext19 2D74                     __ptext28 25FE                     __ptext29 2DB8  
                   __powers_ 1050                     _init_ADC 2F3C                   trunc@expon 004A  
  DISPLAY_UPPER_7SEG@testbit 0004                __size_of_main 0374      DISPLAY_LOWER_7SEG@Lower 0003  
                   main@RREF 0096                     main@STEP 009C                     main@VREF 0099  
                   main@VOLT 009F                    printf@exp 0070                    printf@val 006C  
             OpenUSART@spbrg 0001                  ??_init_UART 0004                     scale@scl 0054  
           __tdiv_to_l_@exp1 000F             __tdiv_to_l_@cntr 000E             __tdiv_to_l_@quot 000A  
           ___lldiv@dividend 0001       DISPLAY_LOWER_7SEG@LED2 0001                     printf@ap 0066  
               ?__tdiv_to_l_ 0001                  _printf$1501 0063             ___lldiv@quotient 0009  
              ?_get_full_ADC 0001  __size_of_Select_ADC_Channel 000C  
